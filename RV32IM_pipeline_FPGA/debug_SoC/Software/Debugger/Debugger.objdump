
Debugger.elf:     file format elf32-littlenios2
Debugger.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000401b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00012cf4 memsz 0x00012cf4 flags r-x
    LOAD off    0x00013d14 vaddr 0x00052d14 paddr 0x0005479c align 2**12
         filesz 0x00001a88 memsz 0x00001a88 flags rw-
    LOAD off    0x00016224 vaddr 0x00056224 paddr 0x00056224 align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00012494  000401b4  000401b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006cc  00052648  00052648  00013648  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a88  00052d14  0005479c  00013d14  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  00056224  00056224  00016224  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  0001579c  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 000010f8  00000000  00000000  000157c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000191d  00000000  00000000  000168b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0003291f  00000000  00000000  000181d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000ac23  00000000  00000000  0004aaf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001b02c  00000000  00000000  00055717  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002120  00000000  00000000  00070744  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002ceb  00000000  00000000  00072864  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00011fb7  00000000  00000000  0007554f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000050  00000000  00000000  00087508  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  00087558  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0008ba2b  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0008ba2e  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008ba31  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008ba32  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0008ba33  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0008ba37  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0008ba3b  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0008ba3f  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0008ba4a  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0008ba55  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  0008ba60  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000068  00000000  00000000  0008ba63  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0004ca15  00000000  00000000  0008bacb  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
000401b4 l    d  .text	00000000 .text
00052648 l    d  .rodata	00000000 .rodata
00052d14 l    d  .rwdata	00000000 .rwdata
00056224 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000401ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 counter.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
00052d14 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000408c0 l     F .text	00000058 __sprint_r
00052746 l     O .rodata	00000010 blanks.3452
00052736 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
0005275e l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
00052881 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
000440c4 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00045aec l     F .text	00000058 std
00045bf8 l     F .text	00000008 __fp_lock
00045c00 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
00054768 l     O .rwdata	00000004 charset
00052a24 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00052b6c l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
00049278 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
00049718 l     F .text	00000048 match
0005353c l     O .rwdata	00000014 fpi.1950
00052b88 l     O .rodata	00000028 tinytens
00053528 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0004c074 l     F .text	00000024 htinit
0004c100 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0004c9ac l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0004dd9c l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0004efc4 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0004fad8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004fb38 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004fc3c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004fd60 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004fe40 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004ffa0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
000501d0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0005478c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
000504b8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000536f8 l     O .rwdata	00001060 jtag_uart_0
000505a8 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
000507e8 l     F .text	00000228 altera_avalon_jtag_uart_irq
00050a10 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0005108c l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0005150c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00051930 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00051a80 l     F .text	000000f8 alt_file_locked
00051d04 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00052430 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
000525e4 l     F .text	00000040 alt_sim_halt
00040698 g     F .text	0000001c putchar
00047c54 g     F .text	00000094 _mprec_log10
00047d40 g     F .text	00000088 __any_on
0004cc40 g     F .text	00000070 _isatty_r
00052b44 g     O .rodata	00000028 __mprec_tinytens
00050000 g     F .text	0000006c alt_main
000406bc g     F .text	000000a0 _puts_r
00056380 g     O .bss	00000100 alt_irq
0004ccb0 g     F .text	00000078 _lseek_r
0005479c g       *ABS*	00000000 __flash_rwdata_start
0004e8bc g     F .text	00000088 __eqdf2
00056610 g       *ABS*	00000000 __alt_heap_start
00040620 g     F .text	00000044 printf
00049518 g     F .text	00000068 __sseek
00045b54 g     F .text	000000a4 __sinit
0004bbe0 g     F .text	00000130 __swbuf_r
00046ad8 g     F .text	00000084 _setlocale_r
00045c54 g     F .text	0000009c __sfmoreglue
0004bbc4 g     F .text	0000001c ungetc
0005008c g     F .text	00000020 __malloc_unlock
00049760 g     F .text	000015cc _strtod_r
000476d0 g     F .text	000000e0 memmove
00045c44 g     F .text	00000010 _cleanup
00047dc8 g     F .text	000000bc _Balloc
0004e9cc g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004c000 g     F .text	00000074 _fstat_r
0005623c g     O .bss	00000004 errno
000407bc g     F .text	00000014 __srget
00043e88 g     F .text	00000024 __svfscanf
0004f338 g     F .text	0000002c __make_fp
00056244 g     O .bss	00000004 alt_argv
0005c758 g       *ABS*	00000000 _gp
00050364 g     F .text	00000030 usleep
000401f0 g     F .text	00000080 reset
00053578 g     O .rwdata	00000180 alt_fd_list
00040590 g     F .text	00000090 _getc_r
000404f8 g     F .text	00000098 getc
000406b4 g     F .text	00000008 _putchar_r
00051f28 g     F .text	00000094 alt_find_dev
00047630 g     F .text	000000a0 memcpy
0004c9f8 g     F .text	00000248 __hexnan
00045c38 g     F .text	0000000c _cleanup_r
0004ebec g     F .text	000000f8 __floatsidf
00051a08 g     F .text	00000078 alt_io_redirect
0004eadc g     F .text	00000088 __ltdf2
00052648 g       *ABS*	00000000 __DTOR_END__
0004075c g     F .text	00000014 puts
000474cc g     F .text	00000040 mbrtowc
00043eac g     F .text	00000068 _vfscanf_r
00047ba4 g     F .text	000000b0 __ratio
00050c28 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00040664 g     F .text	00000034 _printf_r
0004f100 g     F .text	00000008 __udivsi3
0004fc9c g     F .text	000000c4 isatty
00046a88 g     F .text	0000002c iswspace
00052a54 g     O .rodata	000000c8 __mprec_tens
00046ab4 g     F .text	00000008 __locale_charset
0004cec4 g     F .text	000000a4 __fixunsdfsi
000521ac g     F .text	00000090 alt_icache_flush
00056230 g     O .bss	00000004 __malloc_top_pad
0004b638 g     F .text	00000024 strtoul
00054764 g     O .rwdata	00000004 __mb_cur_max
00046abc g     F .text	0000000c _localeconv_r
0004b65c g     F .text	000002f0 _strtoull_r
0004852c g     F .text	0000003c __i2b
0004646c g     F .text	0000049c __sfvwrite_r
00049304 g     F .text	00000070 _sbrk_r
0004cd28 g     F .text	00000078 _read_r
00053114 g     O .rwdata	0000000c __lc_ctype
00054784 g     O .rwdata	00000004 alt_max_fd
0004f678 g     F .text	00000138 __unpack_d
0004bedc g     F .text	00000110 _fclose_r
00045ab8 g     F .text	00000034 fflush
00056234 g     O .bss	00000004 __malloc_max_sbrked_mem
0004e22c g     F .text	00000074 __adddf3
0004dc34 g     F .text	00000078 __nesf2
00047a84 g     F .text	00000120 __b2d
0004d5d4 g     F .text	00000660 __umoddi3
0004feac g     F .text	000000f4 lseek
0005475c g     O .rwdata	00000004 _global_impure_ptr
00048ac0 g     F .text	000005f4 _realloc_r
00056610 g       *ABS*	00000000 __bss_end
00051838 g     F .text	000000f8 alt_iic_isr_register
00051dfc g     F .text	0000010c alt_tick
00056280 g     O .bss	00000100 __hexdig
0004cf68 g     F .text	0000066c __udivdi3
00052b1c g     O .rodata	00000028 __mprec_bigtens
000487b4 g     F .text	00000120 __s2b
0004ee30 g     F .text	00000194 __floatunsidf
000479a4 g     F .text	00000060 __mcmp
00054760 g     O .rwdata	00000004 __ctype_ptr
00045c20 g     F .text	00000018 __fp_lock_all
000517f0 g     F .text	00000048 alt_ic_irq_enabled
00040394 g     F .text	00000040 printALUSelect
00051d64 g     F .text	00000098 alt_alarm_stop
0004b0bc g     F .text	00000024 strtol
0005624c g     O .bss	00000004 alt_irq_active
00040000 g       *ABS*	00000000 __alt_mem_onchip_mem
000400ec g     F .exceptions	000000c8 alt_irq_handler
00053550 g     O .rwdata	00000028 alt_dev_null
0004f1c8 g     F .text	000000c8 __unpack_f
0005143c g     F .text	0000001c alt_dcache_flush_all
00047870 g     F .text	00000070 __hi0bits
0004ece4 g     F .text	000000d8 __fixdfsi
0004ae50 g     F .text	0000001c strtod
0005479c g       *ABS*	00000000 __ram_rwdata_end
0005477c g     O .rwdata	00000008 alt_dev_list
00050394 g     F .text	00000124 write
000489d8 g     F .text	000000e8 _putc_r
0004dcac g     F .text	00000078 __gtsf2
00052d14 g       *ABS*	00000000 __ram_rodata_end
0004fb64 g     F .text	000000d8 fstat
0004eb64 g     F .text	00000088 __ledf2
00048694 g     F .text	00000120 __pow5mult
00056224 g     O .bss	00000004 __nlocale_changed
0004f108 g     F .text	00000008 __umodsi3
000407d0 g     F .text	00000034 _scanf_r
00056610 g       *ABS*	00000000 end
0004f878 g     F .text	00000160 __pack_f
00050728 g     F .text	000000c0 altera_avalon_jtag_uart_init
00052644 g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
000510fc g     F .text	00000090 alt_avalon_timer_sc_init
0004f148 g     F .text	00000080 __clzsi2
00050e4c g     F .text	00000240 altera_avalon_jtag_uart_write
00045b44 g     F .text	00000004 __sfp_lock_acquire
0004754c g     F .text	000000e4 memchr
00040918 g     F .text	00001ec4 ___vfprintf_internal_r
000494b0 g     F .text	00000060 _sprintf_r
00046158 g     F .text	00000314 _free_r
00052434 g     F .text	000001b0 __call_exitprocs
00040770 g     F .text	0000004c __srget_r
00056228 g     O .bss	00000004 __mlocale_changed
00054770 g     O .rwdata	00000004 __malloc_sbrk_base
000401b4 g     F .text	0000003c _start
00056250 g     O .bss	00000004 _alt_tick_rate
0004b0e0 g     F .text	00000318 _strtoll_r
0004818c g     F .text	0000014c __lshift
00056254 g     O .bss	00000004 _alt_nticks
000500ac g     F .text	00000124 read
0005054c g     F .text	0000005c alt_sys_init
000522fc g     F .text	00000134 __register_exitproc
000482d8 g     F .text	00000254 __multiply
00050ac0 g     F .text	00000074 altera_avalon_jtag_uart_close
0004f110 g     F .text	00000038 __mulsi3
00052d14 g       *ABS*	00000000 __ram_rwdata_start
00052648 g       *ABS*	00000000 __ram_rodata_start
00056258 g     O .bss	00000028 __malloc_current_mallinfo
00047e84 g     F .text	0000017c __d2b
000505e0 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0004b3f8 g     F .text	00000240 _strtoul_r
000520dc g     F .text	000000d0 alt_get_fd
000512e0 g     F .text	0000015c alt_busy_sleep
0004f7b0 g     F .text	000000c8 __fpcmp_parts_d
0004be6c g     F .text	00000070 _close_r
00052288 g     F .text	00000074 memcmp
00050690 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00056610 g       *ABS*	00000000 __alt_stack_base
000506d8 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00043f88 g     F .text	0000013c __swsetup_r
0004e664 g     F .text	00000258 __divdf3
00045cf0 g     F .text	000000f0 __sfp
00047ce8 g     F .text	00000058 __copybits
00053120 g     O .rwdata	00000408 __malloc_av_
00045b50 g     F .text	00000004 __sinit_lock_release
0004e2a0 g     F .text	000003c4 __muldf3
000495fc g     F .text	00000060 __sread
00045fec g     F .text	00000040 fread
00051fbc g     F .text	00000120 alt_find_file
00051458 g     F .text	000000b4 alt_dev_llist_insert
0005006c g     F .text	00000020 __malloc_lock
000502a8 g     F .text	000000bc sbrk
000458bc g     F .text	000001fc _fflush_r
0004bda4 g     F .text	000000c8 _calloc_r
00056224 g       *ABS*	00000000 __bss_start
000477b0 g     F .text	00000098 memset
0004044c g     F .text	000000ac main
00056248 g     O .bss	00000004 alt_envp
00056238 g     O .bss	00000004 __malloc_max_total_mem
00050638 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0004bd10 g     F .text	0000001c __swbuf
0004dd24 g     F .text	00000078 __ltsf2
00045de0 g     F .text	0000020c _fread_r
00049510 g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
0004bfec g     F .text	00000014 fclose
0004ae6c g     F .text	00000250 _strtol_r
0004edbc g     F .text	00000074 __truncdfsf2
00056480 g     O .bss	00000190 _atexit0
00044308 g     F .text	000015b4 _dtoa_r
00046d0c g     F .text	00000740 _malloc_r
00054788 g     O .rwdata	00000004 alt_errno
0004b94c g     F .text	000000dc __submore
000469d0 g     F .text	000000b8 _fwalk
0004750c g     F .text	00000040 _mbtowc_r
000488d4 g     F .text	00000104 putc
0004f040 g     F .text	00000060 __divsi3
00052bcc g     O .rodata	00000014 __thenan_df
0004602c g     F .text	0000012c _malloc_trim_r
00052648 g       *ABS*	00000000 __CTOR_END__
0004965c g     F .text	000000bc strcmp
00052648 g       *ABS*	00000000 __flash_rodata_start
00052648 g       *ABS*	00000000 __DTOR_LIST__
0004e944 g     F .text	00000088 __nedf2
00050518 g     F .text	00000034 alt_irq_init
00050230 g     F .text	00000078 alt_release_fd
0004943c g     F .text	00000074 sprintf
00052be0 g     O .rodata	00000100 __clz_tab
0005622c g     O .bss	00000004 _PathLocale
0004ad2c g     F .text	00000124 strtof
0005223c g     F .text	00000014 atexit
0004bd2c g     F .text	00000078 _write_r
00040308 g     F .text	0000008c printRegisters
00046b5c g     F .text	0000001c setlocale
00040804 g     F .text	00000048 scanf
00040270 g     F .text	00000098 printBits
00049434 g     F .text	00000008 nanf
00054758 g     O .rwdata	00000004 _impure_ptr
00056240 g     O .bss	00000004 alt_argc
0004744c g     F .text	00000080 _mbrtowc_r
000515d0 g     F .text	00000064 _do_dtors
000490b4 g     F .text	000001c4 __srefill_r
00040020 g       .exceptions	00000000 alt_irq_entry
00047a04 g     F .text	00000080 __ulp
00049294 g     F .text	00000040 __isinfd
00045c08 g     F .text	00000018 __fp_unlock_all
00054774 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00046ac8 g     F .text	00000010 localeconv
00051664 g     F .text	00000050 alt_ic_isr_register
0004c098 g     F .text	00000068 __hexdig_init
0005479c g       *ABS*	00000000 _edata
00056610 g       *ABS*	00000000 _end
000401b4 g       *ABS*	00000000 __ram_exceptions_end
00043f14 g     F .text	00000074 vfscanf
00050b34 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00051750 g     F .text	000000a0 alt_ic_irq_disable
00049580 g     F .text	0000007c __swrite
0005476c g     O .rwdata	00000004 __malloc_trim_threshold
00051f08 g     F .text	00000020 altera_nios2_qsys_irq_init
00052250 g     F .text	00000038 exit
00046908 g     F .text	000000c8 _fwalk_reent
00048000 g     F .text	0000018c __mdiff
0004f0a0 g     F .text	00000060 __modsi3
00080000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00045b48 g     F .text	00000004 __sfp_lock_release
00049374 g     F .text	000000c0 __sccl
00052780 g     O .rodata	00000101 _ctype_
000403d4 g     F .text	00000078 genPulseAndPrint
0004f290 g     F .text	000000a8 __fpcmp_parts_f
00052624 g     F .text	00000020 _exit
000492d4 g     F .text	00000030 __isnand
0005118c g     F .text	00000154 alt_alarm_start
0004cda0 g     F .text	00000124 __muldi3
00046b78 g     F .text	00000194 __smakebuf_r
0004084c g     F .text	00000074 strlen
00051b78 g     F .text	0000018c open
0004ea54 g     F .text	00000088 __gedf2
0004c1b0 g     F .text	000007fc __gethex
00051634 g     F .text	00000030 alt_icache_flush_all
00054790 g     O .rwdata	00000004 alt_priority_mask
000516b4 g     F .text	0000009c alt_ic_irq_enable
000427dc g     F .text	00000024 __vfprintf_internal
0004e1ac g     F .text	00000080 __subdf3
000478e0 g     F .text	000000c4 __lo0bits
00042800 g     F .text	00001688 __svfscanf_r
00054794 g     O .rwdata	00000008 alt_alarm_list
0004ba28 g     F .text	0000019c _ungetc_r
0005156c g     F .text	00000064 _do_ctors
0004f9d8 g     F .text	00000100 close
0004fdc0 g     F .text	00000080 alt_load
0004f364 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00045b4c g     F .text	00000004 __sinit_lock_acquire
00048568 g     F .text	0000012c __multadd
00047848 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08406d14 	ori	at,at,436
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_mem-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   40044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400ec0 	call	400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000306 	br	40098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   4008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   40094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   40098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   4009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400e8:	ef80083a 	eret

000400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400ec:	defff904 	addi	sp,sp,-28
   400f0:	dfc00615 	stw	ra,24(sp)
   400f4:	df000515 	stw	fp,20(sp)
   400f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   400fc:	0005313a 	rdctl	r2,ipending
   40100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   40108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   4010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40110:	00800044 	movi	r2,1
   40114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   40118:	e0ffff17 	ldw	r3,-4(fp)
   4011c:	e0bffe17 	ldw	r2,-8(fp)
   40120:	1884703a 	and	r2,r3,r2
   40124:	1005003a 	cmpeq	r2,r2,zero
   40128:	1000161e 	bne	r2,zero,40184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4012c:	e0bffd17 	ldw	r2,-12(fp)
   40130:	00c00174 	movhi	r3,5
   40134:	18d8e004 	addi	r3,r3,25472
   40138:	100490fa 	slli	r2,r2,3
   4013c:	10c5883a 	add	r2,r2,r3
   40140:	11400017 	ldw	r5,0(r2)
   40144:	e0bffd17 	ldw	r2,-12(fp)
   40148:	00c00174 	movhi	r3,5
   4014c:	18d8e004 	addi	r3,r3,25472
   40150:	100490fa 	slli	r2,r2,3
   40154:	10c5883a 	add	r2,r2,r3
   40158:	10800104 	addi	r2,r2,4
   4015c:	11000017 	ldw	r4,0(r2)
   40160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40164:	0005313a 	rdctl	r2,ipending
   40168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   4016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   40170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   40174:	e0bfff17 	ldw	r2,-4(fp)
   40178:	1004c03a 	cmpne	r2,r2,zero
   4017c:	103fe31e 	bne	r2,zero,4010c <alt_irq_handler+0x20>
   40180:	00000706 	br	401a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   40184:	e0bffe17 	ldw	r2,-8(fp)
   40188:	1085883a 	add	r2,r2,r2
   4018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   40190:	e0bffd17 	ldw	r2,-12(fp)
   40194:	10800044 	addi	r2,r2,1
   40198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   4019c:	003fde06 	br	40118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   401a0:	e037883a 	mov	sp,fp
   401a4:	dfc00117 	ldw	ra,4(sp)
   401a8:	df000017 	ldw	fp,0(sp)
   401ac:	dec00204 	addi	sp,sp,8
   401b0:	f800283a 	ret

Disassembly of section .text:

000401b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   401b4:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   401b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   401bc:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   401c0:	d6b1d614 	ori	gp,gp,51032
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   401c4:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   401c8:	10988914 	ori	r2,r2,25124

    movhi r3, %hi(__bss_end)
   401cc:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   401d0:	18d98414 	ori	r3,r3,26128

    beq r2, r3, 1f
   401d4:	10c00326 	beq	r2,r3,401e4 <_start+0x30>

0:
    stw zero, (r2)
   401d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   401dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   401e0:	10fffd36 	bltu	r2,r3,401d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   401e4:	004fdc00 	call	4fdc0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   401e8:	00500000 	call	50000 <alt_main>

000401ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   401ec:	003fff06 	br	401ec <alt_after_alt_main>

000401f0 <reset>:
#define OFFSET 0x00000000

#define NUMBER_OF_REGS 9

//reset the CPU
void reset(){
   401f0:	defffe04 	addi	sp,sp,-8
   401f4:	dfc00115 	stw	ra,4(sp)
   401f8:	df000015 	stw	fp,0(sp)
   401fc:	d839883a 	mov	fp,sp
	IOWR_8DIRECT(RESET,OFFSET,1);
   40200:	00c00234 	movhi	r3,8
   40204:	18c40804 	addi	r3,r3,4128
   40208:	00800044 	movi	r2,1
   4020c:	18800025 	stbio	r2,0(r3)

	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
   40210:	00800234 	movhi	r2,8
   40214:	10841004 	addi	r2,r2,4160
   40218:	10000025 	stbio	zero,0(r2)
	usleep(100000);
   4021c:	010000b4 	movhi	r4,2
   40220:	2121a804 	addi	r4,r4,-31072
   40224:	00503640 	call	50364 <usleep>
	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,1);
   40228:	00c00234 	movhi	r3,8
   4022c:	18c41004 	addi	r3,r3,4160
   40230:	00800044 	movi	r2,1
   40234:	18800025 	stbio	r2,0(r3)
	usleep(100000);
   40238:	010000b4 	movhi	r4,2
   4023c:	2121a804 	addi	r4,r4,-31072
   40240:	00503640 	call	50364 <usleep>
	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
   40244:	00800234 	movhi	r2,8
   40248:	10841004 	addi	r2,r2,4160
   4024c:	10000025 	stbio	zero,0(r2)

	IOWR_8DIRECT(RESET,OFFSET,0);
   40250:	00800234 	movhi	r2,8
   40254:	10840804 	addi	r2,r2,4128
   40258:	10000025 	stbio	zero,0(r2)
}
   4025c:	e037883a 	mov	sp,fp
   40260:	dfc00117 	ldw	ra,4(sp)
   40264:	df000017 	ldw	fp,0(sp)
   40268:	dec00204 	addi	sp,sp,8
   4026c:	f800283a 	ret

00040270 <printBits>:

// Assumes little endian
void printBits(int size, int data)
{
   40270:	defffa04 	addi	sp,sp,-24
   40274:	dfc00515 	stw	ra,20(sp)
   40278:	df000415 	stw	fp,16(sp)
   4027c:	df000404 	addi	fp,sp,16
   40280:	e13ffe15 	stw	r4,-8(fp)
   40284:	e17fff15 	stw	r5,-4(fp)
    printf("ALU Select : %d -> ", data);
   40288:	01000174 	movhi	r4,5
   4028c:	21099204 	addi	r4,r4,9800
   40290:	e17fff17 	ldw	r5,-4(fp)
   40294:	00406200 	call	40620 <printf>
	int i;
    for (i = 0; i < size; i++) {
   40298:	e03ffd15 	stw	zero,-12(fp)
   4029c:	00000f06 	br	402dc <printBits+0x6c>
    	int tmp = data >> size-i-1;
   402a0:	e0fffe17 	ldw	r3,-8(fp)
   402a4:	e0bffd17 	ldw	r2,-12(fp)
   402a8:	1885c83a 	sub	r2,r3,r2
   402ac:	10ffffc4 	addi	r3,r2,-1
   402b0:	e0bfff17 	ldw	r2,-4(fp)
   402b4:	10c5d83a 	sra	r2,r2,r3
   402b8:	e0bffc15 	stw	r2,-16(fp)
    	printf("%u", tmp&1);
   402bc:	e0bffc17 	ldw	r2,-16(fp)
   402c0:	1140004c 	andi	r5,r2,1
   402c4:	01000174 	movhi	r4,5
   402c8:	21099704 	addi	r4,r4,9820
   402cc:	00406200 	call	40620 <printf>
// Assumes little endian
void printBits(int size, int data)
{
    printf("ALU Select : %d -> ", data);
	int i;
    for (i = 0; i < size; i++) {
   402d0:	e0bffd17 	ldw	r2,-12(fp)
   402d4:	10800044 	addi	r2,r2,1
   402d8:	e0bffd15 	stw	r2,-12(fp)
   402dc:	e0fffd17 	ldw	r3,-12(fp)
   402e0:	e0bffe17 	ldw	r2,-8(fp)
   402e4:	18bfee16 	blt	r3,r2,402a0 <printBits+0x30>
    	int tmp = data >> size-i-1;
    	printf("%u", tmp&1);
    }
    puts("");
   402e8:	01000174 	movhi	r4,5
   402ec:	21099804 	addi	r4,r4,9824
   402f0:	004075c0 	call	4075c <puts>
}
   402f4:	e037883a 	mov	sp,fp
   402f8:	dfc00117 	ldw	ra,4(sp)
   402fc:	df000017 	ldw	fp,0(sp)
   40300:	dec00204 	addi	sp,sp,8
   40304:	f800283a 	ret

00040308 <printRegisters>:

// print the specific register values
void printRegisters() {
   40308:	defffc04 	addi	sp,sp,-16
   4030c:	dfc00315 	stw	ra,12(sp)
   40310:	df000215 	stw	fp,8(sp)
   40314:	df000204 	addi	fp,sp,8
	int addr;
    for (addr = 0; addr < NUMBER_OF_REGS; addr++) {
   40318:	e03fff15 	stw	zero,-4(fp)
   4031c:	00001306 	br	4036c <printRegisters+0x64>
        // write the address to the IO port
        IOWR_8DIRECT(ADDR,OFFSET,addr);
   40320:	00c00234 	movhi	r3,8
   40324:	18c41c04 	addi	r3,r3,4208
   40328:	e0bfff17 	ldw	r2,-4(fp)
   4032c:	18800025 	stbio	r2,0(r3)
        usleep(100000); // Wait for about 0.1 seconds
   40330:	010000b4 	movhi	r4,2
   40334:	2121a804 	addi	r4,r4,-31072
   40338:	00503640 	call	50364 <usleep>

        // getting data from the Register file
        int data = IORD_32DIRECT(DATA_IN,OFFSET);
   4033c:	00800234 	movhi	r2,8
   40340:	10841804 	addi	r2,r2,4192
   40344:	10800037 	ldwio	r2,0(r2)
   40348:	e0bffe15 	stw	r2,-8(fp)

        printf("Addr: %d Data: %d   ",addr, data);
   4034c:	01000174 	movhi	r4,5
   40350:	21099904 	addi	r4,r4,9828
   40354:	e17fff17 	ldw	r5,-4(fp)
   40358:	e1bffe17 	ldw	r6,-8(fp)
   4035c:	00406200 	call	40620 <printf>
}

// print the specific register values
void printRegisters() {
	int addr;
    for (addr = 0; addr < NUMBER_OF_REGS; addr++) {
   40360:	e0bfff17 	ldw	r2,-4(fp)
   40364:	10800044 	addi	r2,r2,1
   40368:	e0bfff15 	stw	r2,-4(fp)
   4036c:	e0bfff17 	ldw	r2,-4(fp)
   40370:	10800250 	cmplti	r2,r2,9
   40374:	103fea1e 	bne	r2,zero,40320 <printRegisters+0x18>
        // getting data from the Register file
        int data = IORD_32DIRECT(DATA_IN,OFFSET);

        printf("Addr: %d Data: %d   ",addr, data);
    }
    printf("\n");
   40378:	01000284 	movi	r4,10
   4037c:	00406980 	call	40698 <putchar>
}
   40380:	e037883a 	mov	sp,fp
   40384:	dfc00117 	ldw	ra,4(sp)
   40388:	df000017 	ldw	fp,0(sp)
   4038c:	dec00204 	addi	sp,sp,8
   40390:	f800283a 	ret

00040394 <printALUSelect>:


//print ALU SELECT Signal
void printALUSelect() {
   40394:	defffd04 	addi	sp,sp,-12
   40398:	dfc00215 	stw	ra,8(sp)
   4039c:	df000115 	stw	fp,4(sp)
   403a0:	df000104 	addi	fp,sp,4
	// getting data from the Register file
	int data = IORD_32DIRECT(ALU_SELECT,OFFSET);
   403a4:	00800234 	movhi	r2,8
   403a8:	10840c04 	addi	r2,r2,4144
   403ac:	10800037 	ldwio	r2,0(r2)
   403b0:	e0bfff15 	stw	r2,-4(fp)
	printBits(32, data);
   403b4:	01000804 	movi	r4,32
   403b8:	e17fff17 	ldw	r5,-4(fp)
   403bc:	00402700 	call	40270 <printBits>
}
   403c0:	e037883a 	mov	sp,fp
   403c4:	dfc00117 	ldw	ra,4(sp)
   403c8:	df000017 	ldw	fp,0(sp)
   403cc:	dec00204 	addi	sp,sp,8
   403d0:	f800283a 	ret

000403d4 <genPulseAndPrint>:

// genarate clock pulses and print registers
void genPulseAndPrint(int pulseCount) {
   403d4:	defffc04 	addi	sp,sp,-16
   403d8:	dfc00315 	stw	ra,12(sp)
   403dc:	df000215 	stw	fp,8(sp)
   403e0:	df000204 	addi	fp,sp,8
   403e4:	e13fff15 	stw	r4,-4(fp)
	int i;
	for (i = 0; i < pulseCount; i++) {
   403e8:	e03ffe15 	stw	zero,-8(fp)
   403ec:	00000f06 	br	4042c <genPulseAndPrint+0x58>
        IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,1);
   403f0:	00c00234 	movhi	r3,8
   403f4:	18c41004 	addi	r3,r3,4160
   403f8:	00800044 	movi	r2,1
   403fc:	18800025 	stbio	r2,0(r3)
    	usleep(100000); // Wait for about 0.1 seconds
   40400:	010000b4 	movhi	r4,2
   40404:	2121a804 	addi	r4,r4,-31072
   40408:	00503640 	call	50364 <usleep>
    	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
   4040c:	00800234 	movhi	r2,8
   40410:	10841004 	addi	r2,r2,4160
   40414:	10000025 	stbio	zero,0(r2)
        // printing the register values
        printRegisters();
   40418:	00403080 	call	40308 <printRegisters>
        printALUSelect();
   4041c:	00403940 	call	40394 <printALUSelect>
}

// genarate clock pulses and print registers
void genPulseAndPrint(int pulseCount) {
	int i;
	for (i = 0; i < pulseCount; i++) {
   40420:	e0bffe17 	ldw	r2,-8(fp)
   40424:	10800044 	addi	r2,r2,1
   40428:	e0bffe15 	stw	r2,-8(fp)
   4042c:	e0fffe17 	ldw	r3,-8(fp)
   40430:	e0bfff17 	ldw	r2,-4(fp)
   40434:	18bfee16 	blt	r3,r2,403f0 <genPulseAndPrint+0x1c>
    	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
        // printing the register values
        printRegisters();
        printALUSelect();
    }
}
   40438:	e037883a 	mov	sp,fp
   4043c:	dfc00117 	ldw	ra,4(sp)
   40440:	df000017 	ldw	fp,0(sp)
   40444:	dec00204 	addi	sp,sp,8
   40448:	f800283a 	ret

0004044c <main>:

int main(void)
{ 
   4044c:	defffb04 	addi	sp,sp,-20
   40450:	dfc00415 	stw	ra,16(sp)
   40454:	df000315 	stw	fp,12(sp)
   40458:	df000304 	addi	fp,sp,12

    /* 0x00-0xFF counting loop. */
    IOWR_8DIRECT(CLK_SEL,OFFSET,1);
   4045c:	00c00234 	movhi	r3,8
   40460:	18c41404 	addi	r3,r3,4176
   40464:	00800044 	movi	r2,1
   40468:	18800025 	stbio	r2,0(r3)
    IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
   4046c:	00800234 	movhi	r2,8
   40470:	10841004 	addi	r2,r2,4160
   40474:	10000025 	stbio	zero,0(r2)

    // resetting the cpu
    reset();
   40478:	00401f00 	call	401f0 <reset>
    while( 1 ) 
    {
        char answer;
        printf("Do you want the Auto clock?");
   4047c:	01000174 	movhi	r4,5
   40480:	21099f04 	addi	r4,r4,9852
   40484:	00406200 	call	40620 <printf>
        answer = getc(stdin);
   40488:	00800174 	movhi	r2,5
   4048c:	1091d604 	addi	r2,r2,18264
   40490:	10800017 	ldw	r2,0(r2)
   40494:	11000117 	ldw	r4,4(r2)
   40498:	00404f80 	call	404f8 <getc>
   4049c:	e0bffe05 	stb	r2,-8(fp)
        if (answer == 'y') {
   404a0:	e0bffe07 	ldb	r2,-8(fp)
   404a4:	10801e58 	cmpnei	r2,r2,121
   404a8:	1000051e 	bne	r2,zero,404c0 <main+0x74>
            IOWR_8DIRECT(CLK_SEL,OFFSET,0);
   404ac:	00800234 	movhi	r2,8
   404b0:	10841404 	addi	r2,r2,4176
   404b4:	10000025 	stbio	zero,0(r2)
            while (1) {
                printRegisters();
   404b8:	00403080 	call	40308 <printRegisters>
            }
   404bc:	003ffe06 	br	404b8 <main+0x6c>
        } else {
            int number_of_pulses;
            IOWR_8DIRECT(CLK_SEL,OFFSET,1);
   404c0:	00c00234 	movhi	r3,8
   404c4:	18c41404 	addi	r3,r3,4176
   404c8:	00800044 	movi	r2,1
   404cc:	18800025 	stbio	r2,0(r3)
            while(1) {
				printf("How many clock pulses do you need to simulate : ");
   404d0:	01000174 	movhi	r4,5
   404d4:	2109a604 	addi	r4,r4,9880
   404d8:	00406200 	call	40620 <printf>
				int clock_pulse_count;
				scanf("%d", &clock_pulse_count);
   404dc:	e17fff04 	addi	r5,fp,-4
   404e0:	01000174 	movhi	r4,5
   404e4:	2109b304 	addi	r4,r4,9932
   404e8:	00408040 	call	40804 <scanf>
				genPulseAndPrint(clock_pulse_count);
   404ec:	e13fff17 	ldw	r4,-4(fp)
   404f0:	00403d40 	call	403d4 <genPulseAndPrint>
            }
   404f4:	003ff606 	br	404d0 <main+0x84>

000404f8 <getc>:
   404f8:	defffd04 	addi	sp,sp,-12
   404fc:	dc400115 	stw	r17,4(sp)
   40500:	04400174 	movhi	r17,5
   40504:	8c51d604 	addi	r17,r17,18264
   40508:	88c00017 	ldw	r3,0(r17)
   4050c:	dc000015 	stw	r16,0(sp)
   40510:	dfc00215 	stw	ra,8(sp)
   40514:	2021883a 	mov	r16,r4
   40518:	18000326 	beq	r3,zero,40528 <getc+0x30>
   4051c:	18800e17 	ldw	r2,56(r3)
   40520:	1809883a 	mov	r4,r3
   40524:	10000e26 	beq	r2,zero,40560 <getc+0x68>
   40528:	80800117 	ldw	r2,4(r16)
   4052c:	800b883a 	mov	r5,r16
   40530:	10bfffc4 	addi	r2,r2,-1
   40534:	80800115 	stw	r2,4(r16)
   40538:	10000f16 	blt	r2,zero,40578 <getc+0x80>
   4053c:	80c00017 	ldw	r3,0(r16)
   40540:	18800003 	ldbu	r2,0(r3)
   40544:	18c00044 	addi	r3,r3,1
   40548:	80c00015 	stw	r3,0(r16)
   4054c:	dfc00217 	ldw	ra,8(sp)
   40550:	dc400117 	ldw	r17,4(sp)
   40554:	dc000017 	ldw	r16,0(sp)
   40558:	dec00304 	addi	sp,sp,12
   4055c:	f800283a 	ret
   40560:	0045b540 	call	45b54 <__sinit>
   40564:	80800117 	ldw	r2,4(r16)
   40568:	800b883a 	mov	r5,r16
   4056c:	10bfffc4 	addi	r2,r2,-1
   40570:	80800115 	stw	r2,4(r16)
   40574:	103ff10e 	bge	r2,zero,4053c <getc+0x44>
   40578:	89000017 	ldw	r4,0(r17)
   4057c:	dfc00217 	ldw	ra,8(sp)
   40580:	dc400117 	ldw	r17,4(sp)
   40584:	dc000017 	ldw	r16,0(sp)
   40588:	dec00304 	addi	sp,sp,12
   4058c:	00407701 	jmpi	40770 <__srget_r>

00040590 <_getc_r>:
   40590:	defffd04 	addi	sp,sp,-12
   40594:	dc400115 	stw	r17,4(sp)
   40598:	dc000015 	stw	r16,0(sp)
   4059c:	dfc00215 	stw	ra,8(sp)
   405a0:	2021883a 	mov	r16,r4
   405a4:	2823883a 	mov	r17,r5
   405a8:	20000226 	beq	r4,zero,405b4 <_getc_r+0x24>
   405ac:	20800e17 	ldw	r2,56(r4)
   405b0:	10000f26 	beq	r2,zero,405f0 <_getc_r+0x60>
   405b4:	88800117 	ldw	r2,4(r17)
   405b8:	8009883a 	mov	r4,r16
   405bc:	880b883a 	mov	r5,r17
   405c0:	10bfffc4 	addi	r2,r2,-1
   405c4:	88800115 	stw	r2,4(r17)
   405c8:	10001016 	blt	r2,zero,4060c <_getc_r+0x7c>
   405cc:	88c00017 	ldw	r3,0(r17)
   405d0:	18800003 	ldbu	r2,0(r3)
   405d4:	18c00044 	addi	r3,r3,1
   405d8:	88c00015 	stw	r3,0(r17)
   405dc:	dfc00217 	ldw	ra,8(sp)
   405e0:	dc400117 	ldw	r17,4(sp)
   405e4:	dc000017 	ldw	r16,0(sp)
   405e8:	dec00304 	addi	sp,sp,12
   405ec:	f800283a 	ret
   405f0:	0045b540 	call	45b54 <__sinit>
   405f4:	88800117 	ldw	r2,4(r17)
   405f8:	8009883a 	mov	r4,r16
   405fc:	880b883a 	mov	r5,r17
   40600:	10bfffc4 	addi	r2,r2,-1
   40604:	88800115 	stw	r2,4(r17)
   40608:	103ff00e 	bge	r2,zero,405cc <_getc_r+0x3c>
   4060c:	dfc00217 	ldw	ra,8(sp)
   40610:	dc400117 	ldw	r17,4(sp)
   40614:	dc000017 	ldw	r16,0(sp)
   40618:	dec00304 	addi	sp,sp,12
   4061c:	00407701 	jmpi	40770 <__srget_r>

00040620 <printf>:
   40620:	defffb04 	addi	sp,sp,-20
   40624:	dfc00115 	stw	ra,4(sp)
   40628:	d9400215 	stw	r5,8(sp)
   4062c:	d9800315 	stw	r6,12(sp)
   40630:	d9c00415 	stw	r7,16(sp)
   40634:	00800174 	movhi	r2,5
   40638:	1091d604 	addi	r2,r2,18264
   4063c:	10c00017 	ldw	r3,0(r2)
   40640:	200b883a 	mov	r5,r4
   40644:	d8800204 	addi	r2,sp,8
   40648:	19000217 	ldw	r4,8(r3)
   4064c:	100d883a 	mov	r6,r2
   40650:	d8800015 	stw	r2,0(sp)
   40654:	00427dc0 	call	427dc <__vfprintf_internal>
   40658:	dfc00117 	ldw	ra,4(sp)
   4065c:	dec00504 	addi	sp,sp,20
   40660:	f800283a 	ret

00040664 <_printf_r>:
   40664:	defffc04 	addi	sp,sp,-16
   40668:	dfc00115 	stw	ra,4(sp)
   4066c:	d9800215 	stw	r6,8(sp)
   40670:	d9c00315 	stw	r7,12(sp)
   40674:	280d883a 	mov	r6,r5
   40678:	21400217 	ldw	r5,8(r4)
   4067c:	d8c00204 	addi	r3,sp,8
   40680:	180f883a 	mov	r7,r3
   40684:	d8c00015 	stw	r3,0(sp)
   40688:	00409180 	call	40918 <___vfprintf_internal_r>
   4068c:	dfc00117 	ldw	ra,4(sp)
   40690:	dec00404 	addi	sp,sp,16
   40694:	f800283a 	ret

00040698 <putchar>:
   40698:	00800174 	movhi	r2,5
   4069c:	1091d604 	addi	r2,r2,18264
   406a0:	11800017 	ldw	r6,0(r2)
   406a4:	200b883a 	mov	r5,r4
   406a8:	3009883a 	mov	r4,r6
   406ac:	31800217 	ldw	r6,8(r6)
   406b0:	00489d81 	jmpi	489d8 <_putc_r>

000406b4 <_putchar_r>:
   406b4:	21800217 	ldw	r6,8(r4)
   406b8:	00489d81 	jmpi	489d8 <_putc_r>

000406bc <_puts_r>:
   406bc:	defff604 	addi	sp,sp,-40
   406c0:	dc400715 	stw	r17,28(sp)
   406c4:	2023883a 	mov	r17,r4
   406c8:	2809883a 	mov	r4,r5
   406cc:	dfc00915 	stw	ra,36(sp)
   406d0:	dcc00815 	stw	r19,32(sp)
   406d4:	2827883a 	mov	r19,r5
   406d8:	004084c0 	call	4084c <strlen>
   406dc:	89400217 	ldw	r5,8(r17)
   406e0:	00c00174 	movhi	r3,5
   406e4:	18c9b504 	addi	r3,r3,9940
   406e8:	01c00044 	movi	r7,1
   406ec:	12000044 	addi	r8,r2,1
   406f0:	d8c00515 	stw	r3,20(sp)
   406f4:	d9c00615 	stw	r7,24(sp)
   406f8:	d8c00304 	addi	r3,sp,12
   406fc:	01c00084 	movi	r7,2
   40700:	8809883a 	mov	r4,r17
   40704:	d80d883a 	mov	r6,sp
   40708:	d8c00015 	stw	r3,0(sp)
   4070c:	dcc00315 	stw	r19,12(sp)
   40710:	da000215 	stw	r8,8(sp)
   40714:	d9c00115 	stw	r7,4(sp)
   40718:	d8800415 	stw	r2,16(sp)
   4071c:	004646c0 	call	4646c <__sfvwrite_r>
   40720:	00ffffc4 	movi	r3,-1
   40724:	10000626 	beq	r2,zero,40740 <_puts_r+0x84>
   40728:	1805883a 	mov	r2,r3
   4072c:	dfc00917 	ldw	ra,36(sp)
   40730:	dcc00817 	ldw	r19,32(sp)
   40734:	dc400717 	ldw	r17,28(sp)
   40738:	dec00a04 	addi	sp,sp,40
   4073c:	f800283a 	ret
   40740:	00c00284 	movi	r3,10
   40744:	1805883a 	mov	r2,r3
   40748:	dfc00917 	ldw	ra,36(sp)
   4074c:	dcc00817 	ldw	r19,32(sp)
   40750:	dc400717 	ldw	r17,28(sp)
   40754:	dec00a04 	addi	sp,sp,40
   40758:	f800283a 	ret

0004075c <puts>:
   4075c:	00800174 	movhi	r2,5
   40760:	1091d604 	addi	r2,r2,18264
   40764:	200b883a 	mov	r5,r4
   40768:	11000017 	ldw	r4,0(r2)
   4076c:	00406bc1 	jmpi	406bc <_puts_r>

00040770 <__srget_r>:
   40770:	defffe04 	addi	sp,sp,-8
   40774:	dc000015 	stw	r16,0(sp)
   40778:	dfc00115 	stw	ra,4(sp)
   4077c:	2821883a 	mov	r16,r5
   40780:	00490b40 	call	490b4 <__srefill_r>
   40784:	013fffc4 	movi	r4,-1
   40788:	1000071e 	bne	r2,zero,407a8 <__srget_r+0x38>
   4078c:	80800117 	ldw	r2,4(r16)
   40790:	81000017 	ldw	r4,0(r16)
   40794:	10bfffc4 	addi	r2,r2,-1
   40798:	20c00044 	addi	r3,r4,1
   4079c:	80800115 	stw	r2,4(r16)
   407a0:	21000003 	ldbu	r4,0(r4)
   407a4:	80c00015 	stw	r3,0(r16)
   407a8:	2005883a 	mov	r2,r4
   407ac:	dfc00117 	ldw	ra,4(sp)
   407b0:	dc000017 	ldw	r16,0(sp)
   407b4:	dec00204 	addi	sp,sp,8
   407b8:	f800283a 	ret

000407bc <__srget>:
   407bc:	00800174 	movhi	r2,5
   407c0:	1091d604 	addi	r2,r2,18264
   407c4:	200b883a 	mov	r5,r4
   407c8:	11000017 	ldw	r4,0(r2)
   407cc:	00407701 	jmpi	40770 <__srget_r>

000407d0 <_scanf_r>:
   407d0:	defffc04 	addi	sp,sp,-16
   407d4:	dfc00115 	stw	ra,4(sp)
   407d8:	d9800215 	stw	r6,8(sp)
   407dc:	d9c00315 	stw	r7,12(sp)
   407e0:	280d883a 	mov	r6,r5
   407e4:	21400117 	ldw	r5,4(r4)
   407e8:	d8c00204 	addi	r3,sp,8
   407ec:	180f883a 	mov	r7,r3
   407f0:	d8c00015 	stw	r3,0(sp)
   407f4:	00428000 	call	42800 <__svfscanf_r>
   407f8:	dfc00117 	ldw	ra,4(sp)
   407fc:	dec00404 	addi	sp,sp,16
   40800:	f800283a 	ret

00040804 <scanf>:
   40804:	defffb04 	addi	sp,sp,-20
   40808:	dfc00115 	stw	ra,4(sp)
   4080c:	d9400215 	stw	r5,8(sp)
   40810:	d9800315 	stw	r6,12(sp)
   40814:	d9c00415 	stw	r7,16(sp)
   40818:	00800174 	movhi	r2,5
   4081c:	1091d604 	addi	r2,r2,18264
   40820:	11400017 	ldw	r5,0(r2)
   40824:	200d883a 	mov	r6,r4
   40828:	d8800204 	addi	r2,sp,8
   4082c:	2809883a 	mov	r4,r5
   40830:	29400117 	ldw	r5,4(r5)
   40834:	100f883a 	mov	r7,r2
   40838:	d8800015 	stw	r2,0(sp)
   4083c:	00428000 	call	42800 <__svfscanf_r>
   40840:	dfc00117 	ldw	ra,4(sp)
   40844:	dec00504 	addi	sp,sp,20
   40848:	f800283a 	ret

0004084c <strlen>:
   4084c:	208000cc 	andi	r2,r4,3
   40850:	2011883a 	mov	r8,r4
   40854:	1000161e 	bne	r2,zero,408b0 <strlen+0x64>
   40858:	20c00017 	ldw	r3,0(r4)
   4085c:	017fbff4 	movhi	r5,65279
   40860:	297fbfc4 	addi	r5,r5,-257
   40864:	01e02074 	movhi	r7,32897
   40868:	39e02004 	addi	r7,r7,-32640
   4086c:	1945883a 	add	r2,r3,r5
   40870:	11c4703a 	and	r2,r2,r7
   40874:	00c6303a 	nor	r3,zero,r3
   40878:	1886703a 	and	r3,r3,r2
   4087c:	18000c1e 	bne	r3,zero,408b0 <strlen+0x64>
   40880:	280d883a 	mov	r6,r5
   40884:	380b883a 	mov	r5,r7
   40888:	21000104 	addi	r4,r4,4
   4088c:	20800017 	ldw	r2,0(r4)
   40890:	1187883a 	add	r3,r2,r6
   40894:	1946703a 	and	r3,r3,r5
   40898:	0084303a 	nor	r2,zero,r2
   4089c:	10c4703a 	and	r2,r2,r3
   408a0:	103ff926 	beq	r2,zero,40888 <strlen+0x3c>
   408a4:	20800007 	ldb	r2,0(r4)
   408a8:	10000326 	beq	r2,zero,408b8 <strlen+0x6c>
   408ac:	21000044 	addi	r4,r4,1
   408b0:	20800007 	ldb	r2,0(r4)
   408b4:	103ffd1e 	bne	r2,zero,408ac <strlen+0x60>
   408b8:	2205c83a 	sub	r2,r4,r8
   408bc:	f800283a 	ret

000408c0 <__sprint_r>:
   408c0:	30800217 	ldw	r2,8(r6)
   408c4:	defffe04 	addi	sp,sp,-8
   408c8:	dc000015 	stw	r16,0(sp)
   408cc:	dfc00115 	stw	ra,4(sp)
   408d0:	3021883a 	mov	r16,r6
   408d4:	0007883a 	mov	r3,zero
   408d8:	1000061e 	bne	r2,zero,408f4 <__sprint_r+0x34>
   408dc:	1805883a 	mov	r2,r3
   408e0:	30000115 	stw	zero,4(r6)
   408e4:	dfc00117 	ldw	ra,4(sp)
   408e8:	dc000017 	ldw	r16,0(sp)
   408ec:	dec00204 	addi	sp,sp,8
   408f0:	f800283a 	ret
   408f4:	004646c0 	call	4646c <__sfvwrite_r>
   408f8:	1007883a 	mov	r3,r2
   408fc:	1805883a 	mov	r2,r3
   40900:	80000115 	stw	zero,4(r16)
   40904:	80000215 	stw	zero,8(r16)
   40908:	dfc00117 	ldw	ra,4(sp)
   4090c:	dc000017 	ldw	r16,0(sp)
   40910:	dec00204 	addi	sp,sp,8
   40914:	f800283a 	ret

00040918 <___vfprintf_internal_r>:
   40918:	defea404 	addi	sp,sp,-1392
   4091c:	dd815815 	stw	r22,1376(sp)
   40920:	dc015215 	stw	r16,1352(sp)
   40924:	d9c15115 	stw	r7,1348(sp)
   40928:	dfc15b15 	stw	ra,1388(sp)
   4092c:	df015a15 	stw	fp,1384(sp)
   40930:	ddc15915 	stw	r23,1380(sp)
   40934:	dd415715 	stw	r21,1372(sp)
   40938:	dd015615 	stw	r20,1368(sp)
   4093c:	dcc15515 	stw	r19,1364(sp)
   40940:	dc815415 	stw	r18,1360(sp)
   40944:	dc415315 	stw	r17,1356(sp)
   40948:	282d883a 	mov	r22,r5
   4094c:	3021883a 	mov	r16,r6
   40950:	d9014f15 	stw	r4,1340(sp)
   40954:	0046abc0 	call	46abc <_localeconv_r>
   40958:	10800017 	ldw	r2,0(r2)
   4095c:	d9c15117 	ldw	r7,1348(sp)
   40960:	d8814915 	stw	r2,1316(sp)
   40964:	d8814f17 	ldw	r2,1340(sp)
   40968:	10000226 	beq	r2,zero,40974 <___vfprintf_internal_r+0x5c>
   4096c:	10800e17 	ldw	r2,56(r2)
   40970:	10020d26 	beq	r2,zero,411a8 <___vfprintf_internal_r+0x890>
   40974:	b080030b 	ldhu	r2,12(r22)
   40978:	1080020c 	andi	r2,r2,8
   4097c:	10020e26 	beq	r2,zero,411b8 <___vfprintf_internal_r+0x8a0>
   40980:	b0800417 	ldw	r2,16(r22)
   40984:	10020c26 	beq	r2,zero,411b8 <___vfprintf_internal_r+0x8a0>
   40988:	b200030b 	ldhu	r8,12(r22)
   4098c:	00800284 	movi	r2,10
   40990:	40c0068c 	andi	r3,r8,26
   40994:	18802f1e 	bne	r3,r2,40a54 <___vfprintf_internal_r+0x13c>
   40998:	b080038f 	ldh	r2,14(r22)
   4099c:	10002d16 	blt	r2,zero,40a54 <___vfprintf_internal_r+0x13c>
   409a0:	b240038b 	ldhu	r9,14(r22)
   409a4:	b2800717 	ldw	r10,28(r22)
   409a8:	b2c00917 	ldw	r11,36(r22)
   409ac:	d9014f17 	ldw	r4,1340(sp)
   409b0:	dc402904 	addi	r17,sp,164
   409b4:	d8804004 	addi	r2,sp,256
   409b8:	00c10004 	movi	r3,1024
   409bc:	423fff4c 	andi	r8,r8,65533
   409c0:	800d883a 	mov	r6,r16
   409c4:	880b883a 	mov	r5,r17
   409c8:	da002c0d 	sth	r8,176(sp)
   409cc:	da402c8d 	sth	r9,178(sp)
   409d0:	da803015 	stw	r10,192(sp)
   409d4:	dac03215 	stw	r11,200(sp)
   409d8:	d8802d15 	stw	r2,180(sp)
   409dc:	d8c02e15 	stw	r3,184(sp)
   409e0:	d8802915 	stw	r2,164(sp)
   409e4:	d8c02b15 	stw	r3,172(sp)
   409e8:	d8002f15 	stw	zero,188(sp)
   409ec:	00409180 	call	40918 <___vfprintf_internal_r>
   409f0:	d8814b15 	stw	r2,1324(sp)
   409f4:	10000416 	blt	r2,zero,40a08 <___vfprintf_internal_r+0xf0>
   409f8:	d9014f17 	ldw	r4,1340(sp)
   409fc:	880b883a 	mov	r5,r17
   40a00:	00458bc0 	call	458bc <_fflush_r>
   40a04:	1002321e 	bne	r2,zero,412d0 <___vfprintf_internal_r+0x9b8>
   40a08:	d8802c0b 	ldhu	r2,176(sp)
   40a0c:	1080100c 	andi	r2,r2,64
   40a10:	10000326 	beq	r2,zero,40a20 <___vfprintf_internal_r+0x108>
   40a14:	b080030b 	ldhu	r2,12(r22)
   40a18:	10801014 	ori	r2,r2,64
   40a1c:	b080030d 	sth	r2,12(r22)
   40a20:	d8814b17 	ldw	r2,1324(sp)
   40a24:	dfc15b17 	ldw	ra,1388(sp)
   40a28:	df015a17 	ldw	fp,1384(sp)
   40a2c:	ddc15917 	ldw	r23,1380(sp)
   40a30:	dd815817 	ldw	r22,1376(sp)
   40a34:	dd415717 	ldw	r21,1372(sp)
   40a38:	dd015617 	ldw	r20,1368(sp)
   40a3c:	dcc15517 	ldw	r19,1364(sp)
   40a40:	dc815417 	ldw	r18,1360(sp)
   40a44:	dc415317 	ldw	r17,1356(sp)
   40a48:	dc015217 	ldw	r16,1352(sp)
   40a4c:	dec15c04 	addi	sp,sp,1392
   40a50:	f800283a 	ret
   40a54:	0005883a 	mov	r2,zero
   40a58:	0007883a 	mov	r3,zero
   40a5c:	dd401904 	addi	r21,sp,100
   40a60:	d8814215 	stw	r2,1288(sp)
   40a64:	802f883a 	mov	r23,r16
   40a68:	d8c14315 	stw	r3,1292(sp)
   40a6c:	d8014b15 	stw	zero,1324(sp)
   40a70:	d8014815 	stw	zero,1312(sp)
   40a74:	d8014415 	stw	zero,1296(sp)
   40a78:	d8014715 	stw	zero,1308(sp)
   40a7c:	dd400c15 	stw	r21,48(sp)
   40a80:	d8000e15 	stw	zero,56(sp)
   40a84:	d8000d15 	stw	zero,52(sp)
   40a88:	b8800007 	ldb	r2,0(r23)
   40a8c:	10001926 	beq	r2,zero,40af4 <___vfprintf_internal_r+0x1dc>
   40a90:	00c00944 	movi	r3,37
   40a94:	10c01726 	beq	r2,r3,40af4 <___vfprintf_internal_r+0x1dc>
   40a98:	b821883a 	mov	r16,r23
   40a9c:	00000106 	br	40aa4 <___vfprintf_internal_r+0x18c>
   40aa0:	10c00326 	beq	r2,r3,40ab0 <___vfprintf_internal_r+0x198>
   40aa4:	84000044 	addi	r16,r16,1
   40aa8:	80800007 	ldb	r2,0(r16)
   40aac:	103ffc1e 	bne	r2,zero,40aa0 <___vfprintf_internal_r+0x188>
   40ab0:	85e7c83a 	sub	r19,r16,r23
   40ab4:	98000e26 	beq	r19,zero,40af0 <___vfprintf_internal_r+0x1d8>
   40ab8:	dc800e17 	ldw	r18,56(sp)
   40abc:	dc400d17 	ldw	r17,52(sp)
   40ac0:	008001c4 	movi	r2,7
   40ac4:	94e5883a 	add	r18,r18,r19
   40ac8:	8c400044 	addi	r17,r17,1
   40acc:	adc00015 	stw	r23,0(r21)
   40ad0:	dc800e15 	stw	r18,56(sp)
   40ad4:	acc00115 	stw	r19,4(r21)
   40ad8:	dc400d15 	stw	r17,52(sp)
   40adc:	14428b16 	blt	r2,r17,4150c <___vfprintf_internal_r+0xbf4>
   40ae0:	ad400204 	addi	r21,r21,8
   40ae4:	d9014b17 	ldw	r4,1324(sp)
   40ae8:	24c9883a 	add	r4,r4,r19
   40aec:	d9014b15 	stw	r4,1324(sp)
   40af0:	802f883a 	mov	r23,r16
   40af4:	b8800007 	ldb	r2,0(r23)
   40af8:	10013c26 	beq	r2,zero,40fec <___vfprintf_internal_r+0x6d4>
   40afc:	bdc00044 	addi	r23,r23,1
   40b00:	d8000405 	stb	zero,16(sp)
   40b04:	b8c00007 	ldb	r3,0(r23)
   40b08:	04ffffc4 	movi	r19,-1
   40b0c:	d8014c15 	stw	zero,1328(sp)
   40b10:	d8014a15 	stw	zero,1320(sp)
   40b14:	d8c14d15 	stw	r3,1332(sp)
   40b18:	bdc00044 	addi	r23,r23,1
   40b1c:	d9414d17 	ldw	r5,1332(sp)
   40b20:	00801604 	movi	r2,88
   40b24:	28fff804 	addi	r3,r5,-32
   40b28:	10c06036 	bltu	r2,r3,40cac <___vfprintf_internal_r+0x394>
   40b2c:	18c5883a 	add	r2,r3,r3
   40b30:	1085883a 	add	r2,r2,r2
   40b34:	00c00134 	movhi	r3,4
   40b38:	18c2d204 	addi	r3,r3,2888
   40b3c:	10c5883a 	add	r2,r2,r3
   40b40:	11000017 	ldw	r4,0(r2)
   40b44:	2000683a 	jmp	r4
   40b48:	00041abc 	xorhi	zero,zero,4202
   40b4c:	00040cac 	andhi	zero,zero,4146
   40b50:	00040cac 	andhi	zero,zero,4146
   40b54:	00041aa8 	cmpgeui	zero,zero,4202
   40b58:	00040cac 	andhi	zero,zero,4146
   40b5c:	00040cac 	andhi	zero,zero,4146
   40b60:	00040cac 	andhi	zero,zero,4146
   40b64:	00040cac 	andhi	zero,zero,4146
   40b68:	00040cac 	andhi	zero,zero,4146
   40b6c:	00040cac 	andhi	zero,zero,4146
   40b70:	00041888 	cmpgei	zero,zero,4194
   40b74:	00041a98 	cmpnei	zero,zero,4202
   40b78:	00040cac 	andhi	zero,zero,4146
   40b7c:	000418a0 	cmpeqi	zero,zero,4194
   40b80:	00041b40 	call	41b4 <__alt_mem_onchip_mem-0x3be4c>
   40b84:	00040cac 	andhi	zero,zero,4146
   40b88:	00041b2c 	andhi	zero,zero,4204
   40b8c:	00041ae8 	cmpgeui	zero,zero,4203
   40b90:	00041ae8 	cmpgeui	zero,zero,4203
   40b94:	00041ae8 	cmpgeui	zero,zero,4203
   40b98:	00041ae8 	cmpgeui	zero,zero,4203
   40b9c:	00041ae8 	cmpgeui	zero,zero,4203
   40ba0:	00041ae8 	cmpgeui	zero,zero,4203
   40ba4:	00041ae8 	cmpgeui	zero,zero,4203
   40ba8:	00041ae8 	cmpgeui	zero,zero,4203
   40bac:	00041ae8 	cmpgeui	zero,zero,4203
   40bb0:	00040cac 	andhi	zero,zero,4146
   40bb4:	00040cac 	andhi	zero,zero,4146
   40bb8:	00040cac 	andhi	zero,zero,4146
   40bbc:	00040cac 	andhi	zero,zero,4146
   40bc0:	00040cac 	andhi	zero,zero,4146
   40bc4:	00040cac 	andhi	zero,zero,4146
   40bc8:	00040cac 	andhi	zero,zero,4146
   40bcc:	00040cac 	andhi	zero,zero,4146
   40bd0:	00040cac 	andhi	zero,zero,4146
   40bd4:	00040cac 	andhi	zero,zero,4146
   40bd8:	00041304 	movi	zero,4172
   40bdc:	00041970 	cmpltui	zero,zero,4197
   40be0:	00040cac 	andhi	zero,zero,4146
   40be4:	00041970 	cmpltui	zero,zero,4197
   40be8:	00040cac 	andhi	zero,zero,4146
   40bec:	00040cac 	andhi	zero,zero,4146
   40bf0:	00040cac 	andhi	zero,zero,4146
   40bf4:	00040cac 	andhi	zero,zero,4146
   40bf8:	00041ad4 	movui	zero,4203
   40bfc:	00040cac 	andhi	zero,zero,4146
   40c00:	00040cac 	andhi	zero,zero,4146
   40c04:	000413b8 	rdprs	zero,zero,4174
   40c08:	00040cac 	andhi	zero,zero,4146
   40c0c:	00040cac 	andhi	zero,zero,4146
   40c10:	00040cac 	andhi	zero,zero,4146
   40c14:	00040cac 	andhi	zero,zero,4146
   40c18:	00040cac 	andhi	zero,zero,4146
   40c1c:	00041404 	movi	zero,4176
   40c20:	00040cac 	andhi	zero,zero,4146
   40c24:	00040cac 	andhi	zero,zero,4146
   40c28:	00041a24 	muli	zero,zero,4200
   40c2c:	00040cac 	andhi	zero,zero,4146
   40c30:	00040cac 	andhi	zero,zero,4146
   40c34:	00040cac 	andhi	zero,zero,4146
   40c38:	00040cac 	andhi	zero,zero,4146
   40c3c:	00040cac 	andhi	zero,zero,4146
   40c40:	00040cac 	andhi	zero,zero,4146
   40c44:	00040cac 	andhi	zero,zero,4146
   40c48:	00040cac 	andhi	zero,zero,4146
   40c4c:	00040cac 	andhi	zero,zero,4146
   40c50:	00040cac 	andhi	zero,zero,4146
   40c54:	000419f8 	rdprs	zero,zero,4199
   40c58:	00041310 	cmplti	zero,zero,4172
   40c5c:	00041970 	cmpltui	zero,zero,4197
   40c60:	00041970 	cmpltui	zero,zero,4197
   40c64:	00041970 	cmpltui	zero,zero,4197
   40c68:	0004195c 	xori	zero,zero,4197
   40c6c:	00041310 	cmplti	zero,zero,4172
   40c70:	00040cac 	andhi	zero,zero,4146
   40c74:	00040cac 	andhi	zero,zero,4146
   40c78:	000418e4 	muli	zero,zero,4195
   40c7c:	00040cac 	andhi	zero,zero,4146
   40c80:	000418b4 	movhi	zero,4194
   40c84:	000413c4 	movi	zero,4175
   40c88:	00041914 	movui	zero,4196
   40c8c:	00041900 	call	4190 <__alt_mem_onchip_mem-0x3be70>
   40c90:	00040cac 	andhi	zero,zero,4146
   40c94:	00041ba8 	cmpgeui	zero,zero,4206
   40c98:	00040cac 	andhi	zero,zero,4146
   40c9c:	00041410 	cmplti	zero,zero,4176
   40ca0:	00040cac 	andhi	zero,zero,4146
   40ca4:	00040cac 	andhi	zero,zero,4146
   40ca8:	00041a88 	cmpgei	zero,zero,4202
   40cac:	d9014d17 	ldw	r4,1332(sp)
   40cb0:	2000ce26 	beq	r4,zero,40fec <___vfprintf_internal_r+0x6d4>
   40cb4:	01400044 	movi	r5,1
   40cb8:	d9800f04 	addi	r6,sp,60
   40cbc:	d9c14015 	stw	r7,1280(sp)
   40cc0:	d9414515 	stw	r5,1300(sp)
   40cc4:	d9814115 	stw	r6,1284(sp)
   40cc8:	280f883a 	mov	r7,r5
   40ccc:	d9000f05 	stb	r4,60(sp)
   40cd0:	d8000405 	stb	zero,16(sp)
   40cd4:	d8014615 	stw	zero,1304(sp)
   40cd8:	d8c14c17 	ldw	r3,1328(sp)
   40cdc:	1880008c 	andi	r2,r3,2
   40ce0:	1005003a 	cmpeq	r2,r2,zero
   40ce4:	d8815015 	stw	r2,1344(sp)
   40ce8:	1000031e 	bne	r2,zero,40cf8 <___vfprintf_internal_r+0x3e0>
   40cec:	d9014517 	ldw	r4,1300(sp)
   40cf0:	21000084 	addi	r4,r4,2
   40cf4:	d9014515 	stw	r4,1300(sp)
   40cf8:	d9414c17 	ldw	r5,1328(sp)
   40cfc:	2940210c 	andi	r5,r5,132
   40d00:	d9414e15 	stw	r5,1336(sp)
   40d04:	28002d1e 	bne	r5,zero,40dbc <___vfprintf_internal_r+0x4a4>
   40d08:	d9814a17 	ldw	r6,1320(sp)
   40d0c:	d8814517 	ldw	r2,1300(sp)
   40d10:	30a1c83a 	sub	r16,r6,r2
   40d14:	0400290e 	bge	zero,r16,40dbc <___vfprintf_internal_r+0x4a4>
   40d18:	00800404 	movi	r2,16
   40d1c:	14045e0e 	bge	r2,r16,41e98 <___vfprintf_internal_r+0x1580>
   40d20:	dc800e17 	ldw	r18,56(sp)
   40d24:	dc400d17 	ldw	r17,52(sp)
   40d28:	1027883a 	mov	r19,r2
   40d2c:	07000174 	movhi	fp,5
   40d30:	e709d184 	addi	fp,fp,10054
   40d34:	050001c4 	movi	r20,7
   40d38:	00000306 	br	40d48 <___vfprintf_internal_r+0x430>
   40d3c:	843ffc04 	addi	r16,r16,-16
   40d40:	ad400204 	addi	r21,r21,8
   40d44:	9c00130e 	bge	r19,r16,40d94 <___vfprintf_internal_r+0x47c>
   40d48:	94800404 	addi	r18,r18,16
   40d4c:	8c400044 	addi	r17,r17,1
   40d50:	af000015 	stw	fp,0(r21)
   40d54:	acc00115 	stw	r19,4(r21)
   40d58:	dc800e15 	stw	r18,56(sp)
   40d5c:	dc400d15 	stw	r17,52(sp)
   40d60:	a47ff60e 	bge	r20,r17,40d3c <___vfprintf_internal_r+0x424>
   40d64:	d9014f17 	ldw	r4,1340(sp)
   40d68:	b00b883a 	mov	r5,r22
   40d6c:	d9800c04 	addi	r6,sp,48
   40d70:	d9c15115 	stw	r7,1348(sp)
   40d74:	00408c00 	call	408c0 <__sprint_r>
   40d78:	d9c15117 	ldw	r7,1348(sp)
   40d7c:	10009e1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   40d80:	843ffc04 	addi	r16,r16,-16
   40d84:	dc800e17 	ldw	r18,56(sp)
   40d88:	dc400d17 	ldw	r17,52(sp)
   40d8c:	dd401904 	addi	r21,sp,100
   40d90:	9c3fed16 	blt	r19,r16,40d48 <___vfprintf_internal_r+0x430>
   40d94:	9425883a 	add	r18,r18,r16
   40d98:	8c400044 	addi	r17,r17,1
   40d9c:	008001c4 	movi	r2,7
   40da0:	af000015 	stw	fp,0(r21)
   40da4:	ac000115 	stw	r16,4(r21)
   40da8:	dc800e15 	stw	r18,56(sp)
   40dac:	dc400d15 	stw	r17,52(sp)
   40db0:	1441f516 	blt	r2,r17,41588 <___vfprintf_internal_r+0xc70>
   40db4:	ad400204 	addi	r21,r21,8
   40db8:	00000206 	br	40dc4 <___vfprintf_internal_r+0x4ac>
   40dbc:	dc800e17 	ldw	r18,56(sp)
   40dc0:	dc400d17 	ldw	r17,52(sp)
   40dc4:	d8800407 	ldb	r2,16(sp)
   40dc8:	10000b26 	beq	r2,zero,40df8 <___vfprintf_internal_r+0x4e0>
   40dcc:	00800044 	movi	r2,1
   40dd0:	94800044 	addi	r18,r18,1
   40dd4:	8c400044 	addi	r17,r17,1
   40dd8:	a8800115 	stw	r2,4(r21)
   40ddc:	d8c00404 	addi	r3,sp,16
   40de0:	008001c4 	movi	r2,7
   40de4:	a8c00015 	stw	r3,0(r21)
   40de8:	dc800e15 	stw	r18,56(sp)
   40dec:	dc400d15 	stw	r17,52(sp)
   40df0:	1441da16 	blt	r2,r17,4155c <___vfprintf_internal_r+0xc44>
   40df4:	ad400204 	addi	r21,r21,8
   40df8:	d9015017 	ldw	r4,1344(sp)
   40dfc:	20000b1e 	bne	r4,zero,40e2c <___vfprintf_internal_r+0x514>
   40e00:	d8800444 	addi	r2,sp,17
   40e04:	94800084 	addi	r18,r18,2
   40e08:	8c400044 	addi	r17,r17,1
   40e0c:	a8800015 	stw	r2,0(r21)
   40e10:	00c00084 	movi	r3,2
   40e14:	008001c4 	movi	r2,7
   40e18:	a8c00115 	stw	r3,4(r21)
   40e1c:	dc800e15 	stw	r18,56(sp)
   40e20:	dc400d15 	stw	r17,52(sp)
   40e24:	1441c216 	blt	r2,r17,41530 <___vfprintf_internal_r+0xc18>
   40e28:	ad400204 	addi	r21,r21,8
   40e2c:	d9414e17 	ldw	r5,1336(sp)
   40e30:	00802004 	movi	r2,128
   40e34:	2880b126 	beq	r5,r2,410fc <___vfprintf_internal_r+0x7e4>
   40e38:	d8c14617 	ldw	r3,1304(sp)
   40e3c:	19e1c83a 	sub	r16,r3,r7
   40e40:	0400260e 	bge	zero,r16,40edc <___vfprintf_internal_r+0x5c4>
   40e44:	00800404 	movi	r2,16
   40e48:	1403cf0e 	bge	r2,r16,41d88 <___vfprintf_internal_r+0x1470>
   40e4c:	1027883a 	mov	r19,r2
   40e50:	07000174 	movhi	fp,5
   40e54:	e709cd84 	addi	fp,fp,10038
   40e58:	050001c4 	movi	r20,7
   40e5c:	00000306 	br	40e6c <___vfprintf_internal_r+0x554>
   40e60:	843ffc04 	addi	r16,r16,-16
   40e64:	ad400204 	addi	r21,r21,8
   40e68:	9c00130e 	bge	r19,r16,40eb8 <___vfprintf_internal_r+0x5a0>
   40e6c:	94800404 	addi	r18,r18,16
   40e70:	8c400044 	addi	r17,r17,1
   40e74:	af000015 	stw	fp,0(r21)
   40e78:	acc00115 	stw	r19,4(r21)
   40e7c:	dc800e15 	stw	r18,56(sp)
   40e80:	dc400d15 	stw	r17,52(sp)
   40e84:	a47ff60e 	bge	r20,r17,40e60 <___vfprintf_internal_r+0x548>
   40e88:	d9014f17 	ldw	r4,1340(sp)
   40e8c:	b00b883a 	mov	r5,r22
   40e90:	d9800c04 	addi	r6,sp,48
   40e94:	d9c15115 	stw	r7,1348(sp)
   40e98:	00408c00 	call	408c0 <__sprint_r>
   40e9c:	d9c15117 	ldw	r7,1348(sp)
   40ea0:	1000551e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   40ea4:	843ffc04 	addi	r16,r16,-16
   40ea8:	dc800e17 	ldw	r18,56(sp)
   40eac:	dc400d17 	ldw	r17,52(sp)
   40eb0:	dd401904 	addi	r21,sp,100
   40eb4:	9c3fed16 	blt	r19,r16,40e6c <___vfprintf_internal_r+0x554>
   40eb8:	9425883a 	add	r18,r18,r16
   40ebc:	8c400044 	addi	r17,r17,1
   40ec0:	008001c4 	movi	r2,7
   40ec4:	af000015 	stw	fp,0(r21)
   40ec8:	ac000115 	stw	r16,4(r21)
   40ecc:	dc800e15 	stw	r18,56(sp)
   40ed0:	dc400d15 	stw	r17,52(sp)
   40ed4:	14418216 	blt	r2,r17,414e0 <___vfprintf_internal_r+0xbc8>
   40ed8:	ad400204 	addi	r21,r21,8
   40edc:	d9014c17 	ldw	r4,1328(sp)
   40ee0:	2080400c 	andi	r2,r4,256
   40ee4:	10004a1e 	bne	r2,zero,41010 <___vfprintf_internal_r+0x6f8>
   40ee8:	d9414117 	ldw	r5,1284(sp)
   40eec:	91e5883a 	add	r18,r18,r7
   40ef0:	8c400044 	addi	r17,r17,1
   40ef4:	008001c4 	movi	r2,7
   40ef8:	a9400015 	stw	r5,0(r21)
   40efc:	a9c00115 	stw	r7,4(r21)
   40f00:	dc800e15 	stw	r18,56(sp)
   40f04:	dc400d15 	stw	r17,52(sp)
   40f08:	14416716 	blt	r2,r17,414a8 <___vfprintf_internal_r+0xb90>
   40f0c:	a8c00204 	addi	r3,r21,8
   40f10:	d9814c17 	ldw	r6,1328(sp)
   40f14:	3080010c 	andi	r2,r6,4
   40f18:	10002826 	beq	r2,zero,40fbc <___vfprintf_internal_r+0x6a4>
   40f1c:	d8814a17 	ldw	r2,1320(sp)
   40f20:	d9014517 	ldw	r4,1300(sp)
   40f24:	1121c83a 	sub	r16,r2,r4
   40f28:	0400240e 	bge	zero,r16,40fbc <___vfprintf_internal_r+0x6a4>
   40f2c:	00800404 	movi	r2,16
   40f30:	1404550e 	bge	r2,r16,42088 <___vfprintf_internal_r+0x1770>
   40f34:	dc400d17 	ldw	r17,52(sp)
   40f38:	1027883a 	mov	r19,r2
   40f3c:	07000174 	movhi	fp,5
   40f40:	e709d184 	addi	fp,fp,10054
   40f44:	050001c4 	movi	r20,7
   40f48:	00000306 	br	40f58 <___vfprintf_internal_r+0x640>
   40f4c:	843ffc04 	addi	r16,r16,-16
   40f50:	18c00204 	addi	r3,r3,8
   40f54:	9c00110e 	bge	r19,r16,40f9c <___vfprintf_internal_r+0x684>
   40f58:	94800404 	addi	r18,r18,16
   40f5c:	8c400044 	addi	r17,r17,1
   40f60:	1f000015 	stw	fp,0(r3)
   40f64:	1cc00115 	stw	r19,4(r3)
   40f68:	dc800e15 	stw	r18,56(sp)
   40f6c:	dc400d15 	stw	r17,52(sp)
   40f70:	a47ff60e 	bge	r20,r17,40f4c <___vfprintf_internal_r+0x634>
   40f74:	d9014f17 	ldw	r4,1340(sp)
   40f78:	b00b883a 	mov	r5,r22
   40f7c:	d9800c04 	addi	r6,sp,48
   40f80:	00408c00 	call	408c0 <__sprint_r>
   40f84:	10001c1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   40f88:	843ffc04 	addi	r16,r16,-16
   40f8c:	dc800e17 	ldw	r18,56(sp)
   40f90:	dc400d17 	ldw	r17,52(sp)
   40f94:	d8c01904 	addi	r3,sp,100
   40f98:	9c3fef16 	blt	r19,r16,40f58 <___vfprintf_internal_r+0x640>
   40f9c:	9425883a 	add	r18,r18,r16
   40fa0:	8c400044 	addi	r17,r17,1
   40fa4:	008001c4 	movi	r2,7
   40fa8:	1f000015 	stw	fp,0(r3)
   40fac:	1c000115 	stw	r16,4(r3)
   40fb0:	dc800e15 	stw	r18,56(sp)
   40fb4:	dc400d15 	stw	r17,52(sp)
   40fb8:	1440cb16 	blt	r2,r17,412e8 <___vfprintf_internal_r+0x9d0>
   40fbc:	d8814a17 	ldw	r2,1320(sp)
   40fc0:	d9414517 	ldw	r5,1300(sp)
   40fc4:	1140010e 	bge	r2,r5,40fcc <___vfprintf_internal_r+0x6b4>
   40fc8:	2805883a 	mov	r2,r5
   40fcc:	d9814b17 	ldw	r6,1324(sp)
   40fd0:	308d883a 	add	r6,r6,r2
   40fd4:	d9814b15 	stw	r6,1324(sp)
   40fd8:	90013b1e 	bne	r18,zero,414c8 <___vfprintf_internal_r+0xbb0>
   40fdc:	d9c14017 	ldw	r7,1280(sp)
   40fe0:	dd401904 	addi	r21,sp,100
   40fe4:	d8000d15 	stw	zero,52(sp)
   40fe8:	003ea706 	br	40a88 <___vfprintf_internal_r+0x170>
   40fec:	d8800e17 	ldw	r2,56(sp)
   40ff0:	1005451e 	bne	r2,zero,42508 <___vfprintf_internal_r+0x1bf0>
   40ff4:	d8000d15 	stw	zero,52(sp)
   40ff8:	b080030b 	ldhu	r2,12(r22)
   40ffc:	1080100c 	andi	r2,r2,64
   41000:	103e8726 	beq	r2,zero,40a20 <___vfprintf_internal_r+0x108>
   41004:	00bfffc4 	movi	r2,-1
   41008:	d8814b15 	stw	r2,1324(sp)
   4100c:	003e8406 	br	40a20 <___vfprintf_internal_r+0x108>
   41010:	d9814d17 	ldw	r6,1332(sp)
   41014:	00801944 	movi	r2,101
   41018:	11806e16 	blt	r2,r6,411d4 <___vfprintf_internal_r+0x8bc>
   4101c:	d9414717 	ldw	r5,1308(sp)
   41020:	00c00044 	movi	r3,1
   41024:	1943490e 	bge	r3,r5,41d4c <___vfprintf_internal_r+0x1434>
   41028:	d8814117 	ldw	r2,1284(sp)
   4102c:	94800044 	addi	r18,r18,1
   41030:	8c400044 	addi	r17,r17,1
   41034:	a8800015 	stw	r2,0(r21)
   41038:	008001c4 	movi	r2,7
   4103c:	a8c00115 	stw	r3,4(r21)
   41040:	dc800e15 	stw	r18,56(sp)
   41044:	dc400d15 	stw	r17,52(sp)
   41048:	1441ca16 	blt	r2,r17,41774 <___vfprintf_internal_r+0xe5c>
   4104c:	a8c00204 	addi	r3,r21,8
   41050:	d9014917 	ldw	r4,1316(sp)
   41054:	00800044 	movi	r2,1
   41058:	94800044 	addi	r18,r18,1
   4105c:	8c400044 	addi	r17,r17,1
   41060:	18800115 	stw	r2,4(r3)
   41064:	008001c4 	movi	r2,7
   41068:	19000015 	stw	r4,0(r3)
   4106c:	dc800e15 	stw	r18,56(sp)
   41070:	dc400d15 	stw	r17,52(sp)
   41074:	1441b616 	blt	r2,r17,41750 <___vfprintf_internal_r+0xe38>
   41078:	1cc00204 	addi	r19,r3,8
   4107c:	d9014217 	ldw	r4,1288(sp)
   41080:	d9414317 	ldw	r5,1292(sp)
   41084:	000d883a 	mov	r6,zero
   41088:	000f883a 	mov	r7,zero
   4108c:	004e9440 	call	4e944 <__nedf2>
   41090:	10017426 	beq	r2,zero,41664 <___vfprintf_internal_r+0xd4c>
   41094:	d9414717 	ldw	r5,1308(sp)
   41098:	d9814117 	ldw	r6,1284(sp)
   4109c:	8c400044 	addi	r17,r17,1
   410a0:	2c85883a 	add	r2,r5,r18
   410a4:	14bfffc4 	addi	r18,r2,-1
   410a8:	28bfffc4 	addi	r2,r5,-1
   410ac:	30c00044 	addi	r3,r6,1
   410b0:	98800115 	stw	r2,4(r19)
   410b4:	008001c4 	movi	r2,7
   410b8:	98c00015 	stw	r3,0(r19)
   410bc:	dc800e15 	stw	r18,56(sp)
   410c0:	dc400d15 	stw	r17,52(sp)
   410c4:	14418e16 	blt	r2,r17,41700 <___vfprintf_internal_r+0xde8>
   410c8:	9cc00204 	addi	r19,r19,8
   410cc:	d9414817 	ldw	r5,1312(sp)
   410d0:	d8800804 	addi	r2,sp,32
   410d4:	8c400044 	addi	r17,r17,1
   410d8:	9165883a 	add	r18,r18,r5
   410dc:	98800015 	stw	r2,0(r19)
   410e0:	008001c4 	movi	r2,7
   410e4:	99400115 	stw	r5,4(r19)
   410e8:	dc800e15 	stw	r18,56(sp)
   410ec:	dc400d15 	stw	r17,52(sp)
   410f0:	1440ed16 	blt	r2,r17,414a8 <___vfprintf_internal_r+0xb90>
   410f4:	98c00204 	addi	r3,r19,8
   410f8:	003f8506 	br	40f10 <___vfprintf_internal_r+0x5f8>
   410fc:	d9814a17 	ldw	r6,1320(sp)
   41100:	d8814517 	ldw	r2,1300(sp)
   41104:	30a1c83a 	sub	r16,r6,r2
   41108:	043f4b0e 	bge	zero,r16,40e38 <___vfprintf_internal_r+0x520>
   4110c:	00800404 	movi	r2,16
   41110:	14043a0e 	bge	r2,r16,421fc <___vfprintf_internal_r+0x18e4>
   41114:	1027883a 	mov	r19,r2
   41118:	07000174 	movhi	fp,5
   4111c:	e709cd84 	addi	fp,fp,10038
   41120:	050001c4 	movi	r20,7
   41124:	00000306 	br	41134 <___vfprintf_internal_r+0x81c>
   41128:	843ffc04 	addi	r16,r16,-16
   4112c:	ad400204 	addi	r21,r21,8
   41130:	9c00130e 	bge	r19,r16,41180 <___vfprintf_internal_r+0x868>
   41134:	94800404 	addi	r18,r18,16
   41138:	8c400044 	addi	r17,r17,1
   4113c:	af000015 	stw	fp,0(r21)
   41140:	acc00115 	stw	r19,4(r21)
   41144:	dc800e15 	stw	r18,56(sp)
   41148:	dc400d15 	stw	r17,52(sp)
   4114c:	a47ff60e 	bge	r20,r17,41128 <___vfprintf_internal_r+0x810>
   41150:	d9014f17 	ldw	r4,1340(sp)
   41154:	b00b883a 	mov	r5,r22
   41158:	d9800c04 	addi	r6,sp,48
   4115c:	d9c15115 	stw	r7,1348(sp)
   41160:	00408c00 	call	408c0 <__sprint_r>
   41164:	d9c15117 	ldw	r7,1348(sp)
   41168:	103fa31e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   4116c:	843ffc04 	addi	r16,r16,-16
   41170:	dc800e17 	ldw	r18,56(sp)
   41174:	dc400d17 	ldw	r17,52(sp)
   41178:	dd401904 	addi	r21,sp,100
   4117c:	9c3fed16 	blt	r19,r16,41134 <___vfprintf_internal_r+0x81c>
   41180:	9425883a 	add	r18,r18,r16
   41184:	8c400044 	addi	r17,r17,1
   41188:	008001c4 	movi	r2,7
   4118c:	af000015 	stw	fp,0(r21)
   41190:	ac000115 	stw	r16,4(r21)
   41194:	dc800e15 	stw	r18,56(sp)
   41198:	dc400d15 	stw	r17,52(sp)
   4119c:	14416116 	blt	r2,r17,41724 <___vfprintf_internal_r+0xe0c>
   411a0:	ad400204 	addi	r21,r21,8
   411a4:	003f2406 	br	40e38 <___vfprintf_internal_r+0x520>
   411a8:	d9014f17 	ldw	r4,1340(sp)
   411ac:	0045b540 	call	45b54 <__sinit>
   411b0:	d9c15117 	ldw	r7,1348(sp)
   411b4:	003def06 	br	40974 <___vfprintf_internal_r+0x5c>
   411b8:	d9014f17 	ldw	r4,1340(sp)
   411bc:	b00b883a 	mov	r5,r22
   411c0:	d9c15115 	stw	r7,1348(sp)
   411c4:	0043f880 	call	43f88 <__swsetup_r>
   411c8:	d9c15117 	ldw	r7,1348(sp)
   411cc:	103dee26 	beq	r2,zero,40988 <___vfprintf_internal_r+0x70>
   411d0:	003f8c06 	br	41004 <___vfprintf_internal_r+0x6ec>
   411d4:	d9014217 	ldw	r4,1288(sp)
   411d8:	d9414317 	ldw	r5,1292(sp)
   411dc:	000d883a 	mov	r6,zero
   411e0:	000f883a 	mov	r7,zero
   411e4:	004e8bc0 	call	4e8bc <__eqdf2>
   411e8:	1000f21e 	bne	r2,zero,415b4 <___vfprintf_internal_r+0xc9c>
   411ec:	00800174 	movhi	r2,5
   411f0:	1089cd04 	addi	r2,r2,10036
   411f4:	94800044 	addi	r18,r18,1
   411f8:	8c400044 	addi	r17,r17,1
   411fc:	a8800015 	stw	r2,0(r21)
   41200:	00c00044 	movi	r3,1
   41204:	008001c4 	movi	r2,7
   41208:	a8c00115 	stw	r3,4(r21)
   4120c:	dc800e15 	stw	r18,56(sp)
   41210:	dc400d15 	stw	r17,52(sp)
   41214:	14430016 	blt	r2,r17,41e18 <___vfprintf_internal_r+0x1500>
   41218:	a8c00204 	addi	r3,r21,8
   4121c:	d8800517 	ldw	r2,20(sp)
   41220:	d9014717 	ldw	r4,1308(sp)
   41224:	11015c0e 	bge	r2,r4,41798 <___vfprintf_internal_r+0xe80>
   41228:	dc400d17 	ldw	r17,52(sp)
   4122c:	d9814917 	ldw	r6,1316(sp)
   41230:	00800044 	movi	r2,1
   41234:	94800044 	addi	r18,r18,1
   41238:	8c400044 	addi	r17,r17,1
   4123c:	18800115 	stw	r2,4(r3)
   41240:	008001c4 	movi	r2,7
   41244:	19800015 	stw	r6,0(r3)
   41248:	dc800e15 	stw	r18,56(sp)
   4124c:	dc400d15 	stw	r17,52(sp)
   41250:	14431616 	blt	r2,r17,41eac <___vfprintf_internal_r+0x1594>
   41254:	18c00204 	addi	r3,r3,8
   41258:	d8814717 	ldw	r2,1308(sp)
   4125c:	143fffc4 	addi	r16,r2,-1
   41260:	043f2b0e 	bge	zero,r16,40f10 <___vfprintf_internal_r+0x5f8>
   41264:	00800404 	movi	r2,16
   41268:	1402a80e 	bge	r2,r16,41d0c <___vfprintf_internal_r+0x13f4>
   4126c:	dc400d17 	ldw	r17,52(sp)
   41270:	1027883a 	mov	r19,r2
   41274:	07000174 	movhi	fp,5
   41278:	e709cd84 	addi	fp,fp,10038
   4127c:	050001c4 	movi	r20,7
   41280:	00000306 	br	41290 <___vfprintf_internal_r+0x978>
   41284:	18c00204 	addi	r3,r3,8
   41288:	843ffc04 	addi	r16,r16,-16
   4128c:	9c02a20e 	bge	r19,r16,41d18 <___vfprintf_internal_r+0x1400>
   41290:	94800404 	addi	r18,r18,16
   41294:	8c400044 	addi	r17,r17,1
   41298:	1f000015 	stw	fp,0(r3)
   4129c:	1cc00115 	stw	r19,4(r3)
   412a0:	dc800e15 	stw	r18,56(sp)
   412a4:	dc400d15 	stw	r17,52(sp)
   412a8:	a47ff60e 	bge	r20,r17,41284 <___vfprintf_internal_r+0x96c>
   412ac:	d9014f17 	ldw	r4,1340(sp)
   412b0:	b00b883a 	mov	r5,r22
   412b4:	d9800c04 	addi	r6,sp,48
   412b8:	00408c00 	call	408c0 <__sprint_r>
   412bc:	103f4e1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   412c0:	dc800e17 	ldw	r18,56(sp)
   412c4:	dc400d17 	ldw	r17,52(sp)
   412c8:	d8c01904 	addi	r3,sp,100
   412cc:	003fee06 	br	41288 <___vfprintf_internal_r+0x970>
   412d0:	d8802c0b 	ldhu	r2,176(sp)
   412d4:	00ffffc4 	movi	r3,-1
   412d8:	d8c14b15 	stw	r3,1324(sp)
   412dc:	1080100c 	andi	r2,r2,64
   412e0:	103dcc1e 	bne	r2,zero,40a14 <___vfprintf_internal_r+0xfc>
   412e4:	003dce06 	br	40a20 <___vfprintf_internal_r+0x108>
   412e8:	d9014f17 	ldw	r4,1340(sp)
   412ec:	b00b883a 	mov	r5,r22
   412f0:	d9800c04 	addi	r6,sp,48
   412f4:	00408c00 	call	408c0 <__sprint_r>
   412f8:	103f3f1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   412fc:	dc800e17 	ldw	r18,56(sp)
   41300:	003f2e06 	br	40fbc <___vfprintf_internal_r+0x6a4>
   41304:	d9414c17 	ldw	r5,1328(sp)
   41308:	29400414 	ori	r5,r5,16
   4130c:	d9414c15 	stw	r5,1328(sp)
   41310:	d9814c17 	ldw	r6,1328(sp)
   41314:	3080080c 	andi	r2,r6,32
   41318:	10014f1e 	bne	r2,zero,41858 <___vfprintf_internal_r+0xf40>
   4131c:	d8c14c17 	ldw	r3,1328(sp)
   41320:	1880040c 	andi	r2,r3,16
   41324:	1002f01e 	bne	r2,zero,41ee8 <___vfprintf_internal_r+0x15d0>
   41328:	d9014c17 	ldw	r4,1328(sp)
   4132c:	2080100c 	andi	r2,r4,64
   41330:	1002ed26 	beq	r2,zero,41ee8 <___vfprintf_internal_r+0x15d0>
   41334:	3880000f 	ldh	r2,0(r7)
   41338:	39c00104 	addi	r7,r7,4
   4133c:	d9c14015 	stw	r7,1280(sp)
   41340:	1023d7fa 	srai	r17,r2,31
   41344:	1021883a 	mov	r16,r2
   41348:	88037816 	blt	r17,zero,4212c <___vfprintf_internal_r+0x1814>
   4134c:	01000044 	movi	r4,1
   41350:	98000416 	blt	r19,zero,41364 <___vfprintf_internal_r+0xa4c>
   41354:	d8c14c17 	ldw	r3,1328(sp)
   41358:	00bfdfc4 	movi	r2,-129
   4135c:	1886703a 	and	r3,r3,r2
   41360:	d8c14c15 	stw	r3,1328(sp)
   41364:	8444b03a 	or	r2,r16,r17
   41368:	10022c1e 	bne	r2,zero,41c1c <___vfprintf_internal_r+0x1304>
   4136c:	98022b1e 	bne	r19,zero,41c1c <___vfprintf_internal_r+0x1304>
   41370:	20803fcc 	andi	r2,r4,255
   41374:	1002a126 	beq	r2,zero,41dfc <___vfprintf_internal_r+0x14e4>
   41378:	d8c01904 	addi	r3,sp,100
   4137c:	dd000f04 	addi	r20,sp,60
   41380:	d8c14115 	stw	r3,1284(sp)
   41384:	d8c14117 	ldw	r3,1284(sp)
   41388:	dcc14515 	stw	r19,1300(sp)
   4138c:	a0c5c83a 	sub	r2,r20,r3
   41390:	11c00a04 	addi	r7,r2,40
   41394:	99c0010e 	bge	r19,r7,4139c <___vfprintf_internal_r+0xa84>
   41398:	d9c14515 	stw	r7,1300(sp)
   4139c:	dcc14615 	stw	r19,1304(sp)
   413a0:	d8800407 	ldb	r2,16(sp)
   413a4:	103e4c26 	beq	r2,zero,40cd8 <___vfprintf_internal_r+0x3c0>
   413a8:	d8814517 	ldw	r2,1300(sp)
   413ac:	10800044 	addi	r2,r2,1
   413b0:	d8814515 	stw	r2,1300(sp)
   413b4:	003e4806 	br	40cd8 <___vfprintf_internal_r+0x3c0>
   413b8:	d9814c17 	ldw	r6,1328(sp)
   413bc:	31800414 	ori	r6,r6,16
   413c0:	d9814c15 	stw	r6,1328(sp)
   413c4:	d8c14c17 	ldw	r3,1328(sp)
   413c8:	1880080c 	andi	r2,r3,32
   413cc:	1001271e 	bne	r2,zero,4186c <___vfprintf_internal_r+0xf54>
   413d0:	d9414c17 	ldw	r5,1328(sp)
   413d4:	2880040c 	andi	r2,r5,16
   413d8:	1002bc1e 	bne	r2,zero,41ecc <___vfprintf_internal_r+0x15b4>
   413dc:	d9814c17 	ldw	r6,1328(sp)
   413e0:	3080100c 	andi	r2,r6,64
   413e4:	1002b926 	beq	r2,zero,41ecc <___vfprintf_internal_r+0x15b4>
   413e8:	3c00000b 	ldhu	r16,0(r7)
   413ec:	0009883a 	mov	r4,zero
   413f0:	39c00104 	addi	r7,r7,4
   413f4:	0023883a 	mov	r17,zero
   413f8:	d9c14015 	stw	r7,1280(sp)
   413fc:	d8000405 	stb	zero,16(sp)
   41400:	003fd306 	br	41350 <___vfprintf_internal_r+0xa38>
   41404:	d9014c17 	ldw	r4,1328(sp)
   41408:	21000414 	ori	r4,r4,16
   4140c:	d9014c15 	stw	r4,1328(sp)
   41410:	d9414c17 	ldw	r5,1328(sp)
   41414:	2880080c 	andi	r2,r5,32
   41418:	1001081e 	bne	r2,zero,4183c <___vfprintf_internal_r+0xf24>
   4141c:	d8c14c17 	ldw	r3,1328(sp)
   41420:	1880040c 	andi	r2,r3,16
   41424:	1002b61e 	bne	r2,zero,41f00 <___vfprintf_internal_r+0x15e8>
   41428:	d9014c17 	ldw	r4,1328(sp)
   4142c:	2080100c 	andi	r2,r4,64
   41430:	1002b326 	beq	r2,zero,41f00 <___vfprintf_internal_r+0x15e8>
   41434:	3c00000b 	ldhu	r16,0(r7)
   41438:	01000044 	movi	r4,1
   4143c:	39c00104 	addi	r7,r7,4
   41440:	0023883a 	mov	r17,zero
   41444:	d9c14015 	stw	r7,1280(sp)
   41448:	d8000405 	stb	zero,16(sp)
   4144c:	003fc006 	br	41350 <___vfprintf_internal_r+0xa38>
   41450:	d9014f17 	ldw	r4,1340(sp)
   41454:	b00b883a 	mov	r5,r22
   41458:	d9800c04 	addi	r6,sp,48
   4145c:	00408c00 	call	408c0 <__sprint_r>
   41460:	103ee51e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41464:	dc800e17 	ldw	r18,56(sp)
   41468:	d8c01904 	addi	r3,sp,100
   4146c:	d9814c17 	ldw	r6,1328(sp)
   41470:	3080004c 	andi	r2,r6,1
   41474:	1005003a 	cmpeq	r2,r2,zero
   41478:	103ea51e 	bne	r2,zero,40f10 <___vfprintf_internal_r+0x5f8>
   4147c:	00800044 	movi	r2,1
   41480:	dc400d17 	ldw	r17,52(sp)
   41484:	18800115 	stw	r2,4(r3)
   41488:	d8814917 	ldw	r2,1316(sp)
   4148c:	94800044 	addi	r18,r18,1
   41490:	8c400044 	addi	r17,r17,1
   41494:	18800015 	stw	r2,0(r3)
   41498:	008001c4 	movi	r2,7
   4149c:	dc800e15 	stw	r18,56(sp)
   414a0:	dc400d15 	stw	r17,52(sp)
   414a4:	1442240e 	bge	r2,r17,41d38 <___vfprintf_internal_r+0x1420>
   414a8:	d9014f17 	ldw	r4,1340(sp)
   414ac:	b00b883a 	mov	r5,r22
   414b0:	d9800c04 	addi	r6,sp,48
   414b4:	00408c00 	call	408c0 <__sprint_r>
   414b8:	103ecf1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   414bc:	dc800e17 	ldw	r18,56(sp)
   414c0:	d8c01904 	addi	r3,sp,100
   414c4:	003e9206 	br	40f10 <___vfprintf_internal_r+0x5f8>
   414c8:	d9014f17 	ldw	r4,1340(sp)
   414cc:	b00b883a 	mov	r5,r22
   414d0:	d9800c04 	addi	r6,sp,48
   414d4:	00408c00 	call	408c0 <__sprint_r>
   414d8:	103ec026 	beq	r2,zero,40fdc <___vfprintf_internal_r+0x6c4>
   414dc:	003ec606 	br	40ff8 <___vfprintf_internal_r+0x6e0>
   414e0:	d9014f17 	ldw	r4,1340(sp)
   414e4:	b00b883a 	mov	r5,r22
   414e8:	d9800c04 	addi	r6,sp,48
   414ec:	d9c15115 	stw	r7,1348(sp)
   414f0:	00408c00 	call	408c0 <__sprint_r>
   414f4:	d9c15117 	ldw	r7,1348(sp)
   414f8:	103ebf1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   414fc:	dc800e17 	ldw	r18,56(sp)
   41500:	dc400d17 	ldw	r17,52(sp)
   41504:	dd401904 	addi	r21,sp,100
   41508:	003e7406 	br	40edc <___vfprintf_internal_r+0x5c4>
   4150c:	d9014f17 	ldw	r4,1340(sp)
   41510:	b00b883a 	mov	r5,r22
   41514:	d9800c04 	addi	r6,sp,48
   41518:	d9c15115 	stw	r7,1348(sp)
   4151c:	00408c00 	call	408c0 <__sprint_r>
   41520:	d9c15117 	ldw	r7,1348(sp)
   41524:	103eb41e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41528:	dd401904 	addi	r21,sp,100
   4152c:	003d6d06 	br	40ae4 <___vfprintf_internal_r+0x1cc>
   41530:	d9014f17 	ldw	r4,1340(sp)
   41534:	b00b883a 	mov	r5,r22
   41538:	d9800c04 	addi	r6,sp,48
   4153c:	d9c15115 	stw	r7,1348(sp)
   41540:	00408c00 	call	408c0 <__sprint_r>
   41544:	d9c15117 	ldw	r7,1348(sp)
   41548:	103eab1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   4154c:	dc800e17 	ldw	r18,56(sp)
   41550:	dc400d17 	ldw	r17,52(sp)
   41554:	dd401904 	addi	r21,sp,100
   41558:	003e3406 	br	40e2c <___vfprintf_internal_r+0x514>
   4155c:	d9014f17 	ldw	r4,1340(sp)
   41560:	b00b883a 	mov	r5,r22
   41564:	d9800c04 	addi	r6,sp,48
   41568:	d9c15115 	stw	r7,1348(sp)
   4156c:	00408c00 	call	408c0 <__sprint_r>
   41570:	d9c15117 	ldw	r7,1348(sp)
   41574:	103ea01e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41578:	dc800e17 	ldw	r18,56(sp)
   4157c:	dc400d17 	ldw	r17,52(sp)
   41580:	dd401904 	addi	r21,sp,100
   41584:	003e1c06 	br	40df8 <___vfprintf_internal_r+0x4e0>
   41588:	d9014f17 	ldw	r4,1340(sp)
   4158c:	b00b883a 	mov	r5,r22
   41590:	d9800c04 	addi	r6,sp,48
   41594:	d9c15115 	stw	r7,1348(sp)
   41598:	00408c00 	call	408c0 <__sprint_r>
   4159c:	d9c15117 	ldw	r7,1348(sp)
   415a0:	103e951e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   415a4:	dc800e17 	ldw	r18,56(sp)
   415a8:	dc400d17 	ldw	r17,52(sp)
   415ac:	dd401904 	addi	r21,sp,100
   415b0:	003e0406 	br	40dc4 <___vfprintf_internal_r+0x4ac>
   415b4:	d9000517 	ldw	r4,20(sp)
   415b8:	0102580e 	bge	zero,r4,41f1c <___vfprintf_internal_r+0x1604>
   415bc:	d9814717 	ldw	r6,1308(sp)
   415c0:	21807a16 	blt	r4,r6,417ac <___vfprintf_internal_r+0xe94>
   415c4:	d8814117 	ldw	r2,1284(sp)
   415c8:	91a5883a 	add	r18,r18,r6
   415cc:	8c400044 	addi	r17,r17,1
   415d0:	a8800015 	stw	r2,0(r21)
   415d4:	008001c4 	movi	r2,7
   415d8:	a9800115 	stw	r6,4(r21)
   415dc:	dc800e15 	stw	r18,56(sp)
   415e0:	dc400d15 	stw	r17,52(sp)
   415e4:	1442fc16 	blt	r2,r17,421d8 <___vfprintf_internal_r+0x18c0>
   415e8:	a8c00204 	addi	r3,r21,8
   415ec:	d9414717 	ldw	r5,1308(sp)
   415f0:	2161c83a 	sub	r16,r4,r5
   415f4:	043f9d0e 	bge	zero,r16,4146c <___vfprintf_internal_r+0xb54>
   415f8:	00800404 	movi	r2,16
   415fc:	1402190e 	bge	r2,r16,41e64 <___vfprintf_internal_r+0x154c>
   41600:	dc400d17 	ldw	r17,52(sp)
   41604:	1027883a 	mov	r19,r2
   41608:	07000174 	movhi	fp,5
   4160c:	e709cd84 	addi	fp,fp,10038
   41610:	050001c4 	movi	r20,7
   41614:	00000306 	br	41624 <___vfprintf_internal_r+0xd0c>
   41618:	18c00204 	addi	r3,r3,8
   4161c:	843ffc04 	addi	r16,r16,-16
   41620:	9c02130e 	bge	r19,r16,41e70 <___vfprintf_internal_r+0x1558>
   41624:	94800404 	addi	r18,r18,16
   41628:	8c400044 	addi	r17,r17,1
   4162c:	1f000015 	stw	fp,0(r3)
   41630:	1cc00115 	stw	r19,4(r3)
   41634:	dc800e15 	stw	r18,56(sp)
   41638:	dc400d15 	stw	r17,52(sp)
   4163c:	a47ff60e 	bge	r20,r17,41618 <___vfprintf_internal_r+0xd00>
   41640:	d9014f17 	ldw	r4,1340(sp)
   41644:	b00b883a 	mov	r5,r22
   41648:	d9800c04 	addi	r6,sp,48
   4164c:	00408c00 	call	408c0 <__sprint_r>
   41650:	103e691e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41654:	dc800e17 	ldw	r18,56(sp)
   41658:	dc400d17 	ldw	r17,52(sp)
   4165c:	d8c01904 	addi	r3,sp,100
   41660:	003fee06 	br	4161c <___vfprintf_internal_r+0xd04>
   41664:	d8814717 	ldw	r2,1308(sp)
   41668:	143fffc4 	addi	r16,r2,-1
   4166c:	043e970e 	bge	zero,r16,410cc <___vfprintf_internal_r+0x7b4>
   41670:	00800404 	movi	r2,16
   41674:	1400180e 	bge	r2,r16,416d8 <___vfprintf_internal_r+0xdc0>
   41678:	1029883a 	mov	r20,r2
   4167c:	07000174 	movhi	fp,5
   41680:	e709cd84 	addi	fp,fp,10038
   41684:	054001c4 	movi	r21,7
   41688:	00000306 	br	41698 <___vfprintf_internal_r+0xd80>
   4168c:	9cc00204 	addi	r19,r19,8
   41690:	843ffc04 	addi	r16,r16,-16
   41694:	a400120e 	bge	r20,r16,416e0 <___vfprintf_internal_r+0xdc8>
   41698:	94800404 	addi	r18,r18,16
   4169c:	8c400044 	addi	r17,r17,1
   416a0:	9f000015 	stw	fp,0(r19)
   416a4:	9d000115 	stw	r20,4(r19)
   416a8:	dc800e15 	stw	r18,56(sp)
   416ac:	dc400d15 	stw	r17,52(sp)
   416b0:	ac7ff60e 	bge	r21,r17,4168c <___vfprintf_internal_r+0xd74>
   416b4:	d9014f17 	ldw	r4,1340(sp)
   416b8:	b00b883a 	mov	r5,r22
   416bc:	d9800c04 	addi	r6,sp,48
   416c0:	00408c00 	call	408c0 <__sprint_r>
   416c4:	103e4c1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   416c8:	dc800e17 	ldw	r18,56(sp)
   416cc:	dc400d17 	ldw	r17,52(sp)
   416d0:	dcc01904 	addi	r19,sp,100
   416d4:	003fee06 	br	41690 <___vfprintf_internal_r+0xd78>
   416d8:	07000174 	movhi	fp,5
   416dc:	e709cd84 	addi	fp,fp,10038
   416e0:	9425883a 	add	r18,r18,r16
   416e4:	8c400044 	addi	r17,r17,1
   416e8:	008001c4 	movi	r2,7
   416ec:	9f000015 	stw	fp,0(r19)
   416f0:	9c000115 	stw	r16,4(r19)
   416f4:	dc800e15 	stw	r18,56(sp)
   416f8:	dc400d15 	stw	r17,52(sp)
   416fc:	147e720e 	bge	r2,r17,410c8 <___vfprintf_internal_r+0x7b0>
   41700:	d9014f17 	ldw	r4,1340(sp)
   41704:	b00b883a 	mov	r5,r22
   41708:	d9800c04 	addi	r6,sp,48
   4170c:	00408c00 	call	408c0 <__sprint_r>
   41710:	103e391e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41714:	dc800e17 	ldw	r18,56(sp)
   41718:	dc400d17 	ldw	r17,52(sp)
   4171c:	dcc01904 	addi	r19,sp,100
   41720:	003e6a06 	br	410cc <___vfprintf_internal_r+0x7b4>
   41724:	d9014f17 	ldw	r4,1340(sp)
   41728:	b00b883a 	mov	r5,r22
   4172c:	d9800c04 	addi	r6,sp,48
   41730:	d9c15115 	stw	r7,1348(sp)
   41734:	00408c00 	call	408c0 <__sprint_r>
   41738:	d9c15117 	ldw	r7,1348(sp)
   4173c:	103e2e1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41740:	dc800e17 	ldw	r18,56(sp)
   41744:	dc400d17 	ldw	r17,52(sp)
   41748:	dd401904 	addi	r21,sp,100
   4174c:	003dba06 	br	40e38 <___vfprintf_internal_r+0x520>
   41750:	d9014f17 	ldw	r4,1340(sp)
   41754:	b00b883a 	mov	r5,r22
   41758:	d9800c04 	addi	r6,sp,48
   4175c:	00408c00 	call	408c0 <__sprint_r>
   41760:	103e251e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41764:	dc800e17 	ldw	r18,56(sp)
   41768:	dc400d17 	ldw	r17,52(sp)
   4176c:	dcc01904 	addi	r19,sp,100
   41770:	003e4206 	br	4107c <___vfprintf_internal_r+0x764>
   41774:	d9014f17 	ldw	r4,1340(sp)
   41778:	b00b883a 	mov	r5,r22
   4177c:	d9800c04 	addi	r6,sp,48
   41780:	00408c00 	call	408c0 <__sprint_r>
   41784:	103e1c1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41788:	dc800e17 	ldw	r18,56(sp)
   4178c:	dc400d17 	ldw	r17,52(sp)
   41790:	d8c01904 	addi	r3,sp,100
   41794:	003e2e06 	br	41050 <___vfprintf_internal_r+0x738>
   41798:	d9414c17 	ldw	r5,1328(sp)
   4179c:	2880004c 	andi	r2,r5,1
   417a0:	1005003a 	cmpeq	r2,r2,zero
   417a4:	103dda1e 	bne	r2,zero,40f10 <___vfprintf_internal_r+0x5f8>
   417a8:	003e9f06 	br	41228 <___vfprintf_internal_r+0x910>
   417ac:	d8c14117 	ldw	r3,1284(sp)
   417b0:	9125883a 	add	r18,r18,r4
   417b4:	8c400044 	addi	r17,r17,1
   417b8:	008001c4 	movi	r2,7
   417bc:	a8c00015 	stw	r3,0(r21)
   417c0:	a9000115 	stw	r4,4(r21)
   417c4:	dc800e15 	stw	r18,56(sp)
   417c8:	dc400d15 	stw	r17,52(sp)
   417cc:	14426c16 	blt	r2,r17,42180 <___vfprintf_internal_r+0x1868>
   417d0:	a8c00204 	addi	r3,r21,8
   417d4:	d9414917 	ldw	r5,1316(sp)
   417d8:	00800044 	movi	r2,1
   417dc:	94800044 	addi	r18,r18,1
   417e0:	8c400044 	addi	r17,r17,1
   417e4:	18800115 	stw	r2,4(r3)
   417e8:	008001c4 	movi	r2,7
   417ec:	19400015 	stw	r5,0(r3)
   417f0:	dc800e15 	stw	r18,56(sp)
   417f4:	dc400d15 	stw	r17,52(sp)
   417f8:	2021883a 	mov	r16,r4
   417fc:	14425616 	blt	r2,r17,42158 <___vfprintf_internal_r+0x1840>
   41800:	19400204 	addi	r5,r3,8
   41804:	d9814717 	ldw	r6,1308(sp)
   41808:	8c400044 	addi	r17,r17,1
   4180c:	dc400d15 	stw	r17,52(sp)
   41810:	3107c83a 	sub	r3,r6,r4
   41814:	d9014117 	ldw	r4,1284(sp)
   41818:	90e5883a 	add	r18,r18,r3
   4181c:	28c00115 	stw	r3,4(r5)
   41820:	8105883a 	add	r2,r16,r4
   41824:	28800015 	stw	r2,0(r5)
   41828:	008001c4 	movi	r2,7
   4182c:	dc800e15 	stw	r18,56(sp)
   41830:	147f1d16 	blt	r2,r17,414a8 <___vfprintf_internal_r+0xb90>
   41834:	28c00204 	addi	r3,r5,8
   41838:	003db506 	br	40f10 <___vfprintf_internal_r+0x5f8>
   4183c:	3c000017 	ldw	r16,0(r7)
   41840:	3c400117 	ldw	r17,4(r7)
   41844:	39800204 	addi	r6,r7,8
   41848:	01000044 	movi	r4,1
   4184c:	d9814015 	stw	r6,1280(sp)
   41850:	d8000405 	stb	zero,16(sp)
   41854:	003ebe06 	br	41350 <___vfprintf_internal_r+0xa38>
   41858:	3c000017 	ldw	r16,0(r7)
   4185c:	3c400117 	ldw	r17,4(r7)
   41860:	38800204 	addi	r2,r7,8
   41864:	d8814015 	stw	r2,1280(sp)
   41868:	003eb706 	br	41348 <___vfprintf_internal_r+0xa30>
   4186c:	3c000017 	ldw	r16,0(r7)
   41870:	3c400117 	ldw	r17,4(r7)
   41874:	39000204 	addi	r4,r7,8
   41878:	d9014015 	stw	r4,1280(sp)
   4187c:	0009883a 	mov	r4,zero
   41880:	d8000405 	stb	zero,16(sp)
   41884:	003eb206 	br	41350 <___vfprintf_internal_r+0xa38>
   41888:	38c00017 	ldw	r3,0(r7)
   4188c:	39c00104 	addi	r7,r7,4
   41890:	d8c14a15 	stw	r3,1320(sp)
   41894:	1800d70e 	bge	r3,zero,41bf4 <___vfprintf_internal_r+0x12dc>
   41898:	00c7c83a 	sub	r3,zero,r3
   4189c:	d8c14a15 	stw	r3,1320(sp)
   418a0:	d9014c17 	ldw	r4,1328(sp)
   418a4:	b8c00007 	ldb	r3,0(r23)
   418a8:	21000114 	ori	r4,r4,4
   418ac:	d9014c15 	stw	r4,1328(sp)
   418b0:	003c9806 	br	40b14 <___vfprintf_internal_r+0x1fc>
   418b4:	d9814c17 	ldw	r6,1328(sp)
   418b8:	3080080c 	andi	r2,r6,32
   418bc:	1001f626 	beq	r2,zero,42098 <___vfprintf_internal_r+0x1780>
   418c0:	d9014b17 	ldw	r4,1324(sp)
   418c4:	38800017 	ldw	r2,0(r7)
   418c8:	39c00104 	addi	r7,r7,4
   418cc:	d9c14015 	stw	r7,1280(sp)
   418d0:	2007d7fa 	srai	r3,r4,31
   418d4:	d9c14017 	ldw	r7,1280(sp)
   418d8:	11000015 	stw	r4,0(r2)
   418dc:	10c00115 	stw	r3,4(r2)
   418e0:	003c6906 	br	40a88 <___vfprintf_internal_r+0x170>
   418e4:	b8c00007 	ldb	r3,0(r23)
   418e8:	00801b04 	movi	r2,108
   418ec:	18825526 	beq	r3,r2,42244 <___vfprintf_internal_r+0x192c>
   418f0:	d9414c17 	ldw	r5,1328(sp)
   418f4:	29400414 	ori	r5,r5,16
   418f8:	d9414c15 	stw	r5,1328(sp)
   418fc:	003c8506 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41900:	d9814c17 	ldw	r6,1328(sp)
   41904:	b8c00007 	ldb	r3,0(r23)
   41908:	31800814 	ori	r6,r6,32
   4190c:	d9814c15 	stw	r6,1328(sp)
   41910:	003c8006 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41914:	d8814c17 	ldw	r2,1328(sp)
   41918:	3c000017 	ldw	r16,0(r7)
   4191c:	00c01e04 	movi	r3,120
   41920:	10800094 	ori	r2,r2,2
   41924:	d8814c15 	stw	r2,1328(sp)
   41928:	39c00104 	addi	r7,r7,4
   4192c:	01400174 	movhi	r5,5
   41930:	2949b604 	addi	r5,r5,9944
   41934:	00800c04 	movi	r2,48
   41938:	0023883a 	mov	r17,zero
   4193c:	01000084 	movi	r4,2
   41940:	d9c14015 	stw	r7,1280(sp)
   41944:	d8c14d15 	stw	r3,1332(sp)
   41948:	d9414415 	stw	r5,1296(sp)
   4194c:	d8800445 	stb	r2,17(sp)
   41950:	d8c00485 	stb	r3,18(sp)
   41954:	d8000405 	stb	zero,16(sp)
   41958:	003e7d06 	br	41350 <___vfprintf_internal_r+0xa38>
   4195c:	d8814c17 	ldw	r2,1328(sp)
   41960:	b8c00007 	ldb	r3,0(r23)
   41964:	10801014 	ori	r2,r2,64
   41968:	d8814c15 	stw	r2,1328(sp)
   4196c:	003c6906 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41970:	d9414c17 	ldw	r5,1328(sp)
   41974:	2880020c 	andi	r2,r5,8
   41978:	1001e526 	beq	r2,zero,42110 <___vfprintf_internal_r+0x17f8>
   4197c:	39800017 	ldw	r6,0(r7)
   41980:	38800204 	addi	r2,r7,8
   41984:	d8814015 	stw	r2,1280(sp)
   41988:	d9814215 	stw	r6,1288(sp)
   4198c:	39c00117 	ldw	r7,4(r7)
   41990:	d9c14315 	stw	r7,1292(sp)
   41994:	d9014217 	ldw	r4,1288(sp)
   41998:	d9414317 	ldw	r5,1292(sp)
   4199c:	00492940 	call	49294 <__isinfd>
   419a0:	10021d26 	beq	r2,zero,42218 <___vfprintf_internal_r+0x1900>
   419a4:	d9014217 	ldw	r4,1288(sp)
   419a8:	d9414317 	ldw	r5,1292(sp)
   419ac:	000d883a 	mov	r6,zero
   419b0:	000f883a 	mov	r7,zero
   419b4:	004eadc0 	call	4eadc <__ltdf2>
   419b8:	1002d016 	blt	r2,zero,424fc <___vfprintf_internal_r+0x1be4>
   419bc:	d9414d17 	ldw	r5,1332(sp)
   419c0:	008011c4 	movi	r2,71
   419c4:	11421016 	blt	r2,r5,42208 <___vfprintf_internal_r+0x18f0>
   419c8:	01800174 	movhi	r6,5
   419cc:	3189bb04 	addi	r6,r6,9964
   419d0:	d9814115 	stw	r6,1284(sp)
   419d4:	d9014c17 	ldw	r4,1328(sp)
   419d8:	00c000c4 	movi	r3,3
   419dc:	00bfdfc4 	movi	r2,-129
   419e0:	2088703a 	and	r4,r4,r2
   419e4:	180f883a 	mov	r7,r3
   419e8:	d8c14515 	stw	r3,1300(sp)
   419ec:	d9014c15 	stw	r4,1328(sp)
   419f0:	d8014615 	stw	zero,1304(sp)
   419f4:	003e6a06 	br	413a0 <___vfprintf_internal_r+0xa88>
   419f8:	38800017 	ldw	r2,0(r7)
   419fc:	00c00044 	movi	r3,1
   41a00:	39c00104 	addi	r7,r7,4
   41a04:	d9c14015 	stw	r7,1280(sp)
   41a08:	d9000f04 	addi	r4,sp,60
   41a0c:	180f883a 	mov	r7,r3
   41a10:	d8c14515 	stw	r3,1300(sp)
   41a14:	d9014115 	stw	r4,1284(sp)
   41a18:	d8800f05 	stb	r2,60(sp)
   41a1c:	d8000405 	stb	zero,16(sp)
   41a20:	003cac06 	br	40cd4 <___vfprintf_internal_r+0x3bc>
   41a24:	01400174 	movhi	r5,5
   41a28:	2949c104 	addi	r5,r5,9988
   41a2c:	d9414415 	stw	r5,1296(sp)
   41a30:	d9814c17 	ldw	r6,1328(sp)
   41a34:	3080080c 	andi	r2,r6,32
   41a38:	1000ff26 	beq	r2,zero,41e38 <___vfprintf_internal_r+0x1520>
   41a3c:	3c000017 	ldw	r16,0(r7)
   41a40:	3c400117 	ldw	r17,4(r7)
   41a44:	38800204 	addi	r2,r7,8
   41a48:	d8814015 	stw	r2,1280(sp)
   41a4c:	d9414c17 	ldw	r5,1328(sp)
   41a50:	2880004c 	andi	r2,r5,1
   41a54:	1005003a 	cmpeq	r2,r2,zero
   41a58:	1000b91e 	bne	r2,zero,41d40 <___vfprintf_internal_r+0x1428>
   41a5c:	8444b03a 	or	r2,r16,r17
   41a60:	1000b726 	beq	r2,zero,41d40 <___vfprintf_internal_r+0x1428>
   41a64:	d9814d17 	ldw	r6,1332(sp)
   41a68:	29400094 	ori	r5,r5,2
   41a6c:	00800c04 	movi	r2,48
   41a70:	01000084 	movi	r4,2
   41a74:	d9414c15 	stw	r5,1328(sp)
   41a78:	d8800445 	stb	r2,17(sp)
   41a7c:	d9800485 	stb	r6,18(sp)
   41a80:	d8000405 	stb	zero,16(sp)
   41a84:	003e3206 	br	41350 <___vfprintf_internal_r+0xa38>
   41a88:	01800174 	movhi	r6,5
   41a8c:	3189b604 	addi	r6,r6,9944
   41a90:	d9814415 	stw	r6,1296(sp)
   41a94:	003fe606 	br	41a30 <___vfprintf_internal_r+0x1118>
   41a98:	00800ac4 	movi	r2,43
   41a9c:	d8800405 	stb	r2,16(sp)
   41aa0:	b8c00007 	ldb	r3,0(r23)
   41aa4:	003c1b06 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41aa8:	d8814c17 	ldw	r2,1328(sp)
   41aac:	b8c00007 	ldb	r3,0(r23)
   41ab0:	10800054 	ori	r2,r2,1
   41ab4:	d8814c15 	stw	r2,1328(sp)
   41ab8:	003c1606 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41abc:	d8800407 	ldb	r2,16(sp)
   41ac0:	10004c1e 	bne	r2,zero,41bf4 <___vfprintf_internal_r+0x12dc>
   41ac4:	00800804 	movi	r2,32
   41ac8:	d8800405 	stb	r2,16(sp)
   41acc:	b8c00007 	ldb	r3,0(r23)
   41ad0:	003c1006 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41ad4:	d9814c17 	ldw	r6,1328(sp)
   41ad8:	b8c00007 	ldb	r3,0(r23)
   41adc:	31800214 	ori	r6,r6,8
   41ae0:	d9814c15 	stw	r6,1328(sp)
   41ae4:	003c0b06 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41ae8:	0009883a 	mov	r4,zero
   41aec:	04000244 	movi	r16,9
   41af0:	01400284 	movi	r5,10
   41af4:	d9c15115 	stw	r7,1348(sp)
   41af8:	004f1100 	call	4f110 <__mulsi3>
   41afc:	b9000007 	ldb	r4,0(r23)
   41b00:	d8c14d17 	ldw	r3,1332(sp)
   41b04:	bdc00044 	addi	r23,r23,1
   41b08:	d9014d15 	stw	r4,1332(sp)
   41b0c:	d9414d17 	ldw	r5,1332(sp)
   41b10:	1885883a 	add	r2,r3,r2
   41b14:	113ff404 	addi	r4,r2,-48
   41b18:	28bff404 	addi	r2,r5,-48
   41b1c:	d9c15117 	ldw	r7,1348(sp)
   41b20:	80bff32e 	bgeu	r16,r2,41af0 <___vfprintf_internal_r+0x11d8>
   41b24:	d9014a15 	stw	r4,1320(sp)
   41b28:	003bfc06 	br	40b1c <___vfprintf_internal_r+0x204>
   41b2c:	d8814c17 	ldw	r2,1328(sp)
   41b30:	b8c00007 	ldb	r3,0(r23)
   41b34:	10802014 	ori	r2,r2,128
   41b38:	d8814c15 	stw	r2,1328(sp)
   41b3c:	003bf506 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41b40:	b8c00007 	ldb	r3,0(r23)
   41b44:	00800a84 	movi	r2,42
   41b48:	bdc00044 	addi	r23,r23,1
   41b4c:	18831826 	beq	r3,r2,427b0 <___vfprintf_internal_r+0x1e98>
   41b50:	d8c14d15 	stw	r3,1332(sp)
   41b54:	18bff404 	addi	r2,r3,-48
   41b58:	00c00244 	movi	r3,9
   41b5c:	18827b36 	bltu	r3,r2,4254c <___vfprintf_internal_r+0x1c34>
   41b60:	1821883a 	mov	r16,r3
   41b64:	0009883a 	mov	r4,zero
   41b68:	01400284 	movi	r5,10
   41b6c:	d9c15115 	stw	r7,1348(sp)
   41b70:	004f1100 	call	4f110 <__mulsi3>
   41b74:	d9414d17 	ldw	r5,1332(sp)
   41b78:	b9800007 	ldb	r6,0(r23)
   41b7c:	d9c15117 	ldw	r7,1348(sp)
   41b80:	1145883a 	add	r2,r2,r5
   41b84:	113ff404 	addi	r4,r2,-48
   41b88:	30bff404 	addi	r2,r6,-48
   41b8c:	d9814d15 	stw	r6,1332(sp)
   41b90:	bdc00044 	addi	r23,r23,1
   41b94:	80bff42e 	bgeu	r16,r2,41b68 <___vfprintf_internal_r+0x1250>
   41b98:	2027883a 	mov	r19,r4
   41b9c:	203bdf0e 	bge	r4,zero,40b1c <___vfprintf_internal_r+0x204>
   41ba0:	04ffffc4 	movi	r19,-1
   41ba4:	003bdd06 	br	40b1c <___vfprintf_internal_r+0x204>
   41ba8:	d8000405 	stb	zero,16(sp)
   41bac:	39800017 	ldw	r6,0(r7)
   41bb0:	39c00104 	addi	r7,r7,4
   41bb4:	d9c14015 	stw	r7,1280(sp)
   41bb8:	d9814115 	stw	r6,1284(sp)
   41bbc:	3001c926 	beq	r6,zero,422e4 <___vfprintf_internal_r+0x19cc>
   41bc0:	98000e16 	blt	r19,zero,41bfc <___vfprintf_internal_r+0x12e4>
   41bc4:	d9014117 	ldw	r4,1284(sp)
   41bc8:	000b883a 	mov	r5,zero
   41bcc:	980d883a 	mov	r6,r19
   41bd0:	004754c0 	call	4754c <memchr>
   41bd4:	10025926 	beq	r2,zero,4253c <___vfprintf_internal_r+0x1c24>
   41bd8:	d8c14117 	ldw	r3,1284(sp)
   41bdc:	10cfc83a 	sub	r7,r2,r3
   41be0:	99c19e16 	blt	r19,r7,4225c <___vfprintf_internal_r+0x1944>
   41be4:	d9c14515 	stw	r7,1300(sp)
   41be8:	38000916 	blt	r7,zero,41c10 <___vfprintf_internal_r+0x12f8>
   41bec:	d8014615 	stw	zero,1304(sp)
   41bf0:	003deb06 	br	413a0 <___vfprintf_internal_r+0xa88>
   41bf4:	b8c00007 	ldb	r3,0(r23)
   41bf8:	003bc606 	br	40b14 <___vfprintf_internal_r+0x1fc>
   41bfc:	d9014117 	ldw	r4,1284(sp)
   41c00:	004084c0 	call	4084c <strlen>
   41c04:	d8814515 	stw	r2,1300(sp)
   41c08:	100f883a 	mov	r7,r2
   41c0c:	103ff70e 	bge	r2,zero,41bec <___vfprintf_internal_r+0x12d4>
   41c10:	d8014515 	stw	zero,1300(sp)
   41c14:	d8014615 	stw	zero,1304(sp)
   41c18:	003de106 	br	413a0 <___vfprintf_internal_r+0xa88>
   41c1c:	20c03fcc 	andi	r3,r4,255
   41c20:	00800044 	movi	r2,1
   41c24:	18802d26 	beq	r3,r2,41cdc <___vfprintf_internal_r+0x13c4>
   41c28:	18800e36 	bltu	r3,r2,41c64 <___vfprintf_internal_r+0x134c>
   41c2c:	00800084 	movi	r2,2
   41c30:	1880fa26 	beq	r3,r2,4201c <___vfprintf_internal_r+0x1704>
   41c34:	01000174 	movhi	r4,5
   41c38:	2109c604 	addi	r4,r4,10008
   41c3c:	004084c0 	call	4084c <strlen>
   41c40:	100f883a 	mov	r7,r2
   41c44:	dcc14515 	stw	r19,1300(sp)
   41c48:	9880010e 	bge	r19,r2,41c50 <___vfprintf_internal_r+0x1338>
   41c4c:	d8814515 	stw	r2,1300(sp)
   41c50:	00800174 	movhi	r2,5
   41c54:	1089c604 	addi	r2,r2,10008
   41c58:	dcc14615 	stw	r19,1304(sp)
   41c5c:	d8814115 	stw	r2,1284(sp)
   41c60:	003dcf06 	br	413a0 <___vfprintf_internal_r+0xa88>
   41c64:	d9401904 	addi	r5,sp,100
   41c68:	dd000f04 	addi	r20,sp,60
   41c6c:	d9414115 	stw	r5,1284(sp)
   41c70:	880a977a 	slli	r5,r17,29
   41c74:	d9814117 	ldw	r6,1284(sp)
   41c78:	8004d0fa 	srli	r2,r16,3
   41c7c:	8806d0fa 	srli	r3,r17,3
   41c80:	810001cc 	andi	r4,r16,7
   41c84:	2884b03a 	or	r2,r5,r2
   41c88:	31bfffc4 	addi	r6,r6,-1
   41c8c:	21000c04 	addi	r4,r4,48
   41c90:	d9814115 	stw	r6,1284(sp)
   41c94:	10cab03a 	or	r5,r2,r3
   41c98:	31000005 	stb	r4,0(r6)
   41c9c:	1021883a 	mov	r16,r2
   41ca0:	1823883a 	mov	r17,r3
   41ca4:	283ff21e 	bne	r5,zero,41c70 <___vfprintf_internal_r+0x1358>
   41ca8:	d8c14c17 	ldw	r3,1328(sp)
   41cac:	1880004c 	andi	r2,r3,1
   41cb0:	1005003a 	cmpeq	r2,r2,zero
   41cb4:	103db31e 	bne	r2,zero,41384 <___vfprintf_internal_r+0xa6c>
   41cb8:	20803fcc 	andi	r2,r4,255
   41cbc:	1080201c 	xori	r2,r2,128
   41cc0:	10bfe004 	addi	r2,r2,-128
   41cc4:	00c00c04 	movi	r3,48
   41cc8:	10fdae26 	beq	r2,r3,41384 <___vfprintf_internal_r+0xa6c>
   41ccc:	31bfffc4 	addi	r6,r6,-1
   41cd0:	d9814115 	stw	r6,1284(sp)
   41cd4:	30c00005 	stb	r3,0(r6)
   41cd8:	003daa06 	br	41384 <___vfprintf_internal_r+0xa6c>
   41cdc:	88800068 	cmpgeui	r2,r17,1
   41ce0:	10002c1e 	bne	r2,zero,41d94 <___vfprintf_internal_r+0x147c>
   41ce4:	8800021e 	bne	r17,zero,41cf0 <___vfprintf_internal_r+0x13d8>
   41ce8:	00800244 	movi	r2,9
   41cec:	14002936 	bltu	r2,r16,41d94 <___vfprintf_internal_r+0x147c>
   41cf0:	d90018c4 	addi	r4,sp,99
   41cf4:	dd000f04 	addi	r20,sp,60
   41cf8:	d9014115 	stw	r4,1284(sp)
   41cfc:	d9014117 	ldw	r4,1284(sp)
   41d00:	80800c04 	addi	r2,r16,48
   41d04:	20800005 	stb	r2,0(r4)
   41d08:	003d9e06 	br	41384 <___vfprintf_internal_r+0xa6c>
   41d0c:	dc400d17 	ldw	r17,52(sp)
   41d10:	07000174 	movhi	fp,5
   41d14:	e709cd84 	addi	fp,fp,10038
   41d18:	9425883a 	add	r18,r18,r16
   41d1c:	8c400044 	addi	r17,r17,1
   41d20:	008001c4 	movi	r2,7
   41d24:	1f000015 	stw	fp,0(r3)
   41d28:	1c000115 	stw	r16,4(r3)
   41d2c:	dc800e15 	stw	r18,56(sp)
   41d30:	dc400d15 	stw	r17,52(sp)
   41d34:	147ddc16 	blt	r2,r17,414a8 <___vfprintf_internal_r+0xb90>
   41d38:	18c00204 	addi	r3,r3,8
   41d3c:	003c7406 	br	40f10 <___vfprintf_internal_r+0x5f8>
   41d40:	01000084 	movi	r4,2
   41d44:	d8000405 	stb	zero,16(sp)
   41d48:	003d8106 	br	41350 <___vfprintf_internal_r+0xa38>
   41d4c:	d9814c17 	ldw	r6,1328(sp)
   41d50:	30c4703a 	and	r2,r6,r3
   41d54:	1005003a 	cmpeq	r2,r2,zero
   41d58:	103cb326 	beq	r2,zero,41028 <___vfprintf_internal_r+0x710>
   41d5c:	d9014117 	ldw	r4,1284(sp)
   41d60:	94800044 	addi	r18,r18,1
   41d64:	8c400044 	addi	r17,r17,1
   41d68:	008001c4 	movi	r2,7
   41d6c:	a9000015 	stw	r4,0(r21)
   41d70:	a8c00115 	stw	r3,4(r21)
   41d74:	dc800e15 	stw	r18,56(sp)
   41d78:	dc400d15 	stw	r17,52(sp)
   41d7c:	147e6016 	blt	r2,r17,41700 <___vfprintf_internal_r+0xde8>
   41d80:	acc00204 	addi	r19,r21,8
   41d84:	003cd106 	br	410cc <___vfprintf_internal_r+0x7b4>
   41d88:	07000174 	movhi	fp,5
   41d8c:	e709cd84 	addi	fp,fp,10038
   41d90:	003c4906 	br	40eb8 <___vfprintf_internal_r+0x5a0>
   41d94:	dd000f04 	addi	r20,sp,60
   41d98:	dc801904 	addi	r18,sp,100
   41d9c:	8009883a 	mov	r4,r16
   41da0:	880b883a 	mov	r5,r17
   41da4:	01800284 	movi	r6,10
   41da8:	000f883a 	mov	r7,zero
   41dac:	004d5d40 	call	4d5d4 <__umoddi3>
   41db0:	12000c04 	addi	r8,r2,48
   41db4:	94bfffc4 	addi	r18,r18,-1
   41db8:	8009883a 	mov	r4,r16
   41dbc:	880b883a 	mov	r5,r17
   41dc0:	01800284 	movi	r6,10
   41dc4:	000f883a 	mov	r7,zero
   41dc8:	92000005 	stb	r8,0(r18)
   41dcc:	004cf680 	call	4cf68 <__udivdi3>
   41dd0:	1009883a 	mov	r4,r2
   41dd4:	1021883a 	mov	r16,r2
   41dd8:	18800068 	cmpgeui	r2,r3,1
   41ddc:	1823883a 	mov	r17,r3
   41de0:	103fee1e 	bne	r2,zero,41d9c <___vfprintf_internal_r+0x1484>
   41de4:	1800021e 	bne	r3,zero,41df0 <___vfprintf_internal_r+0x14d8>
   41de8:	00800244 	movi	r2,9
   41dec:	113feb36 	bltu	r2,r4,41d9c <___vfprintf_internal_r+0x1484>
   41df0:	94bfffc4 	addi	r18,r18,-1
   41df4:	dc814115 	stw	r18,1284(sp)
   41df8:	003fc006 	br	41cfc <___vfprintf_internal_r+0x13e4>
   41dfc:	d9014c17 	ldw	r4,1328(sp)
   41e00:	2080004c 	andi	r2,r4,1
   41e04:	10009a1e 	bne	r2,zero,42070 <___vfprintf_internal_r+0x1758>
   41e08:	d9401904 	addi	r5,sp,100
   41e0c:	dd000f04 	addi	r20,sp,60
   41e10:	d9414115 	stw	r5,1284(sp)
   41e14:	003d5b06 	br	41384 <___vfprintf_internal_r+0xa6c>
   41e18:	d9014f17 	ldw	r4,1340(sp)
   41e1c:	b00b883a 	mov	r5,r22
   41e20:	d9800c04 	addi	r6,sp,48
   41e24:	00408c00 	call	408c0 <__sprint_r>
   41e28:	103c731e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41e2c:	dc800e17 	ldw	r18,56(sp)
   41e30:	d8c01904 	addi	r3,sp,100
   41e34:	003cf906 	br	4121c <___vfprintf_internal_r+0x904>
   41e38:	d8c14c17 	ldw	r3,1328(sp)
   41e3c:	1880040c 	andi	r2,r3,16
   41e40:	1000711e 	bne	r2,zero,42008 <___vfprintf_internal_r+0x16f0>
   41e44:	d9014c17 	ldw	r4,1328(sp)
   41e48:	2080100c 	andi	r2,r4,64
   41e4c:	10006e26 	beq	r2,zero,42008 <___vfprintf_internal_r+0x16f0>
   41e50:	3c00000b 	ldhu	r16,0(r7)
   41e54:	0023883a 	mov	r17,zero
   41e58:	39c00104 	addi	r7,r7,4
   41e5c:	d9c14015 	stw	r7,1280(sp)
   41e60:	003efa06 	br	41a4c <___vfprintf_internal_r+0x1134>
   41e64:	dc400d17 	ldw	r17,52(sp)
   41e68:	07000174 	movhi	fp,5
   41e6c:	e709cd84 	addi	fp,fp,10038
   41e70:	9425883a 	add	r18,r18,r16
   41e74:	8c400044 	addi	r17,r17,1
   41e78:	008001c4 	movi	r2,7
   41e7c:	1f000015 	stw	fp,0(r3)
   41e80:	1c000115 	stw	r16,4(r3)
   41e84:	dc800e15 	stw	r18,56(sp)
   41e88:	dc400d15 	stw	r17,52(sp)
   41e8c:	147d7016 	blt	r2,r17,41450 <___vfprintf_internal_r+0xb38>
   41e90:	18c00204 	addi	r3,r3,8
   41e94:	003d7506 	br	4146c <___vfprintf_internal_r+0xb54>
   41e98:	dc800e17 	ldw	r18,56(sp)
   41e9c:	dc400d17 	ldw	r17,52(sp)
   41ea0:	07000174 	movhi	fp,5
   41ea4:	e709d184 	addi	fp,fp,10054
   41ea8:	003bba06 	br	40d94 <___vfprintf_internal_r+0x47c>
   41eac:	d9014f17 	ldw	r4,1340(sp)
   41eb0:	b00b883a 	mov	r5,r22
   41eb4:	d9800c04 	addi	r6,sp,48
   41eb8:	00408c00 	call	408c0 <__sprint_r>
   41ebc:	103c4e1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41ec0:	dc800e17 	ldw	r18,56(sp)
   41ec4:	d8c01904 	addi	r3,sp,100
   41ec8:	003ce306 	br	41258 <___vfprintf_internal_r+0x940>
   41ecc:	3c000017 	ldw	r16,0(r7)
   41ed0:	0009883a 	mov	r4,zero
   41ed4:	39c00104 	addi	r7,r7,4
   41ed8:	0023883a 	mov	r17,zero
   41edc:	d9c14015 	stw	r7,1280(sp)
   41ee0:	d8000405 	stb	zero,16(sp)
   41ee4:	003d1a06 	br	41350 <___vfprintf_internal_r+0xa38>
   41ee8:	38800017 	ldw	r2,0(r7)
   41eec:	39c00104 	addi	r7,r7,4
   41ef0:	d9c14015 	stw	r7,1280(sp)
   41ef4:	1023d7fa 	srai	r17,r2,31
   41ef8:	1021883a 	mov	r16,r2
   41efc:	003d1206 	br	41348 <___vfprintf_internal_r+0xa30>
   41f00:	3c000017 	ldw	r16,0(r7)
   41f04:	01000044 	movi	r4,1
   41f08:	39c00104 	addi	r7,r7,4
   41f0c:	0023883a 	mov	r17,zero
   41f10:	d9c14015 	stw	r7,1280(sp)
   41f14:	d8000405 	stb	zero,16(sp)
   41f18:	003d0d06 	br	41350 <___vfprintf_internal_r+0xa38>
   41f1c:	00800174 	movhi	r2,5
   41f20:	1089cd04 	addi	r2,r2,10036
   41f24:	94800044 	addi	r18,r18,1
   41f28:	8c400044 	addi	r17,r17,1
   41f2c:	a8800015 	stw	r2,0(r21)
   41f30:	00c00044 	movi	r3,1
   41f34:	008001c4 	movi	r2,7
   41f38:	a8c00115 	stw	r3,4(r21)
   41f3c:	dc800e15 	stw	r18,56(sp)
   41f40:	dc400d15 	stw	r17,52(sp)
   41f44:	1440ca16 	blt	r2,r17,42270 <___vfprintf_internal_r+0x1958>
   41f48:	a8c00204 	addi	r3,r21,8
   41f4c:	2000061e 	bne	r4,zero,41f68 <___vfprintf_internal_r+0x1650>
   41f50:	d9414717 	ldw	r5,1308(sp)
   41f54:	2800041e 	bne	r5,zero,41f68 <___vfprintf_internal_r+0x1650>
   41f58:	d9814c17 	ldw	r6,1328(sp)
   41f5c:	3080004c 	andi	r2,r6,1
   41f60:	1005003a 	cmpeq	r2,r2,zero
   41f64:	103bea1e 	bne	r2,zero,40f10 <___vfprintf_internal_r+0x5f8>
   41f68:	00800044 	movi	r2,1
   41f6c:	dc400d17 	ldw	r17,52(sp)
   41f70:	18800115 	stw	r2,4(r3)
   41f74:	d8814917 	ldw	r2,1316(sp)
   41f78:	94800044 	addi	r18,r18,1
   41f7c:	8c400044 	addi	r17,r17,1
   41f80:	18800015 	stw	r2,0(r3)
   41f84:	008001c4 	movi	r2,7
   41f88:	dc800e15 	stw	r18,56(sp)
   41f8c:	dc400d15 	stw	r17,52(sp)
   41f90:	1440ca16 	blt	r2,r17,422bc <___vfprintf_internal_r+0x19a4>
   41f94:	18c00204 	addi	r3,r3,8
   41f98:	0121c83a 	sub	r16,zero,r4
   41f9c:	0400500e 	bge	zero,r16,420e0 <___vfprintf_internal_r+0x17c8>
   41fa0:	00800404 	movi	r2,16
   41fa4:	1400800e 	bge	r2,r16,421a8 <___vfprintf_internal_r+0x1890>
   41fa8:	1027883a 	mov	r19,r2
   41fac:	07000174 	movhi	fp,5
   41fb0:	e709cd84 	addi	fp,fp,10038
   41fb4:	050001c4 	movi	r20,7
   41fb8:	00000306 	br	41fc8 <___vfprintf_internal_r+0x16b0>
   41fbc:	18c00204 	addi	r3,r3,8
   41fc0:	843ffc04 	addi	r16,r16,-16
   41fc4:	9c007a0e 	bge	r19,r16,421b0 <___vfprintf_internal_r+0x1898>
   41fc8:	94800404 	addi	r18,r18,16
   41fcc:	8c400044 	addi	r17,r17,1
   41fd0:	1f000015 	stw	fp,0(r3)
   41fd4:	1cc00115 	stw	r19,4(r3)
   41fd8:	dc800e15 	stw	r18,56(sp)
   41fdc:	dc400d15 	stw	r17,52(sp)
   41fe0:	a47ff60e 	bge	r20,r17,41fbc <___vfprintf_internal_r+0x16a4>
   41fe4:	d9014f17 	ldw	r4,1340(sp)
   41fe8:	b00b883a 	mov	r5,r22
   41fec:	d9800c04 	addi	r6,sp,48
   41ff0:	00408c00 	call	408c0 <__sprint_r>
   41ff4:	103c001e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   41ff8:	dc800e17 	ldw	r18,56(sp)
   41ffc:	dc400d17 	ldw	r17,52(sp)
   42000:	d8c01904 	addi	r3,sp,100
   42004:	003fee06 	br	41fc0 <___vfprintf_internal_r+0x16a8>
   42008:	3c000017 	ldw	r16,0(r7)
   4200c:	0023883a 	mov	r17,zero
   42010:	39c00104 	addi	r7,r7,4
   42014:	d9c14015 	stw	r7,1280(sp)
   42018:	003e8c06 	br	41a4c <___vfprintf_internal_r+0x1134>
   4201c:	d9401904 	addi	r5,sp,100
   42020:	dd000f04 	addi	r20,sp,60
   42024:	d9414115 	stw	r5,1284(sp)
   42028:	d9814417 	ldw	r6,1296(sp)
   4202c:	880a973a 	slli	r5,r17,28
   42030:	8004d13a 	srli	r2,r16,4
   42034:	810003cc 	andi	r4,r16,15
   42038:	3109883a 	add	r4,r6,r4
   4203c:	2884b03a 	or	r2,r5,r2
   42040:	21400003 	ldbu	r5,0(r4)
   42044:	d9014117 	ldw	r4,1284(sp)
   42048:	8806d13a 	srli	r3,r17,4
   4204c:	1021883a 	mov	r16,r2
   42050:	213fffc4 	addi	r4,r4,-1
   42054:	d9014115 	stw	r4,1284(sp)
   42058:	d9814117 	ldw	r6,1284(sp)
   4205c:	10c8b03a 	or	r4,r2,r3
   42060:	1823883a 	mov	r17,r3
   42064:	31400005 	stb	r5,0(r6)
   42068:	203fef1e 	bne	r4,zero,42028 <___vfprintf_internal_r+0x1710>
   4206c:	003cc506 	br	41384 <___vfprintf_internal_r+0xa6c>
   42070:	00800c04 	movi	r2,48
   42074:	d98018c4 	addi	r6,sp,99
   42078:	dd000f04 	addi	r20,sp,60
   4207c:	d88018c5 	stb	r2,99(sp)
   42080:	d9814115 	stw	r6,1284(sp)
   42084:	003cbf06 	br	41384 <___vfprintf_internal_r+0xa6c>
   42088:	dc400d17 	ldw	r17,52(sp)
   4208c:	07000174 	movhi	fp,5
   42090:	e709d184 	addi	fp,fp,10054
   42094:	003bc106 	br	40f9c <___vfprintf_internal_r+0x684>
   42098:	d9414c17 	ldw	r5,1328(sp)
   4209c:	2880040c 	andi	r2,r5,16
   420a0:	10007c26 	beq	r2,zero,42294 <___vfprintf_internal_r+0x197c>
   420a4:	38800017 	ldw	r2,0(r7)
   420a8:	39c00104 	addi	r7,r7,4
   420ac:	d9c14015 	stw	r7,1280(sp)
   420b0:	d9814b17 	ldw	r6,1324(sp)
   420b4:	d9c14017 	ldw	r7,1280(sp)
   420b8:	11800015 	stw	r6,0(r2)
   420bc:	003a7206 	br	40a88 <___vfprintf_internal_r+0x170>
   420c0:	d9014f17 	ldw	r4,1340(sp)
   420c4:	b00b883a 	mov	r5,r22
   420c8:	d9800c04 	addi	r6,sp,48
   420cc:	00408c00 	call	408c0 <__sprint_r>
   420d0:	103bc91e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   420d4:	dc800e17 	ldw	r18,56(sp)
   420d8:	dc400d17 	ldw	r17,52(sp)
   420dc:	d8c01904 	addi	r3,sp,100
   420e0:	d9014717 	ldw	r4,1308(sp)
   420e4:	d9414117 	ldw	r5,1284(sp)
   420e8:	8c400044 	addi	r17,r17,1
   420ec:	9125883a 	add	r18,r18,r4
   420f0:	008001c4 	movi	r2,7
   420f4:	19400015 	stw	r5,0(r3)
   420f8:	19000115 	stw	r4,4(r3)
   420fc:	dc800e15 	stw	r18,56(sp)
   42100:	dc400d15 	stw	r17,52(sp)
   42104:	147ce816 	blt	r2,r17,414a8 <___vfprintf_internal_r+0xb90>
   42108:	18c00204 	addi	r3,r3,8
   4210c:	003b8006 	br	40f10 <___vfprintf_internal_r+0x5f8>
   42110:	38c00017 	ldw	r3,0(r7)
   42114:	39000204 	addi	r4,r7,8
   42118:	d9014015 	stw	r4,1280(sp)
   4211c:	d8c14215 	stw	r3,1288(sp)
   42120:	39c00117 	ldw	r7,4(r7)
   42124:	d9c14315 	stw	r7,1292(sp)
   42128:	003e1a06 	br	41994 <___vfprintf_internal_r+0x107c>
   4212c:	0005883a 	mov	r2,zero
   42130:	1409c83a 	sub	r4,r2,r16
   42134:	1105803a 	cmpltu	r2,r2,r4
   42138:	044bc83a 	sub	r5,zero,r17
   4213c:	2885c83a 	sub	r2,r5,r2
   42140:	2021883a 	mov	r16,r4
   42144:	1023883a 	mov	r17,r2
   42148:	01000044 	movi	r4,1
   4214c:	00800b44 	movi	r2,45
   42150:	d8800405 	stb	r2,16(sp)
   42154:	003c7e06 	br	41350 <___vfprintf_internal_r+0xa38>
   42158:	d9014f17 	ldw	r4,1340(sp)
   4215c:	b00b883a 	mov	r5,r22
   42160:	d9800c04 	addi	r6,sp,48
   42164:	00408c00 	call	408c0 <__sprint_r>
   42168:	103ba31e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   4216c:	dc800e17 	ldw	r18,56(sp)
   42170:	dc400d17 	ldw	r17,52(sp)
   42174:	d9000517 	ldw	r4,20(sp)
   42178:	d9401904 	addi	r5,sp,100
   4217c:	003da106 	br	41804 <___vfprintf_internal_r+0xeec>
   42180:	d9014f17 	ldw	r4,1340(sp)
   42184:	b00b883a 	mov	r5,r22
   42188:	d9800c04 	addi	r6,sp,48
   4218c:	00408c00 	call	408c0 <__sprint_r>
   42190:	103b991e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   42194:	dc800e17 	ldw	r18,56(sp)
   42198:	dc400d17 	ldw	r17,52(sp)
   4219c:	d9000517 	ldw	r4,20(sp)
   421a0:	d8c01904 	addi	r3,sp,100
   421a4:	003d8b06 	br	417d4 <___vfprintf_internal_r+0xebc>
   421a8:	07000174 	movhi	fp,5
   421ac:	e709cd84 	addi	fp,fp,10038
   421b0:	9425883a 	add	r18,r18,r16
   421b4:	8c400044 	addi	r17,r17,1
   421b8:	008001c4 	movi	r2,7
   421bc:	1f000015 	stw	fp,0(r3)
   421c0:	1c000115 	stw	r16,4(r3)
   421c4:	dc800e15 	stw	r18,56(sp)
   421c8:	dc400d15 	stw	r17,52(sp)
   421cc:	147fbc16 	blt	r2,r17,420c0 <___vfprintf_internal_r+0x17a8>
   421d0:	18c00204 	addi	r3,r3,8
   421d4:	003fc206 	br	420e0 <___vfprintf_internal_r+0x17c8>
   421d8:	d9014f17 	ldw	r4,1340(sp)
   421dc:	b00b883a 	mov	r5,r22
   421e0:	d9800c04 	addi	r6,sp,48
   421e4:	00408c00 	call	408c0 <__sprint_r>
   421e8:	103b831e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   421ec:	dc800e17 	ldw	r18,56(sp)
   421f0:	d9000517 	ldw	r4,20(sp)
   421f4:	d8c01904 	addi	r3,sp,100
   421f8:	003cfc06 	br	415ec <___vfprintf_internal_r+0xcd4>
   421fc:	07000174 	movhi	fp,5
   42200:	e709cd84 	addi	fp,fp,10038
   42204:	003bde06 	br	41180 <___vfprintf_internal_r+0x868>
   42208:	00800174 	movhi	r2,5
   4220c:	1089bc04 	addi	r2,r2,9968
   42210:	d8814115 	stw	r2,1284(sp)
   42214:	003def06 	br	419d4 <___vfprintf_internal_r+0x10bc>
   42218:	d9014217 	ldw	r4,1288(sp)
   4221c:	d9414317 	ldw	r5,1292(sp)
   42220:	00492d40 	call	492d4 <__isnand>
   42224:	10003926 	beq	r2,zero,4230c <___vfprintf_internal_r+0x19f4>
   42228:	d9414d17 	ldw	r5,1332(sp)
   4222c:	008011c4 	movi	r2,71
   42230:	1140ce16 	blt	r2,r5,4256c <___vfprintf_internal_r+0x1c54>
   42234:	01800174 	movhi	r6,5
   42238:	3189bd04 	addi	r6,r6,9972
   4223c:	d9814115 	stw	r6,1284(sp)
   42240:	003de406 	br	419d4 <___vfprintf_internal_r+0x10bc>
   42244:	d9014c17 	ldw	r4,1328(sp)
   42248:	bdc00044 	addi	r23,r23,1
   4224c:	b8c00007 	ldb	r3,0(r23)
   42250:	21000814 	ori	r4,r4,32
   42254:	d9014c15 	stw	r4,1328(sp)
   42258:	003a2e06 	br	40b14 <___vfprintf_internal_r+0x1fc>
   4225c:	dcc14515 	stw	r19,1300(sp)
   42260:	98011016 	blt	r19,zero,426a4 <___vfprintf_internal_r+0x1d8c>
   42264:	980f883a 	mov	r7,r19
   42268:	d8014615 	stw	zero,1304(sp)
   4226c:	003c4c06 	br	413a0 <___vfprintf_internal_r+0xa88>
   42270:	d9014f17 	ldw	r4,1340(sp)
   42274:	b00b883a 	mov	r5,r22
   42278:	d9800c04 	addi	r6,sp,48
   4227c:	00408c00 	call	408c0 <__sprint_r>
   42280:	103b5d1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   42284:	dc800e17 	ldw	r18,56(sp)
   42288:	d9000517 	ldw	r4,20(sp)
   4228c:	d8c01904 	addi	r3,sp,100
   42290:	003f2e06 	br	41f4c <___vfprintf_internal_r+0x1634>
   42294:	d8c14c17 	ldw	r3,1328(sp)
   42298:	1880100c 	andi	r2,r3,64
   4229c:	1000a026 	beq	r2,zero,42520 <___vfprintf_internal_r+0x1c08>
   422a0:	38800017 	ldw	r2,0(r7)
   422a4:	39c00104 	addi	r7,r7,4
   422a8:	d9c14015 	stw	r7,1280(sp)
   422ac:	d9014b17 	ldw	r4,1324(sp)
   422b0:	d9c14017 	ldw	r7,1280(sp)
   422b4:	1100000d 	sth	r4,0(r2)
   422b8:	0039f306 	br	40a88 <___vfprintf_internal_r+0x170>
   422bc:	d9014f17 	ldw	r4,1340(sp)
   422c0:	b00b883a 	mov	r5,r22
   422c4:	d9800c04 	addi	r6,sp,48
   422c8:	00408c00 	call	408c0 <__sprint_r>
   422cc:	103b4a1e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   422d0:	dc800e17 	ldw	r18,56(sp)
   422d4:	dc400d17 	ldw	r17,52(sp)
   422d8:	d9000517 	ldw	r4,20(sp)
   422dc:	d8c01904 	addi	r3,sp,100
   422e0:	003f2d06 	br	41f98 <___vfprintf_internal_r+0x1680>
   422e4:	00800184 	movi	r2,6
   422e8:	14c09a36 	bltu	r2,r19,42554 <___vfprintf_internal_r+0x1c3c>
   422ec:	dcc14515 	stw	r19,1300(sp)
   422f0:	9800010e 	bge	r19,zero,422f8 <___vfprintf_internal_r+0x19e0>
   422f4:	d8014515 	stw	zero,1300(sp)
   422f8:	00800174 	movhi	r2,5
   422fc:	1089bf04 	addi	r2,r2,9980
   42300:	980f883a 	mov	r7,r19
   42304:	d8814115 	stw	r2,1284(sp)
   42308:	003a7206 	br	40cd4 <___vfprintf_internal_r+0x3bc>
   4230c:	00bfffc4 	movi	r2,-1
   42310:	9880e226 	beq	r19,r2,4269c <___vfprintf_internal_r+0x1d84>
   42314:	d9414d17 	ldw	r5,1332(sp)
   42318:	008019c4 	movi	r2,103
   4231c:	2880dc26 	beq	r5,r2,42690 <___vfprintf_internal_r+0x1d78>
   42320:	008011c4 	movi	r2,71
   42324:	2880da26 	beq	r5,r2,42690 <___vfprintf_internal_r+0x1d78>
   42328:	d9414c17 	ldw	r5,1328(sp)
   4232c:	d9014317 	ldw	r4,1292(sp)
   42330:	d9814217 	ldw	r6,1288(sp)
   42334:	29404014 	ori	r5,r5,256
   42338:	d9414c15 	stw	r5,1328(sp)
   4233c:	2000cc16 	blt	r4,zero,42670 <___vfprintf_internal_r+0x1d58>
   42340:	3021883a 	mov	r16,r6
   42344:	2023883a 	mov	r17,r4
   42348:	0039883a 	mov	fp,zero
   4234c:	d9414d17 	ldw	r5,1332(sp)
   42350:	00801984 	movi	r2,102
   42354:	2880b726 	beq	r5,r2,42634 <___vfprintf_internal_r+0x1d1c>
   42358:	00801184 	movi	r2,70
   4235c:	2880b526 	beq	r5,r2,42634 <___vfprintf_internal_r+0x1d1c>
   42360:	00801944 	movi	r2,101
   42364:	2880c826 	beq	r5,r2,42688 <___vfprintf_internal_r+0x1d70>
   42368:	00801144 	movi	r2,69
   4236c:	2880c626 	beq	r5,r2,42688 <___vfprintf_internal_r+0x1d70>
   42370:	9829883a 	mov	r20,r19
   42374:	d9014f17 	ldw	r4,1340(sp)
   42378:	d8800504 	addi	r2,sp,20
   4237c:	880d883a 	mov	r6,r17
   42380:	d8800115 	stw	r2,4(sp)
   42384:	d8c00604 	addi	r3,sp,24
   42388:	d8800704 	addi	r2,sp,28
   4238c:	800b883a 	mov	r5,r16
   42390:	01c00084 	movi	r7,2
   42394:	d8c00215 	stw	r3,8(sp)
   42398:	d8800315 	stw	r2,12(sp)
   4239c:	dd000015 	stw	r20,0(sp)
   423a0:	00443080 	call	44308 <_dtoa_r>
   423a4:	d9814d17 	ldw	r6,1332(sp)
   423a8:	d8814115 	stw	r2,1284(sp)
   423ac:	008019c4 	movi	r2,103
   423b0:	30809526 	beq	r6,r2,42608 <___vfprintf_internal_r+0x1cf0>
   423b4:	d8c14d17 	ldw	r3,1332(sp)
   423b8:	008011c4 	movi	r2,71
   423bc:	18809226 	beq	r3,r2,42608 <___vfprintf_internal_r+0x1cf0>
   423c0:	d9414117 	ldw	r5,1284(sp)
   423c4:	d9814d17 	ldw	r6,1332(sp)
   423c8:	00801984 	movi	r2,102
   423cc:	2d25883a 	add	r18,r5,r20
   423d0:	30808626 	beq	r6,r2,425ec <___vfprintf_internal_r+0x1cd4>
   423d4:	00801184 	movi	r2,70
   423d8:	30808426 	beq	r6,r2,425ec <___vfprintf_internal_r+0x1cd4>
   423dc:	000d883a 	mov	r6,zero
   423e0:	000f883a 	mov	r7,zero
   423e4:	880b883a 	mov	r5,r17
   423e8:	8009883a 	mov	r4,r16
   423ec:	004e8bc0 	call	4e8bc <__eqdf2>
   423f0:	1000751e 	bne	r2,zero,425c8 <___vfprintf_internal_r+0x1cb0>
   423f4:	9005883a 	mov	r2,r18
   423f8:	dc800715 	stw	r18,28(sp)
   423fc:	d9014117 	ldw	r4,1284(sp)
   42400:	d9414d17 	ldw	r5,1332(sp)
   42404:	00c019c4 	movi	r3,103
   42408:	1125c83a 	sub	r18,r2,r4
   4240c:	28c06826 	beq	r5,r3,425b0 <___vfprintf_internal_r+0x1c98>
   42410:	008011c4 	movi	r2,71
   42414:	28806626 	beq	r5,r2,425b0 <___vfprintf_internal_r+0x1c98>
   42418:	d9000517 	ldw	r4,20(sp)
   4241c:	d8c14d17 	ldw	r3,1332(sp)
   42420:	00801944 	movi	r2,101
   42424:	10c05516 	blt	r2,r3,4257c <___vfprintf_internal_r+0x1c64>
   42428:	213fffc4 	addi	r4,r4,-1
   4242c:	d9000515 	stw	r4,20(sp)
   42430:	d8c00805 	stb	r3,32(sp)
   42434:	2021883a 	mov	r16,r4
   42438:	2000c116 	blt	r4,zero,42740 <___vfprintf_internal_r+0x1e28>
   4243c:	00800ac4 	movi	r2,43
   42440:	d8800845 	stb	r2,33(sp)
   42444:	00800244 	movi	r2,9
   42448:	1400af0e 	bge	r2,r16,42708 <___vfprintf_internal_r+0x1df0>
   4244c:	1027883a 	mov	r19,r2
   42450:	dc400b84 	addi	r17,sp,46
   42454:	8009883a 	mov	r4,r16
   42458:	01400284 	movi	r5,10
   4245c:	004f0a00 	call	4f0a0 <__modsi3>
   42460:	10800c04 	addi	r2,r2,48
   42464:	8c7fffc4 	addi	r17,r17,-1
   42468:	8009883a 	mov	r4,r16
   4246c:	01400284 	movi	r5,10
   42470:	88800005 	stb	r2,0(r17)
   42474:	004f0400 	call	4f040 <__divsi3>
   42478:	1021883a 	mov	r16,r2
   4247c:	98bff516 	blt	r19,r2,42454 <___vfprintf_internal_r+0x1b3c>
   42480:	10c00c04 	addi	r3,r2,48
   42484:	d88009c4 	addi	r2,sp,39
   42488:	108001c4 	addi	r2,r2,7
   4248c:	897fffc4 	addi	r5,r17,-1
   42490:	88ffffc5 	stb	r3,-1(r17)
   42494:	2880a72e 	bgeu	r5,r2,42734 <___vfprintf_internal_r+0x1e1c>
   42498:	1009883a 	mov	r4,r2
   4249c:	d9800804 	addi	r6,sp,32
   424a0:	d8c00884 	addi	r3,sp,34
   424a4:	28800003 	ldbu	r2,0(r5)
   424a8:	29400044 	addi	r5,r5,1
   424ac:	18800005 	stb	r2,0(r3)
   424b0:	18c00044 	addi	r3,r3,1
   424b4:	293ffb36 	bltu	r5,r4,424a4 <___vfprintf_internal_r+0x1b8c>
   424b8:	1987c83a 	sub	r3,r3,r6
   424bc:	00800044 	movi	r2,1
   424c0:	d8c14815 	stw	r3,1312(sp)
   424c4:	90cf883a 	add	r7,r18,r3
   424c8:	1480960e 	bge	r2,r18,42724 <___vfprintf_internal_r+0x1e0c>
   424cc:	39c00044 	addi	r7,r7,1
   424d0:	d9c14515 	stw	r7,1300(sp)
   424d4:	38003416 	blt	r7,zero,425a8 <___vfprintf_internal_r+0x1c90>
   424d8:	e0803fcc 	andi	r2,fp,255
   424dc:	1080201c 	xori	r2,r2,128
   424e0:	10bfe004 	addi	r2,r2,-128
   424e4:	10004e26 	beq	r2,zero,42620 <___vfprintf_internal_r+0x1d08>
   424e8:	00800b44 	movi	r2,45
   424ec:	dc814715 	stw	r18,1308(sp)
   424f0:	d8014615 	stw	zero,1304(sp)
   424f4:	d8800405 	stb	r2,16(sp)
   424f8:	003bab06 	br	413a8 <___vfprintf_internal_r+0xa90>
   424fc:	00800b44 	movi	r2,45
   42500:	d8800405 	stb	r2,16(sp)
   42504:	003d2d06 	br	419bc <___vfprintf_internal_r+0x10a4>
   42508:	d9014f17 	ldw	r4,1340(sp)
   4250c:	b00b883a 	mov	r5,r22
   42510:	d9800c04 	addi	r6,sp,48
   42514:	00408c00 	call	408c0 <__sprint_r>
   42518:	103ab71e 	bne	r2,zero,40ff8 <___vfprintf_internal_r+0x6e0>
   4251c:	003ab506 	br	40ff4 <___vfprintf_internal_r+0x6dc>
   42520:	38800017 	ldw	r2,0(r7)
   42524:	39c00104 	addi	r7,r7,4
   42528:	d9c14015 	stw	r7,1280(sp)
   4252c:	d9414b17 	ldw	r5,1324(sp)
   42530:	d9c14017 	ldw	r7,1280(sp)
   42534:	11400015 	stw	r5,0(r2)
   42538:	00395306 	br	40a88 <___vfprintf_internal_r+0x170>
   4253c:	980f883a 	mov	r7,r19
   42540:	dcc14515 	stw	r19,1300(sp)
   42544:	d8014615 	stw	zero,1304(sp)
   42548:	003b9506 	br	413a0 <___vfprintf_internal_r+0xa88>
   4254c:	0027883a 	mov	r19,zero
   42550:	00397206 	br	40b1c <___vfprintf_internal_r+0x204>
   42554:	00c00174 	movhi	r3,5
   42558:	18c9bf04 	addi	r3,r3,9980
   4255c:	100f883a 	mov	r7,r2
   42560:	d8814515 	stw	r2,1300(sp)
   42564:	d8c14115 	stw	r3,1284(sp)
   42568:	0039da06 	br	40cd4 <___vfprintf_internal_r+0x3bc>
   4256c:	00800174 	movhi	r2,5
   42570:	1089be04 	addi	r2,r2,9976
   42574:	d8814115 	stw	r2,1284(sp)
   42578:	003d1606 	br	419d4 <___vfprintf_internal_r+0x10bc>
   4257c:	d9414d17 	ldw	r5,1332(sp)
   42580:	00801984 	movi	r2,102
   42584:	28804926 	beq	r5,r2,426ac <___vfprintf_internal_r+0x1d94>
   42588:	200f883a 	mov	r7,r4
   4258c:	24805716 	blt	r4,r18,426ec <___vfprintf_internal_r+0x1dd4>
   42590:	d9414c17 	ldw	r5,1328(sp)
   42594:	2880004c 	andi	r2,r5,1
   42598:	10000126 	beq	r2,zero,425a0 <___vfprintf_internal_r+0x1c88>
   4259c:	21c00044 	addi	r7,r4,1
   425a0:	d9c14515 	stw	r7,1300(sp)
   425a4:	383fcc0e 	bge	r7,zero,424d8 <___vfprintf_internal_r+0x1bc0>
   425a8:	d8014515 	stw	zero,1300(sp)
   425ac:	003fca06 	br	424d8 <___vfprintf_internal_r+0x1bc0>
   425b0:	d9000517 	ldw	r4,20(sp)
   425b4:	00bfff04 	movi	r2,-4
   425b8:	1100480e 	bge	r2,r4,426dc <___vfprintf_internal_r+0x1dc4>
   425bc:	99004716 	blt	r19,r4,426dc <___vfprintf_internal_r+0x1dc4>
   425c0:	d8c14d15 	stw	r3,1332(sp)
   425c4:	003ff006 	br	42588 <___vfprintf_internal_r+0x1c70>
   425c8:	d8800717 	ldw	r2,28(sp)
   425cc:	14bf8b2e 	bgeu	r2,r18,423fc <___vfprintf_internal_r+0x1ae4>
   425d0:	9007883a 	mov	r3,r18
   425d4:	01000c04 	movi	r4,48
   425d8:	11000005 	stb	r4,0(r2)
   425dc:	10800044 	addi	r2,r2,1
   425e0:	d8800715 	stw	r2,28(sp)
   425e4:	18bffc1e 	bne	r3,r2,425d8 <___vfprintf_internal_r+0x1cc0>
   425e8:	003f8406 	br	423fc <___vfprintf_internal_r+0x1ae4>
   425ec:	d8814117 	ldw	r2,1284(sp)
   425f0:	10c00007 	ldb	r3,0(r2)
   425f4:	00800c04 	movi	r2,48
   425f8:	18805b26 	beq	r3,r2,42768 <___vfprintf_internal_r+0x1e50>
   425fc:	d9000517 	ldw	r4,20(sp)
   42600:	9125883a 	add	r18,r18,r4
   42604:	003f7506 	br	423dc <___vfprintf_internal_r+0x1ac4>
   42608:	d9014c17 	ldw	r4,1328(sp)
   4260c:	2080004c 	andi	r2,r4,1
   42610:	1005003a 	cmpeq	r2,r2,zero
   42614:	103f6a26 	beq	r2,zero,423c0 <___vfprintf_internal_r+0x1aa8>
   42618:	d8800717 	ldw	r2,28(sp)
   4261c:	003f7706 	br	423fc <___vfprintf_internal_r+0x1ae4>
   42620:	d9c14515 	stw	r7,1300(sp)
   42624:	38004d16 	blt	r7,zero,4275c <___vfprintf_internal_r+0x1e44>
   42628:	dc814715 	stw	r18,1308(sp)
   4262c:	d8014615 	stw	zero,1304(sp)
   42630:	003b5b06 	br	413a0 <___vfprintf_internal_r+0xa88>
   42634:	d9014f17 	ldw	r4,1340(sp)
   42638:	d8800504 	addi	r2,sp,20
   4263c:	d8800115 	stw	r2,4(sp)
   42640:	d8c00604 	addi	r3,sp,24
   42644:	d8800704 	addi	r2,sp,28
   42648:	800b883a 	mov	r5,r16
   4264c:	880d883a 	mov	r6,r17
   42650:	01c000c4 	movi	r7,3
   42654:	d8c00215 	stw	r3,8(sp)
   42658:	d8800315 	stw	r2,12(sp)
   4265c:	dcc00015 	stw	r19,0(sp)
   42660:	9829883a 	mov	r20,r19
   42664:	00443080 	call	44308 <_dtoa_r>
   42668:	d8814115 	stw	r2,1284(sp)
   4266c:	003f5106 	br	423b4 <___vfprintf_internal_r+0x1a9c>
   42670:	d8c14217 	ldw	r3,1288(sp)
   42674:	d9014317 	ldw	r4,1292(sp)
   42678:	07000b44 	movi	fp,45
   4267c:	1821883a 	mov	r16,r3
   42680:	2460003c 	xorhi	r17,r4,32768
   42684:	003f3106 	br	4234c <___vfprintf_internal_r+0x1a34>
   42688:	9d000044 	addi	r20,r19,1
   4268c:	003f3906 	br	42374 <___vfprintf_internal_r+0x1a5c>
   42690:	983f251e 	bne	r19,zero,42328 <___vfprintf_internal_r+0x1a10>
   42694:	04c00044 	movi	r19,1
   42698:	003f2306 	br	42328 <___vfprintf_internal_r+0x1a10>
   4269c:	04c00184 	movi	r19,6
   426a0:	003f2106 	br	42328 <___vfprintf_internal_r+0x1a10>
   426a4:	d8014515 	stw	zero,1300(sp)
   426a8:	003eee06 	br	42264 <___vfprintf_internal_r+0x194c>
   426ac:	200f883a 	mov	r7,r4
   426b0:	0100370e 	bge	zero,r4,42790 <___vfprintf_internal_r+0x1e78>
   426b4:	9800031e 	bne	r19,zero,426c4 <___vfprintf_internal_r+0x1dac>
   426b8:	d9814c17 	ldw	r6,1328(sp)
   426bc:	3080004c 	andi	r2,r6,1
   426c0:	103fb726 	beq	r2,zero,425a0 <___vfprintf_internal_r+0x1c88>
   426c4:	20800044 	addi	r2,r4,1
   426c8:	98a7883a 	add	r19,r19,r2
   426cc:	dcc14515 	stw	r19,1300(sp)
   426d0:	980f883a 	mov	r7,r19
   426d4:	983f800e 	bge	r19,zero,424d8 <___vfprintf_internal_r+0x1bc0>
   426d8:	003fb306 	br	425a8 <___vfprintf_internal_r+0x1c90>
   426dc:	d9814d17 	ldw	r6,1332(sp)
   426e0:	31bfff84 	addi	r6,r6,-2
   426e4:	d9814d15 	stw	r6,1332(sp)
   426e8:	003f4c06 	br	4241c <___vfprintf_internal_r+0x1b04>
   426ec:	0100180e 	bge	zero,r4,42750 <___vfprintf_internal_r+0x1e38>
   426f0:	00800044 	movi	r2,1
   426f4:	1485883a 	add	r2,r2,r18
   426f8:	d8814515 	stw	r2,1300(sp)
   426fc:	100f883a 	mov	r7,r2
   42700:	103f750e 	bge	r2,zero,424d8 <___vfprintf_internal_r+0x1bc0>
   42704:	003fa806 	br	425a8 <___vfprintf_internal_r+0x1c90>
   42708:	80c00c04 	addi	r3,r16,48
   4270c:	00800c04 	movi	r2,48
   42710:	d8c008c5 	stb	r3,35(sp)
   42714:	d9800804 	addi	r6,sp,32
   42718:	d8c00904 	addi	r3,sp,36
   4271c:	d8800885 	stb	r2,34(sp)
   42720:	003f6506 	br	424b8 <___vfprintf_internal_r+0x1ba0>
   42724:	d9014c17 	ldw	r4,1328(sp)
   42728:	2084703a 	and	r2,r4,r2
   4272c:	103f9c26 	beq	r2,zero,425a0 <___vfprintf_internal_r+0x1c88>
   42730:	003f6606 	br	424cc <___vfprintf_internal_r+0x1bb4>
   42734:	d9800804 	addi	r6,sp,32
   42738:	d8c00884 	addi	r3,sp,34
   4273c:	003f5e06 	br	424b8 <___vfprintf_internal_r+0x1ba0>
   42740:	00800b44 	movi	r2,45
   42744:	0121c83a 	sub	r16,zero,r4
   42748:	d8800845 	stb	r2,33(sp)
   4274c:	003f3d06 	br	42444 <___vfprintf_internal_r+0x1b2c>
   42750:	00800084 	movi	r2,2
   42754:	1105c83a 	sub	r2,r2,r4
   42758:	003fe606 	br	426f4 <___vfprintf_internal_r+0x1ddc>
   4275c:	d8014515 	stw	zero,1300(sp)
   42760:	dc814715 	stw	r18,1308(sp)
   42764:	003fb106 	br	4262c <___vfprintf_internal_r+0x1d14>
   42768:	000d883a 	mov	r6,zero
   4276c:	000f883a 	mov	r7,zero
   42770:	8009883a 	mov	r4,r16
   42774:	880b883a 	mov	r5,r17
   42778:	004e9440 	call	4e944 <__nedf2>
   4277c:	103f9f26 	beq	r2,zero,425fc <___vfprintf_internal_r+0x1ce4>
   42780:	00800044 	movi	r2,1
   42784:	1509c83a 	sub	r4,r2,r20
   42788:	d9000515 	stw	r4,20(sp)
   4278c:	003f9b06 	br	425fc <___vfprintf_internal_r+0x1ce4>
   42790:	98000d1e 	bne	r19,zero,427c8 <___vfprintf_internal_r+0x1eb0>
   42794:	d8c14c17 	ldw	r3,1328(sp)
   42798:	1880004c 	andi	r2,r3,1
   4279c:	10000a1e 	bne	r2,zero,427c8 <___vfprintf_internal_r+0x1eb0>
   427a0:	01000044 	movi	r4,1
   427a4:	200f883a 	mov	r7,r4
   427a8:	d9014515 	stw	r4,1300(sp)
   427ac:	003f4a06 	br	424d8 <___vfprintf_internal_r+0x1bc0>
   427b0:	3cc00017 	ldw	r19,0(r7)
   427b4:	39c00104 	addi	r7,r7,4
   427b8:	983d0e0e 	bge	r19,zero,41bf4 <___vfprintf_internal_r+0x12dc>
   427bc:	b8c00007 	ldb	r3,0(r23)
   427c0:	04ffffc4 	movi	r19,-1
   427c4:	0038d306 	br	40b14 <___vfprintf_internal_r+0x1fc>
   427c8:	9cc00084 	addi	r19,r19,2
   427cc:	dcc14515 	stw	r19,1300(sp)
   427d0:	980f883a 	mov	r7,r19
   427d4:	983f400e 	bge	r19,zero,424d8 <___vfprintf_internal_r+0x1bc0>
   427d8:	003f7306 	br	425a8 <___vfprintf_internal_r+0x1c90>

000427dc <__vfprintf_internal>:
   427dc:	00800174 	movhi	r2,5
   427e0:	1091d604 	addi	r2,r2,18264
   427e4:	2013883a 	mov	r9,r4
   427e8:	11000017 	ldw	r4,0(r2)
   427ec:	2805883a 	mov	r2,r5
   427f0:	300f883a 	mov	r7,r6
   427f4:	480b883a 	mov	r5,r9
   427f8:	100d883a 	mov	r6,r2
   427fc:	00409181 	jmpi	40918 <___vfprintf_internal_r>

00042800 <__svfscanf_r>:
   42800:	deff4e04 	addi	sp,sp,-712
   42804:	dd80ae15 	stw	r22,696(sp)
   42808:	dd00ac15 	stw	r20,688(sp)
   4280c:	dc40a915 	stw	r17,676(sp)
   42810:	dc00a815 	stw	r16,672(sp)
   42814:	dfc0b115 	stw	ra,708(sp)
   42818:	df00b015 	stw	fp,704(sp)
   4281c:	ddc0af15 	stw	r23,700(sp)
   42820:	dd40ad15 	stw	r21,692(sp)
   42824:	dcc0ab15 	stw	r19,684(sp)
   42828:	dc80aa15 	stw	r18,680(sp)
   4282c:	202d883a 	mov	r22,r4
   42830:	2821883a 	mov	r16,r5
   42834:	d9c0a415 	stw	r7,656(sp)
   42838:	3029883a 	mov	r20,r6
   4283c:	d800a215 	stw	zero,648(sp)
   42840:	0023883a 	mov	r17,zero
   42844:	d800a115 	stw	zero,644(sp)
   42848:	d800a015 	stw	zero,640(sp)
   4284c:	a1000007 	ldb	r4,0(r20)
   42850:	d9000115 	stw	r4,4(sp)
   42854:	20001f26 	beq	r4,zero,428d4 <__svfscanf_r+0xd4>
   42858:	04c00174 	movhi	r19,5
   4285c:	9cd1d804 	addi	r19,r19,18272
   42860:	9c800017 	ldw	r18,0(r19)
   42864:	a5000044 	addi	r20,r20,1
   42868:	9107883a 	add	r3,r18,r4
   4286c:	18800003 	ldbu	r2,0(r3)
   42870:	1080020c 	andi	r2,r2,8
   42874:	10002426 	beq	r2,zero,42908 <__svfscanf_r+0x108>
   42878:	80c00117 	ldw	r3,4(r16)
   4287c:	00c00e0e 	bge	zero,r3,428b8 <__svfscanf_r+0xb8>
   42880:	81400017 	ldw	r5,0(r16)
   42884:	98800017 	ldw	r2,0(r19)
   42888:	28c00003 	ldbu	r3,0(r5)
   4288c:	1887883a 	add	r3,r3,r2
   42890:	19000003 	ldbu	r4,0(r3)
   42894:	2100020c 	andi	r4,r4,8
   42898:	203fec26 	beq	r4,zero,4284c <__svfscanf_r+0x4c>
   4289c:	80c00117 	ldw	r3,4(r16)
   428a0:	29800044 	addi	r6,r5,1
   428a4:	8c400044 	addi	r17,r17,1
   428a8:	18ffffc4 	addi	r3,r3,-1
   428ac:	81800015 	stw	r6,0(r16)
   428b0:	80c00115 	stw	r3,4(r16)
   428b4:	00fff216 	blt	zero,r3,42880 <__svfscanf_r+0x80>
   428b8:	b009883a 	mov	r4,r22
   428bc:	800b883a 	mov	r5,r16
   428c0:	00490b40 	call	490b4 <__srefill_r>
   428c4:	103fee26 	beq	r2,zero,42880 <__svfscanf_r+0x80>
   428c8:	a1000007 	ldb	r4,0(r20)
   428cc:	d9000115 	stw	r4,4(sp)
   428d0:	203fe11e 	bne	r4,zero,42858 <__svfscanf_r+0x58>
   428d4:	d880a217 	ldw	r2,648(sp)
   428d8:	dfc0b117 	ldw	ra,708(sp)
   428dc:	df00b017 	ldw	fp,704(sp)
   428e0:	ddc0af17 	ldw	r23,700(sp)
   428e4:	dd80ae17 	ldw	r22,696(sp)
   428e8:	dd40ad17 	ldw	r21,692(sp)
   428ec:	dd00ac17 	ldw	r20,688(sp)
   428f0:	dcc0ab17 	ldw	r19,684(sp)
   428f4:	dc80aa17 	ldw	r18,680(sp)
   428f8:	dc40a917 	ldw	r17,676(sp)
   428fc:	dc00a817 	ldw	r16,672(sp)
   42900:	dec0b204 	addi	sp,sp,712
   42904:	f800283a 	ret
   42908:	00800944 	movi	r2,37
   4290c:	20801626 	beq	r4,r2,42968 <__svfscanf_r+0x168>
   42910:	80800117 	ldw	r2,4(r16)
   42914:	00800b0e 	bge	zero,r2,42944 <__svfscanf_r+0x144>
   42918:	81000017 	ldw	r4,0(r16)
   4291c:	a0ffffc7 	ldb	r3,-1(r20)
   42920:	20800003 	ldbu	r2,0(r4)
   42924:	10ffeb1e 	bne	r2,r3,428d4 <__svfscanf_r+0xd4>
   42928:	80c00117 	ldw	r3,4(r16)
   4292c:	21800044 	addi	r6,r4,1
   42930:	8c400044 	addi	r17,r17,1
   42934:	18ffffc4 	addi	r3,r3,-1
   42938:	80c00115 	stw	r3,4(r16)
   4293c:	81800015 	stw	r6,0(r16)
   42940:	003fc206 	br	4284c <__svfscanf_r+0x4c>
   42944:	b009883a 	mov	r4,r22
   42948:	800b883a 	mov	r5,r16
   4294c:	00490b40 	call	490b4 <__srefill_r>
   42950:	103ff126 	beq	r2,zero,42918 <__svfscanf_r+0x118>
   42954:	d900a217 	ldw	r4,648(sp)
   42958:	2004981e 	bne	r4,zero,43bbc <__svfscanf_r+0x13bc>
   4295c:	00bfffc4 	movi	r2,-1
   42960:	d880a215 	stw	r2,648(sp)
   42964:	003fdb06 	br	428d4 <__svfscanf_r+0xd4>
   42968:	d800a315 	stw	zero,652(sp)
   4296c:	002b883a 	mov	r21,zero
   42970:	a0c00003 	ldbu	r3,0(r20)
   42974:	00801e04 	movi	r2,120
   42978:	a5000044 	addi	r20,r20,1
   4297c:	1dc03fcc 	andi	r23,r3,255
   42980:	bdc0201c 	xori	r23,r23,128
   42984:	bdffe004 	addi	r23,r23,-128
   42988:	10c08036 	bltu	r2,r3,42b8c <__svfscanf_r+0x38c>
   4298c:	18c5883a 	add	r2,r3,r3
   42990:	1085883a 	add	r2,r2,r2
   42994:	00c00134 	movhi	r3,4
   42998:	18ca6a04 	addi	r3,r3,10664
   4299c:	10c5883a 	add	r2,r2,r3
   429a0:	11000017 	ldw	r4,0(r2)
   429a4:	2000683a 	jmp	r4
   429a8:	0004295c 	xori	zero,zero,4261
   429ac:	00042b8c 	andi	zero,zero,4270
   429b0:	00042b8c 	andi	zero,zero,4270
   429b4:	00042b8c 	andi	zero,zero,4270
   429b8:	00042b8c 	andi	zero,zero,4270
   429bc:	00042b8c 	andi	zero,zero,4270
   429c0:	00042b8c 	andi	zero,zero,4270
   429c4:	00042b8c 	andi	zero,zero,4270
   429c8:	00042b8c 	andi	zero,zero,4270
   429cc:	00042b8c 	andi	zero,zero,4270
   429d0:	00042b8c 	andi	zero,zero,4270
   429d4:	00042b8c 	andi	zero,zero,4270
   429d8:	00042b8c 	andi	zero,zero,4270
   429dc:	00042b8c 	andi	zero,zero,4270
   429e0:	00042b8c 	andi	zero,zero,4270
   429e4:	00042b8c 	andi	zero,zero,4270
   429e8:	00042b8c 	andi	zero,zero,4270
   429ec:	00042b8c 	andi	zero,zero,4270
   429f0:	00042b8c 	andi	zero,zero,4270
   429f4:	00042b8c 	andi	zero,zero,4270
   429f8:	00042b8c 	andi	zero,zero,4270
   429fc:	00042b8c 	andi	zero,zero,4270
   42a00:	00042b8c 	andi	zero,zero,4270
   42a04:	00042b8c 	andi	zero,zero,4270
   42a08:	00042b8c 	andi	zero,zero,4270
   42a0c:	00042b8c 	andi	zero,zero,4270
   42a10:	00042b8c 	andi	zero,zero,4270
   42a14:	00042b8c 	andi	zero,zero,4270
   42a18:	00042b8c 	andi	zero,zero,4270
   42a1c:	00042b8c 	andi	zero,zero,4270
   42a20:	00042b8c 	andi	zero,zero,4270
   42a24:	00042b8c 	andi	zero,zero,4270
   42a28:	00042b8c 	andi	zero,zero,4270
   42a2c:	00042b8c 	andi	zero,zero,4270
   42a30:	00042b8c 	andi	zero,zero,4270
   42a34:	00042b8c 	andi	zero,zero,4270
   42a38:	00042b8c 	andi	zero,zero,4270
   42a3c:	00042910 	cmplti	zero,zero,4260
   42a40:	00042b8c 	andi	zero,zero,4270
   42a44:	00042b8c 	andi	zero,zero,4270
   42a48:	00042b8c 	andi	zero,zero,4270
   42a4c:	00042b8c 	andi	zero,zero,4270
   42a50:	00043a2c 	andhi	zero,zero,4328
   42a54:	00042b8c 	andi	zero,zero,4270
   42a58:	00042b8c 	andi	zero,zero,4270
   42a5c:	00042b8c 	andi	zero,zero,4270
   42a60:	00042b8c 	andi	zero,zero,4270
   42a64:	00042b8c 	andi	zero,zero,4270
   42a68:	00043a10 	cmplti	zero,zero,4328
   42a6c:	00043a10 	cmplti	zero,zero,4328
   42a70:	00043a10 	cmplti	zero,zero,4328
   42a74:	00043a10 	cmplti	zero,zero,4328
   42a78:	00043a10 	cmplti	zero,zero,4328
   42a7c:	00043a10 	cmplti	zero,zero,4328
   42a80:	00043a10 	cmplti	zero,zero,4328
   42a84:	00043a10 	cmplti	zero,zero,4328
   42a88:	00043a10 	cmplti	zero,zero,4328
   42a8c:	00043a10 	cmplti	zero,zero,4328
   42a90:	00042b8c 	andi	zero,zero,4270
   42a94:	00042b8c 	andi	zero,zero,4270
   42a98:	00042b8c 	andi	zero,zero,4270
   42a9c:	00042b8c 	andi	zero,zero,4270
   42aa0:	00042b8c 	andi	zero,zero,4270
   42aa4:	00042b8c 	andi	zero,zero,4270
   42aa8:	00042b8c 	andi	zero,zero,4270
   42aac:	00042b8c 	andi	zero,zero,4270
   42ab0:	00042b8c 	andi	zero,zero,4270
   42ab4:	00042b8c 	andi	zero,zero,4270
   42ab8:	00042ba0 	cmpeqi	zero,zero,4270
   42abc:	00043b14 	movui	zero,4332
   42ac0:	00042b8c 	andi	zero,zero,4270
   42ac4:	00043b14 	movui	zero,4332
   42ac8:	00042b8c 	andi	zero,zero,4270
   42acc:	00042b8c 	andi	zero,zero,4270
   42ad0:	00042b8c 	andi	zero,zero,4270
   42ad4:	00042b8c 	andi	zero,zero,4270
   42ad8:	00043a08 	cmpgei	zero,zero,4328
   42adc:	00042b8c 	andi	zero,zero,4270
   42ae0:	00042b8c 	andi	zero,zero,4270
   42ae4:	000439e8 	cmpgeui	zero,zero,4327
   42ae8:	00042b8c 	andi	zero,zero,4270
   42aec:	00042b8c 	andi	zero,zero,4270
   42af0:	00042b8c 	andi	zero,zero,4270
   42af4:	00042b8c 	andi	zero,zero,4270
   42af8:	00042b8c 	andi	zero,zero,4270
   42afc:	00042b8c 	andi	zero,zero,4270
   42b00:	00042b8c 	andi	zero,zero,4270
   42b04:	00042b8c 	andi	zero,zero,4270
   42b08:	00043a34 	movhi	zero,4328
   42b0c:	00042b8c 	andi	zero,zero,4270
   42b10:	00042b8c 	andi	zero,zero,4270
   42b14:	000439cc 	andi	zero,zero,4327
   42b18:	00042b8c 	andi	zero,zero,4270
   42b1c:	00042b8c 	andi	zero,zero,4270
   42b20:	00042b8c 	andi	zero,zero,4270
   42b24:	00042b8c 	andi	zero,zero,4270
   42b28:	00042b8c 	andi	zero,zero,4270
   42b2c:	00042b8c 	andi	zero,zero,4270
   42b30:	00042b8c 	andi	zero,zero,4270
   42b34:	00043b1c 	xori	zero,zero,4332
   42b38:	00042ba4 	muli	zero,zero,4270
   42b3c:	00043b14 	movui	zero,4332
   42b40:	00043b14 	movui	zero,4332
   42b44:	00043b14 	movui	zero,4332
   42b48:	00043b28 	cmpgeui	zero,zero,4332
   42b4c:	00043a70 	cmpltui	zero,zero,4329
   42b50:	00042b8c 	andi	zero,zero,4270
   42b54:	00042b8c 	andi	zero,zero,4270
   42b58:	00043138 	rdprs	zero,zero,4292
   42b5c:	00042b8c 	andi	zero,zero,4270
   42b60:	00043c24 	muli	zero,zero,4336
   42b64:	00043be0 	cmpeqi	zero,zero,4335
   42b68:	00043c04 	movi	zero,4336
   42b6c:	00042b8c 	andi	zero,zero,4270
   42b70:	00042b8c 	andi	zero,zero,4270
   42b74:	00043bfc 	xorhi	zero,zero,4335
   42b78:	00042b8c 	andi	zero,zero,4270
   42b7c:	00043a54 	movui	zero,4329
   42b80:	00042b8c 	andi	zero,zero,4270
   42b84:	00042b8c 	andi	zero,zero,4270
   42b88:	00043a34 	movhi	zero,4328
   42b8c:	bc87883a 	add	r3,r23,r18
   42b90:	18800003 	ldbu	r2,0(r3)
   42b94:	1080004c 	andi	r2,r2,1
   42b98:	1005003a 	cmpeq	r2,r2,zero
   42b9c:	1000011e 	bne	r2,zero,42ba4 <__svfscanf_r+0x3a4>
   42ba0:	ad400054 	ori	r21,r21,1
   42ba4:	01000174 	movhi	r4,5
   42ba8:	212b9b04 	addi	r4,r4,-20884
   42bac:	00800284 	movi	r2,10
   42bb0:	d900a015 	stw	r4,640(sp)
   42bb4:	048000c4 	movi	r18,3
   42bb8:	d880a115 	stw	r2,644(sp)
   42bbc:	80c00117 	ldw	r3,4(r16)
   42bc0:	00c13f0e 	bge	zero,r3,430c0 <__svfscanf_r+0x8c0>
   42bc4:	a880100c 	andi	r2,r21,64
   42bc8:	10001326 	beq	r2,zero,42c18 <__svfscanf_r+0x418>
   42bcc:	00800104 	movi	r2,4
   42bd0:	14bf1e36 	bltu	r2,r18,4284c <__svfscanf_r+0x4c>
   42bd4:	9485883a 	add	r2,r18,r18
   42bd8:	1085883a 	add	r2,r2,r2
   42bdc:	00c00134 	movhi	r3,4
   42be0:	18cafc04 	addi	r3,r3,11248
   42be4:	10c5883a 	add	r2,r2,r3
   42be8:	11000017 	ldw	r4,0(r2)
   42bec:	2000683a 	jmp	r4
   42bf0:	00042c54 	movui	zero,4273
   42bf4:	00042d54 	movui	zero,4277
   42bf8:	00042f64 	muli	zero,zero,4285
   42bfc:	00042dc8 	cmpgei	zero,zero,4279
   42c00:	0004309c 	xori	zero,zero,4290
   42c04:	b009883a 	mov	r4,r22
   42c08:	800b883a 	mov	r5,r16
   42c0c:	00490b40 	call	490b4 <__srefill_r>
   42c10:	103f501e 	bne	r2,zero,42954 <__svfscanf_r+0x154>
   42c14:	8c400044 	addi	r17,r17,1
   42c18:	81400017 	ldw	r5,0(r16)
   42c1c:	98800017 	ldw	r2,0(r19)
   42c20:	28c00003 	ldbu	r3,0(r5)
   42c24:	1887883a 	add	r3,r3,r2
   42c28:	19000003 	ldbu	r4,0(r3)
   42c2c:	2100020c 	andi	r4,r4,8
   42c30:	203fe626 	beq	r4,zero,42bcc <__svfscanf_r+0x3cc>
   42c34:	80c00117 	ldw	r3,4(r16)
   42c38:	18ffffc4 	addi	r3,r3,-1
   42c3c:	80c00115 	stw	r3,4(r16)
   42c40:	00fff00e 	bge	zero,r3,42c04 <__svfscanf_r+0x404>
   42c44:	29800044 	addi	r6,r5,1
   42c48:	8c400044 	addi	r17,r17,1
   42c4c:	81800015 	stw	r6,0(r16)
   42c50:	003ff106 	br	42c18 <__svfscanf_r+0x418>
   42c54:	d8c0a317 	ldw	r3,652(sp)
   42c58:	1800021e 	bne	r3,zero,42c64 <__svfscanf_r+0x464>
   42c5c:	01000044 	movi	r4,1
   42c60:	d900a315 	stw	r4,652(sp)
   42c64:	a880004c 	andi	r2,r21,1
   42c68:	1005003a 	cmpeq	r2,r2,zero
   42c6c:	1002811e 	bne	r2,zero,43674 <__svfscanf_r+0xe74>
   42c70:	ad40040c 	andi	r21,r21,16
   42c74:	a805003a 	cmpeq	r2,r21,zero
   42c78:	d880a615 	stw	r2,664(sp)
   42c7c:	1003d31e 	bne	r2,zero,43bcc <__svfscanf_r+0x13cc>
   42c80:	0027883a 	mov	r19,zero
   42c84:	d900a317 	ldw	r4,652(sp)
   42c88:	2003c726 	beq	r4,zero,43ba8 <__svfscanf_r+0x13a8>
   42c8c:	07000174 	movhi	fp,5
   42c90:	e711d904 	addi	fp,fp,18276
   42c94:	e0800017 	ldw	r2,0(fp)
   42c98:	103f2e26 	beq	r2,zero,42954 <__svfscanf_r+0x154>
   42c9c:	d8804404 	addi	r2,sp,272
   42ca0:	0025883a 	mov	r18,zero
   42ca4:	d880a515 	stw	r2,660(sp)
   42ca8:	05ffffc4 	movi	r23,-1
   42cac:	80800017 	ldw	r2,0(r16)
   42cb0:	80c00117 	ldw	r3,4(r16)
   42cb4:	d900a517 	ldw	r4,660(sp)
   42cb8:	12000003 	ldbu	r8,0(r2)
   42cbc:	18ffffc4 	addi	r3,r3,-1
   42cc0:	11800044 	addi	r6,r2,1
   42cc4:	248f883a 	add	r7,r4,r18
   42cc8:	80c00115 	stw	r3,4(r16)
   42ccc:	81800015 	stw	r6,0(r16)
   42cd0:	3a000005 	stb	r8,0(r7)
   42cd4:	d9000204 	addi	r4,sp,8
   42cd8:	000b883a 	mov	r5,zero
   42cdc:	01800204 	movi	r6,8
   42ce0:	00477b00 	call	477b0 <memset>
   42ce4:	d980a517 	ldw	r6,660(sp)
   42ce8:	94800044 	addi	r18,r18,1
   42cec:	d8800204 	addi	r2,sp,8
   42cf0:	b009883a 	mov	r4,r22
   42cf4:	980b883a 	mov	r5,r19
   42cf8:	900f883a 	mov	r7,r18
   42cfc:	d8800015 	stw	r2,0(sp)
   42d00:	004744c0 	call	4744c <_mbrtowc_r>
   42d04:	1007883a 	mov	r3,r2
   42d08:	15ff1226 	beq	r2,r23,42954 <__svfscanf_r+0x154>
   42d0c:	10039e1e 	bne	r2,zero,43b88 <__svfscanf_r+0x1388>
   42d10:	a800011e 	bne	r21,zero,42d18 <__svfscanf_r+0x518>
   42d14:	98000015 	stw	zero,0(r19)
   42d18:	d8c0a317 	ldw	r3,652(sp)
   42d1c:	d900a617 	ldw	r4,664(sp)
   42d20:	8ca3883a 	add	r17,r17,r18
   42d24:	18ffffc4 	addi	r3,r3,-1
   42d28:	d8c0a315 	stw	r3,652(sp)
   42d2c:	20000126 	beq	r4,zero,42d34 <__svfscanf_r+0x534>
   42d30:	9cc00104 	addi	r19,r19,4
   42d34:	0025883a 	mov	r18,zero
   42d38:	80c00117 	ldw	r3,4(r16)
   42d3c:	00c3950e 	bge	zero,r3,43b94 <__svfscanf_r+0x1394>
   42d40:	d880a317 	ldw	r2,652(sp)
   42d44:	10039826 	beq	r2,zero,43ba8 <__svfscanf_r+0x13a8>
   42d48:	e0800017 	ldw	r2,0(fp)
   42d4c:	90bfd71e 	bne	r18,r2,42cac <__svfscanf_r+0x4ac>
   42d50:	003f0006 	br	42954 <__svfscanf_r+0x154>
   42d54:	d880a317 	ldw	r2,652(sp)
   42d58:	1000021e 	bne	r2,zero,42d64 <__svfscanf_r+0x564>
   42d5c:	00ffffc4 	movi	r3,-1
   42d60:	d8c0a315 	stw	r3,652(sp)
   42d64:	a880040c 	andi	r2,r21,16
   42d68:	1003b826 	beq	r2,zero,43c4c <__svfscanf_r+0x144c>
   42d6c:	0027883a 	mov	r19,zero
   42d70:	dd400404 	addi	r21,sp,16
   42d74:	81000017 	ldw	r4,0(r16)
   42d78:	20800003 	ldbu	r2,0(r4)
   42d7c:	a885883a 	add	r2,r21,r2
   42d80:	10c00007 	ldb	r3,0(r2)
   42d84:	18037d26 	beq	r3,zero,43b7c <__svfscanf_r+0x137c>
   42d88:	80c00117 	ldw	r3,4(r16)
   42d8c:	21800044 	addi	r6,r4,1
   42d90:	d900a317 	ldw	r4,652(sp)
   42d94:	18ffffc4 	addi	r3,r3,-1
   42d98:	9cc00044 	addi	r19,r19,1
   42d9c:	81800015 	stw	r6,0(r16)
   42da0:	80c00115 	stw	r3,4(r16)
   42da4:	24c37526 	beq	r4,r19,43b7c <__svfscanf_r+0x137c>
   42da8:	00fff216 	blt	zero,r3,42d74 <__svfscanf_r+0x574>
   42dac:	b009883a 	mov	r4,r22
   42db0:	800b883a 	mov	r5,r16
   42db4:	00490b40 	call	490b4 <__srefill_r>
   42db8:	103fee26 	beq	r2,zero,42d74 <__svfscanf_r+0x574>
   42dbc:	983ee526 	beq	r19,zero,42954 <__svfscanf_r+0x154>
   42dc0:	8ce3883a 	add	r17,r17,r19
   42dc4:	003ea106 	br	4284c <__svfscanf_r+0x4c>
   42dc8:	d900a317 	ldw	r4,652(sp)
   42dcc:	00805704 	movi	r2,348
   42dd0:	20ffffc4 	addi	r3,r4,-1
   42dd4:	10c0bf2e 	bgeu	r2,r3,430d4 <__svfscanf_r+0x8d4>
   42dd8:	00805744 	movi	r2,349
   42ddc:	24ffa8c4 	addi	r19,r4,-349
   42de0:	ac836014 	ori	r18,r21,3456
   42de4:	d880a315 	stw	r2,652(sp)
   42de8:	d8c04404 	addi	r3,sp,272
   42dec:	d8c0a515 	stw	r3,660(sp)
   42df0:	002f883a 	mov	r23,zero
   42df4:	182b883a 	mov	r21,r3
   42df8:	81800017 	ldw	r6,0(r16)
   42dfc:	00c01344 	movi	r3,77
   42e00:	31400003 	ldbu	r5,0(r6)
   42e04:	28bff544 	addi	r2,r5,-43
   42e08:	10803fcc 	andi	r2,r2,255
   42e0c:	1880b836 	bltu	r3,r2,430f0 <__svfscanf_r+0x8f0>
   42e10:	1085883a 	add	r2,r2,r2
   42e14:	1085883a 	add	r2,r2,r2
   42e18:	00c00134 	movhi	r3,4
   42e1c:	18cb8b04 	addi	r3,r3,11820
   42e20:	10c5883a 	add	r2,r2,r3
   42e24:	11000017 	ldw	r4,0(r2)
   42e28:	2000683a 	jmp	r4
   42e2c:	00043240 	call	4324 <__alt_mem_onchip_mem-0x3bcdc>
   42e30:	000430f0 	cmpltui	zero,zero,4291
   42e34:	00043240 	call	4324 <__alt_mem_onchip_mem-0x3bcdc>
   42e38:	000430f0 	cmpltui	zero,zero,4291
   42e3c:	000430f0 	cmpltui	zero,zero,4291
   42e40:	00043284 	movi	zero,4298
   42e44:	00043a88 	cmpgei	zero,zero,4330
   42e48:	00043a88 	cmpgei	zero,zero,4330
   42e4c:	00043a88 	cmpgei	zero,zero,4330
   42e50:	00043a88 	cmpgei	zero,zero,4330
   42e54:	00043a88 	cmpgei	zero,zero,4330
   42e58:	00043a88 	cmpgei	zero,zero,4330
   42e5c:	00043a88 	cmpgei	zero,zero,4330
   42e60:	00043ab0 	cmpltui	zero,zero,4330
   42e64:	00043ab0 	cmpltui	zero,zero,4330
   42e68:	000430f0 	cmpltui	zero,zero,4291
   42e6c:	000430f0 	cmpltui	zero,zero,4291
   42e70:	000430f0 	cmpltui	zero,zero,4291
   42e74:	000430f0 	cmpltui	zero,zero,4291
   42e78:	000430f0 	cmpltui	zero,zero,4291
   42e7c:	000430f0 	cmpltui	zero,zero,4291
   42e80:	000430f0 	cmpltui	zero,zero,4291
   42e84:	00043ae0 	cmpeqi	zero,zero,4331
   42e88:	00043ae0 	cmpeqi	zero,zero,4331
   42e8c:	00043ae0 	cmpeqi	zero,zero,4331
   42e90:	00043ae0 	cmpeqi	zero,zero,4331
   42e94:	00043ae0 	cmpeqi	zero,zero,4331
   42e98:	00043ae0 	cmpeqi	zero,zero,4331
   42e9c:	000430f0 	cmpltui	zero,zero,4291
   42ea0:	000430f0 	cmpltui	zero,zero,4291
   42ea4:	000430f0 	cmpltui	zero,zero,4291
   42ea8:	000430f0 	cmpltui	zero,zero,4291
   42eac:	000430f0 	cmpltui	zero,zero,4291
   42eb0:	000430f0 	cmpltui	zero,zero,4291
   42eb4:	000430f0 	cmpltui	zero,zero,4291
   42eb8:	000430f0 	cmpltui	zero,zero,4291
   42ebc:	000430f0 	cmpltui	zero,zero,4291
   42ec0:	000430f0 	cmpltui	zero,zero,4291
   42ec4:	000430f0 	cmpltui	zero,zero,4291
   42ec8:	000430f0 	cmpltui	zero,zero,4291
   42ecc:	000430f0 	cmpltui	zero,zero,4291
   42ed0:	000430f0 	cmpltui	zero,zero,4291
   42ed4:	000430f0 	cmpltui	zero,zero,4291
   42ed8:	000430f0 	cmpltui	zero,zero,4291
   42edc:	000430f0 	cmpltui	zero,zero,4291
   42ee0:	00043af0 	cmpltui	zero,zero,4331
   42ee4:	000430f0 	cmpltui	zero,zero,4291
   42ee8:	000430f0 	cmpltui	zero,zero,4291
   42eec:	000430f0 	cmpltui	zero,zero,4291
   42ef0:	000430f0 	cmpltui	zero,zero,4291
   42ef4:	000430f0 	cmpltui	zero,zero,4291
   42ef8:	000430f0 	cmpltui	zero,zero,4291
   42efc:	000430f0 	cmpltui	zero,zero,4291
   42f00:	000430f0 	cmpltui	zero,zero,4291
   42f04:	00043ae0 	cmpeqi	zero,zero,4331
   42f08:	00043ae0 	cmpeqi	zero,zero,4331
   42f0c:	00043ae0 	cmpeqi	zero,zero,4331
   42f10:	00043ae0 	cmpeqi	zero,zero,4331
   42f14:	00043ae0 	cmpeqi	zero,zero,4331
   42f18:	00043ae0 	cmpeqi	zero,zero,4331
   42f1c:	000430f0 	cmpltui	zero,zero,4291
   42f20:	000430f0 	cmpltui	zero,zero,4291
   42f24:	000430f0 	cmpltui	zero,zero,4291
   42f28:	000430f0 	cmpltui	zero,zero,4291
   42f2c:	000430f0 	cmpltui	zero,zero,4291
   42f30:	000430f0 	cmpltui	zero,zero,4291
   42f34:	000430f0 	cmpltui	zero,zero,4291
   42f38:	000430f0 	cmpltui	zero,zero,4291
   42f3c:	000430f0 	cmpltui	zero,zero,4291
   42f40:	000430f0 	cmpltui	zero,zero,4291
   42f44:	000430f0 	cmpltui	zero,zero,4291
   42f48:	000430f0 	cmpltui	zero,zero,4291
   42f4c:	000430f0 	cmpltui	zero,zero,4291
   42f50:	000430f0 	cmpltui	zero,zero,4291
   42f54:	000430f0 	cmpltui	zero,zero,4291
   42f58:	000430f0 	cmpltui	zero,zero,4291
   42f5c:	000430f0 	cmpltui	zero,zero,4291
   42f60:	00043af0 	cmpltui	zero,zero,4331
   42f64:	d900a317 	ldw	r4,652(sp)
   42f68:	2000021e 	bne	r4,zero,42f74 <__svfscanf_r+0x774>
   42f6c:	00bfffc4 	movi	r2,-1
   42f70:	d880a315 	stw	r2,652(sp)
   42f74:	a880004c 	andi	r2,r21,1
   42f78:	1005003a 	cmpeq	r2,r2,zero
   42f7c:	1003651e 	bne	r2,zero,43d14 <__svfscanf_r+0x1514>
   42f80:	adc0040c 	andi	r23,r21,16
   42f84:	b807003a 	cmpeq	r3,r23,zero
   42f88:	d8c0a715 	stw	r3,668(sp)
   42f8c:	1802f61e 	bne	r3,zero,43b68 <__svfscanf_r+0x1368>
   42f90:	dd400104 	addi	r21,sp,4
   42f94:	0025883a 	mov	r18,zero
   42f98:	073fffc4 	movi	fp,-1
   42f9c:	81400017 	ldw	r5,0(r16)
   42fa0:	98800017 	ldw	r2,0(r19)
   42fa4:	29c00003 	ldbu	r7,0(r5)
   42fa8:	38c03fcc 	andi	r3,r7,255
   42fac:	1887883a 	add	r3,r3,r2
   42fb0:	19000003 	ldbu	r4,0(r3)
   42fb4:	2100020c 	andi	r4,r4,8
   42fb8:	2000321e 	bne	r4,zero,43084 <__svfscanf_r+0x884>
   42fbc:	d8c0a317 	ldw	r3,652(sp)
   42fc0:	18003026 	beq	r3,zero,43084 <__svfscanf_r+0x884>
   42fc4:	00800174 	movhi	r2,5
   42fc8:	1091d904 	addi	r2,r2,18276
   42fcc:	10c00017 	ldw	r3,0(r2)
   42fd0:	90fe6026 	beq	r18,r3,42954 <__svfscanf_r+0x154>
   42fd4:	d8c04404 	addi	r3,sp,272
   42fd8:	80800117 	ldw	r2,4(r16)
   42fdc:	d8c0a515 	stw	r3,660(sp)
   42fe0:	d900a517 	ldw	r4,660(sp)
   42fe4:	10ffffc4 	addi	r3,r2,-1
   42fe8:	29800044 	addi	r6,r5,1
   42fec:	80c00115 	stw	r3,4(r16)
   42ff0:	2485883a 	add	r2,r4,r18
   42ff4:	81800015 	stw	r6,0(r16)
   42ff8:	d9000204 	addi	r4,sp,8
   42ffc:	000b883a 	mov	r5,zero
   43000:	01800204 	movi	r6,8
   43004:	11c00005 	stb	r7,0(r2)
   43008:	00477b00 	call	477b0 <memset>
   4300c:	d980a517 	ldw	r6,660(sp)
   43010:	94800044 	addi	r18,r18,1
   43014:	d8800204 	addi	r2,sp,8
   43018:	b009883a 	mov	r4,r22
   4301c:	a80b883a 	mov	r5,r21
   43020:	900f883a 	mov	r7,r18
   43024:	d8800015 	stw	r2,0(sp)
   43028:	004744c0 	call	4744c <_mbrtowc_r>
   4302c:	1007883a 	mov	r3,r2
   43030:	173e4826 	beq	r2,fp,42954 <__svfscanf_r+0x154>
   43034:	1002c91e 	bne	r2,zero,43b5c <__svfscanf_r+0x135c>
   43038:	a8000015 	stw	zero,0(r21)
   4303c:	a9000017 	ldw	r4,0(r21)
   43040:	0046a880 	call	46a88 <iswspace>
   43044:	1002bc1e 	bne	r2,zero,43b38 <__svfscanf_r+0x1338>
   43048:	d900a317 	ldw	r4,652(sp)
   4304c:	d880a717 	ldw	r2,668(sp)
   43050:	8ca3883a 	add	r17,r17,r18
   43054:	213fffc4 	addi	r4,r4,-1
   43058:	d900a315 	stw	r4,652(sp)
   4305c:	10000126 	beq	r2,zero,43064 <__svfscanf_r+0x864>
   43060:	ad400104 	addi	r21,r21,4
   43064:	0025883a 	mov	r18,zero
   43068:	80c00117 	ldw	r3,4(r16)
   4306c:	00ffcb16 	blt	zero,r3,42f9c <__svfscanf_r+0x79c>
   43070:	b009883a 	mov	r4,r22
   43074:	800b883a 	mov	r5,r16
   43078:	00490b40 	call	490b4 <__srefill_r>
   4307c:	103fc726 	beq	r2,zero,42f9c <__svfscanf_r+0x79c>
   43080:	903e341e 	bne	r18,zero,42954 <__svfscanf_r+0x154>
   43084:	b83df11e 	bne	r23,zero,4284c <__svfscanf_r+0x4c>
   43088:	d900a217 	ldw	r4,648(sp)
   4308c:	a8000015 	stw	zero,0(r21)
   43090:	21000044 	addi	r4,r4,1
   43094:	d900a215 	stw	r4,648(sp)
   43098:	003dec06 	br	4284c <__svfscanf_r+0x4c>
   4309c:	d900a317 	ldw	r4,652(sp)
   430a0:	00805704 	movi	r2,348
   430a4:	20ffffc4 	addi	r3,r4,-1
   430a8:	10c0902e 	bgeu	r2,r3,432ec <__svfscanf_r+0xaec>
   430ac:	00805744 	movi	r2,349
   430b0:	24ffa8c4 	addi	r19,r4,-349
   430b4:	ad41e014 	ori	r21,r21,1920
   430b8:	d880a315 	stw	r2,652(sp)
   430bc:	00010806 	br	434e0 <__svfscanf_r+0xce0>
   430c0:	b009883a 	mov	r4,r22
   430c4:	800b883a 	mov	r5,r16
   430c8:	00490b40 	call	490b4 <__srefill_r>
   430cc:	103ebd26 	beq	r2,zero,42bc4 <__svfscanf_r+0x3c4>
   430d0:	003e2006 	br	42954 <__svfscanf_r+0x154>
   430d4:	d900a317 	ldw	r4,652(sp)
   430d8:	ac836014 	ori	r18,r21,3456
   430dc:	2002941e 	bne	r4,zero,43b30 <__svfscanf_r+0x1330>
   430e0:	d8804404 	addi	r2,sp,272
   430e4:	d880a515 	stw	r2,660(sp)
   430e8:	002f883a 	mov	r23,zero
   430ec:	102b883a 	mov	r21,r2
   430f0:	9080400c 	andi	r2,r18,256
   430f4:	10000926 	beq	r2,zero,4311c <__svfscanf_r+0x91c>
   430f8:	d8c0a517 	ldw	r3,660(sp)
   430fc:	1d40052e 	bgeu	r3,r21,43114 <__svfscanf_r+0x914>
   43100:	ad7fffc4 	addi	r21,r21,-1
   43104:	a9400007 	ldb	r5,0(r21)
   43108:	b009883a 	mov	r4,r22
   4310c:	800d883a 	mov	r6,r16
   43110:	004ba280 	call	4ba28 <_ungetc_r>
   43114:	d900a517 	ldw	r4,660(sp)
   43118:	257dee26 	beq	r4,r21,428d4 <__svfscanf_r+0xd4>
   4311c:	9080040c 	andi	r2,r18,16
   43120:	10000a26 	beq	r2,zero,4314c <__svfscanf_r+0x94c>
   43124:	d8c0a517 	ldw	r3,660(sp)
   43128:	a8c5c83a 	sub	r2,r21,r3
   4312c:	b885883a 	add	r2,r23,r2
   43130:	88a3883a 	add	r17,r17,r2
   43134:	003dc506 	br	4284c <__svfscanf_r+0x4c>
   43138:	a0c00007 	ldb	r3,0(r20)
   4313c:	00801b04 	movi	r2,108
   43140:	18801726 	beq	r3,r2,431a0 <__svfscanf_r+0x9a0>
   43144:	ad400054 	ori	r21,r21,1
   43148:	003e0906 	br	42970 <__svfscanf_r+0x170>
   4314c:	a8000005 	stb	zero,0(r21)
   43150:	d8c0a017 	ldw	r3,640(sp)
   43154:	d940a517 	ldw	r5,660(sp)
   43158:	d9c0a117 	ldw	r7,644(sp)
   4315c:	b009883a 	mov	r4,r22
   43160:	000d883a 	mov	r6,zero
   43164:	183ee83a 	callr	r3
   43168:	1007883a 	mov	r3,r2
   4316c:	9080080c 	andi	r2,r18,32
   43170:	1000251e 	bne	r2,zero,43208 <__svfscanf_r+0xa08>
   43174:	9080010c 	andi	r2,r18,4
   43178:	10000c26 	beq	r2,zero,431ac <__svfscanf_r+0x9ac>
   4317c:	d900a417 	ldw	r4,656(sp)
   43180:	20800017 	ldw	r2,0(r4)
   43184:	21000104 	addi	r4,r4,4
   43188:	d900a415 	stw	r4,656(sp)
   4318c:	10c0000d 	sth	r3,0(r2)
   43190:	d880a217 	ldw	r2,648(sp)
   43194:	10800044 	addi	r2,r2,1
   43198:	d880a215 	stw	r2,648(sp)
   4319c:	003fe106 	br	43124 <__svfscanf_r+0x924>
   431a0:	a5000044 	addi	r20,r20,1
   431a4:	ad400094 	ori	r21,r21,2
   431a8:	003df106 	br	42970 <__svfscanf_r+0x170>
   431ac:	9080004c 	andi	r2,r18,1
   431b0:	1005003a 	cmpeq	r2,r2,zero
   431b4:	10001426 	beq	r2,zero,43208 <__svfscanf_r+0xa08>
   431b8:	9080008c 	andi	r2,r18,2
   431bc:	10001226 	beq	r2,zero,43208 <__svfscanf_r+0xa08>
   431c0:	d8c0a017 	ldw	r3,640(sp)
   431c4:	00800174 	movhi	r2,5
   431c8:	10acfe04 	addi	r2,r2,-19464
   431cc:	18801426 	beq	r3,r2,43220 <__svfscanf_r+0xa20>
   431d0:	d9c0a117 	ldw	r7,644(sp)
   431d4:	d940a517 	ldw	r5,660(sp)
   431d8:	000d883a 	mov	r6,zero
   431dc:	b009883a 	mov	r4,r22
   431e0:	004b0e00 	call	4b0e0 <_strtoll_r>
   431e4:	100d883a 	mov	r6,r2
   431e8:	180f883a 	mov	r7,r3
   431ec:	d900a417 	ldw	r4,656(sp)
   431f0:	20800017 	ldw	r2,0(r4)
   431f4:	21000104 	addi	r4,r4,4
   431f8:	d900a415 	stw	r4,656(sp)
   431fc:	11c00115 	stw	r7,4(r2)
   43200:	11800015 	stw	r6,0(r2)
   43204:	003fe206 	br	43190 <__svfscanf_r+0x990>
   43208:	d900a417 	ldw	r4,656(sp)
   4320c:	20800017 	ldw	r2,0(r4)
   43210:	21000104 	addi	r4,r4,4
   43214:	d900a415 	stw	r4,656(sp)
   43218:	10c00015 	stw	r3,0(r2)
   4321c:	003fdc06 	br	43190 <__svfscanf_r+0x990>
   43220:	d9c0a117 	ldw	r7,644(sp)
   43224:	d940a517 	ldw	r5,660(sp)
   43228:	000d883a 	mov	r6,zero
   4322c:	b009883a 	mov	r4,r22
   43230:	004b65c0 	call	4b65c <_strtoull_r>
   43234:	100d883a 	mov	r6,r2
   43238:	180f883a 	mov	r7,r3
   4323c:	003feb06 	br	431ec <__svfscanf_r+0x9ec>
   43240:	9080200c 	andi	r2,r18,128
   43244:	103faa26 	beq	r2,zero,430f0 <__svfscanf_r+0x8f0>
   43248:	00bfdfc4 	movi	r2,-129
   4324c:	90a4703a 	and	r18,r18,r2
   43250:	a9400005 	stb	r5,0(r21)
   43254:	ad400044 	addi	r21,r21,1
   43258:	80c00117 	ldw	r3,4(r16)
   4325c:	18ffffc4 	addi	r3,r3,-1
   43260:	80c00115 	stw	r3,4(r16)
   43264:	00c0130e 	bge	zero,r3,432b4 <__svfscanf_r+0xab4>
   43268:	31800044 	addi	r6,r6,1
   4326c:	81800015 	stw	r6,0(r16)
   43270:	d880a317 	ldw	r2,652(sp)
   43274:	10bfffc4 	addi	r2,r2,-1
   43278:	d880a315 	stw	r2,652(sp)
   4327c:	103ede1e 	bne	r2,zero,42df8 <__svfscanf_r+0x5f8>
   43280:	003f9b06 	br	430f0 <__svfscanf_r+0x8f0>
   43284:	9082000c 	andi	r2,r18,2048
   43288:	103ff126 	beq	r2,zero,43250 <__svfscanf_r+0xa50>
   4328c:	d8c0a117 	ldw	r3,644(sp)
   43290:	1800031e 	bne	r3,zero,432a0 <__svfscanf_r+0xaa0>
   43294:	01000204 	movi	r4,8
   43298:	94808014 	ori	r18,r18,512
   4329c:	d900a115 	stw	r4,644(sp)
   432a0:	9081000c 	andi	r2,r18,1024
   432a4:	10000826 	beq	r2,zero,432c8 <__svfscanf_r+0xac8>
   432a8:	00be9fc4 	movi	r2,-1409
   432ac:	90a4703a 	and	r18,r18,r2
   432b0:	003fe706 	br	43250 <__svfscanf_r+0xa50>
   432b4:	b009883a 	mov	r4,r22
   432b8:	800b883a 	mov	r5,r16
   432bc:	00490b40 	call	490b4 <__srefill_r>
   432c0:	103feb26 	beq	r2,zero,43270 <__svfscanf_r+0xa70>
   432c4:	003f8a06 	br	430f0 <__svfscanf_r+0x8f0>
   432c8:	98000426 	beq	r19,zero,432dc <__svfscanf_r+0xadc>
   432cc:	d880a317 	ldw	r2,652(sp)
   432d0:	9cffffc4 	addi	r19,r19,-1
   432d4:	10800044 	addi	r2,r2,1
   432d8:	d880a315 	stw	r2,652(sp)
   432dc:	00bf1fc4 	movi	r2,-897
   432e0:	90a4703a 	and	r18,r18,r2
   432e4:	bdc00044 	addi	r23,r23,1
   432e8:	003fdb06 	br	43258 <__svfscanf_r+0xa58>
   432ec:	d900a317 	ldw	r4,652(sp)
   432f0:	ad41e014 	ori	r21,r21,1920
   432f4:	2000791e 	bne	r4,zero,434dc <__svfscanf_r+0xcdc>
   432f8:	d8c04404 	addi	r3,sp,272
   432fc:	d8c0a515 	stw	r3,660(sp)
   43300:	182f883a 	mov	r23,r3
   43304:	d8009c15 	stw	zero,624(sp)
   43308:	d8009d15 	stw	zero,628(sp)
   4330c:	d8009f15 	stw	zero,636(sp)
   43310:	d8009e15 	stw	zero,632(sp)
   43314:	0039883a 	mov	fp,zero
   43318:	e1003fcc 	andi	r4,fp,255
   4331c:	2100201c 	xori	r4,r4,128
   43320:	213fe004 	addi	r4,r4,-128
   43324:	20ffffc4 	addi	r3,r4,-1
   43328:	00800184 	movi	r2,6
   4332c:	10c01736 	bltu	r2,r3,4338c <__svfscanf_r+0xb8c>
   43330:	00c00084 	movi	r3,2
   43334:	19026d0e 	bge	r3,r4,43cec <__svfscanf_r+0x14ec>
   43338:	008000c4 	movi	r2,3
   4333c:	1100130e 	bge	r2,r4,4338c <__svfscanf_r+0xb8c>
   43340:	e4ffffc4 	addi	r19,fp,-1
   43344:	b825883a 	mov	r18,r23
   43348:	94bfffc4 	addi	r18,r18,-1
   4334c:	91400007 	ldb	r5,0(r18)
   43350:	b009883a 	mov	r4,r22
   43354:	800d883a 	mov	r6,r16
   43358:	004ba280 	call	4ba28 <_ungetc_r>
   4335c:	9cffffc4 	addi	r19,r19,-1
   43360:	98c03fcc 	andi	r3,r19,255
   43364:	18c0201c 	xori	r3,r3,128
   43368:	18ffe004 	addi	r3,r3,-128
   4336c:	00800084 	movi	r2,2
   43370:	18bff51e 	bne	r3,r2,43348 <__svfscanf_r+0xb48>
   43374:	e0bfff04 	addi	r2,fp,-4
   43378:	10803fcc 	andi	r2,r2,255
   4337c:	b887c83a 	sub	r3,r23,r2
   43380:	8885c83a 	sub	r2,r17,r2
   43384:	147fffc4 	addi	r17,r2,-1
   43388:	1dffffc4 	addi	r23,r3,-1
   4338c:	a880400c 	andi	r2,r21,256
   43390:	10001226 	beq	r2,zero,433dc <__svfscanf_r+0xbdc>
   43394:	a881000c 	andi	r2,r21,1024
   43398:	10002b1e 	bne	r2,zero,43448 <__svfscanf_r+0xc48>
   4339c:	bdffffc4 	addi	r23,r23,-1
   433a0:	b9400007 	ldb	r5,0(r23)
   433a4:	00801944 	movi	r2,101
   433a8:	8c7fffc4 	addi	r17,r17,-1
   433ac:	28800826 	beq	r5,r2,433d0 <__svfscanf_r+0xbd0>
   433b0:	00801144 	movi	r2,69
   433b4:	28800626 	beq	r5,r2,433d0 <__svfscanf_r+0xbd0>
   433b8:	bdffffc4 	addi	r23,r23,-1
   433bc:	b009883a 	mov	r4,r22
   433c0:	800d883a 	mov	r6,r16
   433c4:	004ba280 	call	4ba28 <_ungetc_r>
   433c8:	b9400007 	ldb	r5,0(r23)
   433cc:	8c7fffc4 	addi	r17,r17,-1
   433d0:	b009883a 	mov	r4,r22
   433d4:	800d883a 	mov	r6,r16
   433d8:	004ba280 	call	4ba28 <_ungetc_r>
   433dc:	a880040c 	andi	r2,r21,16
   433e0:	103d1a1e 	bne	r2,zero,4284c <__svfscanf_r+0x4c>
   433e4:	a8c1800c 	andi	r3,r21,1536
   433e8:	00810004 	movi	r2,1024
   433ec:	b8000005 	stb	zero,0(r23)
   433f0:	18813326 	beq	r3,r2,438c0 <__svfscanf_r+0x10c0>
   433f4:	d8809d17 	ldw	r2,628(sp)
   433f8:	1000251e 	bne	r2,zero,43490 <__svfscanf_r+0xc90>
   433fc:	d940a517 	ldw	r5,660(sp)
   43400:	b009883a 	mov	r4,r22
   43404:	000d883a 	mov	r6,zero
   43408:	00497600 	call	49760 <_strtod_r>
   4340c:	a900004c 	andi	r4,r21,1
   43410:	2009003a 	cmpeq	r4,r4,zero
   43414:	1025883a 	mov	r18,r2
   43418:	1827883a 	mov	r19,r3
   4341c:	2000141e 	bne	r4,zero,43470 <__svfscanf_r+0xc70>
   43420:	d8c0a417 	ldw	r3,656(sp)
   43424:	18800017 	ldw	r2,0(r3)
   43428:	1d400104 	addi	r21,r3,4
   4342c:	14c00115 	stw	r19,4(r2)
   43430:	14800015 	stw	r18,0(r2)
   43434:	d8c0a217 	ldw	r3,648(sp)
   43438:	dd40a415 	stw	r21,656(sp)
   4343c:	18c00044 	addi	r3,r3,1
   43440:	d8c0a215 	stw	r3,648(sp)
   43444:	003d0106 	br	4284c <__svfscanf_r+0x4c>
   43448:	d900a517 	ldw	r4,660(sp)
   4344c:	25fd212e 	bgeu	r4,r23,428d4 <__svfscanf_r+0xd4>
   43450:	bdffffc4 	addi	r23,r23,-1
   43454:	b9400007 	ldb	r5,0(r23)
   43458:	b009883a 	mov	r4,r22
   4345c:	800d883a 	mov	r6,r16
   43460:	004ba280 	call	4ba28 <_ungetc_r>
   43464:	d880a517 	ldw	r2,660(sp)
   43468:	15fff936 	bltu	r2,r23,43450 <__svfscanf_r+0xc50>
   4346c:	003d1906 	br	428d4 <__svfscanf_r+0xd4>
   43470:	a880008c 	andi	r2,r21,2
   43474:	10011926 	beq	r2,zero,438dc <__svfscanf_r+0x10dc>
   43478:	d900a417 	ldw	r4,656(sp)
   4347c:	20800017 	ldw	r2,0(r4)
   43480:	25400104 	addi	r21,r4,4
   43484:	10c00115 	stw	r3,4(r2)
   43488:	14800015 	stw	r18,0(r2)
   4348c:	003fe906 	br	43434 <__svfscanf_r+0xc34>
   43490:	d8c09c17 	ldw	r3,624(sp)
   43494:	b009883a 	mov	r4,r22
   43498:	000d883a 	mov	r6,zero
   4349c:	19400044 	addi	r5,r3,1
   434a0:	01c00284 	movi	r7,10
   434a4:	004ae6c0 	call	4ae6c <_strtol_r>
   434a8:	d9009d17 	ldw	r4,628(sp)
   434ac:	110dc83a 	sub	r6,r2,r4
   434b0:	d8c0a517 	ldw	r3,660(sp)
   434b4:	d9009c17 	ldw	r4,624(sp)
   434b8:	188054c4 	addi	r2,r3,339
   434bc:	20800236 	bltu	r4,r2,434c8 <__svfscanf_r+0xcc8>
   434c0:	18805484 	addi	r2,r3,338
   434c4:	d8809c15 	stw	r2,624(sp)
   434c8:	d9009c17 	ldw	r4,624(sp)
   434cc:	01400174 	movhi	r5,5
   434d0:	2949d604 	addi	r5,r5,10072
   434d4:	004943c0 	call	4943c <sprintf>
   434d8:	003fc806 	br	433fc <__svfscanf_r+0xbfc>
   434dc:	0027883a 	mov	r19,zero
   434e0:	d8c04404 	addi	r3,sp,272
   434e4:	d8c0a515 	stw	r3,660(sp)
   434e8:	182f883a 	mov	r23,r3
   434ec:	d8009f15 	stw	zero,636(sp)
   434f0:	d8009e15 	stw	zero,632(sp)
   434f4:	d8009d15 	stw	zero,628(sp)
   434f8:	d8009c15 	stw	zero,624(sp)
   434fc:	0039883a 	mov	fp,zero
   43500:	0025883a 	mov	r18,zero
   43504:	80800017 	ldw	r2,0(r16)
   43508:	11400003 	ldbu	r5,0(r2)
   4350c:	00801384 	movi	r2,78
   43510:	28fff544 	addi	r3,r5,-43
   43514:	18c03fcc 	andi	r3,r3,255
   43518:	10c08336 	bltu	r2,r3,43728 <__svfscanf_r+0xf28>
   4351c:	18c5883a 	add	r2,r3,r3
   43520:	1085883a 	add	r2,r2,r2
   43524:	00c00134 	movhi	r3,4
   43528:	18cd4e04 	addi	r3,r3,13624
   4352c:	10c5883a 	add	r2,r2,r3
   43530:	11000017 	ldw	r4,0(r2)
   43534:	2000683a 	jmp	r4
   43538:	000436e0 	cmpeqi	zero,zero,4315
   4353c:	00043728 	cmpgeui	zero,zero,4316
   43540:	000436e0 	cmpeqi	zero,zero,4315
   43544:	0004376c 	andhi	zero,zero,4317
   43548:	00043728 	cmpgeui	zero,zero,4316
   4354c:	000437d8 	cmpnei	zero,zero,4319
   43550:	0004380c 	andi	zero,zero,4320
   43554:	0004380c 	andi	zero,zero,4320
   43558:	0004380c 	andi	zero,zero,4320
   4355c:	0004380c 	andi	zero,zero,4320
   43560:	0004380c 	andi	zero,zero,4320
   43564:	0004380c 	andi	zero,zero,4320
   43568:	0004380c 	andi	zero,zero,4320
   4356c:	0004380c 	andi	zero,zero,4320
   43570:	0004380c 	andi	zero,zero,4320
   43574:	00043728 	cmpgeui	zero,zero,4316
   43578:	00043728 	cmpgeui	zero,zero,4316
   4357c:	00043728 	cmpgeui	zero,zero,4316
   43580:	00043728 	cmpgeui	zero,zero,4316
   43584:	00043728 	cmpgeui	zero,zero,4316
   43588:	00043728 	cmpgeui	zero,zero,4316
   4358c:	00043728 	cmpgeui	zero,zero,4316
   43590:	0004382c 	andhi	zero,zero,4320
   43594:	00043728 	cmpgeui	zero,zero,4316
   43598:	00043728 	cmpgeui	zero,zero,4316
   4359c:	00043728 	cmpgeui	zero,zero,4316
   435a0:	0004383c 	xorhi	zero,zero,4320
   435a4:	00043888 	cmpgei	zero,zero,4322
   435a8:	00043728 	cmpgeui	zero,zero,4316
   435ac:	00043728 	cmpgeui	zero,zero,4316
   435b0:	00043960 	cmpeqi	zero,zero,4325
   435b4:	00043728 	cmpgeui	zero,zero,4316
   435b8:	00043728 	cmpgeui	zero,zero,4316
   435bc:	00043728 	cmpgeui	zero,zero,4316
   435c0:	00043728 	cmpgeui	zero,zero,4316
   435c4:	0004390c 	andi	zero,zero,4324
   435c8:	00043728 	cmpgeui	zero,zero,4316
   435cc:	00043728 	cmpgeui	zero,zero,4316
   435d0:	00043728 	cmpgeui	zero,zero,4316
   435d4:	00043728 	cmpgeui	zero,zero,4316
   435d8:	00043728 	cmpgeui	zero,zero,4316
   435dc:	000439a0 	cmpeqi	zero,zero,4326
   435e0:	00043728 	cmpgeui	zero,zero,4316
   435e4:	00043728 	cmpgeui	zero,zero,4316
   435e8:	00043728 	cmpgeui	zero,zero,4316
   435ec:	00043728 	cmpgeui	zero,zero,4316
   435f0:	000438a4 	muli	zero,zero,4322
   435f4:	00043728 	cmpgeui	zero,zero,4316
   435f8:	00043728 	cmpgeui	zero,zero,4316
   435fc:	00043728 	cmpgeui	zero,zero,4316
   43600:	00043728 	cmpgeui	zero,zero,4316
   43604:	00043728 	cmpgeui	zero,zero,4316
   43608:	00043728 	cmpgeui	zero,zero,4316
   4360c:	00043728 	cmpgeui	zero,zero,4316
   43610:	0004382c 	andhi	zero,zero,4320
   43614:	00043728 	cmpgeui	zero,zero,4316
   43618:	00043728 	cmpgeui	zero,zero,4316
   4361c:	00043728 	cmpgeui	zero,zero,4316
   43620:	0004383c 	xorhi	zero,zero,4320
   43624:	00043888 	cmpgei	zero,zero,4322
   43628:	00043728 	cmpgeui	zero,zero,4316
   4362c:	00043728 	cmpgeui	zero,zero,4316
   43630:	00043960 	cmpeqi	zero,zero,4325
   43634:	00043728 	cmpgeui	zero,zero,4316
   43638:	00043728 	cmpgeui	zero,zero,4316
   4363c:	00043728 	cmpgeui	zero,zero,4316
   43640:	00043728 	cmpgeui	zero,zero,4316
   43644:	0004390c 	andi	zero,zero,4324
   43648:	00043728 	cmpgeui	zero,zero,4316
   4364c:	00043728 	cmpgeui	zero,zero,4316
   43650:	00043728 	cmpgeui	zero,zero,4316
   43654:	00043728 	cmpgeui	zero,zero,4316
   43658:	00043728 	cmpgeui	zero,zero,4316
   4365c:	000439a0 	cmpeqi	zero,zero,4326
   43660:	00043728 	cmpgeui	zero,zero,4316
   43664:	00043728 	cmpgeui	zero,zero,4316
   43668:	00043728 	cmpgeui	zero,zero,4316
   4366c:	00043728 	cmpgeui	zero,zero,4316
   43670:	000438a4 	muli	zero,zero,4322
   43674:	a880040c 	andi	r2,r21,16
   43678:	10004826 	beq	r2,zero,4379c <__svfscanf_r+0xf9c>
   4367c:	0027883a 	mov	r19,zero
   43680:	00000b06 	br	436b0 <__svfscanf_r+0xeb0>
   43684:	80800017 	ldw	r2,0(r16)
   43688:	b009883a 	mov	r4,r22
   4368c:	800b883a 	mov	r5,r16
   43690:	148d883a 	add	r6,r2,r18
   43694:	81800015 	stw	r6,0(r16)
   43698:	9ca7883a 	add	r19,r19,r18
   4369c:	00490b40 	call	490b4 <__srefill_r>
   436a0:	103dc61e 	bne	r2,zero,42dbc <__svfscanf_r+0x5bc>
   436a4:	d880a317 	ldw	r2,652(sp)
   436a8:	1485c83a 	sub	r2,r2,r18
   436ac:	d880a315 	stw	r2,652(sp)
   436b0:	84800117 	ldw	r18,4(r16)
   436b4:	d900a317 	ldw	r4,652(sp)
   436b8:	913ff216 	blt	r18,r4,43684 <__svfscanf_r+0xe84>
   436bc:	d900a317 	ldw	r4,652(sp)
   436c0:	80800017 	ldw	r2,0(r16)
   436c4:	9927883a 	add	r19,r19,r4
   436c8:	9107c83a 	sub	r3,r18,r4
   436cc:	110d883a 	add	r6,r2,r4
   436d0:	8ce3883a 	add	r17,r17,r19
   436d4:	80c00115 	stw	r3,4(r16)
   436d8:	81800015 	stw	r6,0(r16)
   436dc:	003c5b06 	br	4284c <__svfscanf_r+0x4c>
   436e0:	a880200c 	andi	r2,r21,128
   436e4:	10001026 	beq	r2,zero,43728 <__svfscanf_r+0xf28>
   436e8:	00bfdfc4 	movi	r2,-129
   436ec:	a8aa703a 	and	r21,r21,r2
   436f0:	b9400005 	stb	r5,0(r23)
   436f4:	bdc00044 	addi	r23,r23,1
   436f8:	80c00117 	ldw	r3,4(r16)
   436fc:	8c400044 	addi	r17,r17,1
   43700:	18bfffc4 	addi	r2,r3,-1
   43704:	80800115 	stw	r2,4(r16)
   43708:	00801f0e 	bge	zero,r2,43788 <__svfscanf_r+0xf88>
   4370c:	80800017 	ldw	r2,0(r16)
   43710:	10800044 	addi	r2,r2,1
   43714:	80800015 	stw	r2,0(r16)
   43718:	d880a317 	ldw	r2,652(sp)
   4371c:	10bfffc4 	addi	r2,r2,-1
   43720:	d880a315 	stw	r2,652(sp)
   43724:	103f771e 	bne	r2,zero,43504 <__svfscanf_r+0xd04>
   43728:	d8c09e17 	ldw	r3,632(sp)
   4372c:	18000226 	beq	r3,zero,43738 <__svfscanf_r+0xf38>
   43730:	00bfbfc4 	movi	r2,-257
   43734:	a8aa703a 	and	r21,r21,r2
   43738:	90ffffc4 	addi	r3,r18,-1
   4373c:	00800044 	movi	r2,1
   43740:	10fef536 	bltu	r2,r3,43318 <__svfscanf_r+0xb18>
   43744:	d900a517 	ldw	r4,660(sp)
   43748:	25fc622e 	bgeu	r4,r23,428d4 <__svfscanf_r+0xd4>
   4374c:	bdffffc4 	addi	r23,r23,-1
   43750:	b9400007 	ldb	r5,0(r23)
   43754:	b009883a 	mov	r4,r22
   43758:	800d883a 	mov	r6,r16
   4375c:	004ba280 	call	4ba28 <_ungetc_r>
   43760:	d880a517 	ldw	r2,660(sp)
   43764:	15fff936 	bltu	r2,r23,4374c <__svfscanf_r+0xf4c>
   43768:	003c5a06 	br	428d4 <__svfscanf_r+0xd4>
   4376c:	a880800c 	andi	r2,r21,512
   43770:	103fed26 	beq	r2,zero,43728 <__svfscanf_r+0xf28>
   43774:	d9009e17 	ldw	r4,632(sp)
   43778:	00bf5fc4 	movi	r2,-641
   4377c:	a8aa703a 	and	r21,r21,r2
   43780:	d9009f15 	stw	r4,636(sp)
   43784:	003fda06 	br	436f0 <__svfscanf_r+0xef0>
   43788:	b009883a 	mov	r4,r22
   4378c:	800b883a 	mov	r5,r16
   43790:	00490b40 	call	490b4 <__srefill_r>
   43794:	103fe026 	beq	r2,zero,43718 <__svfscanf_r+0xf18>
   43798:	003fe306 	br	43728 <__svfscanf_r+0xf28>
   4379c:	d880a417 	ldw	r2,656(sp)
   437a0:	d980a317 	ldw	r6,652(sp)
   437a4:	01400044 	movi	r5,1
   437a8:	11000017 	ldw	r4,0(r2)
   437ac:	800f883a 	mov	r7,r16
   437b0:	0045fec0 	call	45fec <fread>
   437b4:	103c6726 	beq	r2,zero,42954 <__svfscanf_r+0x154>
   437b8:	d8c0a417 	ldw	r3,656(sp)
   437bc:	d900a217 	ldw	r4,648(sp)
   437c0:	88a3883a 	add	r17,r17,r2
   437c4:	18c00104 	addi	r3,r3,4
   437c8:	21000044 	addi	r4,r4,1
   437cc:	d8c0a415 	stw	r3,656(sp)
   437d0:	d900a215 	stw	r4,648(sp)
   437d4:	003c1d06 	br	4284c <__svfscanf_r+0x4c>
   437d8:	a880400c 	andi	r2,r21,256
   437dc:	10000b26 	beq	r2,zero,4380c <__svfscanf_r+0x100c>
   437e0:	00bfdfc4 	movi	r2,-129
   437e4:	a8aa703a 	and	r21,r21,r2
   437e8:	d8809e17 	ldw	r2,632(sp)
   437ec:	10800044 	addi	r2,r2,1
   437f0:	d8809e15 	stw	r2,632(sp)
   437f4:	983fc026 	beq	r19,zero,436f8 <__svfscanf_r+0xef8>
   437f8:	d8c0a317 	ldw	r3,652(sp)
   437fc:	9cffffc4 	addi	r19,r19,-1
   43800:	18c00044 	addi	r3,r3,1
   43804:	d8c0a315 	stw	r3,652(sp)
   43808:	003fbb06 	br	436f8 <__svfscanf_r+0xef8>
   4380c:	e0803fcc 	andi	r2,fp,255
   43810:	1080201c 	xori	r2,r2,128
   43814:	10bfe004 	addi	r2,r2,-128
   43818:	9085883a 	add	r2,r18,r2
   4381c:	103fc21e 	bne	r2,zero,43728 <__svfscanf_r+0xf28>
   43820:	00bf9fc4 	movi	r2,-385
   43824:	a8aa703a 	and	r21,r21,r2
   43828:	003fb106 	br	436f0 <__svfscanf_r+0xef0>
   4382c:	00800044 	movi	r2,1
   43830:	90bfbd1e 	bne	r18,r2,43728 <__svfscanf_r+0xf28>
   43834:	04800084 	movi	r18,2
   43838:	003fad06 	br	436f0 <__svfscanf_r+0xef0>
   4383c:	a8c1400c 	andi	r3,r21,1280
   43840:	00810004 	movi	r2,1024
   43844:	18800426 	beq	r3,r2,43858 <__svfscanf_r+0x1058>
   43848:	a884703a 	and	r2,r21,r2
   4384c:	103fb626 	beq	r2,zero,43728 <__svfscanf_r+0xf28>
   43850:	d8809e17 	ldw	r2,632(sp)
   43854:	103fb826 	beq	r2,zero,43738 <__svfscanf_r+0xf38>
   43858:	a880800c 	andi	r2,r21,512
   4385c:	1000051e 	bne	r2,zero,43874 <__svfscanf_r+0x1074>
   43860:	d8c09e17 	ldw	r3,632(sp)
   43864:	d9009f17 	ldw	r4,636(sp)
   43868:	ddc09c15 	stw	r23,624(sp)
   4386c:	1907c83a 	sub	r3,r3,r4
   43870:	d8c09d15 	stw	r3,628(sp)
   43874:	00be7fc4 	movi	r2,-1537
   43878:	a884703a 	and	r2,r21,r2
   4387c:	15406014 	ori	r21,r2,384
   43880:	d8009e15 	stw	zero,632(sp)
   43884:	003f9a06 	br	436f0 <__svfscanf_r+0xef0>
   43888:	e0c03fcc 	andi	r3,fp,255
   4388c:	18c0201c 	xori	r3,r3,128
   43890:	18ffe004 	addi	r3,r3,-128
   43894:	00800084 	movi	r2,2
   43898:	18bfa31e 	bne	r3,r2,43728 <__svfscanf_r+0xf28>
   4389c:	070000c4 	movi	fp,3
   438a0:	003f9306 	br	436f0 <__svfscanf_r+0xef0>
   438a4:	e0c03fcc 	andi	r3,fp,255
   438a8:	18c0201c 	xori	r3,r3,128
   438ac:	18ffe004 	addi	r3,r3,-128
   438b0:	008001c4 	movi	r2,7
   438b4:	18bf9c1e 	bne	r3,r2,43728 <__svfscanf_r+0xf28>
   438b8:	07000204 	movi	fp,8
   438bc:	003f8c06 	br	436f0 <__svfscanf_r+0xef0>
   438c0:	d8c09e17 	ldw	r3,632(sp)
   438c4:	d9009f17 	ldw	r4,636(sp)
   438c8:	1905c83a 	sub	r2,r3,r4
   438cc:	103ecb26 	beq	r2,zero,433fc <__svfscanf_r+0xbfc>
   438d0:	008dc83a 	sub	r6,zero,r2
   438d4:	ddc09c15 	stw	r23,624(sp)
   438d8:	003ef506 	br	434b0 <__svfscanf_r+0xcb0>
   438dc:	d880a417 	ldw	r2,656(sp)
   438e0:	9009883a 	mov	r4,r18
   438e4:	180b883a 	mov	r5,r3
   438e8:	15c00017 	ldw	r23,0(r2)
   438ec:	15400104 	addi	r21,r2,4
   438f0:	00492d40 	call	492d4 <__isnand>
   438f4:	1000311e 	bne	r2,zero,439bc <__svfscanf_r+0x11bc>
   438f8:	980b883a 	mov	r5,r19
   438fc:	9009883a 	mov	r4,r18
   43900:	004edbc0 	call	4edbc <__truncdfsf2>
   43904:	b8800015 	stw	r2,0(r23)
   43908:	003eca06 	br	43434 <__svfscanf_r+0xc34>
   4390c:	9000101e 	bne	r18,zero,43950 <__svfscanf_r+0x1150>
   43910:	a8c1c00c 	andi	r3,r21,1792
   43914:	0081c004 	movi	r2,1792
   43918:	18800926 	beq	r3,r2,43940 <__svfscanf_r+0x1140>
   4391c:	e0c03fcc 	andi	r3,fp,255
   43920:	18c0201c 	xori	r3,r3,128
   43924:	18ffe004 	addi	r3,r3,-128
   43928:	00800044 	movi	r2,1
   4392c:	18800226 	beq	r3,r2,43938 <__svfscanf_r+0x1138>
   43930:	00800104 	movi	r2,4
   43934:	18bf7c1e 	bne	r3,r2,43728 <__svfscanf_r+0xf28>
   43938:	e7000044 	addi	fp,fp,1
   4393c:	003f6c06 	br	436f0 <__svfscanf_r+0xef0>
   43940:	00be1fc4 	movi	r2,-1921
   43944:	a8aa703a 	and	r21,r21,r2
   43948:	04800044 	movi	r18,1
   4394c:	003f6806 	br	436f0 <__svfscanf_r+0xef0>
   43950:	00800084 	movi	r2,2
   43954:	90bff11e 	bne	r18,r2,4391c <__svfscanf_r+0x111c>
   43958:	048000c4 	movi	r18,3
   4395c:	003f6406 	br	436f0 <__svfscanf_r+0xef0>
   43960:	e0c03fcc 	andi	r3,fp,255
   43964:	18c0201c 	xori	r3,r3,128
   43968:	18ffe004 	addi	r3,r3,-128
   4396c:	1800071e 	bne	r3,zero,4398c <__svfscanf_r+0x118c>
   43970:	a8c1c00c 	andi	r3,r21,1792
   43974:	0081c004 	movi	r2,1792
   43978:	18bf6b1e 	bne	r3,r2,43728 <__svfscanf_r+0xf28>
   4397c:	00be1fc4 	movi	r2,-1921
   43980:	a8aa703a 	and	r21,r21,r2
   43984:	07000044 	movi	fp,1
   43988:	003f5906 	br	436f0 <__svfscanf_r+0xef0>
   4398c:	008000c4 	movi	r2,3
   43990:	18bfe926 	beq	r3,r2,43938 <__svfscanf_r+0x1138>
   43994:	00800144 	movi	r2,5
   43998:	18bfe726 	beq	r3,r2,43938 <__svfscanf_r+0x1138>
   4399c:	003f6206 	br	43728 <__svfscanf_r+0xf28>
   439a0:	e0c03fcc 	andi	r3,fp,255
   439a4:	18c0201c 	xori	r3,r3,128
   439a8:	18ffe004 	addi	r3,r3,-128
   439ac:	00800184 	movi	r2,6
   439b0:	18bf5d1e 	bne	r3,r2,43728 <__svfscanf_r+0xf28>
   439b4:	070001c4 	movi	fp,7
   439b8:	003f4d06 	br	436f0 <__svfscanf_r+0xef0>
   439bc:	0009883a 	mov	r4,zero
   439c0:	00494340 	call	49434 <nanf>
   439c4:	b8800015 	stw	r2,0(r23)
   439c8:	003e9a06 	br	43434 <__svfscanf_r+0xc34>
   439cc:	a00b883a 	mov	r5,r20
   439d0:	d9000404 	addi	r4,sp,16
   439d4:	00493740 	call	49374 <__sccl>
   439d8:	1029883a 	mov	r20,r2
   439dc:	ad401014 	ori	r21,r21,64
   439e0:	04800044 	movi	r18,1
   439e4:	003c7506 	br	42bbc <__svfscanf_r+0x3bc>
   439e8:	01000204 	movi	r4,8
   439ec:	00800174 	movhi	r2,5
   439f0:	10acfe04 	addi	r2,r2,-19464
   439f4:	ad400054 	ori	r21,r21,1
   439f8:	048000c4 	movi	r18,3
   439fc:	d900a115 	stw	r4,644(sp)
   43a00:	d880a015 	stw	r2,640(sp)
   43a04:	003c6d06 	br	42bbc <__svfscanf_r+0x3bc>
   43a08:	ad400094 	ori	r21,r21,2
   43a0c:	003bd806 	br	42970 <__svfscanf_r+0x170>
   43a10:	d900a317 	ldw	r4,652(sp)
   43a14:	01400284 	movi	r5,10
   43a18:	004f1100 	call	4f110 <__mulsi3>
   43a1c:	15c5883a 	add	r2,r2,r23
   43a20:	10bff404 	addi	r2,r2,-48
   43a24:	d880a315 	stw	r2,652(sp)
   43a28:	003bd106 	br	42970 <__svfscanf_r+0x170>
   43a2c:	ad400414 	ori	r21,r21,16
   43a30:	003bcf06 	br	42970 <__svfscanf_r+0x170>
   43a34:	00800404 	movi	r2,16
   43a38:	00c00174 	movhi	r3,5
   43a3c:	18ecfe04 	addi	r3,r3,-19464
   43a40:	ad408014 	ori	r21,r21,512
   43a44:	048000c4 	movi	r18,3
   43a48:	d880a115 	stw	r2,644(sp)
   43a4c:	d8c0a015 	stw	r3,640(sp)
   43a50:	003c5a06 	br	42bbc <__svfscanf_r+0x3bc>
   43a54:	00c00284 	movi	r3,10
   43a58:	01000174 	movhi	r4,5
   43a5c:	212cfe04 	addi	r4,r4,-19464
   43a60:	048000c4 	movi	r18,3
   43a64:	d8c0a115 	stw	r3,644(sp)
   43a68:	d900a015 	stw	r4,640(sp)
   43a6c:	003c5306 	br	42bbc <__svfscanf_r+0x3bc>
   43a70:	00c00174 	movhi	r3,5
   43a74:	18eb9b04 	addi	r3,r3,-20884
   43a78:	048000c4 	movi	r18,3
   43a7c:	d8c0a015 	stw	r3,640(sp)
   43a80:	d800a115 	stw	zero,644(sp)
   43a84:	003c4d06 	br	42bbc <__svfscanf_r+0x3bc>
   43a88:	d8c0a117 	ldw	r3,644(sp)
   43a8c:	18c5883a 	add	r2,r3,r3
   43a90:	00c00174 	movhi	r3,5
   43a94:	18c9d784 	addi	r3,r3,10078
   43a98:	10c5883a 	add	r2,r2,r3
   43a9c:	1080000f 	ldh	r2,0(r2)
   43aa0:	00fd1fc4 	movi	r3,-2945
   43aa4:	90e4703a 	and	r18,r18,r3
   43aa8:	d880a115 	stw	r2,644(sp)
   43aac:	003de806 	br	43250 <__svfscanf_r+0xa50>
   43ab0:	d900a117 	ldw	r4,644(sp)
   43ab4:	00c00174 	movhi	r3,5
   43ab8:	18c9d784 	addi	r3,r3,10078
   43abc:	2105883a 	add	r2,r4,r4
   43ac0:	10c5883a 	add	r2,r2,r3
   43ac4:	1080000f 	ldh	r2,0(r2)
   43ac8:	00c00204 	movi	r3,8
   43acc:	d880a115 	stw	r2,644(sp)
   43ad0:	18bd870e 	bge	r3,r2,430f0 <__svfscanf_r+0x8f0>
   43ad4:	00bd1fc4 	movi	r2,-2945
   43ad8:	90a4703a 	and	r18,r18,r2
   43adc:	003ddc06 	br	43250 <__svfscanf_r+0xa50>
   43ae0:	d8c0a117 	ldw	r3,644(sp)
   43ae4:	00800284 	movi	r2,10
   43ae8:	10fffa16 	blt	r2,r3,43ad4 <__svfscanf_r+0x12d4>
   43aec:	003d8006 	br	430f0 <__svfscanf_r+0x8f0>
   43af0:	90c1800c 	andi	r3,r18,1536
   43af4:	00808004 	movi	r2,512
   43af8:	18bd7d1e 	bne	r3,r2,430f0 <__svfscanf_r+0x8f0>
   43afc:	00bf7fc4 	movi	r2,-513
   43b00:	9084703a 	and	r2,r18,r2
   43b04:	01000404 	movi	r4,16
   43b08:	14814014 	ori	r18,r2,1280
   43b0c:	d900a115 	stw	r4,644(sp)
   43b10:	003dcf06 	br	43250 <__svfscanf_r+0xa50>
   43b14:	04800104 	movi	r18,4
   43b18:	003c2806 	br	42bbc <__svfscanf_r+0x3bc>
   43b1c:	ad401014 	ori	r21,r21,64
   43b20:	0025883a 	mov	r18,zero
   43b24:	003c2506 	br	42bbc <__svfscanf_r+0x3bc>
   43b28:	ad400114 	ori	r21,r21,4
   43b2c:	003b9006 	br	42970 <__svfscanf_r+0x170>
   43b30:	0027883a 	mov	r19,zero
   43b34:	003cac06 	br	42de8 <__svfscanf_r+0x5e8>
   43b38:	903d5226 	beq	r18,zero,43084 <__svfscanf_r+0x884>
   43b3c:	94bfffc4 	addi	r18,r18,-1
   43b40:	d8c04404 	addi	r3,sp,272
   43b44:	1c85883a 	add	r2,r3,r18
   43b48:	11400003 	ldbu	r5,0(r2)
   43b4c:	b009883a 	mov	r4,r22
   43b50:	800d883a 	mov	r6,r16
   43b54:	004ba280 	call	4ba28 <_ungetc_r>
   43b58:	003ff706 	br	43b38 <__svfscanf_r+0x1338>
   43b5c:	00bfff84 	movi	r2,-2
   43b60:	18bd361e 	bne	r3,r2,4303c <__svfscanf_r+0x83c>
   43b64:	003d4006 	br	43068 <__svfscanf_r+0x868>
   43b68:	d900a417 	ldw	r4,656(sp)
   43b6c:	25400017 	ldw	r21,0(r4)
   43b70:	21000104 	addi	r4,r4,4
   43b74:	d900a415 	stw	r4,656(sp)
   43b78:	003d0606 	br	42f94 <__svfscanf_r+0x794>
   43b7c:	983b5526 	beq	r19,zero,428d4 <__svfscanf_r+0xd4>
   43b80:	8ce3883a 	add	r17,r17,r19
   43b84:	003b3106 	br	4284c <__svfscanf_r+0x4c>
   43b88:	00bfff84 	movi	r2,-2
   43b8c:	18bc621e 	bne	r3,r2,42d18 <__svfscanf_r+0x518>
   43b90:	003c6906 	br	42d38 <__svfscanf_r+0x538>
   43b94:	b009883a 	mov	r4,r22
   43b98:	800b883a 	mov	r5,r16
   43b9c:	00490b40 	call	490b4 <__srefill_r>
   43ba0:	103c6726 	beq	r2,zero,42d40 <__svfscanf_r+0x540>
   43ba4:	903b6b1e 	bne	r18,zero,42954 <__svfscanf_r+0x154>
   43ba8:	a83b281e 	bne	r21,zero,4284c <__svfscanf_r+0x4c>
   43bac:	d8c0a217 	ldw	r3,648(sp)
   43bb0:	18c00044 	addi	r3,r3,1
   43bb4:	d8c0a215 	stw	r3,648(sp)
   43bb8:	003b2406 	br	4284c <__svfscanf_r+0x4c>
   43bbc:	8080030b 	ldhu	r2,12(r16)
   43bc0:	1080100c 	andi	r2,r2,64
   43bc4:	103b4326 	beq	r2,zero,428d4 <__svfscanf_r+0xd4>
   43bc8:	003b6406 	br	4295c <__svfscanf_r+0x15c>
   43bcc:	d8c0a417 	ldw	r3,656(sp)
   43bd0:	1cc00017 	ldw	r19,0(r3)
   43bd4:	18c00104 	addi	r3,r3,4
   43bd8:	d8c0a415 	stw	r3,656(sp)
   43bdc:	003c2906 	br	42c84 <__svfscanf_r+0x484>
   43be0:	00800204 	movi	r2,8
   43be4:	00c00174 	movhi	r3,5
   43be8:	18ecfe04 	addi	r3,r3,-19464
   43bec:	048000c4 	movi	r18,3
   43bf0:	d880a115 	stw	r2,644(sp)
   43bf4:	d8c0a015 	stw	r3,640(sp)
   43bf8:	003bf006 	br	42bbc <__svfscanf_r+0x3bc>
   43bfc:	04800084 	movi	r18,2
   43c00:	003bee06 	br	42bbc <__svfscanf_r+0x3bc>
   43c04:	01000404 	movi	r4,16
   43c08:	00800174 	movhi	r2,5
   43c0c:	10acfe04 	addi	r2,r2,-19464
   43c10:	ad408814 	ori	r21,r21,544
   43c14:	048000c4 	movi	r18,3
   43c18:	d900a115 	stw	r4,644(sp)
   43c1c:	d880a015 	stw	r2,640(sp)
   43c20:	003be606 	br	42bbc <__svfscanf_r+0x3bc>
   43c24:	a880040c 	andi	r2,r21,16
   43c28:	103b081e 	bne	r2,zero,4284c <__svfscanf_r+0x4c>
   43c2c:	a880010c 	andi	r2,r21,4
   43c30:	10004e26 	beq	r2,zero,43d6c <__svfscanf_r+0x156c>
   43c34:	d8c0a417 	ldw	r3,656(sp)
   43c38:	18800017 	ldw	r2,0(r3)
   43c3c:	18c00104 	addi	r3,r3,4
   43c40:	d8c0a415 	stw	r3,656(sp)
   43c44:	1440000d 	sth	r17,0(r2)
   43c48:	003b0006 	br	4284c <__svfscanf_r+0x4c>
   43c4c:	d880a417 	ldw	r2,656(sp)
   43c50:	dd400404 	addi	r21,sp,16
   43c54:	14800017 	ldw	r18,0(r2)
   43c58:	9027883a 	mov	r19,r18
   43c5c:	81000017 	ldw	r4,0(r16)
   43c60:	20800003 	ldbu	r2,0(r4)
   43c64:	a885883a 	add	r2,r21,r2
   43c68:	10c00007 	ldb	r3,0(r2)
   43c6c:	18001426 	beq	r3,zero,43cc0 <__svfscanf_r+0x14c0>
   43c70:	d8c0a317 	ldw	r3,652(sp)
   43c74:	80800117 	ldw	r2,4(r16)
   43c78:	21800044 	addi	r6,r4,1
   43c7c:	18ffffc4 	addi	r3,r3,-1
   43c80:	d8c0a315 	stw	r3,652(sp)
   43c84:	10ffffc4 	addi	r3,r2,-1
   43c88:	80c00115 	stw	r3,4(r16)
   43c8c:	20800003 	ldbu	r2,0(r4)
   43c90:	90800005 	stb	r2,0(r18)
   43c94:	d900a317 	ldw	r4,652(sp)
   43c98:	81800015 	stw	r6,0(r16)
   43c9c:	94800044 	addi	r18,r18,1
   43ca0:	20000726 	beq	r4,zero,43cc0 <__svfscanf_r+0x14c0>
   43ca4:	80800117 	ldw	r2,4(r16)
   43ca8:	00bfec16 	blt	zero,r2,43c5c <__svfscanf_r+0x145c>
   43cac:	b009883a 	mov	r4,r22
   43cb0:	800b883a 	mov	r5,r16
   43cb4:	00490b40 	call	490b4 <__srefill_r>
   43cb8:	103fe826 	beq	r2,zero,43c5c <__svfscanf_r+0x145c>
   43cbc:	9cbb2526 	beq	r19,r18,42954 <__svfscanf_r+0x154>
   43cc0:	94e7c83a 	sub	r19,r18,r19
   43cc4:	983b0326 	beq	r19,zero,428d4 <__svfscanf_r+0xd4>
   43cc8:	90000005 	stb	zero,0(r18)
   43ccc:	d880a417 	ldw	r2,656(sp)
   43cd0:	d8c0a217 	ldw	r3,648(sp)
   43cd4:	8ce3883a 	add	r17,r17,r19
   43cd8:	10800104 	addi	r2,r2,4
   43cdc:	18c00044 	addi	r3,r3,1
   43ce0:	d880a415 	stw	r2,656(sp)
   43ce4:	d8c0a215 	stw	r3,648(sp)
   43ce8:	003ad806 	br	4284c <__svfscanf_r+0x4c>
   43cec:	d900a517 	ldw	r4,660(sp)
   43cf0:	25faf82e 	bgeu	r4,r23,428d4 <__svfscanf_r+0xd4>
   43cf4:	bdffffc4 	addi	r23,r23,-1
   43cf8:	b9400007 	ldb	r5,0(r23)
   43cfc:	b009883a 	mov	r4,r22
   43d00:	800d883a 	mov	r6,r16
   43d04:	004ba280 	call	4ba28 <_ungetc_r>
   43d08:	d8c0a517 	ldw	r3,660(sp)
   43d0c:	1dfff936 	bltu	r3,r23,43cf4 <__svfscanf_r+0x14f4>
   43d10:	003af006 	br	428d4 <__svfscanf_r+0xd4>
   43d14:	a880040c 	andi	r2,r21,16
   43d18:	10002d26 	beq	r2,zero,43dd0 <__svfscanf_r+0x15d0>
   43d1c:	0025883a 	mov	r18,zero
   43d20:	00000906 	br	43d48 <__svfscanf_r+0x1548>
   43d24:	80c00117 	ldw	r3,4(r16)
   43d28:	d880a317 	ldw	r2,652(sp)
   43d2c:	29800044 	addi	r6,r5,1
   43d30:	18ffffc4 	addi	r3,r3,-1
   43d34:	94800044 	addi	r18,r18,1
   43d38:	81800015 	stw	r6,0(r16)
   43d3c:	80c00115 	stw	r3,4(r16)
   43d40:	14800826 	beq	r2,r18,43d64 <__svfscanf_r+0x1564>
   43d44:	00c0120e 	bge	zero,r3,43d90 <__svfscanf_r+0x1590>
   43d48:	81400017 	ldw	r5,0(r16)
   43d4c:	98800017 	ldw	r2,0(r19)
   43d50:	28c00003 	ldbu	r3,0(r5)
   43d54:	1887883a 	add	r3,r3,r2
   43d58:	19000003 	ldbu	r4,0(r3)
   43d5c:	2100020c 	andi	r4,r4,8
   43d60:	203ff026 	beq	r4,zero,43d24 <__svfscanf_r+0x1524>
   43d64:	8ca3883a 	add	r17,r17,r18
   43d68:	003ab806 	br	4284c <__svfscanf_r+0x4c>
   43d6c:	a880004c 	andi	r2,r21,1
   43d70:	1005003a 	cmpeq	r2,r2,zero
   43d74:	10000b1e 	bne	r2,zero,43da4 <__svfscanf_r+0x15a4>
   43d78:	d900a417 	ldw	r4,656(sp)
   43d7c:	20800017 	ldw	r2,0(r4)
   43d80:	21000104 	addi	r4,r4,4
   43d84:	d900a415 	stw	r4,656(sp)
   43d88:	14400015 	stw	r17,0(r2)
   43d8c:	003aaf06 	br	4284c <__svfscanf_r+0x4c>
   43d90:	b009883a 	mov	r4,r22
   43d94:	800b883a 	mov	r5,r16
   43d98:	00490b40 	call	490b4 <__srefill_r>
   43d9c:	103fea26 	beq	r2,zero,43d48 <__svfscanf_r+0x1548>
   43da0:	003ff006 	br	43d64 <__svfscanf_r+0x1564>
   43da4:	a880008c 	andi	r2,r21,2
   43da8:	10002c26 	beq	r2,zero,43e5c <__svfscanf_r+0x165c>
   43dac:	d8c0a417 	ldw	r3,656(sp)
   43db0:	d900a417 	ldw	r4,656(sp)
   43db4:	18800017 	ldw	r2,0(r3)
   43db8:	8807d7fa 	srai	r3,r17,31
   43dbc:	21000104 	addi	r4,r4,4
   43dc0:	d900a415 	stw	r4,656(sp)
   43dc4:	14400015 	stw	r17,0(r2)
   43dc8:	10c00115 	stw	r3,4(r2)
   43dcc:	003a9f06 	br	4284c <__svfscanf_r+0x4c>
   43dd0:	d8c0a417 	ldw	r3,656(sp)
   43dd4:	1d400017 	ldw	r21,0(r3)
   43dd8:	a825883a 	mov	r18,r21
   43ddc:	00000e06 	br	43e18 <__svfscanf_r+0x1618>
   43de0:	80800117 	ldw	r2,4(r16)
   43de4:	d900a317 	ldw	r4,652(sp)
   43de8:	29800044 	addi	r6,r5,1
   43dec:	10ffffc4 	addi	r3,r2,-1
   43df0:	213fffc4 	addi	r4,r4,-1
   43df4:	d900a315 	stw	r4,652(sp)
   43df8:	80c00115 	stw	r3,4(r16)
   43dfc:	28800003 	ldbu	r2,0(r5)
   43e00:	90800005 	stb	r2,0(r18)
   43e04:	81800015 	stw	r6,0(r16)
   43e08:	94800044 	addi	r18,r18,1
   43e0c:	20000926 	beq	r4,zero,43e34 <__svfscanf_r+0x1634>
   43e10:	80800117 	ldw	r2,4(r16)
   43e14:	0080170e 	bge	zero,r2,43e74 <__svfscanf_r+0x1674>
   43e18:	81400017 	ldw	r5,0(r16)
   43e1c:	98800017 	ldw	r2,0(r19)
   43e20:	28c00003 	ldbu	r3,0(r5)
   43e24:	1887883a 	add	r3,r3,r2
   43e28:	19000003 	ldbu	r4,0(r3)
   43e2c:	2100020c 	andi	r4,r4,8
   43e30:	203feb26 	beq	r4,zero,43de0 <__svfscanf_r+0x15e0>
   43e34:	9545c83a 	sub	r2,r18,r21
   43e38:	d8c0a217 	ldw	r3,648(sp)
   43e3c:	88a3883a 	add	r17,r17,r2
   43e40:	d880a417 	ldw	r2,656(sp)
   43e44:	18c00044 	addi	r3,r3,1
   43e48:	d8c0a215 	stw	r3,648(sp)
   43e4c:	10800104 	addi	r2,r2,4
   43e50:	d880a415 	stw	r2,656(sp)
   43e54:	90000005 	stb	zero,0(r18)
   43e58:	003a7c06 	br	4284c <__svfscanf_r+0x4c>
   43e5c:	d8c0a417 	ldw	r3,656(sp)
   43e60:	18800017 	ldw	r2,0(r3)
   43e64:	18c00104 	addi	r3,r3,4
   43e68:	d8c0a415 	stw	r3,656(sp)
   43e6c:	14400015 	stw	r17,0(r2)
   43e70:	003a7606 	br	4284c <__svfscanf_r+0x4c>
   43e74:	b009883a 	mov	r4,r22
   43e78:	800b883a 	mov	r5,r16
   43e7c:	00490b40 	call	490b4 <__srefill_r>
   43e80:	103fe526 	beq	r2,zero,43e18 <__svfscanf_r+0x1618>
   43e84:	003feb06 	br	43e34 <__svfscanf_r+0x1634>

00043e88 <__svfscanf>:
   43e88:	00800174 	movhi	r2,5
   43e8c:	1091d604 	addi	r2,r2,18264
   43e90:	2013883a 	mov	r9,r4
   43e94:	11000017 	ldw	r4,0(r2)
   43e98:	2805883a 	mov	r2,r5
   43e9c:	300f883a 	mov	r7,r6
   43ea0:	480b883a 	mov	r5,r9
   43ea4:	100d883a 	mov	r6,r2
   43ea8:	00428001 	jmpi	42800 <__svfscanf_r>

00043eac <_vfscanf_r>:
   43eac:	defffb04 	addi	sp,sp,-20
   43eb0:	dcc00315 	stw	r19,12(sp)
   43eb4:	dc800215 	stw	r18,8(sp)
   43eb8:	dc400115 	stw	r17,4(sp)
   43ebc:	dc000015 	stw	r16,0(sp)
   43ec0:	dfc00415 	stw	ra,16(sp)
   43ec4:	2021883a 	mov	r16,r4
   43ec8:	2823883a 	mov	r17,r5
   43ecc:	3025883a 	mov	r18,r6
   43ed0:	3827883a 	mov	r19,r7
   43ed4:	20000226 	beq	r4,zero,43ee0 <_vfscanf_r+0x34>
   43ed8:	20800e17 	ldw	r2,56(r4)
   43edc:	10000b26 	beq	r2,zero,43f0c <_vfscanf_r+0x60>
   43ee0:	8009883a 	mov	r4,r16
   43ee4:	880b883a 	mov	r5,r17
   43ee8:	900d883a 	mov	r6,r18
   43eec:	980f883a 	mov	r7,r19
   43ef0:	dfc00417 	ldw	ra,16(sp)
   43ef4:	dcc00317 	ldw	r19,12(sp)
   43ef8:	dc800217 	ldw	r18,8(sp)
   43efc:	dc400117 	ldw	r17,4(sp)
   43f00:	dc000017 	ldw	r16,0(sp)
   43f04:	dec00504 	addi	sp,sp,20
   43f08:	00428001 	jmpi	42800 <__svfscanf_r>
   43f0c:	0045b540 	call	45b54 <__sinit>
   43f10:	003ff306 	br	43ee0 <_vfscanf_r+0x34>

00043f14 <vfscanf>:
   43f14:	defffb04 	addi	sp,sp,-20
   43f18:	dcc00315 	stw	r19,12(sp)
   43f1c:	04c00174 	movhi	r19,5
   43f20:	9cd1d604 	addi	r19,r19,18264
   43f24:	98c00017 	ldw	r3,0(r19)
   43f28:	dc800215 	stw	r18,8(sp)
   43f2c:	dc400115 	stw	r17,4(sp)
   43f30:	dc000015 	stw	r16,0(sp)
   43f34:	dfc00415 	stw	ra,16(sp)
   43f38:	2021883a 	mov	r16,r4
   43f3c:	2823883a 	mov	r17,r5
   43f40:	3025883a 	mov	r18,r6
   43f44:	18000326 	beq	r3,zero,43f54 <vfscanf+0x40>
   43f48:	18800e17 	ldw	r2,56(r3)
   43f4c:	1809883a 	mov	r4,r3
   43f50:	10000b26 	beq	r2,zero,43f80 <vfscanf+0x6c>
   43f54:	99000017 	ldw	r4,0(r19)
   43f58:	800b883a 	mov	r5,r16
   43f5c:	880d883a 	mov	r6,r17
   43f60:	900f883a 	mov	r7,r18
   43f64:	dfc00417 	ldw	ra,16(sp)
   43f68:	dcc00317 	ldw	r19,12(sp)
   43f6c:	dc800217 	ldw	r18,8(sp)
   43f70:	dc400117 	ldw	r17,4(sp)
   43f74:	dc000017 	ldw	r16,0(sp)
   43f78:	dec00504 	addi	sp,sp,20
   43f7c:	00428001 	jmpi	42800 <__svfscanf_r>
   43f80:	0045b540 	call	45b54 <__sinit>
   43f84:	003ff306 	br	43f54 <vfscanf+0x40>

00043f88 <__swsetup_r>:
   43f88:	00800174 	movhi	r2,5
   43f8c:	1091d604 	addi	r2,r2,18264
   43f90:	10c00017 	ldw	r3,0(r2)
   43f94:	defffd04 	addi	sp,sp,-12
   43f98:	dc400115 	stw	r17,4(sp)
   43f9c:	dc000015 	stw	r16,0(sp)
   43fa0:	dfc00215 	stw	ra,8(sp)
   43fa4:	2023883a 	mov	r17,r4
   43fa8:	2821883a 	mov	r16,r5
   43fac:	18000226 	beq	r3,zero,43fb8 <__swsetup_r+0x30>
   43fb0:	18800e17 	ldw	r2,56(r3)
   43fb4:	10001f26 	beq	r2,zero,44034 <__swsetup_r+0xac>
   43fb8:	8100030b 	ldhu	r4,12(r16)
   43fbc:	2080020c 	andi	r2,r4,8
   43fc0:	10002826 	beq	r2,zero,44064 <__swsetup_r+0xdc>
   43fc4:	81400417 	ldw	r5,16(r16)
   43fc8:	28001d26 	beq	r5,zero,44040 <__swsetup_r+0xb8>
   43fcc:	2080004c 	andi	r2,r4,1
   43fd0:	1005003a 	cmpeq	r2,r2,zero
   43fd4:	10000b26 	beq	r2,zero,44004 <__swsetup_r+0x7c>
   43fd8:	2080008c 	andi	r2,r4,2
   43fdc:	10001226 	beq	r2,zero,44028 <__swsetup_r+0xa0>
   43fe0:	0005883a 	mov	r2,zero
   43fe4:	80800215 	stw	r2,8(r16)
   43fe8:	28000b26 	beq	r5,zero,44018 <__swsetup_r+0x90>
   43fec:	0005883a 	mov	r2,zero
   43ff0:	dfc00217 	ldw	ra,8(sp)
   43ff4:	dc400117 	ldw	r17,4(sp)
   43ff8:	dc000017 	ldw	r16,0(sp)
   43ffc:	dec00304 	addi	sp,sp,12
   44000:	f800283a 	ret
   44004:	80800517 	ldw	r2,20(r16)
   44008:	80000215 	stw	zero,8(r16)
   4400c:	0085c83a 	sub	r2,zero,r2
   44010:	80800615 	stw	r2,24(r16)
   44014:	283ff51e 	bne	r5,zero,43fec <__swsetup_r+0x64>
   44018:	2080200c 	andi	r2,r4,128
   4401c:	103ff326 	beq	r2,zero,43fec <__swsetup_r+0x64>
   44020:	00bfffc4 	movi	r2,-1
   44024:	003ff206 	br	43ff0 <__swsetup_r+0x68>
   44028:	80800517 	ldw	r2,20(r16)
   4402c:	80800215 	stw	r2,8(r16)
   44030:	003fed06 	br	43fe8 <__swsetup_r+0x60>
   44034:	1809883a 	mov	r4,r3
   44038:	0045b540 	call	45b54 <__sinit>
   4403c:	003fde06 	br	43fb8 <__swsetup_r+0x30>
   44040:	20c0a00c 	andi	r3,r4,640
   44044:	00808004 	movi	r2,512
   44048:	18bfe026 	beq	r3,r2,43fcc <__swsetup_r+0x44>
   4404c:	8809883a 	mov	r4,r17
   44050:	800b883a 	mov	r5,r16
   44054:	0046b780 	call	46b78 <__smakebuf_r>
   44058:	8100030b 	ldhu	r4,12(r16)
   4405c:	81400417 	ldw	r5,16(r16)
   44060:	003fda06 	br	43fcc <__swsetup_r+0x44>
   44064:	2080040c 	andi	r2,r4,16
   44068:	103fed26 	beq	r2,zero,44020 <__swsetup_r+0x98>
   4406c:	2080010c 	andi	r2,r4,4
   44070:	10001226 	beq	r2,zero,440bc <__swsetup_r+0x134>
   44074:	81400c17 	ldw	r5,48(r16)
   44078:	28000526 	beq	r5,zero,44090 <__swsetup_r+0x108>
   4407c:	80801004 	addi	r2,r16,64
   44080:	28800226 	beq	r5,r2,4408c <__swsetup_r+0x104>
   44084:	8809883a 	mov	r4,r17
   44088:	00461580 	call	46158 <_free_r>
   4408c:	80000c15 	stw	zero,48(r16)
   44090:	8080030b 	ldhu	r2,12(r16)
   44094:	81400417 	ldw	r5,16(r16)
   44098:	80000115 	stw	zero,4(r16)
   4409c:	10bff6cc 	andi	r2,r2,65499
   440a0:	8080030d 	sth	r2,12(r16)
   440a4:	81400015 	stw	r5,0(r16)
   440a8:	8080030b 	ldhu	r2,12(r16)
   440ac:	10800214 	ori	r2,r2,8
   440b0:	113fffcc 	andi	r4,r2,65535
   440b4:	8080030d 	sth	r2,12(r16)
   440b8:	003fc306 	br	43fc8 <__swsetup_r+0x40>
   440bc:	81400417 	ldw	r5,16(r16)
   440c0:	003ff906 	br	440a8 <__swsetup_r+0x120>

000440c4 <quorem>:
   440c4:	28c00417 	ldw	r3,16(r5)
   440c8:	20800417 	ldw	r2,16(r4)
   440cc:	defff104 	addi	sp,sp,-60
   440d0:	dfc00e15 	stw	ra,56(sp)
   440d4:	df000d15 	stw	fp,52(sp)
   440d8:	ddc00c15 	stw	r23,48(sp)
   440dc:	dd800b15 	stw	r22,44(sp)
   440e0:	dd400a15 	stw	r21,40(sp)
   440e4:	dd000915 	stw	r20,36(sp)
   440e8:	dcc00815 	stw	r19,32(sp)
   440ec:	dc800715 	stw	r18,28(sp)
   440f0:	dc400615 	stw	r17,24(sp)
   440f4:	dc000515 	stw	r16,20(sp)
   440f8:	d9000315 	stw	r4,12(sp)
   440fc:	d9400415 	stw	r5,16(sp)
   44100:	10c07f16 	blt	r2,r3,44300 <quorem+0x23c>
   44104:	1d3fffc4 	addi	r20,r3,-1
   44108:	d8c00417 	ldw	r3,16(sp)
   4410c:	d9000317 	ldw	r4,12(sp)
   44110:	a505883a 	add	r2,r20,r20
   44114:	1085883a 	add	r2,r2,r2
   44118:	1cc00504 	addi	r19,r3,20
   4411c:	25c00504 	addi	r23,r4,20
   44120:	98ad883a 	add	r22,r19,r2
   44124:	15c7883a 	add	r3,r2,r23
   44128:	b1400017 	ldw	r5,0(r22)
   4412c:	19000017 	ldw	r4,0(r3)
   44130:	d8c00015 	stw	r3,0(sp)
   44134:	29400044 	addi	r5,r5,1
   44138:	d9000215 	stw	r4,8(sp)
   4413c:	004f1000 	call	4f100 <__udivsi3>
   44140:	1039883a 	mov	fp,r2
   44144:	10003d1e 	bne	r2,zero,4423c <quorem+0x178>
   44148:	d9400417 	ldw	r5,16(sp)
   4414c:	d9000317 	ldw	r4,12(sp)
   44150:	00479a40 	call	479a4 <__mcmp>
   44154:	10002c16 	blt	r2,zero,44208 <quorem+0x144>
   44158:	e7000044 	addi	fp,fp,1
   4415c:	b80f883a 	mov	r7,r23
   44160:	0011883a 	mov	r8,zero
   44164:	0009883a 	mov	r4,zero
   44168:	99400017 	ldw	r5,0(r19)
   4416c:	38c00017 	ldw	r3,0(r7)
   44170:	9cc00104 	addi	r19,r19,4
   44174:	28bfffcc 	andi	r2,r5,65535
   44178:	2085883a 	add	r2,r4,r2
   4417c:	11bfffcc 	andi	r6,r2,65535
   44180:	193fffcc 	andi	r4,r3,65535
   44184:	1004d43a 	srli	r2,r2,16
   44188:	280ad43a 	srli	r5,r5,16
   4418c:	2189c83a 	sub	r4,r4,r6
   44190:	2209883a 	add	r4,r4,r8
   44194:	1806d43a 	srli	r3,r3,16
   44198:	288b883a 	add	r5,r5,r2
   4419c:	200dd43a 	srai	r6,r4,16
   441a0:	28bfffcc 	andi	r2,r5,65535
   441a4:	1887c83a 	sub	r3,r3,r2
   441a8:	1987883a 	add	r3,r3,r6
   441ac:	3900000d 	sth	r4,0(r7)
   441b0:	38c0008d 	sth	r3,2(r7)
   441b4:	2808d43a 	srli	r4,r5,16
   441b8:	39c00104 	addi	r7,r7,4
   441bc:	1811d43a 	srai	r8,r3,16
   441c0:	b4ffe92e 	bgeu	r22,r19,44168 <quorem+0xa4>
   441c4:	a505883a 	add	r2,r20,r20
   441c8:	1085883a 	add	r2,r2,r2
   441cc:	b885883a 	add	r2,r23,r2
   441d0:	10c00017 	ldw	r3,0(r2)
   441d4:	18000c1e 	bne	r3,zero,44208 <quorem+0x144>
   441d8:	113fff04 	addi	r4,r2,-4
   441dc:	b900082e 	bgeu	r23,r4,44200 <quorem+0x13c>
   441e0:	10bfff17 	ldw	r2,-4(r2)
   441e4:	10000326 	beq	r2,zero,441f4 <quorem+0x130>
   441e8:	00000506 	br	44200 <quorem+0x13c>
   441ec:	20800017 	ldw	r2,0(r4)
   441f0:	1000031e 	bne	r2,zero,44200 <quorem+0x13c>
   441f4:	213fff04 	addi	r4,r4,-4
   441f8:	a53fffc4 	addi	r20,r20,-1
   441fc:	b93ffb36 	bltu	r23,r4,441ec <quorem+0x128>
   44200:	d9000317 	ldw	r4,12(sp)
   44204:	25000415 	stw	r20,16(r4)
   44208:	e005883a 	mov	r2,fp
   4420c:	dfc00e17 	ldw	ra,56(sp)
   44210:	df000d17 	ldw	fp,52(sp)
   44214:	ddc00c17 	ldw	r23,48(sp)
   44218:	dd800b17 	ldw	r22,44(sp)
   4421c:	dd400a17 	ldw	r21,40(sp)
   44220:	dd000917 	ldw	r20,36(sp)
   44224:	dcc00817 	ldw	r19,32(sp)
   44228:	dc800717 	ldw	r18,28(sp)
   4422c:	dc400617 	ldw	r17,24(sp)
   44230:	dc000517 	ldw	r16,20(sp)
   44234:	dec00f04 	addi	sp,sp,60
   44238:	f800283a 	ret
   4423c:	b823883a 	mov	r17,r23
   44240:	9825883a 	mov	r18,r19
   44244:	d8000115 	stw	zero,4(sp)
   44248:	002b883a 	mov	r21,zero
   4424c:	94000017 	ldw	r16,0(r18)
   44250:	e009883a 	mov	r4,fp
   44254:	94800104 	addi	r18,r18,4
   44258:	817fffcc 	andi	r5,r16,65535
   4425c:	004f1100 	call	4f110 <__mulsi3>
   44260:	800ad43a 	srli	r5,r16,16
   44264:	e009883a 	mov	r4,fp
   44268:	a8a1883a 	add	r16,r21,r2
   4426c:	004f1100 	call	4f110 <__mulsi3>
   44270:	89000017 	ldw	r4,0(r17)
   44274:	80ffffcc 	andi	r3,r16,65535
   44278:	8020d43a 	srli	r16,r16,16
   4427c:	217fffcc 	andi	r5,r4,65535
   44280:	28cbc83a 	sub	r5,r5,r3
   44284:	d8c00117 	ldw	r3,4(sp)
   44288:	2008d43a 	srli	r4,r4,16
   4428c:	1405883a 	add	r2,r2,r16
   44290:	28cb883a 	add	r5,r5,r3
   44294:	280dd43a 	srai	r6,r5,16
   44298:	10ffffcc 	andi	r3,r2,65535
   4429c:	20c9c83a 	sub	r4,r4,r3
   442a0:	2189883a 	add	r4,r4,r6
   442a4:	8900008d 	sth	r4,2(r17)
   442a8:	2009d43a 	srai	r4,r4,16
   442ac:	8940000d 	sth	r5,0(r17)
   442b0:	102ad43a 	srli	r21,r2,16
   442b4:	8c400104 	addi	r17,r17,4
   442b8:	d9000115 	stw	r4,4(sp)
   442bc:	b4bfe32e 	bgeu	r22,r18,4424c <quorem+0x188>
   442c0:	d9000217 	ldw	r4,8(sp)
   442c4:	203fa01e 	bne	r4,zero,44148 <quorem+0x84>
   442c8:	d8800017 	ldw	r2,0(sp)
   442cc:	10ffff04 	addi	r3,r2,-4
   442d0:	b8c0082e 	bgeu	r23,r3,442f4 <quorem+0x230>
   442d4:	10bfff17 	ldw	r2,-4(r2)
   442d8:	10000326 	beq	r2,zero,442e8 <quorem+0x224>
   442dc:	00000506 	br	442f4 <quorem+0x230>
   442e0:	18800017 	ldw	r2,0(r3)
   442e4:	1000031e 	bne	r2,zero,442f4 <quorem+0x230>
   442e8:	18ffff04 	addi	r3,r3,-4
   442ec:	a53fffc4 	addi	r20,r20,-1
   442f0:	b8fffb36 	bltu	r23,r3,442e0 <quorem+0x21c>
   442f4:	d8c00317 	ldw	r3,12(sp)
   442f8:	1d000415 	stw	r20,16(r3)
   442fc:	003f9206 	br	44148 <quorem+0x84>
   44300:	0005883a 	mov	r2,zero
   44304:	003fc106 	br	4420c <quorem+0x148>

00044308 <_dtoa_r>:
   44308:	22001017 	ldw	r8,64(r4)
   4430c:	deffda04 	addi	sp,sp,-152
   44310:	dd402115 	stw	r21,132(sp)
   44314:	dd002015 	stw	r20,128(sp)
   44318:	dc801e15 	stw	r18,120(sp)
   4431c:	dc401d15 	stw	r17,116(sp)
   44320:	dfc02515 	stw	ra,148(sp)
   44324:	df002415 	stw	fp,144(sp)
   44328:	ddc02315 	stw	r23,140(sp)
   4432c:	dd802215 	stw	r22,136(sp)
   44330:	dcc01f15 	stw	r19,124(sp)
   44334:	dc001c15 	stw	r16,112(sp)
   44338:	d9001615 	stw	r4,88(sp)
   4433c:	3023883a 	mov	r17,r6
   44340:	2829883a 	mov	r20,r5
   44344:	d9c01715 	stw	r7,92(sp)
   44348:	dc802817 	ldw	r18,160(sp)
   4434c:	302b883a 	mov	r21,r6
   44350:	40000a26 	beq	r8,zero,4437c <_dtoa_r+0x74>
   44354:	20801117 	ldw	r2,68(r4)
   44358:	400b883a 	mov	r5,r8
   4435c:	40800115 	stw	r2,4(r8)
   44360:	20c01117 	ldw	r3,68(r4)
   44364:	00800044 	movi	r2,1
   44368:	10c4983a 	sll	r2,r2,r3
   4436c:	40800215 	stw	r2,8(r8)
   44370:	00478480 	call	47848 <_Bfree>
   44374:	d8c01617 	ldw	r3,88(sp)
   44378:	18001015 	stw	zero,64(r3)
   4437c:	8800a316 	blt	r17,zero,4460c <_dtoa_r+0x304>
   44380:	90000015 	stw	zero,0(r18)
   44384:	a8dffc2c 	andhi	r3,r21,32752
   44388:	009ffc34 	movhi	r2,32752
   4438c:	18809126 	beq	r3,r2,445d4 <_dtoa_r+0x2cc>
   44390:	000d883a 	mov	r6,zero
   44394:	000f883a 	mov	r7,zero
   44398:	a009883a 	mov	r4,r20
   4439c:	a80b883a 	mov	r5,r21
   443a0:	dd001215 	stw	r20,72(sp)
   443a4:	dd401315 	stw	r21,76(sp)
   443a8:	004e9440 	call	4e944 <__nedf2>
   443ac:	1000171e 	bne	r2,zero,4440c <_dtoa_r+0x104>
   443b0:	d9802717 	ldw	r6,156(sp)
   443b4:	00800044 	movi	r2,1
   443b8:	30800015 	stw	r2,0(r6)
   443bc:	d8802917 	ldw	r2,164(sp)
   443c0:	10029b26 	beq	r2,zero,44e30 <_dtoa_r+0xb28>
   443c4:	d9002917 	ldw	r4,164(sp)
   443c8:	00800174 	movhi	r2,5
   443cc:	1089cd44 	addi	r2,r2,10037
   443d0:	10ffffc4 	addi	r3,r2,-1
   443d4:	20800015 	stw	r2,0(r4)
   443d8:	1805883a 	mov	r2,r3
   443dc:	dfc02517 	ldw	ra,148(sp)
   443e0:	df002417 	ldw	fp,144(sp)
   443e4:	ddc02317 	ldw	r23,140(sp)
   443e8:	dd802217 	ldw	r22,136(sp)
   443ec:	dd402117 	ldw	r21,132(sp)
   443f0:	dd002017 	ldw	r20,128(sp)
   443f4:	dcc01f17 	ldw	r19,124(sp)
   443f8:	dc801e17 	ldw	r18,120(sp)
   443fc:	dc401d17 	ldw	r17,116(sp)
   44400:	dc001c17 	ldw	r16,112(sp)
   44404:	dec02604 	addi	sp,sp,152
   44408:	f800283a 	ret
   4440c:	d9001617 	ldw	r4,88(sp)
   44410:	d9401217 	ldw	r5,72(sp)
   44414:	d8800104 	addi	r2,sp,4
   44418:	a80d883a 	mov	r6,r21
   4441c:	d9c00204 	addi	r7,sp,8
   44420:	d8800015 	stw	r2,0(sp)
   44424:	0047e840 	call	47e84 <__d2b>
   44428:	d8800715 	stw	r2,28(sp)
   4442c:	a804d53a 	srli	r2,r21,20
   44430:	1101ffcc 	andi	r4,r2,2047
   44434:	20008626 	beq	r4,zero,44650 <_dtoa_r+0x348>
   44438:	d8c01217 	ldw	r3,72(sp)
   4443c:	00800434 	movhi	r2,16
   44440:	10bfffc4 	addi	r2,r2,-1
   44444:	ddc00117 	ldw	r23,4(sp)
   44448:	a884703a 	and	r2,r21,r2
   4444c:	1811883a 	mov	r8,r3
   44450:	124ffc34 	orhi	r9,r2,16368
   44454:	25bf0044 	addi	r22,r4,-1023
   44458:	d8000815 	stw	zero,32(sp)
   4445c:	0005883a 	mov	r2,zero
   44460:	00cffe34 	movhi	r3,16376
   44464:	480b883a 	mov	r5,r9
   44468:	4009883a 	mov	r4,r8
   4446c:	180f883a 	mov	r7,r3
   44470:	100d883a 	mov	r6,r2
   44474:	004e1ac0 	call	4e1ac <__subdf3>
   44478:	0218dbf4 	movhi	r8,25455
   4447c:	4210d844 	addi	r8,r8,17249
   44480:	024ff4f4 	movhi	r9,16339
   44484:	4a61e9c4 	addi	r9,r9,-30809
   44488:	480f883a 	mov	r7,r9
   4448c:	400d883a 	mov	r6,r8
   44490:	180b883a 	mov	r5,r3
   44494:	1009883a 	mov	r4,r2
   44498:	004e2a00 	call	4e2a0 <__muldf3>
   4449c:	0222d874 	movhi	r8,35681
   444a0:	42322cc4 	addi	r8,r8,-14157
   444a4:	024ff1f4 	movhi	r9,16327
   444a8:	4a628a04 	addi	r9,r9,-30168
   444ac:	480f883a 	mov	r7,r9
   444b0:	400d883a 	mov	r6,r8
   444b4:	180b883a 	mov	r5,r3
   444b8:	1009883a 	mov	r4,r2
   444bc:	004e22c0 	call	4e22c <__adddf3>
   444c0:	b009883a 	mov	r4,r22
   444c4:	1021883a 	mov	r16,r2
   444c8:	1823883a 	mov	r17,r3
   444cc:	004ebec0 	call	4ebec <__floatsidf>
   444d0:	021427f4 	movhi	r8,20639
   444d4:	421e7ec4 	addi	r8,r8,31227
   444d8:	024ff4f4 	movhi	r9,16339
   444dc:	4a5104c4 	addi	r9,r9,17427
   444e0:	480f883a 	mov	r7,r9
   444e4:	400d883a 	mov	r6,r8
   444e8:	180b883a 	mov	r5,r3
   444ec:	1009883a 	mov	r4,r2
   444f0:	004e2a00 	call	4e2a0 <__muldf3>
   444f4:	180f883a 	mov	r7,r3
   444f8:	880b883a 	mov	r5,r17
   444fc:	100d883a 	mov	r6,r2
   44500:	8009883a 	mov	r4,r16
   44504:	004e22c0 	call	4e22c <__adddf3>
   44508:	1009883a 	mov	r4,r2
   4450c:	180b883a 	mov	r5,r3
   44510:	1021883a 	mov	r16,r2
   44514:	1823883a 	mov	r17,r3
   44518:	004ece40 	call	4ece4 <__fixdfsi>
   4451c:	000d883a 	mov	r6,zero
   44520:	000f883a 	mov	r7,zero
   44524:	8009883a 	mov	r4,r16
   44528:	880b883a 	mov	r5,r17
   4452c:	d8800d15 	stw	r2,52(sp)
   44530:	004eadc0 	call	4eadc <__ltdf2>
   44534:	10031716 	blt	r2,zero,45194 <_dtoa_r+0xe8c>
   44538:	d8c00d17 	ldw	r3,52(sp)
   4453c:	00800584 	movi	r2,22
   44540:	10c1482e 	bgeu	r2,r3,44a64 <_dtoa_r+0x75c>
   44544:	01000044 	movi	r4,1
   44548:	d9000c15 	stw	r4,48(sp)
   4454c:	bd85c83a 	sub	r2,r23,r22
   44550:	11bfffc4 	addi	r6,r2,-1
   44554:	30030b16 	blt	r6,zero,45184 <_dtoa_r+0xe7c>
   44558:	d9800a15 	stw	r6,40(sp)
   4455c:	d8001115 	stw	zero,68(sp)
   44560:	d8c00d17 	ldw	r3,52(sp)
   44564:	1802ff16 	blt	r3,zero,45164 <_dtoa_r+0xe5c>
   44568:	d9000a17 	ldw	r4,40(sp)
   4456c:	d8c00915 	stw	r3,36(sp)
   44570:	d8001015 	stw	zero,64(sp)
   44574:	20c9883a 	add	r4,r4,r3
   44578:	d9000a15 	stw	r4,40(sp)
   4457c:	d9001717 	ldw	r4,92(sp)
   44580:	00800244 	movi	r2,9
   44584:	11004636 	bltu	r2,r4,446a0 <_dtoa_r+0x398>
   44588:	00800144 	movi	r2,5
   4458c:	11020416 	blt	r2,r4,44da0 <_dtoa_r+0xa98>
   44590:	04400044 	movi	r17,1
   44594:	d8c01717 	ldw	r3,92(sp)
   44598:	00800144 	movi	r2,5
   4459c:	10c1ed36 	bltu	r2,r3,44d54 <_dtoa_r+0xa4c>
   445a0:	18c5883a 	add	r2,r3,r3
   445a4:	1085883a 	add	r2,r2,r2
   445a8:	00c00134 	movhi	r3,4
   445ac:	18d16f04 	addi	r3,r3,17852
   445b0:	10c5883a 	add	r2,r2,r3
   445b4:	11000017 	ldw	r4,0(r2)
   445b8:	2000683a 	jmp	r4
   445bc:	000446a8 	cmpgeui	zero,zero,4378
   445c0:	000446a8 	cmpgeui	zero,zero,4378
   445c4:	000450a8 	cmpgeui	zero,zero,4418
   445c8:	00045080 	call	4508 <__alt_mem_onchip_mem-0x3baf8>
   445cc:	000450c4 	movi	zero,4419
   445d0:	000450d0 	cmplti	zero,zero,4419
   445d4:	d9002717 	ldw	r4,156(sp)
   445d8:	0089c3c4 	movi	r2,9999
   445dc:	20800015 	stw	r2,0(r4)
   445e0:	a0001026 	beq	r20,zero,44624 <_dtoa_r+0x31c>
   445e4:	00c00174 	movhi	r3,5
   445e8:	18ca8404 	addi	r3,r3,10768
   445ec:	d9802917 	ldw	r6,164(sp)
   445f0:	303f7926 	beq	r6,zero,443d8 <_dtoa_r+0xd0>
   445f4:	188000c7 	ldb	r2,3(r3)
   445f8:	190000c4 	addi	r4,r3,3
   445fc:	1000101e 	bne	r2,zero,44640 <_dtoa_r+0x338>
   44600:	d8802917 	ldw	r2,164(sp)
   44604:	11000015 	stw	r4,0(r2)
   44608:	003f7306 	br	443d8 <_dtoa_r+0xd0>
   4460c:	00a00034 	movhi	r2,32768
   44610:	10bfffc4 	addi	r2,r2,-1
   44614:	00c00044 	movi	r3,1
   44618:	88aa703a 	and	r21,r17,r2
   4461c:	90c00015 	stw	r3,0(r18)
   44620:	003f5806 	br	44384 <_dtoa_r+0x7c>
   44624:	00800434 	movhi	r2,16
   44628:	10bfffc4 	addi	r2,r2,-1
   4462c:	a884703a 	and	r2,r21,r2
   44630:	103fec1e 	bne	r2,zero,445e4 <_dtoa_r+0x2dc>
   44634:	00c00174 	movhi	r3,5
   44638:	18ca8104 	addi	r3,r3,10756
   4463c:	003feb06 	br	445ec <_dtoa_r+0x2e4>
   44640:	d8802917 	ldw	r2,164(sp)
   44644:	19000204 	addi	r4,r3,8
   44648:	11000015 	stw	r4,0(r2)
   4464c:	003f6206 	br	443d8 <_dtoa_r+0xd0>
   44650:	ddc00117 	ldw	r23,4(sp)
   44654:	d8800217 	ldw	r2,8(sp)
   44658:	01000804 	movi	r4,32
   4465c:	b8c10c84 	addi	r3,r23,1074
   44660:	18a3883a 	add	r17,r3,r2
   44664:	2441b80e 	bge	r4,r17,44d48 <_dtoa_r+0xa40>
   44668:	00c01004 	movi	r3,64
   4466c:	1c47c83a 	sub	r3,r3,r17
   44670:	88bff804 	addi	r2,r17,-32
   44674:	a8c6983a 	sll	r3,r21,r3
   44678:	a084d83a 	srl	r2,r20,r2
   4467c:	1888b03a 	or	r4,r3,r2
   44680:	004ee300 	call	4ee30 <__floatunsidf>
   44684:	1011883a 	mov	r8,r2
   44688:	00bf8434 	movhi	r2,65040
   4468c:	01000044 	movi	r4,1
   44690:	10d3883a 	add	r9,r2,r3
   44694:	8dbef344 	addi	r22,r17,-1075
   44698:	d9000815 	stw	r4,32(sp)
   4469c:	003f6f06 	br	4445c <_dtoa_r+0x154>
   446a0:	d8001715 	stw	zero,92(sp)
   446a4:	04400044 	movi	r17,1
   446a8:	00bfffc4 	movi	r2,-1
   446ac:	00c00044 	movi	r3,1
   446b0:	d8800e15 	stw	r2,56(sp)
   446b4:	d8002615 	stw	zero,152(sp)
   446b8:	d8800f15 	stw	r2,60(sp)
   446bc:	d8c00b15 	stw	r3,44(sp)
   446c0:	1021883a 	mov	r16,r2
   446c4:	d8801617 	ldw	r2,88(sp)
   446c8:	10001115 	stw	zero,68(r2)
   446cc:	d8801617 	ldw	r2,88(sp)
   446d0:	11401117 	ldw	r5,68(r2)
   446d4:	1009883a 	mov	r4,r2
   446d8:	0047dc80 	call	47dc8 <_Balloc>
   446dc:	d8c01617 	ldw	r3,88(sp)
   446e0:	d8800515 	stw	r2,20(sp)
   446e4:	18801015 	stw	r2,64(r3)
   446e8:	00800384 	movi	r2,14
   446ec:	14006836 	bltu	r2,r16,44890 <_dtoa_r+0x588>
   446f0:	8805003a 	cmpeq	r2,r17,zero
   446f4:	1000661e 	bne	r2,zero,44890 <_dtoa_r+0x588>
   446f8:	d9000d17 	ldw	r4,52(sp)
   446fc:	0102300e 	bge	zero,r4,44fc0 <_dtoa_r+0xcb8>
   44700:	208003cc 	andi	r2,r4,15
   44704:	100490fa 	slli	r2,r2,3
   44708:	2025d13a 	srai	r18,r4,4
   4470c:	00c00174 	movhi	r3,5
   44710:	18ca9504 	addi	r3,r3,10836
   44714:	10c5883a 	add	r2,r2,r3
   44718:	90c0040c 	andi	r3,r18,16
   4471c:	14000017 	ldw	r16,0(r2)
   44720:	14400117 	ldw	r17,4(r2)
   44724:	18036a1e 	bne	r3,zero,454d0 <_dtoa_r+0x11c8>
   44728:	05800084 	movi	r22,2
   4472c:	90001026 	beq	r18,zero,44770 <_dtoa_r+0x468>
   44730:	04c00174 	movhi	r19,5
   44734:	9ccac704 	addi	r19,r19,11036
   44738:	9080004c 	andi	r2,r18,1
   4473c:	1005003a 	cmpeq	r2,r2,zero
   44740:	1000081e 	bne	r2,zero,44764 <_dtoa_r+0x45c>
   44744:	99800017 	ldw	r6,0(r19)
   44748:	99c00117 	ldw	r7,4(r19)
   4474c:	880b883a 	mov	r5,r17
   44750:	8009883a 	mov	r4,r16
   44754:	004e2a00 	call	4e2a0 <__muldf3>
   44758:	1021883a 	mov	r16,r2
   4475c:	b5800044 	addi	r22,r22,1
   44760:	1823883a 	mov	r17,r3
   44764:	9025d07a 	srai	r18,r18,1
   44768:	9cc00204 	addi	r19,r19,8
   4476c:	903ff21e 	bne	r18,zero,44738 <_dtoa_r+0x430>
   44770:	a80b883a 	mov	r5,r21
   44774:	a009883a 	mov	r4,r20
   44778:	880f883a 	mov	r7,r17
   4477c:	800d883a 	mov	r6,r16
   44780:	004e6640 	call	4e664 <__divdf3>
   44784:	1029883a 	mov	r20,r2
   44788:	182b883a 	mov	r21,r3
   4478c:	d8c00c17 	ldw	r3,48(sp)
   44790:	1805003a 	cmpeq	r2,r3,zero
   44794:	1000081e 	bne	r2,zero,447b8 <_dtoa_r+0x4b0>
   44798:	0005883a 	mov	r2,zero
   4479c:	00cffc34 	movhi	r3,16368
   447a0:	180f883a 	mov	r7,r3
   447a4:	a009883a 	mov	r4,r20
   447a8:	a80b883a 	mov	r5,r21
   447ac:	100d883a 	mov	r6,r2
   447b0:	004eadc0 	call	4eadc <__ltdf2>
   447b4:	1003fe16 	blt	r2,zero,457b0 <_dtoa_r+0x14a8>
   447b8:	b009883a 	mov	r4,r22
   447bc:	004ebec0 	call	4ebec <__floatsidf>
   447c0:	180b883a 	mov	r5,r3
   447c4:	1009883a 	mov	r4,r2
   447c8:	a00d883a 	mov	r6,r20
   447cc:	a80f883a 	mov	r7,r21
   447d0:	004e2a00 	call	4e2a0 <__muldf3>
   447d4:	0011883a 	mov	r8,zero
   447d8:	02500734 	movhi	r9,16412
   447dc:	1009883a 	mov	r4,r2
   447e0:	180b883a 	mov	r5,r3
   447e4:	480f883a 	mov	r7,r9
   447e8:	400d883a 	mov	r6,r8
   447ec:	004e22c0 	call	4e22c <__adddf3>
   447f0:	d9000f17 	ldw	r4,60(sp)
   447f4:	102d883a 	mov	r22,r2
   447f8:	00bf3034 	movhi	r2,64704
   447fc:	18b9883a 	add	fp,r3,r2
   44800:	e02f883a 	mov	r23,fp
   44804:	20028f1e 	bne	r4,zero,45244 <_dtoa_r+0xf3c>
   44808:	0005883a 	mov	r2,zero
   4480c:	00d00534 	movhi	r3,16404
   44810:	a009883a 	mov	r4,r20
   44814:	a80b883a 	mov	r5,r21
   44818:	180f883a 	mov	r7,r3
   4481c:	100d883a 	mov	r6,r2
   44820:	004e1ac0 	call	4e1ac <__subdf3>
   44824:	1009883a 	mov	r4,r2
   44828:	e00f883a 	mov	r7,fp
   4482c:	180b883a 	mov	r5,r3
   44830:	b00d883a 	mov	r6,r22
   44834:	1025883a 	mov	r18,r2
   44838:	1827883a 	mov	r19,r3
   4483c:	004e9cc0 	call	4e9cc <__gtdf2>
   44840:	00834f16 	blt	zero,r2,45580 <_dtoa_r+0x1278>
   44844:	e0e0003c 	xorhi	r3,fp,32768
   44848:	9009883a 	mov	r4,r18
   4484c:	980b883a 	mov	r5,r19
   44850:	180f883a 	mov	r7,r3
   44854:	b00d883a 	mov	r6,r22
   44858:	004eadc0 	call	4eadc <__ltdf2>
   4485c:	1000080e 	bge	r2,zero,44880 <_dtoa_r+0x578>
   44860:	0027883a 	mov	r19,zero
   44864:	0025883a 	mov	r18,zero
   44868:	d8802617 	ldw	r2,152(sp)
   4486c:	df000517 	ldw	fp,20(sp)
   44870:	d8000615 	stw	zero,24(sp)
   44874:	0084303a 	nor	r2,zero,r2
   44878:	d8800d15 	stw	r2,52(sp)
   4487c:	00019b06 	br	44eec <_dtoa_r+0xbe4>
   44880:	d9801217 	ldw	r6,72(sp)
   44884:	d8801317 	ldw	r2,76(sp)
   44888:	3029883a 	mov	r20,r6
   4488c:	102b883a 	mov	r21,r2
   44890:	d8c00217 	ldw	r3,8(sp)
   44894:	18008516 	blt	r3,zero,44aac <_dtoa_r+0x7a4>
   44898:	d9000d17 	ldw	r4,52(sp)
   4489c:	00800384 	movi	r2,14
   448a0:	11008216 	blt	r2,r4,44aac <_dtoa_r+0x7a4>
   448a4:	200490fa 	slli	r2,r4,3
   448a8:	d9802617 	ldw	r6,152(sp)
   448ac:	00c00174 	movhi	r3,5
   448b0:	18ca9504 	addi	r3,r3,10836
   448b4:	10c5883a 	add	r2,r2,r3
   448b8:	14800017 	ldw	r18,0(r2)
   448bc:	14c00117 	ldw	r19,4(r2)
   448c0:	30031e16 	blt	r6,zero,4553c <_dtoa_r+0x1234>
   448c4:	d9000517 	ldw	r4,20(sp)
   448c8:	d8c00f17 	ldw	r3,60(sp)
   448cc:	a823883a 	mov	r17,r21
   448d0:	a021883a 	mov	r16,r20
   448d4:	192b883a 	add	r21,r3,r4
   448d8:	2039883a 	mov	fp,r4
   448dc:	00000f06 	br	4491c <_dtoa_r+0x614>
   448e0:	0005883a 	mov	r2,zero
   448e4:	00d00934 	movhi	r3,16420
   448e8:	5009883a 	mov	r4,r10
   448ec:	580b883a 	mov	r5,r11
   448f0:	180f883a 	mov	r7,r3
   448f4:	100d883a 	mov	r6,r2
   448f8:	004e2a00 	call	4e2a0 <__muldf3>
   448fc:	180b883a 	mov	r5,r3
   44900:	000d883a 	mov	r6,zero
   44904:	000f883a 	mov	r7,zero
   44908:	1009883a 	mov	r4,r2
   4490c:	1021883a 	mov	r16,r2
   44910:	1823883a 	mov	r17,r3
   44914:	004e9440 	call	4e944 <__nedf2>
   44918:	10004526 	beq	r2,zero,44a30 <_dtoa_r+0x728>
   4491c:	900d883a 	mov	r6,r18
   44920:	980f883a 	mov	r7,r19
   44924:	8009883a 	mov	r4,r16
   44928:	880b883a 	mov	r5,r17
   4492c:	004e6640 	call	4e664 <__divdf3>
   44930:	180b883a 	mov	r5,r3
   44934:	1009883a 	mov	r4,r2
   44938:	004ece40 	call	4ece4 <__fixdfsi>
   4493c:	1009883a 	mov	r4,r2
   44940:	1029883a 	mov	r20,r2
   44944:	004ebec0 	call	4ebec <__floatsidf>
   44948:	180f883a 	mov	r7,r3
   4494c:	9009883a 	mov	r4,r18
   44950:	980b883a 	mov	r5,r19
   44954:	100d883a 	mov	r6,r2
   44958:	004e2a00 	call	4e2a0 <__muldf3>
   4495c:	180f883a 	mov	r7,r3
   44960:	880b883a 	mov	r5,r17
   44964:	8009883a 	mov	r4,r16
   44968:	100d883a 	mov	r6,r2
   4496c:	004e1ac0 	call	4e1ac <__subdf3>
   44970:	1015883a 	mov	r10,r2
   44974:	a0800c04 	addi	r2,r20,48
   44978:	e0800005 	stb	r2,0(fp)
   4497c:	e7000044 	addi	fp,fp,1
   44980:	1817883a 	mov	r11,r3
   44984:	e57fd61e 	bne	fp,r21,448e0 <_dtoa_r+0x5d8>
   44988:	500d883a 	mov	r6,r10
   4498c:	180f883a 	mov	r7,r3
   44990:	5009883a 	mov	r4,r10
   44994:	180b883a 	mov	r5,r3
   44998:	004e22c0 	call	4e22c <__adddf3>
   4499c:	100d883a 	mov	r6,r2
   449a0:	9009883a 	mov	r4,r18
   449a4:	980b883a 	mov	r5,r19
   449a8:	180f883a 	mov	r7,r3
   449ac:	1021883a 	mov	r16,r2
   449b0:	1823883a 	mov	r17,r3
   449b4:	004eadc0 	call	4eadc <__ltdf2>
   449b8:	10000816 	blt	r2,zero,449dc <_dtoa_r+0x6d4>
   449bc:	980b883a 	mov	r5,r19
   449c0:	800d883a 	mov	r6,r16
   449c4:	880f883a 	mov	r7,r17
   449c8:	9009883a 	mov	r4,r18
   449cc:	004e8bc0 	call	4e8bc <__eqdf2>
   449d0:	1000171e 	bne	r2,zero,44a30 <_dtoa_r+0x728>
   449d4:	a080004c 	andi	r2,r20,1
   449d8:	10001526 	beq	r2,zero,44a30 <_dtoa_r+0x728>
   449dc:	d8800d17 	ldw	r2,52(sp)
   449e0:	d8800415 	stw	r2,16(sp)
   449e4:	e009883a 	mov	r4,fp
   449e8:	213fffc4 	addi	r4,r4,-1
   449ec:	20c00007 	ldb	r3,0(r4)
   449f0:	00800e44 	movi	r2,57
   449f4:	1880081e 	bne	r3,r2,44a18 <_dtoa_r+0x710>
   449f8:	d8800517 	ldw	r2,20(sp)
   449fc:	113ffa1e 	bne	r2,r4,449e8 <_dtoa_r+0x6e0>
   44a00:	d8c00417 	ldw	r3,16(sp)
   44a04:	d9800517 	ldw	r6,20(sp)
   44a08:	00800c04 	movi	r2,48
   44a0c:	18c00044 	addi	r3,r3,1
   44a10:	d8c00415 	stw	r3,16(sp)
   44a14:	30800005 	stb	r2,0(r6)
   44a18:	20800003 	ldbu	r2,0(r4)
   44a1c:	d8c00417 	ldw	r3,16(sp)
   44a20:	27000044 	addi	fp,r4,1
   44a24:	10800044 	addi	r2,r2,1
   44a28:	d8c00d15 	stw	r3,52(sp)
   44a2c:	20800005 	stb	r2,0(r4)
   44a30:	d9001617 	ldw	r4,88(sp)
   44a34:	d9400717 	ldw	r5,28(sp)
   44a38:	00478480 	call	47848 <_Bfree>
   44a3c:	e0000005 	stb	zero,0(fp)
   44a40:	d9800d17 	ldw	r6,52(sp)
   44a44:	d8c02717 	ldw	r3,156(sp)
   44a48:	d9002917 	ldw	r4,164(sp)
   44a4c:	30800044 	addi	r2,r6,1
   44a50:	18800015 	stw	r2,0(r3)
   44a54:	20029c26 	beq	r4,zero,454c8 <_dtoa_r+0x11c0>
   44a58:	d8c00517 	ldw	r3,20(sp)
   44a5c:	27000015 	stw	fp,0(r4)
   44a60:	003e5d06 	br	443d8 <_dtoa_r+0xd0>
   44a64:	d9800d17 	ldw	r6,52(sp)
   44a68:	00c00174 	movhi	r3,5
   44a6c:	18ca9504 	addi	r3,r3,10836
   44a70:	d9001217 	ldw	r4,72(sp)
   44a74:	300490fa 	slli	r2,r6,3
   44a78:	d9401317 	ldw	r5,76(sp)
   44a7c:	10c5883a 	add	r2,r2,r3
   44a80:	12000017 	ldw	r8,0(r2)
   44a84:	12400117 	ldw	r9,4(r2)
   44a88:	400d883a 	mov	r6,r8
   44a8c:	480f883a 	mov	r7,r9
   44a90:	004eadc0 	call	4eadc <__ltdf2>
   44a94:	1000030e 	bge	r2,zero,44aa4 <_dtoa_r+0x79c>
   44a98:	d8800d17 	ldw	r2,52(sp)
   44a9c:	10bfffc4 	addi	r2,r2,-1
   44aa0:	d8800d15 	stw	r2,52(sp)
   44aa4:	d8000c15 	stw	zero,48(sp)
   44aa8:	003ea806 	br	4454c <_dtoa_r+0x244>
   44aac:	d9000b17 	ldw	r4,44(sp)
   44ab0:	202cc03a 	cmpne	r22,r4,zero
   44ab4:	b000c71e 	bne	r22,zero,44dd4 <_dtoa_r+0xacc>
   44ab8:	dc001117 	ldw	r16,68(sp)
   44abc:	dc801017 	ldw	r18,64(sp)
   44ac0:	0027883a 	mov	r19,zero
   44ac4:	04000b0e 	bge	zero,r16,44af4 <_dtoa_r+0x7ec>
   44ac8:	d8c00a17 	ldw	r3,40(sp)
   44acc:	00c0090e 	bge	zero,r3,44af4 <_dtoa_r+0x7ec>
   44ad0:	8005883a 	mov	r2,r16
   44ad4:	1c011316 	blt	r3,r16,44f24 <_dtoa_r+0xc1c>
   44ad8:	d9000a17 	ldw	r4,40(sp)
   44adc:	d9801117 	ldw	r6,68(sp)
   44ae0:	80a1c83a 	sub	r16,r16,r2
   44ae4:	2089c83a 	sub	r4,r4,r2
   44ae8:	308dc83a 	sub	r6,r6,r2
   44aec:	d9000a15 	stw	r4,40(sp)
   44af0:	d9801115 	stw	r6,68(sp)
   44af4:	d8801017 	ldw	r2,64(sp)
   44af8:	0080150e 	bge	zero,r2,44b50 <_dtoa_r+0x848>
   44afc:	d8c00b17 	ldw	r3,44(sp)
   44b00:	1805003a 	cmpeq	r2,r3,zero
   44b04:	1001c91e 	bne	r2,zero,4522c <_dtoa_r+0xf24>
   44b08:	04800e0e 	bge	zero,r18,44b44 <_dtoa_r+0x83c>
   44b0c:	d9001617 	ldw	r4,88(sp)
   44b10:	980b883a 	mov	r5,r19
   44b14:	900d883a 	mov	r6,r18
   44b18:	00486940 	call	48694 <__pow5mult>
   44b1c:	d9001617 	ldw	r4,88(sp)
   44b20:	d9800717 	ldw	r6,28(sp)
   44b24:	100b883a 	mov	r5,r2
   44b28:	1027883a 	mov	r19,r2
   44b2c:	00482d80 	call	482d8 <__multiply>
   44b30:	d9001617 	ldw	r4,88(sp)
   44b34:	d9400717 	ldw	r5,28(sp)
   44b38:	1023883a 	mov	r17,r2
   44b3c:	00478480 	call	47848 <_Bfree>
   44b40:	dc400715 	stw	r17,28(sp)
   44b44:	d9001017 	ldw	r4,64(sp)
   44b48:	248dc83a 	sub	r6,r4,r18
   44b4c:	30010e1e 	bne	r6,zero,44f88 <_dtoa_r+0xc80>
   44b50:	d9001617 	ldw	r4,88(sp)
   44b54:	04400044 	movi	r17,1
   44b58:	880b883a 	mov	r5,r17
   44b5c:	004852c0 	call	4852c <__i2b>
   44b60:	d9800917 	ldw	r6,36(sp)
   44b64:	1025883a 	mov	r18,r2
   44b68:	0180040e 	bge	zero,r6,44b7c <_dtoa_r+0x874>
   44b6c:	d9001617 	ldw	r4,88(sp)
   44b70:	100b883a 	mov	r5,r2
   44b74:	00486940 	call	48694 <__pow5mult>
   44b78:	1025883a 	mov	r18,r2
   44b7c:	d8801717 	ldw	r2,92(sp)
   44b80:	8880f30e 	bge	r17,r2,44f50 <_dtoa_r+0xc48>
   44b84:	0023883a 	mov	r17,zero
   44b88:	d9800917 	ldw	r6,36(sp)
   44b8c:	30019e1e 	bne	r6,zero,45208 <_dtoa_r+0xf00>
   44b90:	00c00044 	movi	r3,1
   44b94:	d9000a17 	ldw	r4,40(sp)
   44b98:	20c5883a 	add	r2,r4,r3
   44b9c:	10c007cc 	andi	r3,r2,31
   44ba0:	1800841e 	bne	r3,zero,44db4 <_dtoa_r+0xaac>
   44ba4:	00800704 	movi	r2,28
   44ba8:	d9000a17 	ldw	r4,40(sp)
   44bac:	d9801117 	ldw	r6,68(sp)
   44bb0:	80a1883a 	add	r16,r16,r2
   44bb4:	2089883a 	add	r4,r4,r2
   44bb8:	308d883a 	add	r6,r6,r2
   44bbc:	d9000a15 	stw	r4,40(sp)
   44bc0:	d9801115 	stw	r6,68(sp)
   44bc4:	d8801117 	ldw	r2,68(sp)
   44bc8:	0080050e 	bge	zero,r2,44be0 <_dtoa_r+0x8d8>
   44bcc:	d9400717 	ldw	r5,28(sp)
   44bd0:	d9001617 	ldw	r4,88(sp)
   44bd4:	100d883a 	mov	r6,r2
   44bd8:	004818c0 	call	4818c <__lshift>
   44bdc:	d8800715 	stw	r2,28(sp)
   44be0:	d8c00a17 	ldw	r3,40(sp)
   44be4:	00c0050e 	bge	zero,r3,44bfc <_dtoa_r+0x8f4>
   44be8:	d9001617 	ldw	r4,88(sp)
   44bec:	900b883a 	mov	r5,r18
   44bf0:	180d883a 	mov	r6,r3
   44bf4:	004818c0 	call	4818c <__lshift>
   44bf8:	1025883a 	mov	r18,r2
   44bfc:	d9000c17 	ldw	r4,48(sp)
   44c00:	2005003a 	cmpeq	r2,r4,zero
   44c04:	10016f26 	beq	r2,zero,451c4 <_dtoa_r+0xebc>
   44c08:	d9000f17 	ldw	r4,60(sp)
   44c0c:	0102170e 	bge	zero,r4,4546c <_dtoa_r+0x1164>
   44c10:	d9800b17 	ldw	r6,44(sp)
   44c14:	3005003a 	cmpeq	r2,r6,zero
   44c18:	1000881e 	bne	r2,zero,44e3c <_dtoa_r+0xb34>
   44c1c:	0400050e 	bge	zero,r16,44c34 <_dtoa_r+0x92c>
   44c20:	d9001617 	ldw	r4,88(sp)
   44c24:	980b883a 	mov	r5,r19
   44c28:	800d883a 	mov	r6,r16
   44c2c:	004818c0 	call	4818c <__lshift>
   44c30:	1027883a 	mov	r19,r2
   44c34:	8804c03a 	cmpne	r2,r17,zero
   44c38:	1002541e 	bne	r2,zero,4558c <_dtoa_r+0x1284>
   44c3c:	980b883a 	mov	r5,r19
   44c40:	dd800517 	ldw	r22,20(sp)
   44c44:	dcc00615 	stw	r19,24(sp)
   44c48:	a700004c 	andi	fp,r20,1
   44c4c:	2827883a 	mov	r19,r5
   44c50:	d9000717 	ldw	r4,28(sp)
   44c54:	900b883a 	mov	r5,r18
   44c58:	00440c40 	call	440c4 <quorem>
   44c5c:	d9000717 	ldw	r4,28(sp)
   44c60:	d9400617 	ldw	r5,24(sp)
   44c64:	1023883a 	mov	r17,r2
   44c68:	8dc00c04 	addi	r23,r17,48
   44c6c:	00479a40 	call	479a4 <__mcmp>
   44c70:	d9001617 	ldw	r4,88(sp)
   44c74:	900b883a 	mov	r5,r18
   44c78:	980d883a 	mov	r6,r19
   44c7c:	1029883a 	mov	r20,r2
   44c80:	00480000 	call	48000 <__mdiff>
   44c84:	102b883a 	mov	r21,r2
   44c88:	10800317 	ldw	r2,12(r2)
   44c8c:	1001281e 	bne	r2,zero,45130 <_dtoa_r+0xe28>
   44c90:	d9000717 	ldw	r4,28(sp)
   44c94:	a80b883a 	mov	r5,r21
   44c98:	00479a40 	call	479a4 <__mcmp>
   44c9c:	d9001617 	ldw	r4,88(sp)
   44ca0:	1021883a 	mov	r16,r2
   44ca4:	a80b883a 	mov	r5,r21
   44ca8:	00478480 	call	47848 <_Bfree>
   44cac:	8000041e 	bne	r16,zero,44cc0 <_dtoa_r+0x9b8>
   44cb0:	d8801717 	ldw	r2,92(sp)
   44cb4:	1000021e 	bne	r2,zero,44cc0 <_dtoa_r+0x9b8>
   44cb8:	e004c03a 	cmpne	r2,fp,zero
   44cbc:	10011726 	beq	r2,zero,4511c <_dtoa_r+0xe14>
   44cc0:	a0010616 	blt	r20,zero,450dc <_dtoa_r+0xdd4>
   44cc4:	a000041e 	bne	r20,zero,44cd8 <_dtoa_r+0x9d0>
   44cc8:	d8c01717 	ldw	r3,92(sp)
   44ccc:	1800021e 	bne	r3,zero,44cd8 <_dtoa_r+0x9d0>
   44cd0:	e004c03a 	cmpne	r2,fp,zero
   44cd4:	10010126 	beq	r2,zero,450dc <_dtoa_r+0xdd4>
   44cd8:	04023d16 	blt	zero,r16,455d0 <_dtoa_r+0x12c8>
   44cdc:	b5c00005 	stb	r23,0(r22)
   44ce0:	d9800517 	ldw	r6,20(sp)
   44ce4:	d9000f17 	ldw	r4,60(sp)
   44ce8:	b5800044 	addi	r22,r22,1
   44cec:	3105883a 	add	r2,r6,r4
   44cf0:	b0806526 	beq	r22,r2,44e88 <_dtoa_r+0xb80>
   44cf4:	d9400717 	ldw	r5,28(sp)
   44cf8:	d9001617 	ldw	r4,88(sp)
   44cfc:	01800284 	movi	r6,10
   44d00:	000f883a 	mov	r7,zero
   44d04:	00485680 	call	48568 <__multadd>
   44d08:	d8800715 	stw	r2,28(sp)
   44d0c:	d8800617 	ldw	r2,24(sp)
   44d10:	14c10c26 	beq	r2,r19,45144 <_dtoa_r+0xe3c>
   44d14:	d9400617 	ldw	r5,24(sp)
   44d18:	d9001617 	ldw	r4,88(sp)
   44d1c:	01800284 	movi	r6,10
   44d20:	000f883a 	mov	r7,zero
   44d24:	00485680 	call	48568 <__multadd>
   44d28:	d9001617 	ldw	r4,88(sp)
   44d2c:	980b883a 	mov	r5,r19
   44d30:	01800284 	movi	r6,10
   44d34:	000f883a 	mov	r7,zero
   44d38:	d8800615 	stw	r2,24(sp)
   44d3c:	00485680 	call	48568 <__multadd>
   44d40:	1027883a 	mov	r19,r2
   44d44:	003fc206 	br	44c50 <_dtoa_r+0x948>
   44d48:	2445c83a 	sub	r2,r4,r17
   44d4c:	a088983a 	sll	r4,r20,r2
   44d50:	003e4b06 	br	44680 <_dtoa_r+0x378>
   44d54:	01bfffc4 	movi	r6,-1
   44d58:	00800044 	movi	r2,1
   44d5c:	d9800e15 	stw	r6,56(sp)
   44d60:	d9800f15 	stw	r6,60(sp)
   44d64:	d8800b15 	stw	r2,44(sp)
   44d68:	d8c01617 	ldw	r3,88(sp)
   44d6c:	008005c4 	movi	r2,23
   44d70:	18001115 	stw	zero,68(r3)
   44d74:	1580082e 	bgeu	r2,r22,44d98 <_dtoa_r+0xa90>
   44d78:	00c00104 	movi	r3,4
   44d7c:	0009883a 	mov	r4,zero
   44d80:	18c7883a 	add	r3,r3,r3
   44d84:	18800504 	addi	r2,r3,20
   44d88:	21000044 	addi	r4,r4,1
   44d8c:	b0bffc2e 	bgeu	r22,r2,44d80 <_dtoa_r+0xa78>
   44d90:	d9801617 	ldw	r6,88(sp)
   44d94:	31001115 	stw	r4,68(r6)
   44d98:	dc000f17 	ldw	r16,60(sp)
   44d9c:	003e4b06 	br	446cc <_dtoa_r+0x3c4>
   44da0:	d9801717 	ldw	r6,92(sp)
   44da4:	0023883a 	mov	r17,zero
   44da8:	31bfff04 	addi	r6,r6,-4
   44dac:	d9801715 	stw	r6,92(sp)
   44db0:	003df806 	br	44594 <_dtoa_r+0x28c>
   44db4:	00800804 	movi	r2,32
   44db8:	10c9c83a 	sub	r4,r2,r3
   44dbc:	00c00104 	movi	r3,4
   44dc0:	19005a16 	blt	r3,r4,44f2c <_dtoa_r+0xc24>
   44dc4:	008000c4 	movi	r2,3
   44dc8:	113f7e16 	blt	r2,r4,44bc4 <_dtoa_r+0x8bc>
   44dcc:	20800704 	addi	r2,r4,28
   44dd0:	003f7506 	br	44ba8 <_dtoa_r+0x8a0>
   44dd4:	d9801717 	ldw	r6,92(sp)
   44dd8:	00800044 	movi	r2,1
   44ddc:	1180a10e 	bge	r2,r6,45064 <_dtoa_r+0xd5c>
   44de0:	d9800f17 	ldw	r6,60(sp)
   44de4:	d8c01017 	ldw	r3,64(sp)
   44de8:	30bfffc4 	addi	r2,r6,-1
   44dec:	1881c616 	blt	r3,r2,45508 <_dtoa_r+0x1200>
   44df0:	18a5c83a 	sub	r18,r3,r2
   44df4:	d8800f17 	ldw	r2,60(sp)
   44df8:	10026216 	blt	r2,zero,45784 <_dtoa_r+0x147c>
   44dfc:	dc001117 	ldw	r16,68(sp)
   44e00:	1007883a 	mov	r3,r2
   44e04:	d9800a17 	ldw	r6,40(sp)
   44e08:	d8801117 	ldw	r2,68(sp)
   44e0c:	d9001617 	ldw	r4,88(sp)
   44e10:	30cd883a 	add	r6,r6,r3
   44e14:	10c5883a 	add	r2,r2,r3
   44e18:	01400044 	movi	r5,1
   44e1c:	d9800a15 	stw	r6,40(sp)
   44e20:	d8801115 	stw	r2,68(sp)
   44e24:	004852c0 	call	4852c <__i2b>
   44e28:	1027883a 	mov	r19,r2
   44e2c:	003f2506 	br	44ac4 <_dtoa_r+0x7bc>
   44e30:	00c00174 	movhi	r3,5
   44e34:	18c9cd04 	addi	r3,r3,10036
   44e38:	003d6706 	br	443d8 <_dtoa_r+0xd0>
   44e3c:	dd800517 	ldw	r22,20(sp)
   44e40:	04000044 	movi	r16,1
   44e44:	00000706 	br	44e64 <_dtoa_r+0xb5c>
   44e48:	d9400717 	ldw	r5,28(sp)
   44e4c:	d9001617 	ldw	r4,88(sp)
   44e50:	01800284 	movi	r6,10
   44e54:	000f883a 	mov	r7,zero
   44e58:	00485680 	call	48568 <__multadd>
   44e5c:	d8800715 	stw	r2,28(sp)
   44e60:	84000044 	addi	r16,r16,1
   44e64:	d9000717 	ldw	r4,28(sp)
   44e68:	900b883a 	mov	r5,r18
   44e6c:	00440c40 	call	440c4 <quorem>
   44e70:	15c00c04 	addi	r23,r2,48
   44e74:	b5c00005 	stb	r23,0(r22)
   44e78:	d8c00f17 	ldw	r3,60(sp)
   44e7c:	b5800044 	addi	r22,r22,1
   44e80:	80fff116 	blt	r16,r3,44e48 <_dtoa_r+0xb40>
   44e84:	d8000615 	stw	zero,24(sp)
   44e88:	d9400717 	ldw	r5,28(sp)
   44e8c:	d9001617 	ldw	r4,88(sp)
   44e90:	01800044 	movi	r6,1
   44e94:	004818c0 	call	4818c <__lshift>
   44e98:	1009883a 	mov	r4,r2
   44e9c:	900b883a 	mov	r5,r18
   44ea0:	d8800715 	stw	r2,28(sp)
   44ea4:	00479a40 	call	479a4 <__mcmp>
   44ea8:	00803c0e 	bge	zero,r2,44f9c <_dtoa_r+0xc94>
   44eac:	b009883a 	mov	r4,r22
   44eb0:	213fffc4 	addi	r4,r4,-1
   44eb4:	21400003 	ldbu	r5,0(r4)
   44eb8:	00800e44 	movi	r2,57
   44ebc:	28c03fcc 	andi	r3,r5,255
   44ec0:	18c0201c 	xori	r3,r3,128
   44ec4:	18ffe004 	addi	r3,r3,-128
   44ec8:	1881981e 	bne	r3,r2,4552c <_dtoa_r+0x1224>
   44ecc:	d9800517 	ldw	r6,20(sp)
   44ed0:	21bff71e 	bne	r4,r6,44eb0 <_dtoa_r+0xba8>
   44ed4:	d8800d17 	ldw	r2,52(sp)
   44ed8:	37000044 	addi	fp,r6,1
   44edc:	10800044 	addi	r2,r2,1
   44ee0:	d8800d15 	stw	r2,52(sp)
   44ee4:	00800c44 	movi	r2,49
   44ee8:	30800005 	stb	r2,0(r6)
   44eec:	d9001617 	ldw	r4,88(sp)
   44ef0:	900b883a 	mov	r5,r18
   44ef4:	00478480 	call	47848 <_Bfree>
   44ef8:	983ecd26 	beq	r19,zero,44a30 <_dtoa_r+0x728>
   44efc:	d8c00617 	ldw	r3,24(sp)
   44f00:	18000426 	beq	r3,zero,44f14 <_dtoa_r+0xc0c>
   44f04:	1cc00326 	beq	r3,r19,44f14 <_dtoa_r+0xc0c>
   44f08:	d9001617 	ldw	r4,88(sp)
   44f0c:	180b883a 	mov	r5,r3
   44f10:	00478480 	call	47848 <_Bfree>
   44f14:	d9001617 	ldw	r4,88(sp)
   44f18:	980b883a 	mov	r5,r19
   44f1c:	00478480 	call	47848 <_Bfree>
   44f20:	003ec306 	br	44a30 <_dtoa_r+0x728>
   44f24:	1805883a 	mov	r2,r3
   44f28:	003eeb06 	br	44ad8 <_dtoa_r+0x7d0>
   44f2c:	d9800a17 	ldw	r6,40(sp)
   44f30:	d8c01117 	ldw	r3,68(sp)
   44f34:	20bfff04 	addi	r2,r4,-4
   44f38:	308d883a 	add	r6,r6,r2
   44f3c:	1887883a 	add	r3,r3,r2
   44f40:	80a1883a 	add	r16,r16,r2
   44f44:	d9800a15 	stw	r6,40(sp)
   44f48:	d8c01115 	stw	r3,68(sp)
   44f4c:	003f1d06 	br	44bc4 <_dtoa_r+0x8bc>
   44f50:	a03f0c1e 	bne	r20,zero,44b84 <_dtoa_r+0x87c>
   44f54:	00800434 	movhi	r2,16
   44f58:	10bfffc4 	addi	r2,r2,-1
   44f5c:	a884703a 	and	r2,r21,r2
   44f60:	103f081e 	bne	r2,zero,44b84 <_dtoa_r+0x87c>
   44f64:	a89ffc2c 	andhi	r2,r21,32752
   44f68:	103f0626 	beq	r2,zero,44b84 <_dtoa_r+0x87c>
   44f6c:	d8c01117 	ldw	r3,68(sp)
   44f70:	d9000a17 	ldw	r4,40(sp)
   44f74:	18c00044 	addi	r3,r3,1
   44f78:	21000044 	addi	r4,r4,1
   44f7c:	d8c01115 	stw	r3,68(sp)
   44f80:	d9000a15 	stw	r4,40(sp)
   44f84:	003f0006 	br	44b88 <_dtoa_r+0x880>
   44f88:	d9400717 	ldw	r5,28(sp)
   44f8c:	d9001617 	ldw	r4,88(sp)
   44f90:	00486940 	call	48694 <__pow5mult>
   44f94:	d8800715 	stw	r2,28(sp)
   44f98:	003eed06 	br	44b50 <_dtoa_r+0x848>
   44f9c:	1000021e 	bne	r2,zero,44fa8 <_dtoa_r+0xca0>
   44fa0:	b880004c 	andi	r2,r23,1
   44fa4:	103fc11e 	bne	r2,zero,44eac <_dtoa_r+0xba4>
   44fa8:	b5bfffc4 	addi	r22,r22,-1
   44fac:	b0c00007 	ldb	r3,0(r22)
   44fb0:	00800c04 	movi	r2,48
   44fb4:	18bffc26 	beq	r3,r2,44fa8 <_dtoa_r+0xca0>
   44fb8:	b7000044 	addi	fp,r22,1
   44fbc:	003fcb06 	br	44eec <_dtoa_r+0xbe4>
   44fc0:	d9800d17 	ldw	r6,52(sp)
   44fc4:	018fc83a 	sub	r7,zero,r6
   44fc8:	3801f726 	beq	r7,zero,457a8 <_dtoa_r+0x14a0>
   44fcc:	398003cc 	andi	r6,r7,15
   44fd0:	300c90fa 	slli	r6,r6,3
   44fd4:	01400174 	movhi	r5,5
   44fd8:	294a9504 	addi	r5,r5,10836
   44fdc:	d9001217 	ldw	r4,72(sp)
   44fe0:	314d883a 	add	r6,r6,r5
   44fe4:	30c00117 	ldw	r3,4(r6)
   44fe8:	30800017 	ldw	r2,0(r6)
   44fec:	d9401317 	ldw	r5,76(sp)
   44ff0:	3821d13a 	srai	r16,r7,4
   44ff4:	100d883a 	mov	r6,r2
   44ff8:	180f883a 	mov	r7,r3
   44ffc:	004e2a00 	call	4e2a0 <__muldf3>
   45000:	1011883a 	mov	r8,r2
   45004:	1813883a 	mov	r9,r3
   45008:	1029883a 	mov	r20,r2
   4500c:	182b883a 	mov	r21,r3
   45010:	8001e526 	beq	r16,zero,457a8 <_dtoa_r+0x14a0>
   45014:	05800084 	movi	r22,2
   45018:	04400174 	movhi	r17,5
   4501c:	8c4ac704 	addi	r17,r17,11036
   45020:	8080004c 	andi	r2,r16,1
   45024:	1005003a 	cmpeq	r2,r2,zero
   45028:	1000081e 	bne	r2,zero,4504c <_dtoa_r+0xd44>
   4502c:	89800017 	ldw	r6,0(r17)
   45030:	89c00117 	ldw	r7,4(r17)
   45034:	480b883a 	mov	r5,r9
   45038:	4009883a 	mov	r4,r8
   4503c:	004e2a00 	call	4e2a0 <__muldf3>
   45040:	1011883a 	mov	r8,r2
   45044:	b5800044 	addi	r22,r22,1
   45048:	1813883a 	mov	r9,r3
   4504c:	8021d07a 	srai	r16,r16,1
   45050:	8c400204 	addi	r17,r17,8
   45054:	803ff21e 	bne	r16,zero,45020 <_dtoa_r+0xd18>
   45058:	4029883a 	mov	r20,r8
   4505c:	482b883a 	mov	r21,r9
   45060:	003dca06 	br	4478c <_dtoa_r+0x484>
   45064:	d9000817 	ldw	r4,32(sp)
   45068:	2005003a 	cmpeq	r2,r4,zero
   4506c:	1001f61e 	bne	r2,zero,45848 <_dtoa_r+0x1540>
   45070:	dc001117 	ldw	r16,68(sp)
   45074:	dc801017 	ldw	r18,64(sp)
   45078:	18c10cc4 	addi	r3,r3,1075
   4507c:	003f6106 	br	44e04 <_dtoa_r+0xafc>
   45080:	d8000b15 	stw	zero,44(sp)
   45084:	d9802617 	ldw	r6,152(sp)
   45088:	d8c00d17 	ldw	r3,52(sp)
   4508c:	30800044 	addi	r2,r6,1
   45090:	18ad883a 	add	r22,r3,r2
   45094:	b13fffc4 	addi	r4,r22,-1
   45098:	d9000e15 	stw	r4,56(sp)
   4509c:	0581f60e 	bge	zero,r22,45878 <_dtoa_r+0x1570>
   450a0:	dd800f15 	stw	r22,60(sp)
   450a4:	003f3006 	br	44d68 <_dtoa_r+0xa60>
   450a8:	d8000b15 	stw	zero,44(sp)
   450ac:	d9002617 	ldw	r4,152(sp)
   450b0:	0101eb0e 	bge	zero,r4,45860 <_dtoa_r+0x1558>
   450b4:	202d883a 	mov	r22,r4
   450b8:	d9000e15 	stw	r4,56(sp)
   450bc:	d9000f15 	stw	r4,60(sp)
   450c0:	003f2906 	br	44d68 <_dtoa_r+0xa60>
   450c4:	01800044 	movi	r6,1
   450c8:	d9800b15 	stw	r6,44(sp)
   450cc:	003ff706 	br	450ac <_dtoa_r+0xda4>
   450d0:	01000044 	movi	r4,1
   450d4:	d9000b15 	stw	r4,44(sp)
   450d8:	003fea06 	br	45084 <_dtoa_r+0xd7c>
   450dc:	04000c0e 	bge	zero,r16,45110 <_dtoa_r+0xe08>
   450e0:	d9400717 	ldw	r5,28(sp)
   450e4:	d9001617 	ldw	r4,88(sp)
   450e8:	01800044 	movi	r6,1
   450ec:	004818c0 	call	4818c <__lshift>
   450f0:	1009883a 	mov	r4,r2
   450f4:	900b883a 	mov	r5,r18
   450f8:	d8800715 	stw	r2,28(sp)
   450fc:	00479a40 	call	479a4 <__mcmp>
   45100:	0081e00e 	bge	zero,r2,45884 <_dtoa_r+0x157c>
   45104:	bdc00044 	addi	r23,r23,1
   45108:	00800e84 	movi	r2,58
   4510c:	b881a226 	beq	r23,r2,45798 <_dtoa_r+0x1490>
   45110:	b7000044 	addi	fp,r22,1
   45114:	b5c00005 	stb	r23,0(r22)
   45118:	003f7406 	br	44eec <_dtoa_r+0xbe4>
   4511c:	00800e44 	movi	r2,57
   45120:	b8819d26 	beq	r23,r2,45798 <_dtoa_r+0x1490>
   45124:	053ffa0e 	bge	zero,r20,45110 <_dtoa_r+0xe08>
   45128:	8dc00c44 	addi	r23,r17,49
   4512c:	003ff806 	br	45110 <_dtoa_r+0xe08>
   45130:	d9001617 	ldw	r4,88(sp)
   45134:	a80b883a 	mov	r5,r21
   45138:	04000044 	movi	r16,1
   4513c:	00478480 	call	47848 <_Bfree>
   45140:	003edf06 	br	44cc0 <_dtoa_r+0x9b8>
   45144:	d9001617 	ldw	r4,88(sp)
   45148:	980b883a 	mov	r5,r19
   4514c:	01800284 	movi	r6,10
   45150:	000f883a 	mov	r7,zero
   45154:	00485680 	call	48568 <__multadd>
   45158:	1027883a 	mov	r19,r2
   4515c:	d8800615 	stw	r2,24(sp)
   45160:	003ebb06 	br	44c50 <_dtoa_r+0x948>
   45164:	d9801117 	ldw	r6,68(sp)
   45168:	d8800d17 	ldw	r2,52(sp)
   4516c:	d8000915 	stw	zero,36(sp)
   45170:	308dc83a 	sub	r6,r6,r2
   45174:	0087c83a 	sub	r3,zero,r2
   45178:	d9801115 	stw	r6,68(sp)
   4517c:	d8c01015 	stw	r3,64(sp)
   45180:	003cfe06 	br	4457c <_dtoa_r+0x274>
   45184:	018dc83a 	sub	r6,zero,r6
   45188:	d9801115 	stw	r6,68(sp)
   4518c:	d8000a15 	stw	zero,40(sp)
   45190:	003cf306 	br	44560 <_dtoa_r+0x258>
   45194:	d9000d17 	ldw	r4,52(sp)
   45198:	004ebec0 	call	4ebec <__floatsidf>
   4519c:	880b883a 	mov	r5,r17
   451a0:	8009883a 	mov	r4,r16
   451a4:	180f883a 	mov	r7,r3
   451a8:	100d883a 	mov	r6,r2
   451ac:	004e9440 	call	4e944 <__nedf2>
   451b0:	103ce126 	beq	r2,zero,44538 <_dtoa_r+0x230>
   451b4:	d9800d17 	ldw	r6,52(sp)
   451b8:	31bfffc4 	addi	r6,r6,-1
   451bc:	d9800d15 	stw	r6,52(sp)
   451c0:	003cdd06 	br	44538 <_dtoa_r+0x230>
   451c4:	d9000717 	ldw	r4,28(sp)
   451c8:	900b883a 	mov	r5,r18
   451cc:	00479a40 	call	479a4 <__mcmp>
   451d0:	103e8d0e 	bge	r2,zero,44c08 <_dtoa_r+0x900>
   451d4:	d9400717 	ldw	r5,28(sp)
   451d8:	d9001617 	ldw	r4,88(sp)
   451dc:	01800284 	movi	r6,10
   451e0:	000f883a 	mov	r7,zero
   451e4:	00485680 	call	48568 <__multadd>
   451e8:	d9800d17 	ldw	r6,52(sp)
   451ec:	d8800715 	stw	r2,28(sp)
   451f0:	31bfffc4 	addi	r6,r6,-1
   451f4:	d9800d15 	stw	r6,52(sp)
   451f8:	b001a71e 	bne	r22,zero,45898 <_dtoa_r+0x1590>
   451fc:	d8800e17 	ldw	r2,56(sp)
   45200:	d8800f15 	stw	r2,60(sp)
   45204:	003e8006 	br	44c08 <_dtoa_r+0x900>
   45208:	90800417 	ldw	r2,16(r18)
   4520c:	1085883a 	add	r2,r2,r2
   45210:	1085883a 	add	r2,r2,r2
   45214:	1485883a 	add	r2,r2,r18
   45218:	11000417 	ldw	r4,16(r2)
   4521c:	00478700 	call	47870 <__hi0bits>
   45220:	00c00804 	movi	r3,32
   45224:	1887c83a 	sub	r3,r3,r2
   45228:	003e5a06 	br	44b94 <_dtoa_r+0x88c>
   4522c:	d9400717 	ldw	r5,28(sp)
   45230:	d9801017 	ldw	r6,64(sp)
   45234:	d9001617 	ldw	r4,88(sp)
   45238:	00486940 	call	48694 <__pow5mult>
   4523c:	d8800715 	stw	r2,28(sp)
   45240:	003e4306 	br	44b50 <_dtoa_r+0x848>
   45244:	d9800f17 	ldw	r6,60(sp)
   45248:	d8800d17 	ldw	r2,52(sp)
   4524c:	d9800315 	stw	r6,12(sp)
   45250:	d8800415 	stw	r2,16(sp)
   45254:	d8c00b17 	ldw	r3,44(sp)
   45258:	1805003a 	cmpeq	r2,r3,zero
   4525c:	1000e21e 	bne	r2,zero,455e8 <_dtoa_r+0x12e0>
   45260:	d9000317 	ldw	r4,12(sp)
   45264:	0005883a 	mov	r2,zero
   45268:	00cff834 	movhi	r3,16352
   4526c:	200c90fa 	slli	r6,r4,3
   45270:	01000174 	movhi	r4,5
   45274:	210a9504 	addi	r4,r4,10836
   45278:	180b883a 	mov	r5,r3
   4527c:	310d883a 	add	r6,r6,r4
   45280:	327fff17 	ldw	r9,-4(r6)
   45284:	323ffe17 	ldw	r8,-8(r6)
   45288:	1009883a 	mov	r4,r2
   4528c:	480f883a 	mov	r7,r9
   45290:	400d883a 	mov	r6,r8
   45294:	004e6640 	call	4e664 <__divdf3>
   45298:	180b883a 	mov	r5,r3
   4529c:	b00d883a 	mov	r6,r22
   452a0:	b80f883a 	mov	r7,r23
   452a4:	1009883a 	mov	r4,r2
   452a8:	004e1ac0 	call	4e1ac <__subdf3>
   452ac:	a80b883a 	mov	r5,r21
   452b0:	a009883a 	mov	r4,r20
   452b4:	d8c01915 	stw	r3,100(sp)
   452b8:	d8801815 	stw	r2,96(sp)
   452bc:	004ece40 	call	4ece4 <__fixdfsi>
   452c0:	1009883a 	mov	r4,r2
   452c4:	1027883a 	mov	r19,r2
   452c8:	004ebec0 	call	4ebec <__floatsidf>
   452cc:	a80b883a 	mov	r5,r21
   452d0:	a009883a 	mov	r4,r20
   452d4:	180f883a 	mov	r7,r3
   452d8:	100d883a 	mov	r6,r2
   452dc:	004e1ac0 	call	4e1ac <__subdf3>
   452e0:	d9801817 	ldw	r6,96(sp)
   452e4:	1823883a 	mov	r17,r3
   452e8:	d8801415 	stw	r2,80(sp)
   452ec:	302d883a 	mov	r22,r6
   452f0:	d9800517 	ldw	r6,20(sp)
   452f4:	9cc00c04 	addi	r19,r19,48
   452f8:	dc401515 	stw	r17,84(sp)
   452fc:	d8c01917 	ldw	r3,100(sp)
   45300:	34c00005 	stb	r19,0(r6)
   45304:	d8800517 	ldw	r2,20(sp)
   45308:	d9401917 	ldw	r5,100(sp)
   4530c:	d9801417 	ldw	r6,80(sp)
   45310:	b009883a 	mov	r4,r22
   45314:	880f883a 	mov	r7,r17
   45318:	182f883a 	mov	r23,r3
   4531c:	17000044 	addi	fp,r2,1
   45320:	004e9cc0 	call	4e9cc <__gtdf2>
   45324:	00804e16 	blt	zero,r2,45460 <_dtoa_r+0x1158>
   45328:	d9801417 	ldw	r6,80(sp)
   4532c:	0005883a 	mov	r2,zero
   45330:	00cffc34 	movhi	r3,16368
   45334:	180b883a 	mov	r5,r3
   45338:	880f883a 	mov	r7,r17
   4533c:	1009883a 	mov	r4,r2
   45340:	004e1ac0 	call	4e1ac <__subdf3>
   45344:	d9401917 	ldw	r5,100(sp)
   45348:	180f883a 	mov	r7,r3
   4534c:	b009883a 	mov	r4,r22
   45350:	100d883a 	mov	r6,r2
   45354:	004e9cc0 	call	4e9cc <__gtdf2>
   45358:	00bda216 	blt	zero,r2,449e4 <_dtoa_r+0x6dc>
   4535c:	d8c00317 	ldw	r3,12(sp)
   45360:	00800044 	movi	r2,1
   45364:	10c01216 	blt	r2,r3,453b0 <_dtoa_r+0x10a8>
   45368:	003d4506 	br	44880 <_dtoa_r+0x578>
   4536c:	d9801417 	ldw	r6,80(sp)
   45370:	0005883a 	mov	r2,zero
   45374:	00cffc34 	movhi	r3,16368
   45378:	180b883a 	mov	r5,r3
   4537c:	880f883a 	mov	r7,r17
   45380:	1009883a 	mov	r4,r2
   45384:	004e1ac0 	call	4e1ac <__subdf3>
   45388:	d9c01b17 	ldw	r7,108(sp)
   4538c:	180b883a 	mov	r5,r3
   45390:	1009883a 	mov	r4,r2
   45394:	b00d883a 	mov	r6,r22
   45398:	004eadc0 	call	4eadc <__ltdf2>
   4539c:	103d9116 	blt	r2,zero,449e4 <_dtoa_r+0x6dc>
   453a0:	d9800517 	ldw	r6,20(sp)
   453a4:	d9000317 	ldw	r4,12(sp)
   453a8:	3105883a 	add	r2,r6,r4
   453ac:	e0bd3426 	beq	fp,r2,44880 <_dtoa_r+0x578>
   453b0:	04500934 	movhi	r17,16420
   453b4:	0021883a 	mov	r16,zero
   453b8:	b80b883a 	mov	r5,r23
   453bc:	b009883a 	mov	r4,r22
   453c0:	800d883a 	mov	r6,r16
   453c4:	880f883a 	mov	r7,r17
   453c8:	004e2a00 	call	4e2a0 <__muldf3>
   453cc:	d9401517 	ldw	r5,84(sp)
   453d0:	d9001417 	ldw	r4,80(sp)
   453d4:	880f883a 	mov	r7,r17
   453d8:	000d883a 	mov	r6,zero
   453dc:	d8801a15 	stw	r2,104(sp)
   453e0:	d8c01b15 	stw	r3,108(sp)
   453e4:	004e2a00 	call	4e2a0 <__muldf3>
   453e8:	180b883a 	mov	r5,r3
   453ec:	1009883a 	mov	r4,r2
   453f0:	1823883a 	mov	r17,r3
   453f4:	1021883a 	mov	r16,r2
   453f8:	004ece40 	call	4ece4 <__fixdfsi>
   453fc:	1009883a 	mov	r4,r2
   45400:	102b883a 	mov	r21,r2
   45404:	004ebec0 	call	4ebec <__floatsidf>
   45408:	880b883a 	mov	r5,r17
   4540c:	8009883a 	mov	r4,r16
   45410:	180f883a 	mov	r7,r3
   45414:	100d883a 	mov	r6,r2
   45418:	004e1ac0 	call	4e1ac <__subdf3>
   4541c:	1021883a 	mov	r16,r2
   45420:	d9001b17 	ldw	r4,108(sp)
   45424:	1823883a 	mov	r17,r3
   45428:	dc001415 	stw	r16,80(sp)
   4542c:	ad400c04 	addi	r21,r21,48
   45430:	dc401515 	stw	r17,84(sp)
   45434:	d8801a17 	ldw	r2,104(sp)
   45438:	e5400005 	stb	r21,0(fp)
   4543c:	202f883a 	mov	r23,r4
   45440:	d9c01b17 	ldw	r7,108(sp)
   45444:	d9001417 	ldw	r4,80(sp)
   45448:	880b883a 	mov	r5,r17
   4544c:	100d883a 	mov	r6,r2
   45450:	102d883a 	mov	r22,r2
   45454:	e7000044 	addi	fp,fp,1
   45458:	004eadc0 	call	4eadc <__ltdf2>
   4545c:	103fc30e 	bge	r2,zero,4536c <_dtoa_r+0x1064>
   45460:	d9000417 	ldw	r4,16(sp)
   45464:	d9000d15 	stw	r4,52(sp)
   45468:	003d7106 	br	44a30 <_dtoa_r+0x728>
   4546c:	d9801717 	ldw	r6,92(sp)
   45470:	00800084 	movi	r2,2
   45474:	11bde60e 	bge	r2,r6,44c10 <_dtoa_r+0x908>
   45478:	203cfb1e 	bne	r4,zero,44868 <_dtoa_r+0x560>
   4547c:	d9001617 	ldw	r4,88(sp)
   45480:	900b883a 	mov	r5,r18
   45484:	01800144 	movi	r6,5
   45488:	000f883a 	mov	r7,zero
   4548c:	00485680 	call	48568 <__multadd>
   45490:	d9000717 	ldw	r4,28(sp)
   45494:	100b883a 	mov	r5,r2
   45498:	1025883a 	mov	r18,r2
   4549c:	00479a40 	call	479a4 <__mcmp>
   454a0:	00bcf10e 	bge	zero,r2,44868 <_dtoa_r+0x560>
   454a4:	d8c00d17 	ldw	r3,52(sp)
   454a8:	d9000517 	ldw	r4,20(sp)
   454ac:	d8000615 	stw	zero,24(sp)
   454b0:	18c00044 	addi	r3,r3,1
   454b4:	d8c00d15 	stw	r3,52(sp)
   454b8:	00800c44 	movi	r2,49
   454bc:	27000044 	addi	fp,r4,1
   454c0:	20800005 	stb	r2,0(r4)
   454c4:	003e8906 	br	44eec <_dtoa_r+0xbe4>
   454c8:	d8c00517 	ldw	r3,20(sp)
   454cc:	003bc206 	br	443d8 <_dtoa_r+0xd0>
   454d0:	01800174 	movhi	r6,5
   454d4:	318ac704 	addi	r6,r6,11036
   454d8:	30c00917 	ldw	r3,36(r6)
   454dc:	30800817 	ldw	r2,32(r6)
   454e0:	d9001217 	ldw	r4,72(sp)
   454e4:	d9401317 	ldw	r5,76(sp)
   454e8:	180f883a 	mov	r7,r3
   454ec:	100d883a 	mov	r6,r2
   454f0:	004e6640 	call	4e664 <__divdf3>
   454f4:	948003cc 	andi	r18,r18,15
   454f8:	058000c4 	movi	r22,3
   454fc:	1029883a 	mov	r20,r2
   45500:	182b883a 	mov	r21,r3
   45504:	003c8906 	br	4472c <_dtoa_r+0x424>
   45508:	d9001017 	ldw	r4,64(sp)
   4550c:	d9800917 	ldw	r6,36(sp)
   45510:	0025883a 	mov	r18,zero
   45514:	1105c83a 	sub	r2,r2,r4
   45518:	2089883a 	add	r4,r4,r2
   4551c:	308d883a 	add	r6,r6,r2
   45520:	d9001015 	stw	r4,64(sp)
   45524:	d9800915 	stw	r6,36(sp)
   45528:	003e3206 	br	44df4 <_dtoa_r+0xaec>
   4552c:	28800044 	addi	r2,r5,1
   45530:	27000044 	addi	fp,r4,1
   45534:	20800005 	stb	r2,0(r4)
   45538:	003e6c06 	br	44eec <_dtoa_r+0xbe4>
   4553c:	d8800f17 	ldw	r2,60(sp)
   45540:	00bce016 	blt	zero,r2,448c4 <_dtoa_r+0x5bc>
   45544:	d9800f17 	ldw	r6,60(sp)
   45548:	303cc51e 	bne	r6,zero,44860 <_dtoa_r+0x558>
   4554c:	0005883a 	mov	r2,zero
   45550:	00d00534 	movhi	r3,16404
   45554:	980b883a 	mov	r5,r19
   45558:	180f883a 	mov	r7,r3
   4555c:	9009883a 	mov	r4,r18
   45560:	100d883a 	mov	r6,r2
   45564:	004e2a00 	call	4e2a0 <__muldf3>
   45568:	180b883a 	mov	r5,r3
   4556c:	a80f883a 	mov	r7,r21
   45570:	1009883a 	mov	r4,r2
   45574:	a00d883a 	mov	r6,r20
   45578:	004ea540 	call	4ea54 <__gedf2>
   4557c:	103cb80e 	bge	r2,zero,44860 <_dtoa_r+0x558>
   45580:	0027883a 	mov	r19,zero
   45584:	0025883a 	mov	r18,zero
   45588:	003fc606 	br	454a4 <_dtoa_r+0x119c>
   4558c:	99400117 	ldw	r5,4(r19)
   45590:	d9001617 	ldw	r4,88(sp)
   45594:	0047dc80 	call	47dc8 <_Balloc>
   45598:	99800417 	ldw	r6,16(r19)
   4559c:	11000304 	addi	r4,r2,12
   455a0:	99400304 	addi	r5,r19,12
   455a4:	318d883a 	add	r6,r6,r6
   455a8:	318d883a 	add	r6,r6,r6
   455ac:	31800204 	addi	r6,r6,8
   455b0:	1023883a 	mov	r17,r2
   455b4:	00476300 	call	47630 <memcpy>
   455b8:	d9001617 	ldw	r4,88(sp)
   455bc:	880b883a 	mov	r5,r17
   455c0:	01800044 	movi	r6,1
   455c4:	004818c0 	call	4818c <__lshift>
   455c8:	100b883a 	mov	r5,r2
   455cc:	003d9c06 	br	44c40 <_dtoa_r+0x938>
   455d0:	00800e44 	movi	r2,57
   455d4:	b8807026 	beq	r23,r2,45798 <_dtoa_r+0x1490>
   455d8:	b8800044 	addi	r2,r23,1
   455dc:	b7000044 	addi	fp,r22,1
   455e0:	b0800005 	stb	r2,0(r22)
   455e4:	003e4106 	br	44eec <_dtoa_r+0xbe4>
   455e8:	d8800317 	ldw	r2,12(sp)
   455ec:	01800174 	movhi	r6,5
   455f0:	318a9504 	addi	r6,r6,10836
   455f4:	b009883a 	mov	r4,r22
   455f8:	100e90fa 	slli	r7,r2,3
   455fc:	b80b883a 	mov	r5,r23
   45600:	398f883a 	add	r7,r7,r6
   45604:	38bffe17 	ldw	r2,-8(r7)
   45608:	d9800517 	ldw	r6,20(sp)
   4560c:	38ffff17 	ldw	r3,-4(r7)
   45610:	37000044 	addi	fp,r6,1
   45614:	180f883a 	mov	r7,r3
   45618:	100d883a 	mov	r6,r2
   4561c:	004e2a00 	call	4e2a0 <__muldf3>
   45620:	a80b883a 	mov	r5,r21
   45624:	a009883a 	mov	r4,r20
   45628:	182f883a 	mov	r23,r3
   4562c:	102d883a 	mov	r22,r2
   45630:	004ece40 	call	4ece4 <__fixdfsi>
   45634:	1009883a 	mov	r4,r2
   45638:	1027883a 	mov	r19,r2
   4563c:	004ebec0 	call	4ebec <__floatsidf>
   45640:	a80b883a 	mov	r5,r21
   45644:	a009883a 	mov	r4,r20
   45648:	180f883a 	mov	r7,r3
   4564c:	100d883a 	mov	r6,r2
   45650:	004e1ac0 	call	4e1ac <__subdf3>
   45654:	180b883a 	mov	r5,r3
   45658:	d8c00517 	ldw	r3,20(sp)
   4565c:	9cc00c04 	addi	r19,r19,48
   45660:	1009883a 	mov	r4,r2
   45664:	1cc00005 	stb	r19,0(r3)
   45668:	2021883a 	mov	r16,r4
   4566c:	d9000317 	ldw	r4,12(sp)
   45670:	00800044 	movi	r2,1
   45674:	2823883a 	mov	r17,r5
   45678:	20802226 	beq	r4,r2,45704 <_dtoa_r+0x13fc>
   4567c:	1029883a 	mov	r20,r2
   45680:	0005883a 	mov	r2,zero
   45684:	00d00934 	movhi	r3,16420
   45688:	180f883a 	mov	r7,r3
   4568c:	100d883a 	mov	r6,r2
   45690:	880b883a 	mov	r5,r17
   45694:	8009883a 	mov	r4,r16
   45698:	004e2a00 	call	4e2a0 <__muldf3>
   4569c:	180b883a 	mov	r5,r3
   456a0:	1009883a 	mov	r4,r2
   456a4:	1823883a 	mov	r17,r3
   456a8:	1021883a 	mov	r16,r2
   456ac:	004ece40 	call	4ece4 <__fixdfsi>
   456b0:	1009883a 	mov	r4,r2
   456b4:	102b883a 	mov	r21,r2
   456b8:	004ebec0 	call	4ebec <__floatsidf>
   456bc:	880b883a 	mov	r5,r17
   456c0:	8009883a 	mov	r4,r16
   456c4:	180f883a 	mov	r7,r3
   456c8:	100d883a 	mov	r6,r2
   456cc:	004e1ac0 	call	4e1ac <__subdf3>
   456d0:	180b883a 	mov	r5,r3
   456d4:	d8c00517 	ldw	r3,20(sp)
   456d8:	1009883a 	mov	r4,r2
   456dc:	ad400c04 	addi	r21,r21,48
   456e0:	1d05883a 	add	r2,r3,r20
   456e4:	15400005 	stb	r21,0(r2)
   456e8:	2021883a 	mov	r16,r4
   456ec:	d9000317 	ldw	r4,12(sp)
   456f0:	a5000044 	addi	r20,r20,1
   456f4:	2823883a 	mov	r17,r5
   456f8:	a13fe11e 	bne	r20,r4,45680 <_dtoa_r+0x1378>
   456fc:	e505883a 	add	r2,fp,r20
   45700:	173fffc4 	addi	fp,r2,-1
   45704:	0025883a 	mov	r18,zero
   45708:	04cff834 	movhi	r19,16352
   4570c:	b009883a 	mov	r4,r22
   45710:	b80b883a 	mov	r5,r23
   45714:	900d883a 	mov	r6,r18
   45718:	980f883a 	mov	r7,r19
   4571c:	004e22c0 	call	4e22c <__adddf3>
   45720:	180b883a 	mov	r5,r3
   45724:	1009883a 	mov	r4,r2
   45728:	800d883a 	mov	r6,r16
   4572c:	880f883a 	mov	r7,r17
   45730:	004eadc0 	call	4eadc <__ltdf2>
   45734:	103cab16 	blt	r2,zero,449e4 <_dtoa_r+0x6dc>
   45738:	0009883a 	mov	r4,zero
   4573c:	980b883a 	mov	r5,r19
   45740:	b80f883a 	mov	r7,r23
   45744:	b00d883a 	mov	r6,r22
   45748:	004e1ac0 	call	4e1ac <__subdf3>
   4574c:	180b883a 	mov	r5,r3
   45750:	880f883a 	mov	r7,r17
   45754:	1009883a 	mov	r4,r2
   45758:	800d883a 	mov	r6,r16
   4575c:	004e9cc0 	call	4e9cc <__gtdf2>
   45760:	00bc470e 	bge	zero,r2,44880 <_dtoa_r+0x578>
   45764:	00c00c04 	movi	r3,48
   45768:	e73fffc4 	addi	fp,fp,-1
   4576c:	e0800007 	ldb	r2,0(fp)
   45770:	10fffd26 	beq	r2,r3,45768 <_dtoa_r+0x1460>
   45774:	d9800417 	ldw	r6,16(sp)
   45778:	e7000044 	addi	fp,fp,1
   4577c:	d9800d15 	stw	r6,52(sp)
   45780:	003cab06 	br	44a30 <_dtoa_r+0x728>
   45784:	d8c00f17 	ldw	r3,60(sp)
   45788:	d9001117 	ldw	r4,68(sp)
   4578c:	20e1c83a 	sub	r16,r4,r3
   45790:	0007883a 	mov	r3,zero
   45794:	003d9b06 	br	44e04 <_dtoa_r+0xafc>
   45798:	00800e44 	movi	r2,57
   4579c:	b0800005 	stb	r2,0(r22)
   457a0:	b5800044 	addi	r22,r22,1
   457a4:	003dc106 	br	44eac <_dtoa_r+0xba4>
   457a8:	05800084 	movi	r22,2
   457ac:	003bf706 	br	4478c <_dtoa_r+0x484>
   457b0:	d9000f17 	ldw	r4,60(sp)
   457b4:	013c000e 	bge	zero,r4,447b8 <_dtoa_r+0x4b0>
   457b8:	d9800e17 	ldw	r6,56(sp)
   457bc:	01bc300e 	bge	zero,r6,44880 <_dtoa_r+0x578>
   457c0:	0005883a 	mov	r2,zero
   457c4:	00d00934 	movhi	r3,16420
   457c8:	a80b883a 	mov	r5,r21
   457cc:	180f883a 	mov	r7,r3
   457d0:	a009883a 	mov	r4,r20
   457d4:	100d883a 	mov	r6,r2
   457d8:	004e2a00 	call	4e2a0 <__muldf3>
   457dc:	b1000044 	addi	r4,r22,1
   457e0:	1021883a 	mov	r16,r2
   457e4:	1823883a 	mov	r17,r3
   457e8:	004ebec0 	call	4ebec <__floatsidf>
   457ec:	880b883a 	mov	r5,r17
   457f0:	8009883a 	mov	r4,r16
   457f4:	180f883a 	mov	r7,r3
   457f8:	100d883a 	mov	r6,r2
   457fc:	004e2a00 	call	4e2a0 <__muldf3>
   45800:	0011883a 	mov	r8,zero
   45804:	02500734 	movhi	r9,16412
   45808:	180b883a 	mov	r5,r3
   4580c:	480f883a 	mov	r7,r9
   45810:	1009883a 	mov	r4,r2
   45814:	400d883a 	mov	r6,r8
   45818:	004e22c0 	call	4e22c <__adddf3>
   4581c:	102d883a 	mov	r22,r2
   45820:	00bf3034 	movhi	r2,64704
   45824:	10ef883a 	add	r23,r2,r3
   45828:	d8800d17 	ldw	r2,52(sp)
   4582c:	d8c00e17 	ldw	r3,56(sp)
   45830:	8029883a 	mov	r20,r16
   45834:	10bfffc4 	addi	r2,r2,-1
   45838:	882b883a 	mov	r21,r17
   4583c:	d8800415 	stw	r2,16(sp)
   45840:	d8c00315 	stw	r3,12(sp)
   45844:	003e8306 	br	45254 <_dtoa_r+0xf4c>
   45848:	d8800117 	ldw	r2,4(sp)
   4584c:	dc001117 	ldw	r16,68(sp)
   45850:	dc801017 	ldw	r18,64(sp)
   45854:	00c00d84 	movi	r3,54
   45858:	1887c83a 	sub	r3,r3,r2
   4585c:	003d6906 	br	44e04 <_dtoa_r+0xafc>
   45860:	01800044 	movi	r6,1
   45864:	3021883a 	mov	r16,r6
   45868:	d9800f15 	stw	r6,60(sp)
   4586c:	d9802615 	stw	r6,152(sp)
   45870:	d9800e15 	stw	r6,56(sp)
   45874:	003b9306 	br	446c4 <_dtoa_r+0x3bc>
   45878:	b021883a 	mov	r16,r22
   4587c:	dd800f15 	stw	r22,60(sp)
   45880:	003b9006 	br	446c4 <_dtoa_r+0x3bc>
   45884:	103e221e 	bne	r2,zero,45110 <_dtoa_r+0xe08>
   45888:	b880004c 	andi	r2,r23,1
   4588c:	1005003a 	cmpeq	r2,r2,zero
   45890:	103e1f1e 	bne	r2,zero,45110 <_dtoa_r+0xe08>
   45894:	003e1b06 	br	45104 <_dtoa_r+0xdfc>
   45898:	d9001617 	ldw	r4,88(sp)
   4589c:	980b883a 	mov	r5,r19
   458a0:	01800284 	movi	r6,10
   458a4:	000f883a 	mov	r7,zero
   458a8:	00485680 	call	48568 <__multadd>
   458ac:	d8c00e17 	ldw	r3,56(sp)
   458b0:	1027883a 	mov	r19,r2
   458b4:	d8c00f15 	stw	r3,60(sp)
   458b8:	003cd306 	br	44c08 <_dtoa_r+0x900>

000458bc <_fflush_r>:
   458bc:	defffb04 	addi	sp,sp,-20
   458c0:	dcc00315 	stw	r19,12(sp)
   458c4:	dc800215 	stw	r18,8(sp)
   458c8:	dfc00415 	stw	ra,16(sp)
   458cc:	dc400115 	stw	r17,4(sp)
   458d0:	dc000015 	stw	r16,0(sp)
   458d4:	2027883a 	mov	r19,r4
   458d8:	2825883a 	mov	r18,r5
   458dc:	20000226 	beq	r4,zero,458e8 <_fflush_r+0x2c>
   458e0:	20800e17 	ldw	r2,56(r4)
   458e4:	10005626 	beq	r2,zero,45a40 <_fflush_r+0x184>
   458e8:	9100030b 	ldhu	r4,12(r18)
   458ec:	20ffffcc 	andi	r3,r4,65535
   458f0:	18e0001c 	xori	r3,r3,32768
   458f4:	18e00004 	addi	r3,r3,-32768
   458f8:	1880020c 	andi	r2,r3,8
   458fc:	1000261e 	bne	r2,zero,45998 <_fflush_r+0xdc>
   45900:	90c00117 	ldw	r3,4(r18)
   45904:	20820014 	ori	r2,r4,2048
   45908:	9080030d 	sth	r2,12(r18)
   4590c:	1009883a 	mov	r4,r2
   45910:	00c0400e 	bge	zero,r3,45a14 <_fflush_r+0x158>
   45914:	92000a17 	ldw	r8,40(r18)
   45918:	40004026 	beq	r8,zero,45a1c <_fflush_r+0x160>
   4591c:	2084000c 	andi	r2,r4,4096
   45920:	10005326 	beq	r2,zero,45a70 <_fflush_r+0x1b4>
   45924:	94001417 	ldw	r16,80(r18)
   45928:	9080030b 	ldhu	r2,12(r18)
   4592c:	1080010c 	andi	r2,r2,4
   45930:	1000481e 	bne	r2,zero,45a54 <_fflush_r+0x198>
   45934:	91400717 	ldw	r5,28(r18)
   45938:	9809883a 	mov	r4,r19
   4593c:	800d883a 	mov	r6,r16
   45940:	000f883a 	mov	r7,zero
   45944:	403ee83a 	callr	r8
   45948:	8080261e 	bne	r16,r2,459e4 <_fflush_r+0x128>
   4594c:	9080030b 	ldhu	r2,12(r18)
   45950:	91000417 	ldw	r4,16(r18)
   45954:	90000115 	stw	zero,4(r18)
   45958:	10bdffcc 	andi	r2,r2,63487
   4595c:	10ffffcc 	andi	r3,r2,65535
   45960:	18c4000c 	andi	r3,r3,4096
   45964:	9080030d 	sth	r2,12(r18)
   45968:	91000015 	stw	r4,0(r18)
   4596c:	18002b26 	beq	r3,zero,45a1c <_fflush_r+0x160>
   45970:	0007883a 	mov	r3,zero
   45974:	1805883a 	mov	r2,r3
   45978:	94001415 	stw	r16,80(r18)
   4597c:	dfc00417 	ldw	ra,16(sp)
   45980:	dcc00317 	ldw	r19,12(sp)
   45984:	dc800217 	ldw	r18,8(sp)
   45988:	dc400117 	ldw	r17,4(sp)
   4598c:	dc000017 	ldw	r16,0(sp)
   45990:	dec00504 	addi	sp,sp,20
   45994:	f800283a 	ret
   45998:	94400417 	ldw	r17,16(r18)
   4599c:	88001f26 	beq	r17,zero,45a1c <_fflush_r+0x160>
   459a0:	90800017 	ldw	r2,0(r18)
   459a4:	18c000cc 	andi	r3,r3,3
   459a8:	94400015 	stw	r17,0(r18)
   459ac:	1461c83a 	sub	r16,r2,r17
   459b0:	18002526 	beq	r3,zero,45a48 <_fflush_r+0x18c>
   459b4:	0005883a 	mov	r2,zero
   459b8:	90800215 	stw	r2,8(r18)
   459bc:	0400170e 	bge	zero,r16,45a1c <_fflush_r+0x160>
   459c0:	90c00917 	ldw	r3,36(r18)
   459c4:	91400717 	ldw	r5,28(r18)
   459c8:	880d883a 	mov	r6,r17
   459cc:	800f883a 	mov	r7,r16
   459d0:	9809883a 	mov	r4,r19
   459d4:	183ee83a 	callr	r3
   459d8:	88a3883a 	add	r17,r17,r2
   459dc:	80a1c83a 	sub	r16,r16,r2
   459e0:	00bff616 	blt	zero,r2,459bc <_fflush_r+0x100>
   459e4:	9080030b 	ldhu	r2,12(r18)
   459e8:	00ffffc4 	movi	r3,-1
   459ec:	10801014 	ori	r2,r2,64
   459f0:	9080030d 	sth	r2,12(r18)
   459f4:	1805883a 	mov	r2,r3
   459f8:	dfc00417 	ldw	ra,16(sp)
   459fc:	dcc00317 	ldw	r19,12(sp)
   45a00:	dc800217 	ldw	r18,8(sp)
   45a04:	dc400117 	ldw	r17,4(sp)
   45a08:	dc000017 	ldw	r16,0(sp)
   45a0c:	dec00504 	addi	sp,sp,20
   45a10:	f800283a 	ret
   45a14:	90800f17 	ldw	r2,60(r18)
   45a18:	00bfbe16 	blt	zero,r2,45914 <_fflush_r+0x58>
   45a1c:	0007883a 	mov	r3,zero
   45a20:	1805883a 	mov	r2,r3
   45a24:	dfc00417 	ldw	ra,16(sp)
   45a28:	dcc00317 	ldw	r19,12(sp)
   45a2c:	dc800217 	ldw	r18,8(sp)
   45a30:	dc400117 	ldw	r17,4(sp)
   45a34:	dc000017 	ldw	r16,0(sp)
   45a38:	dec00504 	addi	sp,sp,20
   45a3c:	f800283a 	ret
   45a40:	0045b540 	call	45b54 <__sinit>
   45a44:	003fa806 	br	458e8 <_fflush_r+0x2c>
   45a48:	90800517 	ldw	r2,20(r18)
   45a4c:	90800215 	stw	r2,8(r18)
   45a50:	003fda06 	br	459bc <_fflush_r+0x100>
   45a54:	90800117 	ldw	r2,4(r18)
   45a58:	90c00c17 	ldw	r3,48(r18)
   45a5c:	80a1c83a 	sub	r16,r16,r2
   45a60:	183fb426 	beq	r3,zero,45934 <_fflush_r+0x78>
   45a64:	90800f17 	ldw	r2,60(r18)
   45a68:	80a1c83a 	sub	r16,r16,r2
   45a6c:	003fb106 	br	45934 <_fflush_r+0x78>
   45a70:	91400717 	ldw	r5,28(r18)
   45a74:	9809883a 	mov	r4,r19
   45a78:	000d883a 	mov	r6,zero
   45a7c:	01c00044 	movi	r7,1
   45a80:	403ee83a 	callr	r8
   45a84:	1021883a 	mov	r16,r2
   45a88:	00bfffc4 	movi	r2,-1
   45a8c:	80800226 	beq	r16,r2,45a98 <_fflush_r+0x1dc>
   45a90:	92000a17 	ldw	r8,40(r18)
   45a94:	003fa406 	br	45928 <_fflush_r+0x6c>
   45a98:	98c00017 	ldw	r3,0(r19)
   45a9c:	00800744 	movi	r2,29
   45aa0:	18bfde26 	beq	r3,r2,45a1c <_fflush_r+0x160>
   45aa4:	9080030b 	ldhu	r2,12(r18)
   45aa8:	8007883a 	mov	r3,r16
   45aac:	10801014 	ori	r2,r2,64
   45ab0:	9080030d 	sth	r2,12(r18)
   45ab4:	003fcf06 	br	459f4 <_fflush_r+0x138>

00045ab8 <fflush>:
   45ab8:	01400134 	movhi	r5,4
   45abc:	29562f04 	addi	r5,r5,22716
   45ac0:	2007883a 	mov	r3,r4
   45ac4:	20000526 	beq	r4,zero,45adc <fflush+0x24>
   45ac8:	00800174 	movhi	r2,5
   45acc:	1091d604 	addi	r2,r2,18264
   45ad0:	11000017 	ldw	r4,0(r2)
   45ad4:	180b883a 	mov	r5,r3
   45ad8:	00458bc1 	jmpi	458bc <_fflush_r>
   45adc:	00800174 	movhi	r2,5
   45ae0:	1091d704 	addi	r2,r2,18268
   45ae4:	11000017 	ldw	r4,0(r2)
   45ae8:	00469081 	jmpi	46908 <_fwalk_reent>

00045aec <std>:
   45aec:	00800174 	movhi	r2,5
   45af0:	10a54404 	addi	r2,r2,-27376
   45af4:	20800b15 	stw	r2,44(r4)
   45af8:	00800174 	movhi	r2,5
   45afc:	10a57f04 	addi	r2,r2,-27140
   45b00:	20800815 	stw	r2,32(r4)
   45b04:	00c00174 	movhi	r3,5
   45b08:	18e56004 	addi	r3,r3,-27264
   45b0c:	00800174 	movhi	r2,5
   45b10:	10a54604 	addi	r2,r2,-27368
   45b14:	2140030d 	sth	r5,12(r4)
   45b18:	2180038d 	sth	r6,14(r4)
   45b1c:	20c00915 	stw	r3,36(r4)
   45b20:	20800a15 	stw	r2,40(r4)
   45b24:	20000015 	stw	zero,0(r4)
   45b28:	20000115 	stw	zero,4(r4)
   45b2c:	20000215 	stw	zero,8(r4)
   45b30:	20000415 	stw	zero,16(r4)
   45b34:	20000515 	stw	zero,20(r4)
   45b38:	20000615 	stw	zero,24(r4)
   45b3c:	21000715 	stw	r4,28(r4)
   45b40:	f800283a 	ret

00045b44 <__sfp_lock_acquire>:
   45b44:	f800283a 	ret

00045b48 <__sfp_lock_release>:
   45b48:	f800283a 	ret

00045b4c <__sinit_lock_acquire>:
   45b4c:	f800283a 	ret

00045b50 <__sinit_lock_release>:
   45b50:	f800283a 	ret

00045b54 <__sinit>:
   45b54:	20800e17 	ldw	r2,56(r4)
   45b58:	defffd04 	addi	sp,sp,-12
   45b5c:	dc400115 	stw	r17,4(sp)
   45b60:	dc000015 	stw	r16,0(sp)
   45b64:	dfc00215 	stw	ra,8(sp)
   45b68:	04400044 	movi	r17,1
   45b6c:	01400104 	movi	r5,4
   45b70:	000d883a 	mov	r6,zero
   45b74:	2021883a 	mov	r16,r4
   45b78:	2200bb04 	addi	r8,r4,748
   45b7c:	200f883a 	mov	r7,r4
   45b80:	10000526 	beq	r2,zero,45b98 <__sinit+0x44>
   45b84:	dfc00217 	ldw	ra,8(sp)
   45b88:	dc400117 	ldw	r17,4(sp)
   45b8c:	dc000017 	ldw	r16,0(sp)
   45b90:	dec00304 	addi	sp,sp,12
   45b94:	f800283a 	ret
   45b98:	21000117 	ldw	r4,4(r4)
   45b9c:	00800134 	movhi	r2,4
   45ba0:	10970e04 	addi	r2,r2,23608
   45ba4:	00c000c4 	movi	r3,3
   45ba8:	80800f15 	stw	r2,60(r16)
   45bac:	80c0b915 	stw	r3,740(r16)
   45bb0:	8200ba15 	stw	r8,744(r16)
   45bb4:	84400e15 	stw	r17,56(r16)
   45bb8:	8000b815 	stw	zero,736(r16)
   45bbc:	0045aec0 	call	45aec <std>
   45bc0:	81000217 	ldw	r4,8(r16)
   45bc4:	880d883a 	mov	r6,r17
   45bc8:	800f883a 	mov	r7,r16
   45bcc:	01400284 	movi	r5,10
   45bd0:	0045aec0 	call	45aec <std>
   45bd4:	81000317 	ldw	r4,12(r16)
   45bd8:	800f883a 	mov	r7,r16
   45bdc:	01400484 	movi	r5,18
   45be0:	01800084 	movi	r6,2
   45be4:	dfc00217 	ldw	ra,8(sp)
   45be8:	dc400117 	ldw	r17,4(sp)
   45bec:	dc000017 	ldw	r16,0(sp)
   45bf0:	dec00304 	addi	sp,sp,12
   45bf4:	0045aec1 	jmpi	45aec <std>

00045bf8 <__fp_lock>:
   45bf8:	0005883a 	mov	r2,zero
   45bfc:	f800283a 	ret

00045c00 <__fp_unlock>:
   45c00:	0005883a 	mov	r2,zero
   45c04:	f800283a 	ret

00045c08 <__fp_unlock_all>:
   45c08:	00800174 	movhi	r2,5
   45c0c:	1091d604 	addi	r2,r2,18264
   45c10:	11000017 	ldw	r4,0(r2)
   45c14:	01400134 	movhi	r5,4
   45c18:	29570004 	addi	r5,r5,23552
   45c1c:	00469d01 	jmpi	469d0 <_fwalk>

00045c20 <__fp_lock_all>:
   45c20:	00800174 	movhi	r2,5
   45c24:	1091d604 	addi	r2,r2,18264
   45c28:	11000017 	ldw	r4,0(r2)
   45c2c:	01400134 	movhi	r5,4
   45c30:	2956fe04 	addi	r5,r5,23544
   45c34:	00469d01 	jmpi	469d0 <_fwalk>

00045c38 <_cleanup_r>:
   45c38:	01400174 	movhi	r5,5
   45c3c:	296ffb04 	addi	r5,r5,-16404
   45c40:	00469d01 	jmpi	469d0 <_fwalk>

00045c44 <_cleanup>:
   45c44:	00800174 	movhi	r2,5
   45c48:	1091d704 	addi	r2,r2,18268
   45c4c:	11000017 	ldw	r4,0(r2)
   45c50:	0045c381 	jmpi	45c38 <_cleanup_r>

00045c54 <__sfmoreglue>:
   45c54:	defffc04 	addi	sp,sp,-16
   45c58:	dc000015 	stw	r16,0(sp)
   45c5c:	2821883a 	mov	r16,r5
   45c60:	dc400115 	stw	r17,4(sp)
   45c64:	01401704 	movi	r5,92
   45c68:	2023883a 	mov	r17,r4
   45c6c:	8009883a 	mov	r4,r16
   45c70:	dfc00315 	stw	ra,12(sp)
   45c74:	dcc00215 	stw	r19,8(sp)
   45c78:	004f1100 	call	4f110 <__mulsi3>
   45c7c:	11400304 	addi	r5,r2,12
   45c80:	8809883a 	mov	r4,r17
   45c84:	1027883a 	mov	r19,r2
   45c88:	0046d0c0 	call	46d0c <_malloc_r>
   45c8c:	10c00304 	addi	r3,r2,12
   45c90:	1023883a 	mov	r17,r2
   45c94:	1809883a 	mov	r4,r3
   45c98:	980d883a 	mov	r6,r19
   45c9c:	000b883a 	mov	r5,zero
   45ca0:	10000b26 	beq	r2,zero,45cd0 <__sfmoreglue+0x7c>
   45ca4:	14000115 	stw	r16,4(r2)
   45ca8:	10c00215 	stw	r3,8(r2)
   45cac:	10000015 	stw	zero,0(r2)
   45cb0:	00477b00 	call	477b0 <memset>
   45cb4:	8805883a 	mov	r2,r17
   45cb8:	dfc00317 	ldw	ra,12(sp)
   45cbc:	dcc00217 	ldw	r19,8(sp)
   45cc0:	dc400117 	ldw	r17,4(sp)
   45cc4:	dc000017 	ldw	r16,0(sp)
   45cc8:	dec00404 	addi	sp,sp,16
   45ccc:	f800283a 	ret
   45cd0:	0023883a 	mov	r17,zero
   45cd4:	8805883a 	mov	r2,r17
   45cd8:	dfc00317 	ldw	ra,12(sp)
   45cdc:	dcc00217 	ldw	r19,8(sp)
   45ce0:	dc400117 	ldw	r17,4(sp)
   45ce4:	dc000017 	ldw	r16,0(sp)
   45ce8:	dec00404 	addi	sp,sp,16
   45cec:	f800283a 	ret

00045cf0 <__sfp>:
   45cf0:	defffd04 	addi	sp,sp,-12
   45cf4:	00800174 	movhi	r2,5
   45cf8:	1091d704 	addi	r2,r2,18268
   45cfc:	dc000015 	stw	r16,0(sp)
   45d00:	14000017 	ldw	r16,0(r2)
   45d04:	dc400115 	stw	r17,4(sp)
   45d08:	dfc00215 	stw	ra,8(sp)
   45d0c:	80800e17 	ldw	r2,56(r16)
   45d10:	2023883a 	mov	r17,r4
   45d14:	10002626 	beq	r2,zero,45db0 <__sfp+0xc0>
   45d18:	8400b804 	addi	r16,r16,736
   45d1c:	80800117 	ldw	r2,4(r16)
   45d20:	81000217 	ldw	r4,8(r16)
   45d24:	10ffffc4 	addi	r3,r2,-1
   45d28:	18000916 	blt	r3,zero,45d50 <__sfp+0x60>
   45d2c:	2080030f 	ldh	r2,12(r4)
   45d30:	10000b26 	beq	r2,zero,45d60 <__sfp+0x70>
   45d34:	017fffc4 	movi	r5,-1
   45d38:	00000206 	br	45d44 <__sfp+0x54>
   45d3c:	2080030f 	ldh	r2,12(r4)
   45d40:	10000726 	beq	r2,zero,45d60 <__sfp+0x70>
   45d44:	18ffffc4 	addi	r3,r3,-1
   45d48:	21001704 	addi	r4,r4,92
   45d4c:	197ffb1e 	bne	r3,r5,45d3c <__sfp+0x4c>
   45d50:	80800017 	ldw	r2,0(r16)
   45d54:	10001926 	beq	r2,zero,45dbc <__sfp+0xcc>
   45d58:	1021883a 	mov	r16,r2
   45d5c:	003fef06 	br	45d1c <__sfp+0x2c>
   45d60:	00bfffc4 	movi	r2,-1
   45d64:	00c00044 	movi	r3,1
   45d68:	2080038d 	sth	r2,14(r4)
   45d6c:	20c0030d 	sth	r3,12(r4)
   45d70:	20000015 	stw	zero,0(r4)
   45d74:	20000215 	stw	zero,8(r4)
   45d78:	20000115 	stw	zero,4(r4)
   45d7c:	20000415 	stw	zero,16(r4)
   45d80:	20000515 	stw	zero,20(r4)
   45d84:	20000615 	stw	zero,24(r4)
   45d88:	20000c15 	stw	zero,48(r4)
   45d8c:	20000d15 	stw	zero,52(r4)
   45d90:	20001115 	stw	zero,68(r4)
   45d94:	20001215 	stw	zero,72(r4)
   45d98:	2005883a 	mov	r2,r4
   45d9c:	dfc00217 	ldw	ra,8(sp)
   45da0:	dc400117 	ldw	r17,4(sp)
   45da4:	dc000017 	ldw	r16,0(sp)
   45da8:	dec00304 	addi	sp,sp,12
   45dac:	f800283a 	ret
   45db0:	8009883a 	mov	r4,r16
   45db4:	0045b540 	call	45b54 <__sinit>
   45db8:	003fd706 	br	45d18 <__sfp+0x28>
   45dbc:	8809883a 	mov	r4,r17
   45dc0:	01400104 	movi	r5,4
   45dc4:	0045c540 	call	45c54 <__sfmoreglue>
   45dc8:	80800015 	stw	r2,0(r16)
   45dcc:	103fe21e 	bne	r2,zero,45d58 <__sfp+0x68>
   45dd0:	00800304 	movi	r2,12
   45dd4:	0009883a 	mov	r4,zero
   45dd8:	88800015 	stw	r2,0(r17)
   45ddc:	003fee06 	br	45d98 <__sfp+0xa8>

00045de0 <_fread_r>:
   45de0:	defff504 	addi	sp,sp,-44
   45de4:	dd800715 	stw	r22,28(sp)
   45de8:	dc000115 	stw	r16,4(sp)
   45dec:	202d883a 	mov	r22,r4
   45df0:	2821883a 	mov	r16,r5
   45df4:	3809883a 	mov	r4,r7
   45df8:	300b883a 	mov	r5,r6
   45dfc:	df000915 	stw	fp,36(sp)
   45e00:	ddc00815 	stw	r23,32(sp)
   45e04:	dcc00415 	stw	r19,16(sp)
   45e08:	dfc00a15 	stw	ra,40(sp)
   45e0c:	dd400615 	stw	r21,24(sp)
   45e10:	dd000515 	stw	r20,20(sp)
   45e14:	dc800315 	stw	r18,12(sp)
   45e18:	dc400215 	stw	r17,8(sp)
   45e1c:	d9800015 	stw	r6,0(sp)
   45e20:	3839883a 	mov	fp,r7
   45e24:	004f1100 	call	4f110 <__mulsi3>
   45e28:	102f883a 	mov	r23,r2
   45e2c:	dcc00b17 	ldw	r19,44(sp)
   45e30:	10005926 	beq	r2,zero,45f98 <_fread_r+0x1b8>
   45e34:	b0000226 	beq	r22,zero,45e40 <_fread_r+0x60>
   45e38:	b0800e17 	ldw	r2,56(r22)
   45e3c:	10005826 	beq	r2,zero,45fa0 <_fread_r+0x1c0>
   45e40:	9c400117 	ldw	r17,4(r19)
   45e44:	88005a16 	blt	r17,zero,45fb0 <_fread_r+0x1d0>
   45e48:	9880030b 	ldhu	r2,12(r19)
   45e4c:	8029883a 	mov	r20,r16
   45e50:	1080008c 	andi	r2,r2,2
   45e54:	1000221e 	bne	r2,zero,45ee0 <_fread_r+0x100>
   45e58:	b825883a 	mov	r18,r23
   45e5c:	00000106 	br	45e64 <_fread_r+0x84>
   45e60:	9c400117 	ldw	r17,4(r19)
   45e64:	a009883a 	mov	r4,r20
   45e68:	880d883a 	mov	r6,r17
   45e6c:	8c80552e 	bgeu	r17,r18,45fc4 <_fread_r+0x1e4>
   45e70:	99400017 	ldw	r5,0(r19)
   45e74:	a469883a 	add	r20,r20,r17
   45e78:	9465c83a 	sub	r18,r18,r17
   45e7c:	00476300 	call	47630 <memcpy>
   45e80:	98800017 	ldw	r2,0(r19)
   45e84:	b009883a 	mov	r4,r22
   45e88:	980b883a 	mov	r5,r19
   45e8c:	1461883a 	add	r16,r2,r17
   45e90:	9c000015 	stw	r16,0(r19)
   45e94:	00490b40 	call	490b4 <__srefill_r>
   45e98:	103ff126 	beq	r2,zero,45e60 <_fread_r+0x80>
   45e9c:	d9400017 	ldw	r5,0(sp)
   45ea0:	bc89c83a 	sub	r4,r23,r18
   45ea4:	004f1000 	call	4f100 <__udivsi3>
   45ea8:	1039883a 	mov	fp,r2
   45eac:	e005883a 	mov	r2,fp
   45eb0:	dfc00a17 	ldw	ra,40(sp)
   45eb4:	df000917 	ldw	fp,36(sp)
   45eb8:	ddc00817 	ldw	r23,32(sp)
   45ebc:	dd800717 	ldw	r22,28(sp)
   45ec0:	dd400617 	ldw	r21,24(sp)
   45ec4:	dd000517 	ldw	r20,20(sp)
   45ec8:	dcc00417 	ldw	r19,16(sp)
   45ecc:	dc800317 	ldw	r18,12(sp)
   45ed0:	dc400217 	ldw	r17,8(sp)
   45ed4:	dc000117 	ldw	r16,4(sp)
   45ed8:	dec00b04 	addi	sp,sp,44
   45edc:	f800283a 	ret
   45ee0:	b825883a 	mov	r18,r23
   45ee4:	8dc03536 	bltu	r17,r23,45fbc <_fread_r+0x1dc>
   45ee8:	99400017 	ldw	r5,0(r19)
   45eec:	a009883a 	mov	r4,r20
   45ef0:	900d883a 	mov	r6,r18
   45ef4:	00476300 	call	47630 <memcpy>
   45ef8:	9c000017 	ldw	r16,0(r19)
   45efc:	98800117 	ldw	r2,4(r19)
   45f00:	99400c17 	ldw	r5,48(r19)
   45f04:	84a1883a 	add	r16,r16,r18
   45f08:	14a3c83a 	sub	r17,r2,r18
   45f0c:	a4ab883a 	add	r21,r20,r18
   45f10:	9c400115 	stw	r17,4(r19)
   45f14:	9c000015 	stw	r16,0(r19)
   45f18:	bca9c83a 	sub	r20,r23,r18
   45f1c:	28000826 	beq	r5,zero,45f40 <_fread_r+0x160>
   45f20:	a03fe226 	beq	r20,zero,45eac <_fread_r+0xcc>
   45f24:	98801004 	addi	r2,r19,64
   45f28:	28800326 	beq	r5,r2,45f38 <_fread_r+0x158>
   45f2c:	b009883a 	mov	r4,r22
   45f30:	00461580 	call	46158 <_free_r>
   45f34:	9c000017 	ldw	r16,0(r19)
   45f38:	98000c15 	stw	zero,48(r19)
   45f3c:	00000106 	br	45f44 <_fread_r+0x164>
   45f40:	a03fda26 	beq	r20,zero,45eac <_fread_r+0xcc>
   45f44:	9c800417 	ldw	r18,16(r19)
   45f48:	9c400517 	ldw	r17,20(r19)
   45f4c:	9d400015 	stw	r21,0(r19)
   45f50:	9d400415 	stw	r21,16(r19)
   45f54:	9d000515 	stw	r20,20(r19)
   45f58:	b009883a 	mov	r4,r22
   45f5c:	980b883a 	mov	r5,r19
   45f60:	00490b40 	call	490b4 <__srefill_r>
   45f64:	98c00117 	ldw	r3,4(r19)
   45f68:	9c800415 	stw	r18,16(r19)
   45f6c:	9c400515 	stw	r17,20(r19)
   45f70:	a8eb883a 	add	r21,r21,r3
   45f74:	9c000015 	stw	r16,0(r19)
   45f78:	a0e9c83a 	sub	r20,r20,r3
   45f7c:	98000115 	stw	zero,4(r19)
   45f80:	103fef26 	beq	r2,zero,45f40 <_fread_r+0x160>
   45f84:	d9400017 	ldw	r5,0(sp)
   45f88:	bd09c83a 	sub	r4,r23,r20
   45f8c:	004f1000 	call	4f100 <__udivsi3>
   45f90:	1039883a 	mov	fp,r2
   45f94:	003fc506 	br	45eac <_fread_r+0xcc>
   45f98:	0039883a 	mov	fp,zero
   45f9c:	003fc306 	br	45eac <_fread_r+0xcc>
   45fa0:	b009883a 	mov	r4,r22
   45fa4:	0045b540 	call	45b54 <__sinit>
   45fa8:	9c400117 	ldw	r17,4(r19)
   45fac:	883fa60e 	bge	r17,zero,45e48 <_fread_r+0x68>
   45fb0:	0023883a 	mov	r17,zero
   45fb4:	98000115 	stw	zero,4(r19)
   45fb8:	003fa306 	br	45e48 <_fread_r+0x68>
   45fbc:	8825883a 	mov	r18,r17
   45fc0:	003fc906 	br	45ee8 <_fread_r+0x108>
   45fc4:	99400017 	ldw	r5,0(r19)
   45fc8:	900d883a 	mov	r6,r18
   45fcc:	00476300 	call	47630 <memcpy>
   45fd0:	98c00117 	ldw	r3,4(r19)
   45fd4:	98800017 	ldw	r2,0(r19)
   45fd8:	1c87c83a 	sub	r3,r3,r18
   45fdc:	1485883a 	add	r2,r2,r18
   45fe0:	98800015 	stw	r2,0(r19)
   45fe4:	98c00115 	stw	r3,4(r19)
   45fe8:	003fb006 	br	45eac <_fread_r+0xcc>

00045fec <fread>:
   45fec:	00800174 	movhi	r2,5
   45ff0:	1091d604 	addi	r2,r2,18264
   45ff4:	2017883a 	mov	r11,r4
   45ff8:	11000017 	ldw	r4,0(r2)
   45ffc:	defffe04 	addi	sp,sp,-8
   46000:	3013883a 	mov	r9,r6
   46004:	2805883a 	mov	r2,r5
   46008:	d9c00015 	stw	r7,0(sp)
   4600c:	580b883a 	mov	r5,r11
   46010:	100d883a 	mov	r6,r2
   46014:	480f883a 	mov	r7,r9
   46018:	dfc00115 	stw	ra,4(sp)
   4601c:	0045de00 	call	45de0 <_fread_r>
   46020:	dfc00117 	ldw	ra,4(sp)
   46024:	dec00204 	addi	sp,sp,8
   46028:	f800283a 	ret

0004602c <_malloc_trim_r>:
   4602c:	defffb04 	addi	sp,sp,-20
   46030:	dcc00315 	stw	r19,12(sp)
   46034:	04c00174 	movhi	r19,5
   46038:	9ccc4804 	addi	r19,r19,12576
   4603c:	dc800215 	stw	r18,8(sp)
   46040:	dc400115 	stw	r17,4(sp)
   46044:	dc000015 	stw	r16,0(sp)
   46048:	2823883a 	mov	r17,r5
   4604c:	2025883a 	mov	r18,r4
   46050:	dfc00415 	stw	ra,16(sp)
   46054:	005006c0 	call	5006c <__malloc_lock>
   46058:	98800217 	ldw	r2,8(r19)
   4605c:	9009883a 	mov	r4,r18
   46060:	000b883a 	mov	r5,zero
   46064:	10c00117 	ldw	r3,4(r2)
   46068:	00bfff04 	movi	r2,-4
   4606c:	18a0703a 	and	r16,r3,r2
   46070:	8463c83a 	sub	r17,r16,r17
   46074:	8c43fbc4 	addi	r17,r17,4079
   46078:	8822d33a 	srli	r17,r17,12
   4607c:	0083ffc4 	movi	r2,4095
   46080:	8c7fffc4 	addi	r17,r17,-1
   46084:	8822933a 	slli	r17,r17,12
   46088:	1440060e 	bge	r2,r17,460a4 <_malloc_trim_r+0x78>
   4608c:	00493040 	call	49304 <_sbrk_r>
   46090:	98c00217 	ldw	r3,8(r19)
   46094:	9009883a 	mov	r4,r18
   46098:	044bc83a 	sub	r5,zero,r17
   4609c:	80c7883a 	add	r3,r16,r3
   460a0:	10c00926 	beq	r2,r3,460c8 <_malloc_trim_r+0x9c>
   460a4:	005008c0 	call	5008c <__malloc_unlock>
   460a8:	0005883a 	mov	r2,zero
   460ac:	dfc00417 	ldw	ra,16(sp)
   460b0:	dcc00317 	ldw	r19,12(sp)
   460b4:	dc800217 	ldw	r18,8(sp)
   460b8:	dc400117 	ldw	r17,4(sp)
   460bc:	dc000017 	ldw	r16,0(sp)
   460c0:	dec00504 	addi	sp,sp,20
   460c4:	f800283a 	ret
   460c8:	9009883a 	mov	r4,r18
   460cc:	00493040 	call	49304 <_sbrk_r>
   460d0:	844dc83a 	sub	r6,r16,r17
   460d4:	00ffffc4 	movi	r3,-1
   460d8:	9009883a 	mov	r4,r18
   460dc:	000b883a 	mov	r5,zero
   460e0:	01c00174 	movhi	r7,5
   460e4:	39d89604 	addi	r7,r7,25176
   460e8:	31800054 	ori	r6,r6,1
   460ec:	10c00926 	beq	r2,r3,46114 <_malloc_trim_r+0xe8>
   460f0:	38800017 	ldw	r2,0(r7)
   460f4:	98c00217 	ldw	r3,8(r19)
   460f8:	9009883a 	mov	r4,r18
   460fc:	1445c83a 	sub	r2,r2,r17
   46100:	38800015 	stw	r2,0(r7)
   46104:	19800115 	stw	r6,4(r3)
   46108:	005008c0 	call	5008c <__malloc_unlock>
   4610c:	00800044 	movi	r2,1
   46110:	003fe606 	br	460ac <_malloc_trim_r+0x80>
   46114:	00493040 	call	49304 <_sbrk_r>
   46118:	99800217 	ldw	r6,8(r19)
   4611c:	100f883a 	mov	r7,r2
   46120:	9009883a 	mov	r4,r18
   46124:	1187c83a 	sub	r3,r2,r6
   46128:	008003c4 	movi	r2,15
   4612c:	19400054 	ori	r5,r3,1
   46130:	10ffdc0e 	bge	r2,r3,460a4 <_malloc_trim_r+0x78>
   46134:	00800174 	movhi	r2,5
   46138:	1091dc04 	addi	r2,r2,18288
   4613c:	10c00017 	ldw	r3,0(r2)
   46140:	00800174 	movhi	r2,5
   46144:	10989604 	addi	r2,r2,25176
   46148:	31400115 	stw	r5,4(r6)
   4614c:	38c7c83a 	sub	r3,r7,r3
   46150:	10c00015 	stw	r3,0(r2)
   46154:	003fd306 	br	460a4 <_malloc_trim_r+0x78>

00046158 <_free_r>:
   46158:	defffd04 	addi	sp,sp,-12
   4615c:	dc400115 	stw	r17,4(sp)
   46160:	dc000015 	stw	r16,0(sp)
   46164:	dfc00215 	stw	ra,8(sp)
   46168:	2821883a 	mov	r16,r5
   4616c:	2023883a 	mov	r17,r4
   46170:	28005a26 	beq	r5,zero,462dc <_free_r+0x184>
   46174:	005006c0 	call	5006c <__malloc_lock>
   46178:	823ffe04 	addi	r8,r16,-8
   4617c:	41400117 	ldw	r5,4(r8)
   46180:	00bfff84 	movi	r2,-2
   46184:	02800174 	movhi	r10,5
   46188:	528c4804 	addi	r10,r10,12576
   4618c:	288e703a 	and	r7,r5,r2
   46190:	41cd883a 	add	r6,r8,r7
   46194:	30c00117 	ldw	r3,4(r6)
   46198:	51000217 	ldw	r4,8(r10)
   4619c:	00bfff04 	movi	r2,-4
   461a0:	1892703a 	and	r9,r3,r2
   461a4:	5017883a 	mov	r11,r10
   461a8:	31006726 	beq	r6,r4,46348 <_free_r+0x1f0>
   461ac:	2880004c 	andi	r2,r5,1
   461b0:	1005003a 	cmpeq	r2,r2,zero
   461b4:	32400115 	stw	r9,4(r6)
   461b8:	10001a1e 	bne	r2,zero,46224 <_free_r+0xcc>
   461bc:	000b883a 	mov	r5,zero
   461c0:	3247883a 	add	r3,r6,r9
   461c4:	18800117 	ldw	r2,4(r3)
   461c8:	1080004c 	andi	r2,r2,1
   461cc:	1000231e 	bne	r2,zero,4625c <_free_r+0x104>
   461d0:	280ac03a 	cmpne	r5,r5,zero
   461d4:	3a4f883a 	add	r7,r7,r9
   461d8:	2800451e 	bne	r5,zero,462f0 <_free_r+0x198>
   461dc:	31000217 	ldw	r4,8(r6)
   461e0:	00800174 	movhi	r2,5
   461e4:	108c4a04 	addi	r2,r2,12584
   461e8:	20807b26 	beq	r4,r2,463d8 <_free_r+0x280>
   461ec:	30800317 	ldw	r2,12(r6)
   461f0:	3a07883a 	add	r3,r7,r8
   461f4:	19c00015 	stw	r7,0(r3)
   461f8:	11000215 	stw	r4,8(r2)
   461fc:	20800315 	stw	r2,12(r4)
   46200:	38800054 	ori	r2,r7,1
   46204:	40800115 	stw	r2,4(r8)
   46208:	28001a26 	beq	r5,zero,46274 <_free_r+0x11c>
   4620c:	8809883a 	mov	r4,r17
   46210:	dfc00217 	ldw	ra,8(sp)
   46214:	dc400117 	ldw	r17,4(sp)
   46218:	dc000017 	ldw	r16,0(sp)
   4621c:	dec00304 	addi	sp,sp,12
   46220:	005008c1 	jmpi	5008c <__malloc_unlock>
   46224:	80bffe17 	ldw	r2,-8(r16)
   46228:	50c00204 	addi	r3,r10,8
   4622c:	4091c83a 	sub	r8,r8,r2
   46230:	41000217 	ldw	r4,8(r8)
   46234:	388f883a 	add	r7,r7,r2
   46238:	20c06126 	beq	r4,r3,463c0 <_free_r+0x268>
   4623c:	40800317 	ldw	r2,12(r8)
   46240:	3247883a 	add	r3,r6,r9
   46244:	000b883a 	mov	r5,zero
   46248:	11000215 	stw	r4,8(r2)
   4624c:	20800315 	stw	r2,12(r4)
   46250:	18800117 	ldw	r2,4(r3)
   46254:	1080004c 	andi	r2,r2,1
   46258:	103fdd26 	beq	r2,zero,461d0 <_free_r+0x78>
   4625c:	38800054 	ori	r2,r7,1
   46260:	3a07883a 	add	r3,r7,r8
   46264:	280ac03a 	cmpne	r5,r5,zero
   46268:	40800115 	stw	r2,4(r8)
   4626c:	19c00015 	stw	r7,0(r3)
   46270:	283fe61e 	bne	r5,zero,4620c <_free_r+0xb4>
   46274:	00807fc4 	movi	r2,511
   46278:	11c01f2e 	bgeu	r2,r7,462f8 <_free_r+0x1a0>
   4627c:	3806d27a 	srli	r3,r7,9
   46280:	1800481e 	bne	r3,zero,463a4 <_free_r+0x24c>
   46284:	3804d0fa 	srli	r2,r7,3
   46288:	100690fa 	slli	r3,r2,3
   4628c:	1acd883a 	add	r6,r3,r11
   46290:	31400217 	ldw	r5,8(r6)
   46294:	31405926 	beq	r6,r5,463fc <_free_r+0x2a4>
   46298:	28800117 	ldw	r2,4(r5)
   4629c:	00ffff04 	movi	r3,-4
   462a0:	10c4703a 	and	r2,r2,r3
   462a4:	3880022e 	bgeu	r7,r2,462b0 <_free_r+0x158>
   462a8:	29400217 	ldw	r5,8(r5)
   462ac:	317ffa1e 	bne	r6,r5,46298 <_free_r+0x140>
   462b0:	29800317 	ldw	r6,12(r5)
   462b4:	41800315 	stw	r6,12(r8)
   462b8:	41400215 	stw	r5,8(r8)
   462bc:	8809883a 	mov	r4,r17
   462c0:	2a000315 	stw	r8,12(r5)
   462c4:	32000215 	stw	r8,8(r6)
   462c8:	dfc00217 	ldw	ra,8(sp)
   462cc:	dc400117 	ldw	r17,4(sp)
   462d0:	dc000017 	ldw	r16,0(sp)
   462d4:	dec00304 	addi	sp,sp,12
   462d8:	005008c1 	jmpi	5008c <__malloc_unlock>
   462dc:	dfc00217 	ldw	ra,8(sp)
   462e0:	dc400117 	ldw	r17,4(sp)
   462e4:	dc000017 	ldw	r16,0(sp)
   462e8:	dec00304 	addi	sp,sp,12
   462ec:	f800283a 	ret
   462f0:	31000217 	ldw	r4,8(r6)
   462f4:	003fbd06 	br	461ec <_free_r+0x94>
   462f8:	3806d0fa 	srli	r3,r7,3
   462fc:	00800044 	movi	r2,1
   46300:	51400117 	ldw	r5,4(r10)
   46304:	180890fa 	slli	r4,r3,3
   46308:	1807d0ba 	srai	r3,r3,2
   4630c:	22c9883a 	add	r4,r4,r11
   46310:	21800217 	ldw	r6,8(r4)
   46314:	10c4983a 	sll	r2,r2,r3
   46318:	41000315 	stw	r4,12(r8)
   4631c:	41800215 	stw	r6,8(r8)
   46320:	288ab03a 	or	r5,r5,r2
   46324:	22000215 	stw	r8,8(r4)
   46328:	8809883a 	mov	r4,r17
   4632c:	51400115 	stw	r5,4(r10)
   46330:	32000315 	stw	r8,12(r6)
   46334:	dfc00217 	ldw	ra,8(sp)
   46338:	dc400117 	ldw	r17,4(sp)
   4633c:	dc000017 	ldw	r16,0(sp)
   46340:	dec00304 	addi	sp,sp,12
   46344:	005008c1 	jmpi	5008c <__malloc_unlock>
   46348:	2880004c 	andi	r2,r5,1
   4634c:	3a4d883a 	add	r6,r7,r9
   46350:	1000071e 	bne	r2,zero,46370 <_free_r+0x218>
   46354:	80bffe17 	ldw	r2,-8(r16)
   46358:	4091c83a 	sub	r8,r8,r2
   4635c:	41000317 	ldw	r4,12(r8)
   46360:	40c00217 	ldw	r3,8(r8)
   46364:	308d883a 	add	r6,r6,r2
   46368:	20c00215 	stw	r3,8(r4)
   4636c:	19000315 	stw	r4,12(r3)
   46370:	00800174 	movhi	r2,5
   46374:	1091db04 	addi	r2,r2,18284
   46378:	11000017 	ldw	r4,0(r2)
   4637c:	30c00054 	ori	r3,r6,1
   46380:	52000215 	stw	r8,8(r10)
   46384:	40c00115 	stw	r3,4(r8)
   46388:	313fa036 	bltu	r6,r4,4620c <_free_r+0xb4>
   4638c:	00800174 	movhi	r2,5
   46390:	10988c04 	addi	r2,r2,25136
   46394:	11400017 	ldw	r5,0(r2)
   46398:	8809883a 	mov	r4,r17
   4639c:	004602c0 	call	4602c <_malloc_trim_r>
   463a0:	003f9a06 	br	4620c <_free_r+0xb4>
   463a4:	00800104 	movi	r2,4
   463a8:	10c0072e 	bgeu	r2,r3,463c8 <_free_r+0x270>
   463ac:	00800504 	movi	r2,20
   463b0:	10c01936 	bltu	r2,r3,46418 <_free_r+0x2c0>
   463b4:	188016c4 	addi	r2,r3,91
   463b8:	100690fa 	slli	r3,r2,3
   463bc:	003fb306 	br	4628c <_free_r+0x134>
   463c0:	01400044 	movi	r5,1
   463c4:	003f7e06 	br	461c0 <_free_r+0x68>
   463c8:	3804d1ba 	srli	r2,r7,6
   463cc:	10800e04 	addi	r2,r2,56
   463d0:	100690fa 	slli	r3,r2,3
   463d4:	003fad06 	br	4628c <_free_r+0x134>
   463d8:	22000315 	stw	r8,12(r4)
   463dc:	22000215 	stw	r8,8(r4)
   463e0:	3a05883a 	add	r2,r7,r8
   463e4:	38c00054 	ori	r3,r7,1
   463e8:	11c00015 	stw	r7,0(r2)
   463ec:	41000215 	stw	r4,8(r8)
   463f0:	40c00115 	stw	r3,4(r8)
   463f4:	41000315 	stw	r4,12(r8)
   463f8:	003f8406 	br	4620c <_free_r+0xb4>
   463fc:	1005d0ba 	srai	r2,r2,2
   46400:	00c00044 	movi	r3,1
   46404:	51000117 	ldw	r4,4(r10)
   46408:	1886983a 	sll	r3,r3,r2
   4640c:	20c8b03a 	or	r4,r4,r3
   46410:	51000115 	stw	r4,4(r10)
   46414:	003fa706 	br	462b4 <_free_r+0x15c>
   46418:	00801504 	movi	r2,84
   4641c:	10c00436 	bltu	r2,r3,46430 <_free_r+0x2d8>
   46420:	3804d33a 	srli	r2,r7,12
   46424:	10801b84 	addi	r2,r2,110
   46428:	100690fa 	slli	r3,r2,3
   4642c:	003f9706 	br	4628c <_free_r+0x134>
   46430:	00805504 	movi	r2,340
   46434:	10c00436 	bltu	r2,r3,46448 <_free_r+0x2f0>
   46438:	3804d3fa 	srli	r2,r7,15
   4643c:	10801dc4 	addi	r2,r2,119
   46440:	100690fa 	slli	r3,r2,3
   46444:	003f9106 	br	4628c <_free_r+0x134>
   46448:	00815504 	movi	r2,1364
   4644c:	10c0032e 	bgeu	r2,r3,4645c <_free_r+0x304>
   46450:	00801f84 	movi	r2,126
   46454:	00c0fc04 	movi	r3,1008
   46458:	003f8c06 	br	4628c <_free_r+0x134>
   4645c:	3804d4ba 	srli	r2,r7,18
   46460:	10801f04 	addi	r2,r2,124
   46464:	100690fa 	slli	r3,r2,3
   46468:	003f8806 	br	4628c <_free_r+0x134>

0004646c <__sfvwrite_r>:
   4646c:	30800217 	ldw	r2,8(r6)
   46470:	defff504 	addi	sp,sp,-44
   46474:	df000915 	stw	fp,36(sp)
   46478:	dd800715 	stw	r22,28(sp)
   4647c:	dc800315 	stw	r18,12(sp)
   46480:	dfc00a15 	stw	ra,40(sp)
   46484:	ddc00815 	stw	r23,32(sp)
   46488:	dd400615 	stw	r21,24(sp)
   4648c:	dd000515 	stw	r20,20(sp)
   46490:	dcc00415 	stw	r19,16(sp)
   46494:	dc400215 	stw	r17,8(sp)
   46498:	dc000115 	stw	r16,4(sp)
   4649c:	302d883a 	mov	r22,r6
   464a0:	2039883a 	mov	fp,r4
   464a4:	2825883a 	mov	r18,r5
   464a8:	10001c26 	beq	r2,zero,4651c <__sfvwrite_r+0xb0>
   464ac:	29c0030b 	ldhu	r7,12(r5)
   464b0:	3880020c 	andi	r2,r7,8
   464b4:	10002726 	beq	r2,zero,46554 <__sfvwrite_r+0xe8>
   464b8:	28800417 	ldw	r2,16(r5)
   464bc:	10002526 	beq	r2,zero,46554 <__sfvwrite_r+0xe8>
   464c0:	3880008c 	andi	r2,r7,2
   464c4:	b5400017 	ldw	r21,0(r22)
   464c8:	10002826 	beq	r2,zero,4656c <__sfvwrite_r+0x100>
   464cc:	0021883a 	mov	r16,zero
   464d0:	0023883a 	mov	r17,zero
   464d4:	880d883a 	mov	r6,r17
   464d8:	e009883a 	mov	r4,fp
   464dc:	00810004 	movi	r2,1024
   464e0:	80006e26 	beq	r16,zero,4669c <__sfvwrite_r+0x230>
   464e4:	800f883a 	mov	r7,r16
   464e8:	91400717 	ldw	r5,28(r18)
   464ec:	1400012e 	bgeu	r2,r16,464f4 <__sfvwrite_r+0x88>
   464f0:	100f883a 	mov	r7,r2
   464f4:	90c00917 	ldw	r3,36(r18)
   464f8:	183ee83a 	callr	r3
   464fc:	1007883a 	mov	r3,r2
   46500:	80a1c83a 	sub	r16,r16,r2
   46504:	88a3883a 	add	r17,r17,r2
   46508:	00806d0e 	bge	zero,r2,466c0 <__sfvwrite_r+0x254>
   4650c:	b0800217 	ldw	r2,8(r22)
   46510:	10c5c83a 	sub	r2,r2,r3
   46514:	b0800215 	stw	r2,8(r22)
   46518:	103fee1e 	bne	r2,zero,464d4 <__sfvwrite_r+0x68>
   4651c:	0009883a 	mov	r4,zero
   46520:	2005883a 	mov	r2,r4
   46524:	dfc00a17 	ldw	ra,40(sp)
   46528:	df000917 	ldw	fp,36(sp)
   4652c:	ddc00817 	ldw	r23,32(sp)
   46530:	dd800717 	ldw	r22,28(sp)
   46534:	dd400617 	ldw	r21,24(sp)
   46538:	dd000517 	ldw	r20,20(sp)
   4653c:	dcc00417 	ldw	r19,16(sp)
   46540:	dc800317 	ldw	r18,12(sp)
   46544:	dc400217 	ldw	r17,8(sp)
   46548:	dc000117 	ldw	r16,4(sp)
   4654c:	dec00b04 	addi	sp,sp,44
   46550:	f800283a 	ret
   46554:	0043f880 	call	43f88 <__swsetup_r>
   46558:	1000e41e 	bne	r2,zero,468ec <__sfvwrite_r+0x480>
   4655c:	91c0030b 	ldhu	r7,12(r18)
   46560:	b5400017 	ldw	r21,0(r22)
   46564:	3880008c 	andi	r2,r7,2
   46568:	103fd81e 	bne	r2,zero,464cc <__sfvwrite_r+0x60>
   4656c:	3880004c 	andi	r2,r7,1
   46570:	1005003a 	cmpeq	r2,r2,zero
   46574:	10005726 	beq	r2,zero,466d4 <__sfvwrite_r+0x268>
   46578:	0029883a 	mov	r20,zero
   4657c:	002f883a 	mov	r23,zero
   46580:	a0004226 	beq	r20,zero,4668c <__sfvwrite_r+0x220>
   46584:	3880800c 	andi	r2,r7,512
   46588:	94000217 	ldw	r16,8(r18)
   4658c:	10008b26 	beq	r2,zero,467bc <__sfvwrite_r+0x350>
   46590:	800d883a 	mov	r6,r16
   46594:	a400a536 	bltu	r20,r16,4682c <__sfvwrite_r+0x3c0>
   46598:	3881200c 	andi	r2,r7,1152
   4659c:	10002726 	beq	r2,zero,4663c <__sfvwrite_r+0x1d0>
   465a0:	90800517 	ldw	r2,20(r18)
   465a4:	92000417 	ldw	r8,16(r18)
   465a8:	91400017 	ldw	r5,0(r18)
   465ac:	1087883a 	add	r3,r2,r2
   465b0:	1887883a 	add	r3,r3,r2
   465b4:	1808d7fa 	srli	r4,r3,31
   465b8:	2a21c83a 	sub	r16,r5,r8
   465bc:	80800044 	addi	r2,r16,1
   465c0:	20c9883a 	add	r4,r4,r3
   465c4:	2027d07a 	srai	r19,r4,1
   465c8:	a085883a 	add	r2,r20,r2
   465cc:	980d883a 	mov	r6,r19
   465d0:	9880022e 	bgeu	r19,r2,465dc <__sfvwrite_r+0x170>
   465d4:	1027883a 	mov	r19,r2
   465d8:	100d883a 	mov	r6,r2
   465dc:	3881000c 	andi	r2,r7,1024
   465e0:	1000b826 	beq	r2,zero,468c4 <__sfvwrite_r+0x458>
   465e4:	300b883a 	mov	r5,r6
   465e8:	e009883a 	mov	r4,fp
   465ec:	0046d0c0 	call	46d0c <_malloc_r>
   465f0:	10003126 	beq	r2,zero,466b8 <__sfvwrite_r+0x24c>
   465f4:	91400417 	ldw	r5,16(r18)
   465f8:	1009883a 	mov	r4,r2
   465fc:	800d883a 	mov	r6,r16
   46600:	1023883a 	mov	r17,r2
   46604:	00476300 	call	47630 <memcpy>
   46608:	90c0030b 	ldhu	r3,12(r18)
   4660c:	00beffc4 	movi	r2,-1025
   46610:	1886703a 	and	r3,r3,r2
   46614:	18c02014 	ori	r3,r3,128
   46618:	90c0030d 	sth	r3,12(r18)
   4661c:	9c07c83a 	sub	r3,r19,r16
   46620:	8c05883a 	add	r2,r17,r16
   46624:	a00d883a 	mov	r6,r20
   46628:	a021883a 	mov	r16,r20
   4662c:	90800015 	stw	r2,0(r18)
   46630:	90c00215 	stw	r3,8(r18)
   46634:	94400415 	stw	r17,16(r18)
   46638:	94c00515 	stw	r19,20(r18)
   4663c:	91000017 	ldw	r4,0(r18)
   46640:	b80b883a 	mov	r5,r23
   46644:	a023883a 	mov	r17,r20
   46648:	00476d00 	call	476d0 <memmove>
   4664c:	90c00217 	ldw	r3,8(r18)
   46650:	90800017 	ldw	r2,0(r18)
   46654:	a027883a 	mov	r19,r20
   46658:	1c07c83a 	sub	r3,r3,r16
   4665c:	1405883a 	add	r2,r2,r16
   46660:	90c00215 	stw	r3,8(r18)
   46664:	a021883a 	mov	r16,r20
   46668:	90800015 	stw	r2,0(r18)
   4666c:	b0800217 	ldw	r2,8(r22)
   46670:	1405c83a 	sub	r2,r2,r16
   46674:	b0800215 	stw	r2,8(r22)
   46678:	103fa826 	beq	r2,zero,4651c <__sfvwrite_r+0xb0>
   4667c:	a469c83a 	sub	r20,r20,r17
   46680:	91c0030b 	ldhu	r7,12(r18)
   46684:	bcef883a 	add	r23,r23,r19
   46688:	a03fbe1e 	bne	r20,zero,46584 <__sfvwrite_r+0x118>
   4668c:	adc00017 	ldw	r23,0(r21)
   46690:	ad000117 	ldw	r20,4(r21)
   46694:	ad400204 	addi	r21,r21,8
   46698:	003fb906 	br	46580 <__sfvwrite_r+0x114>
   4669c:	ac400017 	ldw	r17,0(r21)
   466a0:	ac000117 	ldw	r16,4(r21)
   466a4:	ad400204 	addi	r21,r21,8
   466a8:	003f8a06 	br	464d4 <__sfvwrite_r+0x68>
   466ac:	91400417 	ldw	r5,16(r18)
   466b0:	e009883a 	mov	r4,fp
   466b4:	00461580 	call	46158 <_free_r>
   466b8:	00800304 	movi	r2,12
   466bc:	e0800015 	stw	r2,0(fp)
   466c0:	9080030b 	ldhu	r2,12(r18)
   466c4:	013fffc4 	movi	r4,-1
   466c8:	10801014 	ori	r2,r2,64
   466cc:	9080030d 	sth	r2,12(r18)
   466d0:	003f9306 	br	46520 <__sfvwrite_r+0xb4>
   466d4:	0027883a 	mov	r19,zero
   466d8:	002f883a 	mov	r23,zero
   466dc:	d8000015 	stw	zero,0(sp)
   466e0:	0029883a 	mov	r20,zero
   466e4:	98001e26 	beq	r19,zero,46760 <__sfvwrite_r+0x2f4>
   466e8:	d8c00017 	ldw	r3,0(sp)
   466ec:	1804c03a 	cmpne	r2,r3,zero
   466f0:	10005e26 	beq	r2,zero,4686c <__sfvwrite_r+0x400>
   466f4:	9821883a 	mov	r16,r19
   466f8:	a4c0012e 	bgeu	r20,r19,46700 <__sfvwrite_r+0x294>
   466fc:	a021883a 	mov	r16,r20
   46700:	91000017 	ldw	r4,0(r18)
   46704:	90800417 	ldw	r2,16(r18)
   46708:	91800217 	ldw	r6,8(r18)
   4670c:	91c00517 	ldw	r7,20(r18)
   46710:	1100022e 	bgeu	r2,r4,4671c <__sfvwrite_r+0x2b0>
   46714:	31e3883a 	add	r17,r6,r7
   46718:	8c001616 	blt	r17,r16,46774 <__sfvwrite_r+0x308>
   4671c:	81c03816 	blt	r16,r7,46800 <__sfvwrite_r+0x394>
   46720:	90c00917 	ldw	r3,36(r18)
   46724:	91400717 	ldw	r5,28(r18)
   46728:	e009883a 	mov	r4,fp
   4672c:	b80d883a 	mov	r6,r23
   46730:	183ee83a 	callr	r3
   46734:	1023883a 	mov	r17,r2
   46738:	00bfe10e 	bge	zero,r2,466c0 <__sfvwrite_r+0x254>
   4673c:	a469c83a 	sub	r20,r20,r17
   46740:	a0001826 	beq	r20,zero,467a4 <__sfvwrite_r+0x338>
   46744:	b0800217 	ldw	r2,8(r22)
   46748:	1445c83a 	sub	r2,r2,r17
   4674c:	b0800215 	stw	r2,8(r22)
   46750:	103f7226 	beq	r2,zero,4651c <__sfvwrite_r+0xb0>
   46754:	9c67c83a 	sub	r19,r19,r17
   46758:	bc6f883a 	add	r23,r23,r17
   4675c:	983fe21e 	bne	r19,zero,466e8 <__sfvwrite_r+0x27c>
   46760:	adc00017 	ldw	r23,0(r21)
   46764:	acc00117 	ldw	r19,4(r21)
   46768:	ad400204 	addi	r21,r21,8
   4676c:	d8000015 	stw	zero,0(sp)
   46770:	003fdc06 	br	466e4 <__sfvwrite_r+0x278>
   46774:	b80b883a 	mov	r5,r23
   46778:	880d883a 	mov	r6,r17
   4677c:	00476d00 	call	476d0 <memmove>
   46780:	90c00017 	ldw	r3,0(r18)
   46784:	e009883a 	mov	r4,fp
   46788:	900b883a 	mov	r5,r18
   4678c:	1c47883a 	add	r3,r3,r17
   46790:	90c00015 	stw	r3,0(r18)
   46794:	00458bc0 	call	458bc <_fflush_r>
   46798:	103fc91e 	bne	r2,zero,466c0 <__sfvwrite_r+0x254>
   4679c:	a469c83a 	sub	r20,r20,r17
   467a0:	a03fe81e 	bne	r20,zero,46744 <__sfvwrite_r+0x2d8>
   467a4:	e009883a 	mov	r4,fp
   467a8:	900b883a 	mov	r5,r18
   467ac:	00458bc0 	call	458bc <_fflush_r>
   467b0:	103fc31e 	bne	r2,zero,466c0 <__sfvwrite_r+0x254>
   467b4:	d8000015 	stw	zero,0(sp)
   467b8:	003fe206 	br	46744 <__sfvwrite_r+0x2d8>
   467bc:	91000017 	ldw	r4,0(r18)
   467c0:	90800417 	ldw	r2,16(r18)
   467c4:	1100022e 	bgeu	r2,r4,467d0 <__sfvwrite_r+0x364>
   467c8:	8023883a 	mov	r17,r16
   467cc:	85003136 	bltu	r16,r20,46894 <__sfvwrite_r+0x428>
   467d0:	91c00517 	ldw	r7,20(r18)
   467d4:	a1c01836 	bltu	r20,r7,46838 <__sfvwrite_r+0x3cc>
   467d8:	90c00917 	ldw	r3,36(r18)
   467dc:	91400717 	ldw	r5,28(r18)
   467e0:	e009883a 	mov	r4,fp
   467e4:	b80d883a 	mov	r6,r23
   467e8:	183ee83a 	callr	r3
   467ec:	1021883a 	mov	r16,r2
   467f0:	00bfb30e 	bge	zero,r2,466c0 <__sfvwrite_r+0x254>
   467f4:	1023883a 	mov	r17,r2
   467f8:	1027883a 	mov	r19,r2
   467fc:	003f9b06 	br	4666c <__sfvwrite_r+0x200>
   46800:	b80b883a 	mov	r5,r23
   46804:	800d883a 	mov	r6,r16
   46808:	00476d00 	call	476d0 <memmove>
   4680c:	90c00217 	ldw	r3,8(r18)
   46810:	90800017 	ldw	r2,0(r18)
   46814:	8023883a 	mov	r17,r16
   46818:	1c07c83a 	sub	r3,r3,r16
   4681c:	1405883a 	add	r2,r2,r16
   46820:	90c00215 	stw	r3,8(r18)
   46824:	90800015 	stw	r2,0(r18)
   46828:	003fc406 	br	4673c <__sfvwrite_r+0x2d0>
   4682c:	a00d883a 	mov	r6,r20
   46830:	a021883a 	mov	r16,r20
   46834:	003f8106 	br	4663c <__sfvwrite_r+0x1d0>
   46838:	b80b883a 	mov	r5,r23
   4683c:	a00d883a 	mov	r6,r20
   46840:	00476d00 	call	476d0 <memmove>
   46844:	90c00217 	ldw	r3,8(r18)
   46848:	90800017 	ldw	r2,0(r18)
   4684c:	a021883a 	mov	r16,r20
   46850:	1d07c83a 	sub	r3,r3,r20
   46854:	1505883a 	add	r2,r2,r20
   46858:	a023883a 	mov	r17,r20
   4685c:	a027883a 	mov	r19,r20
   46860:	90c00215 	stw	r3,8(r18)
   46864:	90800015 	stw	r2,0(r18)
   46868:	003f8006 	br	4666c <__sfvwrite_r+0x200>
   4686c:	b809883a 	mov	r4,r23
   46870:	01400284 	movi	r5,10
   46874:	980d883a 	mov	r6,r19
   46878:	004754c0 	call	4754c <memchr>
   4687c:	10001726 	beq	r2,zero,468dc <__sfvwrite_r+0x470>
   46880:	15c5c83a 	sub	r2,r2,r23
   46884:	15000044 	addi	r20,r2,1
   46888:	00800044 	movi	r2,1
   4688c:	d8800015 	stw	r2,0(sp)
   46890:	003f9806 	br	466f4 <__sfvwrite_r+0x288>
   46894:	b80b883a 	mov	r5,r23
   46898:	800d883a 	mov	r6,r16
   4689c:	00476d00 	call	476d0 <memmove>
   468a0:	90c00017 	ldw	r3,0(r18)
   468a4:	e009883a 	mov	r4,fp
   468a8:	900b883a 	mov	r5,r18
   468ac:	1c07883a 	add	r3,r3,r16
   468b0:	90c00015 	stw	r3,0(r18)
   468b4:	8027883a 	mov	r19,r16
   468b8:	00458bc0 	call	458bc <_fflush_r>
   468bc:	103f6b26 	beq	r2,zero,4666c <__sfvwrite_r+0x200>
   468c0:	003f7f06 	br	466c0 <__sfvwrite_r+0x254>
   468c4:	400b883a 	mov	r5,r8
   468c8:	e009883a 	mov	r4,fp
   468cc:	0048ac00 	call	48ac0 <_realloc_r>
   468d0:	103f7626 	beq	r2,zero,466ac <__sfvwrite_r+0x240>
   468d4:	1023883a 	mov	r17,r2
   468d8:	003f5006 	br	4661c <__sfvwrite_r+0x1b0>
   468dc:	00c00044 	movi	r3,1
   468e0:	9d000044 	addi	r20,r19,1
   468e4:	d8c00015 	stw	r3,0(sp)
   468e8:	003f8206 	br	466f4 <__sfvwrite_r+0x288>
   468ec:	9080030b 	ldhu	r2,12(r18)
   468f0:	00c00244 	movi	r3,9
   468f4:	013fffc4 	movi	r4,-1
   468f8:	10801014 	ori	r2,r2,64
   468fc:	9080030d 	sth	r2,12(r18)
   46900:	e0c00015 	stw	r3,0(fp)
   46904:	003f0606 	br	46520 <__sfvwrite_r+0xb4>

00046908 <_fwalk_reent>:
   46908:	defff704 	addi	sp,sp,-36
   4690c:	dcc00315 	stw	r19,12(sp)
   46910:	24c0b804 	addi	r19,r4,736
   46914:	dd800615 	stw	r22,24(sp)
   46918:	dd400515 	stw	r21,20(sp)
   4691c:	dfc00815 	stw	ra,32(sp)
   46920:	ddc00715 	stw	r23,28(sp)
   46924:	dd000415 	stw	r20,16(sp)
   46928:	dc800215 	stw	r18,8(sp)
   4692c:	dc400115 	stw	r17,4(sp)
   46930:	dc000015 	stw	r16,0(sp)
   46934:	202b883a 	mov	r21,r4
   46938:	282d883a 	mov	r22,r5
   4693c:	0045b440 	call	45b44 <__sfp_lock_acquire>
   46940:	98002126 	beq	r19,zero,469c8 <_fwalk_reent+0xc0>
   46944:	002f883a 	mov	r23,zero
   46948:	9c800117 	ldw	r18,4(r19)
   4694c:	9c000217 	ldw	r16,8(r19)
   46950:	90bfffc4 	addi	r2,r18,-1
   46954:	10000d16 	blt	r2,zero,4698c <_fwalk_reent+0x84>
   46958:	0023883a 	mov	r17,zero
   4695c:	053fffc4 	movi	r20,-1
   46960:	8080030f 	ldh	r2,12(r16)
   46964:	8c400044 	addi	r17,r17,1
   46968:	10000626 	beq	r2,zero,46984 <_fwalk_reent+0x7c>
   4696c:	8080038f 	ldh	r2,14(r16)
   46970:	800b883a 	mov	r5,r16
   46974:	a809883a 	mov	r4,r21
   46978:	15000226 	beq	r2,r20,46984 <_fwalk_reent+0x7c>
   4697c:	b03ee83a 	callr	r22
   46980:	b8aeb03a 	or	r23,r23,r2
   46984:	84001704 	addi	r16,r16,92
   46988:	947ff51e 	bne	r18,r17,46960 <_fwalk_reent+0x58>
   4698c:	9cc00017 	ldw	r19,0(r19)
   46990:	983fed1e 	bne	r19,zero,46948 <_fwalk_reent+0x40>
   46994:	0045b480 	call	45b48 <__sfp_lock_release>
   46998:	b805883a 	mov	r2,r23
   4699c:	dfc00817 	ldw	ra,32(sp)
   469a0:	ddc00717 	ldw	r23,28(sp)
   469a4:	dd800617 	ldw	r22,24(sp)
   469a8:	dd400517 	ldw	r21,20(sp)
   469ac:	dd000417 	ldw	r20,16(sp)
   469b0:	dcc00317 	ldw	r19,12(sp)
   469b4:	dc800217 	ldw	r18,8(sp)
   469b8:	dc400117 	ldw	r17,4(sp)
   469bc:	dc000017 	ldw	r16,0(sp)
   469c0:	dec00904 	addi	sp,sp,36
   469c4:	f800283a 	ret
   469c8:	002f883a 	mov	r23,zero
   469cc:	003ff106 	br	46994 <_fwalk_reent+0x8c>

000469d0 <_fwalk>:
   469d0:	defff804 	addi	sp,sp,-32
   469d4:	dcc00315 	stw	r19,12(sp)
   469d8:	24c0b804 	addi	r19,r4,736
   469dc:	dd400515 	stw	r21,20(sp)
   469e0:	dfc00715 	stw	ra,28(sp)
   469e4:	dd800615 	stw	r22,24(sp)
   469e8:	dd000415 	stw	r20,16(sp)
   469ec:	dc800215 	stw	r18,8(sp)
   469f0:	dc400115 	stw	r17,4(sp)
   469f4:	dc000015 	stw	r16,0(sp)
   469f8:	282b883a 	mov	r21,r5
   469fc:	0045b440 	call	45b44 <__sfp_lock_acquire>
   46a00:	98001f26 	beq	r19,zero,46a80 <_fwalk+0xb0>
   46a04:	002d883a 	mov	r22,zero
   46a08:	9c800117 	ldw	r18,4(r19)
   46a0c:	9c000217 	ldw	r16,8(r19)
   46a10:	90bfffc4 	addi	r2,r18,-1
   46a14:	10000c16 	blt	r2,zero,46a48 <_fwalk+0x78>
   46a18:	0023883a 	mov	r17,zero
   46a1c:	053fffc4 	movi	r20,-1
   46a20:	8080030f 	ldh	r2,12(r16)
   46a24:	8c400044 	addi	r17,r17,1
   46a28:	10000526 	beq	r2,zero,46a40 <_fwalk+0x70>
   46a2c:	8080038f 	ldh	r2,14(r16)
   46a30:	8009883a 	mov	r4,r16
   46a34:	15000226 	beq	r2,r20,46a40 <_fwalk+0x70>
   46a38:	a83ee83a 	callr	r21
   46a3c:	b0acb03a 	or	r22,r22,r2
   46a40:	84001704 	addi	r16,r16,92
   46a44:	947ff61e 	bne	r18,r17,46a20 <_fwalk+0x50>
   46a48:	9cc00017 	ldw	r19,0(r19)
   46a4c:	983fee1e 	bne	r19,zero,46a08 <_fwalk+0x38>
   46a50:	0045b480 	call	45b48 <__sfp_lock_release>
   46a54:	b005883a 	mov	r2,r22
   46a58:	dfc00717 	ldw	ra,28(sp)
   46a5c:	dd800617 	ldw	r22,24(sp)
   46a60:	dd400517 	ldw	r21,20(sp)
   46a64:	dd000417 	ldw	r20,16(sp)
   46a68:	dcc00317 	ldw	r19,12(sp)
   46a6c:	dc800217 	ldw	r18,8(sp)
   46a70:	dc400117 	ldw	r17,4(sp)
   46a74:	dc000017 	ldw	r16,0(sp)
   46a78:	dec00804 	addi	sp,sp,32
   46a7c:	f800283a 	ret
   46a80:	002d883a 	mov	r22,zero
   46a84:	003ff206 	br	46a50 <_fwalk+0x80>

00046a88 <iswspace>:
   46a88:	00803fc4 	movi	r2,255
   46a8c:	0007883a 	mov	r3,zero
   46a90:	11000636 	bltu	r2,r4,46aac <iswspace+0x24>
   46a94:	00800174 	movhi	r2,5
   46a98:	1091d804 	addi	r2,r2,18272
   46a9c:	10c00017 	ldw	r3,0(r2)
   46aa0:	1907883a 	add	r3,r3,r4
   46aa4:	18800003 	ldbu	r2,0(r3)
   46aa8:	10c0020c 	andi	r3,r2,8
   46aac:	1805883a 	mov	r2,r3
   46ab0:	f800283a 	ret

00046ab4 <__locale_charset>:
   46ab4:	d0a00417 	ldw	r2,-32752(gp)
   46ab8:	f800283a 	ret

00046abc <_localeconv_r>:
   46abc:	00800174 	movhi	r2,5
   46ac0:	108a8904 	addi	r2,r2,10788
   46ac4:	f800283a 	ret

00046ac8 <localeconv>:
   46ac8:	00800174 	movhi	r2,5
   46acc:	1091d604 	addi	r2,r2,18264
   46ad0:	11000017 	ldw	r4,0(r2)
   46ad4:	0046abc1 	jmpi	46abc <_localeconv_r>

00046ad8 <_setlocale_r>:
   46ad8:	defffc04 	addi	sp,sp,-16
   46adc:	00c00174 	movhi	r3,5
   46ae0:	18c9b404 	addi	r3,r3,9936
   46ae4:	dc800215 	stw	r18,8(sp)
   46ae8:	dc400115 	stw	r17,4(sp)
   46aec:	dc000015 	stw	r16,0(sp)
   46af0:	2023883a 	mov	r17,r4
   46af4:	2825883a 	mov	r18,r5
   46af8:	dfc00315 	stw	ra,12(sp)
   46afc:	3021883a 	mov	r16,r6
   46b00:	3009883a 	mov	r4,r6
   46b04:	180b883a 	mov	r5,r3
   46b08:	30000926 	beq	r6,zero,46b30 <_setlocale_r+0x58>
   46b0c:	004965c0 	call	4965c <strcmp>
   46b10:	8009883a 	mov	r4,r16
   46b14:	01400174 	movhi	r5,5
   46b18:	2949c504 	addi	r5,r5,10004
   46b1c:	10000b1e 	bne	r2,zero,46b4c <_setlocale_r+0x74>
   46b20:	8c000d15 	stw	r16,52(r17)
   46b24:	8c800c15 	stw	r18,48(r17)
   46b28:	00c00174 	movhi	r3,5
   46b2c:	18c9b404 	addi	r3,r3,9936
   46b30:	1805883a 	mov	r2,r3
   46b34:	dfc00317 	ldw	ra,12(sp)
   46b38:	dc800217 	ldw	r18,8(sp)
   46b3c:	dc400117 	ldw	r17,4(sp)
   46b40:	dc000017 	ldw	r16,0(sp)
   46b44:	dec00404 	addi	sp,sp,16
   46b48:	f800283a 	ret
   46b4c:	004965c0 	call	4965c <strcmp>
   46b50:	0007883a 	mov	r3,zero
   46b54:	103ff226 	beq	r2,zero,46b20 <_setlocale_r+0x48>
   46b58:	003ff506 	br	46b30 <_setlocale_r+0x58>

00046b5c <setlocale>:
   46b5c:	01800174 	movhi	r6,5
   46b60:	3191d604 	addi	r6,r6,18264
   46b64:	2007883a 	mov	r3,r4
   46b68:	31000017 	ldw	r4,0(r6)
   46b6c:	280d883a 	mov	r6,r5
   46b70:	180b883a 	mov	r5,r3
   46b74:	0046ad81 	jmpi	46ad8 <_setlocale_r>

00046b78 <__smakebuf_r>:
   46b78:	2880030b 	ldhu	r2,12(r5)
   46b7c:	deffed04 	addi	sp,sp,-76
   46b80:	dc401015 	stw	r17,64(sp)
   46b84:	1080008c 	andi	r2,r2,2
   46b88:	dc000f15 	stw	r16,60(sp)
   46b8c:	dfc01215 	stw	ra,72(sp)
   46b90:	dc801115 	stw	r18,68(sp)
   46b94:	2821883a 	mov	r16,r5
   46b98:	2023883a 	mov	r17,r4
   46b9c:	10000b26 	beq	r2,zero,46bcc <__smakebuf_r+0x54>
   46ba0:	28c010c4 	addi	r3,r5,67
   46ba4:	00800044 	movi	r2,1
   46ba8:	28800515 	stw	r2,20(r5)
   46bac:	28c00415 	stw	r3,16(r5)
   46bb0:	28c00015 	stw	r3,0(r5)
   46bb4:	dfc01217 	ldw	ra,72(sp)
   46bb8:	dc801117 	ldw	r18,68(sp)
   46bbc:	dc401017 	ldw	r17,64(sp)
   46bc0:	dc000f17 	ldw	r16,60(sp)
   46bc4:	dec01304 	addi	sp,sp,76
   46bc8:	f800283a 	ret
   46bcc:	2940038f 	ldh	r5,14(r5)
   46bd0:	28002116 	blt	r5,zero,46c58 <__smakebuf_r+0xe0>
   46bd4:	d80d883a 	mov	r6,sp
   46bd8:	004c0000 	call	4c000 <_fstat_r>
   46bdc:	10001e16 	blt	r2,zero,46c58 <__smakebuf_r+0xe0>
   46be0:	d8800117 	ldw	r2,4(sp)
   46be4:	00e00014 	movui	r3,32768
   46be8:	113c000c 	andi	r4,r2,61440
   46bec:	20c03126 	beq	r4,r3,46cb4 <__smakebuf_r+0x13c>
   46bf0:	8080030b 	ldhu	r2,12(r16)
   46bf4:	00c80004 	movi	r3,8192
   46bf8:	10820014 	ori	r2,r2,2048
   46bfc:	8080030d 	sth	r2,12(r16)
   46c00:	20c01e26 	beq	r4,r3,46c7c <__smakebuf_r+0x104>
   46c04:	04810004 	movi	r18,1024
   46c08:	8809883a 	mov	r4,r17
   46c0c:	900b883a 	mov	r5,r18
   46c10:	0046d0c0 	call	46d0c <_malloc_r>
   46c14:	1009883a 	mov	r4,r2
   46c18:	10003126 	beq	r2,zero,46ce0 <__smakebuf_r+0x168>
   46c1c:	80c0030b 	ldhu	r3,12(r16)
   46c20:	00800134 	movhi	r2,4
   46c24:	10970e04 	addi	r2,r2,23608
   46c28:	88800f15 	stw	r2,60(r17)
   46c2c:	18c02014 	ori	r3,r3,128
   46c30:	84800515 	stw	r18,20(r16)
   46c34:	80c0030d 	sth	r3,12(r16)
   46c38:	81000415 	stw	r4,16(r16)
   46c3c:	81000015 	stw	r4,0(r16)
   46c40:	dfc01217 	ldw	ra,72(sp)
   46c44:	dc801117 	ldw	r18,68(sp)
   46c48:	dc401017 	ldw	r17,64(sp)
   46c4c:	dc000f17 	ldw	r16,60(sp)
   46c50:	dec01304 	addi	sp,sp,76
   46c54:	f800283a 	ret
   46c58:	80c0030b 	ldhu	r3,12(r16)
   46c5c:	1880200c 	andi	r2,r3,128
   46c60:	10000426 	beq	r2,zero,46c74 <__smakebuf_r+0xfc>
   46c64:	04801004 	movi	r18,64
   46c68:	18820014 	ori	r2,r3,2048
   46c6c:	8080030d 	sth	r2,12(r16)
   46c70:	003fe506 	br	46c08 <__smakebuf_r+0x90>
   46c74:	04810004 	movi	r18,1024
   46c78:	003ffb06 	br	46c68 <__smakebuf_r+0xf0>
   46c7c:	8140038f 	ldh	r5,14(r16)
   46c80:	8809883a 	mov	r4,r17
   46c84:	004cc400 	call	4cc40 <_isatty_r>
   46c88:	103fde26 	beq	r2,zero,46c04 <__smakebuf_r+0x8c>
   46c8c:	8080030b 	ldhu	r2,12(r16)
   46c90:	80c010c4 	addi	r3,r16,67
   46c94:	04810004 	movi	r18,1024
   46c98:	10800054 	ori	r2,r2,1
   46c9c:	8080030d 	sth	r2,12(r16)
   46ca0:	00800044 	movi	r2,1
   46ca4:	80c00415 	stw	r3,16(r16)
   46ca8:	80800515 	stw	r2,20(r16)
   46cac:	80c00015 	stw	r3,0(r16)
   46cb0:	003fd506 	br	46c08 <__smakebuf_r+0x90>
   46cb4:	80c00a17 	ldw	r3,40(r16)
   46cb8:	00800174 	movhi	r2,5
   46cbc:	10a54604 	addi	r2,r2,-27368
   46cc0:	18bfcb1e 	bne	r3,r2,46bf0 <__smakebuf_r+0x78>
   46cc4:	8080030b 	ldhu	r2,12(r16)
   46cc8:	00c10004 	movi	r3,1024
   46ccc:	1825883a 	mov	r18,r3
   46cd0:	10c4b03a 	or	r2,r2,r3
   46cd4:	8080030d 	sth	r2,12(r16)
   46cd8:	80c01315 	stw	r3,76(r16)
   46cdc:	003fca06 	br	46c08 <__smakebuf_r+0x90>
   46ce0:	8100030b 	ldhu	r4,12(r16)
   46ce4:	2080800c 	andi	r2,r4,512
   46ce8:	103fb21e 	bne	r2,zero,46bb4 <__smakebuf_r+0x3c>
   46cec:	80c010c4 	addi	r3,r16,67
   46cf0:	21000094 	ori	r4,r4,2
   46cf4:	00800044 	movi	r2,1
   46cf8:	80800515 	stw	r2,20(r16)
   46cfc:	8100030d 	sth	r4,12(r16)
   46d00:	80c00415 	stw	r3,16(r16)
   46d04:	80c00015 	stw	r3,0(r16)
   46d08:	003faa06 	br	46bb4 <__smakebuf_r+0x3c>

00046d0c <_malloc_r>:
   46d0c:	defff604 	addi	sp,sp,-40
   46d10:	28c002c4 	addi	r3,r5,11
   46d14:	00800584 	movi	r2,22
   46d18:	dc800215 	stw	r18,8(sp)
   46d1c:	dfc00915 	stw	ra,36(sp)
   46d20:	df000815 	stw	fp,32(sp)
   46d24:	ddc00715 	stw	r23,28(sp)
   46d28:	dd800615 	stw	r22,24(sp)
   46d2c:	dd400515 	stw	r21,20(sp)
   46d30:	dd000415 	stw	r20,16(sp)
   46d34:	dcc00315 	stw	r19,12(sp)
   46d38:	dc400115 	stw	r17,4(sp)
   46d3c:	dc000015 	stw	r16,0(sp)
   46d40:	2025883a 	mov	r18,r4
   46d44:	10c01236 	bltu	r2,r3,46d90 <_malloc_r+0x84>
   46d48:	04400404 	movi	r17,16
   46d4c:	8940142e 	bgeu	r17,r5,46da0 <_malloc_r+0x94>
   46d50:	00800304 	movi	r2,12
   46d54:	0007883a 	mov	r3,zero
   46d58:	90800015 	stw	r2,0(r18)
   46d5c:	1805883a 	mov	r2,r3
   46d60:	dfc00917 	ldw	ra,36(sp)
   46d64:	df000817 	ldw	fp,32(sp)
   46d68:	ddc00717 	ldw	r23,28(sp)
   46d6c:	dd800617 	ldw	r22,24(sp)
   46d70:	dd400517 	ldw	r21,20(sp)
   46d74:	dd000417 	ldw	r20,16(sp)
   46d78:	dcc00317 	ldw	r19,12(sp)
   46d7c:	dc800217 	ldw	r18,8(sp)
   46d80:	dc400117 	ldw	r17,4(sp)
   46d84:	dc000017 	ldw	r16,0(sp)
   46d88:	dec00a04 	addi	sp,sp,40
   46d8c:	f800283a 	ret
   46d90:	00bffe04 	movi	r2,-8
   46d94:	18a2703a 	and	r17,r3,r2
   46d98:	883fed16 	blt	r17,zero,46d50 <_malloc_r+0x44>
   46d9c:	897fec36 	bltu	r17,r5,46d50 <_malloc_r+0x44>
   46da0:	9009883a 	mov	r4,r18
   46da4:	005006c0 	call	5006c <__malloc_lock>
   46da8:	00807dc4 	movi	r2,503
   46dac:	14402b2e 	bgeu	r2,r17,46e5c <_malloc_r+0x150>
   46db0:	8806d27a 	srli	r3,r17,9
   46db4:	18003f1e 	bne	r3,zero,46eb4 <_malloc_r+0x1a8>
   46db8:	880cd0fa 	srli	r6,r17,3
   46dbc:	300490fa 	slli	r2,r6,3
   46dc0:	02c00174 	movhi	r11,5
   46dc4:	5acc4804 	addi	r11,r11,12576
   46dc8:	12cb883a 	add	r5,r2,r11
   46dcc:	2c000317 	ldw	r16,12(r5)
   46dd0:	580f883a 	mov	r7,r11
   46dd4:	2c00041e 	bne	r5,r16,46de8 <_malloc_r+0xdc>
   46dd8:	00000a06 	br	46e04 <_malloc_r+0xf8>
   46ddc:	1800860e 	bge	r3,zero,46ff8 <_malloc_r+0x2ec>
   46de0:	84000317 	ldw	r16,12(r16)
   46de4:	2c000726 	beq	r5,r16,46e04 <_malloc_r+0xf8>
   46de8:	80800117 	ldw	r2,4(r16)
   46dec:	00ffff04 	movi	r3,-4
   46df0:	10c8703a 	and	r4,r2,r3
   46df4:	2447c83a 	sub	r3,r4,r17
   46df8:	008003c4 	movi	r2,15
   46dfc:	10fff70e 	bge	r2,r3,46ddc <_malloc_r+0xd0>
   46e00:	31bfffc4 	addi	r6,r6,-1
   46e04:	32400044 	addi	r9,r6,1
   46e08:	02800174 	movhi	r10,5
   46e0c:	528c4a04 	addi	r10,r10,12584
   46e10:	54000217 	ldw	r16,8(r10)
   46e14:	8280a026 	beq	r16,r10,47098 <_malloc_r+0x38c>
   46e18:	80800117 	ldw	r2,4(r16)
   46e1c:	00ffff04 	movi	r3,-4
   46e20:	10ca703a 	and	r5,r2,r3
   46e24:	2c4dc83a 	sub	r6,r5,r17
   46e28:	008003c4 	movi	r2,15
   46e2c:	11808316 	blt	r2,r6,4703c <_malloc_r+0x330>
   46e30:	52800315 	stw	r10,12(r10)
   46e34:	52800215 	stw	r10,8(r10)
   46e38:	30002916 	blt	r6,zero,46ee0 <_malloc_r+0x1d4>
   46e3c:	8147883a 	add	r3,r16,r5
   46e40:	18800117 	ldw	r2,4(r3)
   46e44:	9009883a 	mov	r4,r18
   46e48:	10800054 	ori	r2,r2,1
   46e4c:	18800115 	stw	r2,4(r3)
   46e50:	005008c0 	call	5008c <__malloc_unlock>
   46e54:	80c00204 	addi	r3,r16,8
   46e58:	003fc006 	br	46d5c <_malloc_r+0x50>
   46e5c:	02c00174 	movhi	r11,5
   46e60:	5acc4804 	addi	r11,r11,12576
   46e64:	8ac5883a 	add	r2,r17,r11
   46e68:	14000317 	ldw	r16,12(r2)
   46e6c:	580f883a 	mov	r7,r11
   46e70:	8806d0fa 	srli	r3,r17,3
   46e74:	14006c26 	beq	r2,r16,47028 <_malloc_r+0x31c>
   46e78:	80c00117 	ldw	r3,4(r16)
   46e7c:	00bfff04 	movi	r2,-4
   46e80:	81800317 	ldw	r6,12(r16)
   46e84:	1886703a 	and	r3,r3,r2
   46e88:	80c7883a 	add	r3,r16,r3
   46e8c:	18800117 	ldw	r2,4(r3)
   46e90:	81400217 	ldw	r5,8(r16)
   46e94:	9009883a 	mov	r4,r18
   46e98:	10800054 	ori	r2,r2,1
   46e9c:	18800115 	stw	r2,4(r3)
   46ea0:	31400215 	stw	r5,8(r6)
   46ea4:	29800315 	stw	r6,12(r5)
   46ea8:	005008c0 	call	5008c <__malloc_unlock>
   46eac:	80c00204 	addi	r3,r16,8
   46eb0:	003faa06 	br	46d5c <_malloc_r+0x50>
   46eb4:	00800104 	movi	r2,4
   46eb8:	10c0052e 	bgeu	r2,r3,46ed0 <_malloc_r+0x1c4>
   46ebc:	00800504 	movi	r2,20
   46ec0:	10c07836 	bltu	r2,r3,470a4 <_malloc_r+0x398>
   46ec4:	198016c4 	addi	r6,r3,91
   46ec8:	300490fa 	slli	r2,r6,3
   46ecc:	003fbc06 	br	46dc0 <_malloc_r+0xb4>
   46ed0:	8804d1ba 	srli	r2,r17,6
   46ed4:	11800e04 	addi	r6,r2,56
   46ed8:	300490fa 	slli	r2,r6,3
   46edc:	003fb806 	br	46dc0 <_malloc_r+0xb4>
   46ee0:	00807fc4 	movi	r2,511
   46ee4:	1140bb36 	bltu	r2,r5,471d4 <_malloc_r+0x4c8>
   46ee8:	2806d0fa 	srli	r3,r5,3
   46eec:	573ffe04 	addi	fp,r10,-8
   46ef0:	00800044 	movi	r2,1
   46ef4:	180890fa 	slli	r4,r3,3
   46ef8:	1807d0ba 	srai	r3,r3,2
   46efc:	e1c00117 	ldw	r7,4(fp)
   46f00:	5909883a 	add	r4,r11,r4
   46f04:	21400217 	ldw	r5,8(r4)
   46f08:	10c4983a 	sll	r2,r2,r3
   46f0c:	81000315 	stw	r4,12(r16)
   46f10:	81400215 	stw	r5,8(r16)
   46f14:	388eb03a 	or	r7,r7,r2
   46f18:	2c000315 	stw	r16,12(r5)
   46f1c:	24000215 	stw	r16,8(r4)
   46f20:	e1c00115 	stw	r7,4(fp)
   46f24:	4807883a 	mov	r3,r9
   46f28:	4800cd16 	blt	r9,zero,47260 <_malloc_r+0x554>
   46f2c:	1807d0ba 	srai	r3,r3,2
   46f30:	00800044 	movi	r2,1
   46f34:	10c8983a 	sll	r4,r2,r3
   46f38:	39004436 	bltu	r7,r4,4704c <_malloc_r+0x340>
   46f3c:	21c4703a 	and	r2,r4,r7
   46f40:	10000a1e 	bne	r2,zero,46f6c <_malloc_r+0x260>
   46f44:	2109883a 	add	r4,r4,r4
   46f48:	00bfff04 	movi	r2,-4
   46f4c:	4884703a 	and	r2,r9,r2
   46f50:	3906703a 	and	r3,r7,r4
   46f54:	12400104 	addi	r9,r2,4
   46f58:	1800041e 	bne	r3,zero,46f6c <_malloc_r+0x260>
   46f5c:	2109883a 	add	r4,r4,r4
   46f60:	3904703a 	and	r2,r7,r4
   46f64:	4a400104 	addi	r9,r9,4
   46f68:	103ffc26 	beq	r2,zero,46f5c <_malloc_r+0x250>
   46f6c:	480490fa 	slli	r2,r9,3
   46f70:	4819883a 	mov	r12,r9
   46f74:	023fff04 	movi	r8,-4
   46f78:	589b883a 	add	r13,r11,r2
   46f7c:	6807883a 	mov	r3,r13
   46f80:	014003c4 	movi	r5,15
   46f84:	1c000317 	ldw	r16,12(r3)
   46f88:	1c00041e 	bne	r3,r16,46f9c <_malloc_r+0x290>
   46f8c:	0000a706 	br	4722c <_malloc_r+0x520>
   46f90:	3000ab0e 	bge	r6,zero,47240 <_malloc_r+0x534>
   46f94:	84000317 	ldw	r16,12(r16)
   46f98:	1c00a426 	beq	r3,r16,4722c <_malloc_r+0x520>
   46f9c:	80800117 	ldw	r2,4(r16)
   46fa0:	1204703a 	and	r2,r2,r8
   46fa4:	144dc83a 	sub	r6,r2,r17
   46fa8:	29bff90e 	bge	r5,r6,46f90 <_malloc_r+0x284>
   46fac:	81000317 	ldw	r4,12(r16)
   46fb0:	80c00217 	ldw	r3,8(r16)
   46fb4:	89400054 	ori	r5,r17,1
   46fb8:	8445883a 	add	r2,r16,r17
   46fbc:	20c00215 	stw	r3,8(r4)
   46fc0:	19000315 	stw	r4,12(r3)
   46fc4:	81400115 	stw	r5,4(r16)
   46fc8:	1187883a 	add	r3,r2,r6
   46fcc:	31000054 	ori	r4,r6,1
   46fd0:	50800315 	stw	r2,12(r10)
   46fd4:	50800215 	stw	r2,8(r10)
   46fd8:	19800015 	stw	r6,0(r3)
   46fdc:	11000115 	stw	r4,4(r2)
   46fe0:	12800215 	stw	r10,8(r2)
   46fe4:	12800315 	stw	r10,12(r2)
   46fe8:	9009883a 	mov	r4,r18
   46fec:	005008c0 	call	5008c <__malloc_unlock>
   46ff0:	80c00204 	addi	r3,r16,8
   46ff4:	003f5906 	br	46d5c <_malloc_r+0x50>
   46ff8:	8109883a 	add	r4,r16,r4
   46ffc:	20800117 	ldw	r2,4(r4)
   47000:	80c00217 	ldw	r3,8(r16)
   47004:	81400317 	ldw	r5,12(r16)
   47008:	10800054 	ori	r2,r2,1
   4700c:	20800115 	stw	r2,4(r4)
   47010:	28c00215 	stw	r3,8(r5)
   47014:	19400315 	stw	r5,12(r3)
   47018:	9009883a 	mov	r4,r18
   4701c:	005008c0 	call	5008c <__malloc_unlock>
   47020:	80c00204 	addi	r3,r16,8
   47024:	003f4d06 	br	46d5c <_malloc_r+0x50>
   47028:	80800204 	addi	r2,r16,8
   4702c:	14000317 	ldw	r16,12(r2)
   47030:	143f911e 	bne	r2,r16,46e78 <_malloc_r+0x16c>
   47034:	1a400084 	addi	r9,r3,2
   47038:	003f7306 	br	46e08 <_malloc_r+0xfc>
   4703c:	88c00054 	ori	r3,r17,1
   47040:	8445883a 	add	r2,r16,r17
   47044:	80c00115 	stw	r3,4(r16)
   47048:	003fdf06 	br	46fc8 <_malloc_r+0x2bc>
   4704c:	e4000217 	ldw	r16,8(fp)
   47050:	00bfff04 	movi	r2,-4
   47054:	80c00117 	ldw	r3,4(r16)
   47058:	802d883a 	mov	r22,r16
   4705c:	18aa703a 	and	r21,r3,r2
   47060:	ac401636 	bltu	r21,r17,470bc <_malloc_r+0x3b0>
   47064:	ac49c83a 	sub	r4,r21,r17
   47068:	008003c4 	movi	r2,15
   4706c:	1100130e 	bge	r2,r4,470bc <_malloc_r+0x3b0>
   47070:	88800054 	ori	r2,r17,1
   47074:	8447883a 	add	r3,r16,r17
   47078:	80800115 	stw	r2,4(r16)
   4707c:	20800054 	ori	r2,r4,1
   47080:	18800115 	stw	r2,4(r3)
   47084:	e0c00215 	stw	r3,8(fp)
   47088:	9009883a 	mov	r4,r18
   4708c:	005008c0 	call	5008c <__malloc_unlock>
   47090:	80c00204 	addi	r3,r16,8
   47094:	003f3106 	br	46d5c <_malloc_r+0x50>
   47098:	39c00117 	ldw	r7,4(r7)
   4709c:	573ffe04 	addi	fp,r10,-8
   470a0:	003fa006 	br	46f24 <_malloc_r+0x218>
   470a4:	00801504 	movi	r2,84
   470a8:	10c06736 	bltu	r2,r3,47248 <_malloc_r+0x53c>
   470ac:	8804d33a 	srli	r2,r17,12
   470b0:	11801b84 	addi	r6,r2,110
   470b4:	300490fa 	slli	r2,r6,3
   470b8:	003f4106 	br	46dc0 <_malloc_r+0xb4>
   470bc:	d0a6b617 	ldw	r2,-25896(gp)
   470c0:	d0e00617 	ldw	r3,-32744(gp)
   470c4:	053fffc4 	movi	r20,-1
   470c8:	10800404 	addi	r2,r2,16
   470cc:	88a7883a 	add	r19,r17,r2
   470d0:	1d000326 	beq	r3,r20,470e0 <_malloc_r+0x3d4>
   470d4:	98c3ffc4 	addi	r3,r19,4095
   470d8:	00bc0004 	movi	r2,-4096
   470dc:	18a6703a 	and	r19,r3,r2
   470e0:	9009883a 	mov	r4,r18
   470e4:	980b883a 	mov	r5,r19
   470e8:	00493040 	call	49304 <_sbrk_r>
   470ec:	1009883a 	mov	r4,r2
   470f0:	15000426 	beq	r2,r20,47104 <_malloc_r+0x3f8>
   470f4:	854b883a 	add	r5,r16,r21
   470f8:	1029883a 	mov	r20,r2
   470fc:	11405a2e 	bgeu	r2,r5,47268 <_malloc_r+0x55c>
   47100:	87000c26 	beq	r16,fp,47134 <_malloc_r+0x428>
   47104:	e4000217 	ldw	r16,8(fp)
   47108:	80c00117 	ldw	r3,4(r16)
   4710c:	00bfff04 	movi	r2,-4
   47110:	1884703a 	and	r2,r3,r2
   47114:	14400336 	bltu	r2,r17,47124 <_malloc_r+0x418>
   47118:	1449c83a 	sub	r4,r2,r17
   4711c:	008003c4 	movi	r2,15
   47120:	113fd316 	blt	r2,r4,47070 <_malloc_r+0x364>
   47124:	9009883a 	mov	r4,r18
   47128:	005008c0 	call	5008c <__malloc_unlock>
   4712c:	0007883a 	mov	r3,zero
   47130:	003f0a06 	br	46d5c <_malloc_r+0x50>
   47134:	05c00174 	movhi	r23,5
   47138:	bdd89604 	addi	r23,r23,25176
   4713c:	b8800017 	ldw	r2,0(r23)
   47140:	988d883a 	add	r6,r19,r2
   47144:	b9800015 	stw	r6,0(r23)
   47148:	d0e00617 	ldw	r3,-32744(gp)
   4714c:	00bfffc4 	movi	r2,-1
   47150:	18808e26 	beq	r3,r2,4738c <_malloc_r+0x680>
   47154:	2145c83a 	sub	r2,r4,r5
   47158:	3085883a 	add	r2,r6,r2
   4715c:	b8800015 	stw	r2,0(r23)
   47160:	20c001cc 	andi	r3,r4,7
   47164:	18005f1e 	bne	r3,zero,472e4 <_malloc_r+0x5d8>
   47168:	000b883a 	mov	r5,zero
   4716c:	a4c5883a 	add	r2,r20,r19
   47170:	1083ffcc 	andi	r2,r2,4095
   47174:	00c40004 	movi	r3,4096
   47178:	1887c83a 	sub	r3,r3,r2
   4717c:	28e7883a 	add	r19,r5,r3
   47180:	9009883a 	mov	r4,r18
   47184:	980b883a 	mov	r5,r19
   47188:	00493040 	call	49304 <_sbrk_r>
   4718c:	1007883a 	mov	r3,r2
   47190:	00bfffc4 	movi	r2,-1
   47194:	18807a26 	beq	r3,r2,47380 <_malloc_r+0x674>
   47198:	1d05c83a 	sub	r2,r3,r20
   4719c:	9885883a 	add	r2,r19,r2
   471a0:	10c00054 	ori	r3,r2,1
   471a4:	b8800017 	ldw	r2,0(r23)
   471a8:	a021883a 	mov	r16,r20
   471ac:	a0c00115 	stw	r3,4(r20)
   471b0:	9885883a 	add	r2,r19,r2
   471b4:	b8800015 	stw	r2,0(r23)
   471b8:	e5000215 	stw	r20,8(fp)
   471bc:	b7003626 	beq	r22,fp,47298 <_malloc_r+0x58c>
   471c0:	018003c4 	movi	r6,15
   471c4:	35404b36 	bltu	r6,r21,472f4 <_malloc_r+0x5e8>
   471c8:	00800044 	movi	r2,1
   471cc:	a0800115 	stw	r2,4(r20)
   471d0:	003fcd06 	br	47108 <_malloc_r+0x3fc>
   471d4:	2808d27a 	srli	r4,r5,9
   471d8:	2000371e 	bne	r4,zero,472b8 <_malloc_r+0x5ac>
   471dc:	2808d0fa 	srli	r4,r5,3
   471e0:	200690fa 	slli	r3,r4,3
   471e4:	1ad1883a 	add	r8,r3,r11
   471e8:	41800217 	ldw	r6,8(r8)
   471ec:	41805b26 	beq	r8,r6,4735c <_malloc_r+0x650>
   471f0:	30800117 	ldw	r2,4(r6)
   471f4:	00ffff04 	movi	r3,-4
   471f8:	10c4703a 	and	r2,r2,r3
   471fc:	2880022e 	bgeu	r5,r2,47208 <_malloc_r+0x4fc>
   47200:	31800217 	ldw	r6,8(r6)
   47204:	41bffa1e 	bne	r8,r6,471f0 <_malloc_r+0x4e4>
   47208:	32000317 	ldw	r8,12(r6)
   4720c:	39c00117 	ldw	r7,4(r7)
   47210:	82000315 	stw	r8,12(r16)
   47214:	81800215 	stw	r6,8(r16)
   47218:	07000174 	movhi	fp,5
   4721c:	e70c4804 	addi	fp,fp,12576
   47220:	34000315 	stw	r16,12(r6)
   47224:	44000215 	stw	r16,8(r8)
   47228:	003f3e06 	br	46f24 <_malloc_r+0x218>
   4722c:	63000044 	addi	r12,r12,1
   47230:	608000cc 	andi	r2,r12,3
   47234:	10005d26 	beq	r2,zero,473ac <_malloc_r+0x6a0>
   47238:	18c00204 	addi	r3,r3,8
   4723c:	003f5106 	br	46f84 <_malloc_r+0x278>
   47240:	8089883a 	add	r4,r16,r2
   47244:	003f6d06 	br	46ffc <_malloc_r+0x2f0>
   47248:	00805504 	movi	r2,340
   4724c:	10c02036 	bltu	r2,r3,472d0 <_malloc_r+0x5c4>
   47250:	8804d3fa 	srli	r2,r17,15
   47254:	11801dc4 	addi	r6,r2,119
   47258:	300490fa 	slli	r2,r6,3
   4725c:	003ed806 	br	46dc0 <_malloc_r+0xb4>
   47260:	48c000c4 	addi	r3,r9,3
   47264:	003f3106 	br	46f2c <_malloc_r+0x220>
   47268:	05c00174 	movhi	r23,5
   4726c:	bdd89604 	addi	r23,r23,25176
   47270:	b8800017 	ldw	r2,0(r23)
   47274:	988d883a 	add	r6,r19,r2
   47278:	b9800015 	stw	r6,0(r23)
   4727c:	293fb21e 	bne	r5,r4,47148 <_malloc_r+0x43c>
   47280:	2083ffcc 	andi	r2,r4,4095
   47284:	103fb01e 	bne	r2,zero,47148 <_malloc_r+0x43c>
   47288:	e4000217 	ldw	r16,8(fp)
   4728c:	9d45883a 	add	r2,r19,r21
   47290:	10800054 	ori	r2,r2,1
   47294:	80800115 	stw	r2,4(r16)
   47298:	b8c00017 	ldw	r3,0(r23)
   4729c:	d0a6b717 	ldw	r2,-25892(gp)
   472a0:	10c0012e 	bgeu	r2,r3,472a8 <_malloc_r+0x59c>
   472a4:	d0e6b715 	stw	r3,-25892(gp)
   472a8:	d0a6b817 	ldw	r2,-25888(gp)
   472ac:	10ff962e 	bgeu	r2,r3,47108 <_malloc_r+0x3fc>
   472b0:	d0e6b815 	stw	r3,-25888(gp)
   472b4:	003f9406 	br	47108 <_malloc_r+0x3fc>
   472b8:	00800104 	movi	r2,4
   472bc:	11001e36 	bltu	r2,r4,47338 <_malloc_r+0x62c>
   472c0:	2804d1ba 	srli	r2,r5,6
   472c4:	11000e04 	addi	r4,r2,56
   472c8:	200690fa 	slli	r3,r4,3
   472cc:	003fc506 	br	471e4 <_malloc_r+0x4d8>
   472d0:	00815504 	movi	r2,1364
   472d4:	10c01d2e 	bgeu	r2,r3,4734c <_malloc_r+0x640>
   472d8:	01801f84 	movi	r6,126
   472dc:	0080fc04 	movi	r2,1008
   472e0:	003eb706 	br	46dc0 <_malloc_r+0xb4>
   472e4:	00800204 	movi	r2,8
   472e8:	10cbc83a 	sub	r5,r2,r3
   472ec:	2169883a 	add	r20,r4,r5
   472f0:	003f9e06 	br	4716c <_malloc_r+0x460>
   472f4:	00bffe04 	movi	r2,-8
   472f8:	a93ffd04 	addi	r4,r21,-12
   472fc:	2088703a 	and	r4,r4,r2
   47300:	b10b883a 	add	r5,r22,r4
   47304:	00c00144 	movi	r3,5
   47308:	28c00215 	stw	r3,8(r5)
   4730c:	28c00115 	stw	r3,4(r5)
   47310:	b0800117 	ldw	r2,4(r22)
   47314:	1080004c 	andi	r2,r2,1
   47318:	2084b03a 	or	r2,r4,r2
   4731c:	b0800115 	stw	r2,4(r22)
   47320:	313fdd2e 	bgeu	r6,r4,47298 <_malloc_r+0x58c>
   47324:	b1400204 	addi	r5,r22,8
   47328:	9009883a 	mov	r4,r18
   4732c:	00461580 	call	46158 <_free_r>
   47330:	e4000217 	ldw	r16,8(fp)
   47334:	003fd806 	br	47298 <_malloc_r+0x58c>
   47338:	00800504 	movi	r2,20
   4733c:	11001536 	bltu	r2,r4,47394 <_malloc_r+0x688>
   47340:	210016c4 	addi	r4,r4,91
   47344:	200690fa 	slli	r3,r4,3
   47348:	003fa606 	br	471e4 <_malloc_r+0x4d8>
   4734c:	8804d4ba 	srli	r2,r17,18
   47350:	11801f04 	addi	r6,r2,124
   47354:	300490fa 	slli	r2,r6,3
   47358:	003e9906 	br	46dc0 <_malloc_r+0xb4>
   4735c:	2009d0ba 	srai	r4,r4,2
   47360:	01400174 	movhi	r5,5
   47364:	294c4804 	addi	r5,r5,12576
   47368:	00c00044 	movi	r3,1
   4736c:	28800117 	ldw	r2,4(r5)
   47370:	1906983a 	sll	r3,r3,r4
   47374:	10c4b03a 	or	r2,r2,r3
   47378:	28800115 	stw	r2,4(r5)
   4737c:	003fa306 	br	4720c <_malloc_r+0x500>
   47380:	0027883a 	mov	r19,zero
   47384:	00c00044 	movi	r3,1
   47388:	003f8606 	br	471a4 <_malloc_r+0x498>
   4738c:	d1200615 	stw	r4,-32744(gp)
   47390:	003f7306 	br	47160 <_malloc_r+0x454>
   47394:	00801504 	movi	r2,84
   47398:	11001936 	bltu	r2,r4,47400 <_malloc_r+0x6f4>
   4739c:	2804d33a 	srli	r2,r5,12
   473a0:	11001b84 	addi	r4,r2,110
   473a4:	200690fa 	slli	r3,r4,3
   473a8:	003f8e06 	br	471e4 <_malloc_r+0x4d8>
   473ac:	480b883a 	mov	r5,r9
   473b0:	6807883a 	mov	r3,r13
   473b4:	288000cc 	andi	r2,r5,3
   473b8:	18fffe04 	addi	r3,r3,-8
   473bc:	297fffc4 	addi	r5,r5,-1
   473c0:	10001526 	beq	r2,zero,47418 <_malloc_r+0x70c>
   473c4:	18800217 	ldw	r2,8(r3)
   473c8:	10fffa26 	beq	r2,r3,473b4 <_malloc_r+0x6a8>
   473cc:	2109883a 	add	r4,r4,r4
   473d0:	393f1e36 	bltu	r7,r4,4704c <_malloc_r+0x340>
   473d4:	203f1d26 	beq	r4,zero,4704c <_malloc_r+0x340>
   473d8:	21c4703a 	and	r2,r4,r7
   473dc:	10000226 	beq	r2,zero,473e8 <_malloc_r+0x6dc>
   473e0:	6013883a 	mov	r9,r12
   473e4:	003ee106 	br	46f6c <_malloc_r+0x260>
   473e8:	2109883a 	add	r4,r4,r4
   473ec:	3904703a 	and	r2,r7,r4
   473f0:	63000104 	addi	r12,r12,4
   473f4:	103ffc26 	beq	r2,zero,473e8 <_malloc_r+0x6dc>
   473f8:	6013883a 	mov	r9,r12
   473fc:	003edb06 	br	46f6c <_malloc_r+0x260>
   47400:	00805504 	movi	r2,340
   47404:	11000836 	bltu	r2,r4,47428 <_malloc_r+0x71c>
   47408:	2804d3fa 	srli	r2,r5,15
   4740c:	11001dc4 	addi	r4,r2,119
   47410:	200690fa 	slli	r3,r4,3
   47414:	003f7306 	br	471e4 <_malloc_r+0x4d8>
   47418:	0104303a 	nor	r2,zero,r4
   4741c:	388e703a 	and	r7,r7,r2
   47420:	e1c00115 	stw	r7,4(fp)
   47424:	003fe906 	br	473cc <_malloc_r+0x6c0>
   47428:	00815504 	movi	r2,1364
   4742c:	1100032e 	bgeu	r2,r4,4743c <_malloc_r+0x730>
   47430:	01001f84 	movi	r4,126
   47434:	00c0fc04 	movi	r3,1008
   47438:	003f6a06 	br	471e4 <_malloc_r+0x4d8>
   4743c:	2804d4ba 	srli	r2,r5,18
   47440:	11001f04 	addi	r4,r2,124
   47444:	200690fa 	slli	r3,r4,3
   47448:	003f6606 	br	471e4 <_malloc_r+0x4d8>

0004744c <_mbrtowc_r>:
   4744c:	defffc04 	addi	sp,sp,-16
   47450:	dc400215 	stw	r17,8(sp)
   47454:	dc000115 	stw	r16,4(sp)
   47458:	dfc00315 	stw	ra,12(sp)
   4745c:	dc000417 	ldw	r16,16(sp)
   47460:	2023883a 	mov	r17,r4
   47464:	30000f26 	beq	r6,zero,474a4 <_mbrtowc_r+0x58>
   47468:	dc000015 	stw	r16,0(sp)
   4746c:	004750c0 	call	4750c <_mbtowc_r>
   47470:	1007883a 	mov	r3,r2
   47474:	00bfffc4 	movi	r2,-1
   47478:	1809883a 	mov	r4,r3
   4747c:	1880111e 	bne	r3,r2,474c4 <_mbrtowc_r+0x78>
   47480:	80000015 	stw	zero,0(r16)
   47484:	00802284 	movi	r2,138
   47488:	88800015 	stw	r2,0(r17)
   4748c:	2005883a 	mov	r2,r4
   47490:	dfc00317 	ldw	ra,12(sp)
   47494:	dc400217 	ldw	r17,8(sp)
   47498:	dc000117 	ldw	r16,4(sp)
   4749c:	dec00404 	addi	sp,sp,16
   474a0:	f800283a 	ret
   474a4:	000b883a 	mov	r5,zero
   474a8:	01800174 	movhi	r6,5
   474ac:	3189c504 	addi	r6,r6,10004
   474b0:	01c00044 	movi	r7,1
   474b4:	dc000015 	stw	r16,0(sp)
   474b8:	004750c0 	call	4750c <_mbtowc_r>
   474bc:	1007883a 	mov	r3,r2
   474c0:	003fec06 	br	47474 <_mbrtowc_r+0x28>
   474c4:	1809883a 	mov	r4,r3
   474c8:	003ff006 	br	4748c <_mbrtowc_r+0x40>

000474cc <mbrtowc>:
   474cc:	00800174 	movhi	r2,5
   474d0:	1091d604 	addi	r2,r2,18264
   474d4:	2017883a 	mov	r11,r4
   474d8:	11000017 	ldw	r4,0(r2)
   474dc:	defffe04 	addi	sp,sp,-8
   474e0:	3013883a 	mov	r9,r6
   474e4:	2805883a 	mov	r2,r5
   474e8:	d9c00015 	stw	r7,0(sp)
   474ec:	580b883a 	mov	r5,r11
   474f0:	100d883a 	mov	r6,r2
   474f4:	480f883a 	mov	r7,r9
   474f8:	dfc00115 	stw	ra,4(sp)
   474fc:	004744c0 	call	4744c <_mbrtowc_r>
   47500:	dfc00117 	ldw	ra,4(sp)
   47504:	dec00204 	addi	sp,sp,8
   47508:	f800283a 	ret

0004750c <_mbtowc_r>:
   4750c:	deffff04 	addi	sp,sp,-4
   47510:	0005883a 	mov	r2,zero
   47514:	28000326 	beq	r5,zero,47524 <_mbtowc_r+0x18>
   47518:	3000041e 	bne	r6,zero,4752c <_mbtowc_r+0x20>
   4751c:	dec00104 	addi	sp,sp,4
   47520:	f800283a 	ret
   47524:	d80b883a 	mov	r5,sp
   47528:	303ffc26 	beq	r6,zero,4751c <_mbtowc_r+0x10>
   4752c:	00bfff84 	movi	r2,-2
   47530:	383ffa26 	beq	r7,zero,4751c <_mbtowc_r+0x10>
   47534:	30800003 	ldbu	r2,0(r6)
   47538:	28800015 	stw	r2,0(r5)
   4753c:	30c00003 	ldbu	r3,0(r6)
   47540:	1804c03a 	cmpne	r2,r3,zero
   47544:	dec00104 	addi	sp,sp,4
   47548:	f800283a 	ret

0004754c <memchr>:
   4754c:	008000c4 	movi	r2,3
   47550:	29403fcc 	andi	r5,r5,255
   47554:	2007883a 	mov	r3,r4
   47558:	1180022e 	bgeu	r2,r6,47564 <memchr+0x18>
   4755c:	2084703a 	and	r2,r4,r2
   47560:	10000b26 	beq	r2,zero,47590 <memchr+0x44>
   47564:	313fffc4 	addi	r4,r6,-1
   47568:	3000051e 	bne	r6,zero,47580 <memchr+0x34>
   4756c:	00002c06 	br	47620 <memchr+0xd4>
   47570:	213fffc4 	addi	r4,r4,-1
   47574:	00bfffc4 	movi	r2,-1
   47578:	18c00044 	addi	r3,r3,1
   4757c:	20802826 	beq	r4,r2,47620 <memchr+0xd4>
   47580:	18800003 	ldbu	r2,0(r3)
   47584:	28bffa1e 	bne	r5,r2,47570 <memchr+0x24>
   47588:	1805883a 	mov	r2,r3
   4758c:	f800283a 	ret
   47590:	0011883a 	mov	r8,zero
   47594:	0007883a 	mov	r3,zero
   47598:	01c00104 	movi	r7,4
   4759c:	4004923a 	slli	r2,r8,8
   475a0:	18c00044 	addi	r3,r3,1
   475a4:	1151883a 	add	r8,r2,r5
   475a8:	19fffc1e 	bne	r3,r7,4759c <memchr+0x50>
   475ac:	02bfbff4 	movhi	r10,65279
   475b0:	52bfbfc4 	addi	r10,r10,-257
   475b4:	02602074 	movhi	r9,32897
   475b8:	4a602004 	addi	r9,r9,-32640
   475bc:	02c000c4 	movi	r11,3
   475c0:	20800017 	ldw	r2,0(r4)
   475c4:	31bfff04 	addi	r6,r6,-4
   475c8:	200f883a 	mov	r7,r4
   475cc:	1204f03a 	xor	r2,r2,r8
   475d0:	1287883a 	add	r3,r2,r10
   475d4:	1a46703a 	and	r3,r3,r9
   475d8:	0084303a 	nor	r2,zero,r2
   475dc:	10c4703a 	and	r2,r2,r3
   475e0:	10000b26 	beq	r2,zero,47610 <memchr+0xc4>
   475e4:	20800003 	ldbu	r2,0(r4)
   475e8:	28800f26 	beq	r5,r2,47628 <memchr+0xdc>
   475ec:	20800043 	ldbu	r2,1(r4)
   475f0:	21c00044 	addi	r7,r4,1
   475f4:	28800c26 	beq	r5,r2,47628 <memchr+0xdc>
   475f8:	20800083 	ldbu	r2,2(r4)
   475fc:	21c00084 	addi	r7,r4,2
   47600:	28800926 	beq	r5,r2,47628 <memchr+0xdc>
   47604:	208000c3 	ldbu	r2,3(r4)
   47608:	21c000c4 	addi	r7,r4,3
   4760c:	28800626 	beq	r5,r2,47628 <memchr+0xdc>
   47610:	21000104 	addi	r4,r4,4
   47614:	59bfea36 	bltu	r11,r6,475c0 <memchr+0x74>
   47618:	2007883a 	mov	r3,r4
   4761c:	003fd106 	br	47564 <memchr+0x18>
   47620:	0005883a 	mov	r2,zero
   47624:	f800283a 	ret
   47628:	3805883a 	mov	r2,r7
   4762c:	f800283a 	ret

00047630 <memcpy>:
   47630:	01c003c4 	movi	r7,15
   47634:	2007883a 	mov	r3,r4
   47638:	3980032e 	bgeu	r7,r6,47648 <memcpy+0x18>
   4763c:	2904b03a 	or	r2,r5,r4
   47640:	108000cc 	andi	r2,r2,3
   47644:	10000926 	beq	r2,zero,4766c <memcpy+0x3c>
   47648:	30000626 	beq	r6,zero,47664 <memcpy+0x34>
   4764c:	30cd883a 	add	r6,r6,r3
   47650:	28800003 	ldbu	r2,0(r5)
   47654:	29400044 	addi	r5,r5,1
   47658:	18800005 	stb	r2,0(r3)
   4765c:	18c00044 	addi	r3,r3,1
   47660:	30fffb1e 	bne	r6,r3,47650 <memcpy+0x20>
   47664:	2005883a 	mov	r2,r4
   47668:	f800283a 	ret
   4766c:	3811883a 	mov	r8,r7
   47670:	200f883a 	mov	r7,r4
   47674:	28c00017 	ldw	r3,0(r5)
   47678:	31bffc04 	addi	r6,r6,-16
   4767c:	38c00015 	stw	r3,0(r7)
   47680:	28800117 	ldw	r2,4(r5)
   47684:	38800115 	stw	r2,4(r7)
   47688:	28c00217 	ldw	r3,8(r5)
   4768c:	38c00215 	stw	r3,8(r7)
   47690:	28800317 	ldw	r2,12(r5)
   47694:	29400404 	addi	r5,r5,16
   47698:	38800315 	stw	r2,12(r7)
   4769c:	39c00404 	addi	r7,r7,16
   476a0:	41bff436 	bltu	r8,r6,47674 <memcpy+0x44>
   476a4:	008000c4 	movi	r2,3
   476a8:	1180072e 	bgeu	r2,r6,476c8 <memcpy+0x98>
   476ac:	1007883a 	mov	r3,r2
   476b0:	28800017 	ldw	r2,0(r5)
   476b4:	31bfff04 	addi	r6,r6,-4
   476b8:	29400104 	addi	r5,r5,4
   476bc:	38800015 	stw	r2,0(r7)
   476c0:	39c00104 	addi	r7,r7,4
   476c4:	19bffa36 	bltu	r3,r6,476b0 <memcpy+0x80>
   476c8:	3807883a 	mov	r3,r7
   476cc:	003fde06 	br	47648 <memcpy+0x18>

000476d0 <memmove>:
   476d0:	2807883a 	mov	r3,r5
   476d4:	2011883a 	mov	r8,r4
   476d8:	29000c2e 	bgeu	r5,r4,4770c <memmove+0x3c>
   476dc:	298f883a 	add	r7,r5,r6
   476e0:	21c00a2e 	bgeu	r4,r7,4770c <memmove+0x3c>
   476e4:	30000726 	beq	r6,zero,47704 <memmove+0x34>
   476e8:	2187883a 	add	r3,r4,r6
   476ec:	198dc83a 	sub	r6,r3,r6
   476f0:	39ffffc4 	addi	r7,r7,-1
   476f4:	38800003 	ldbu	r2,0(r7)
   476f8:	18ffffc4 	addi	r3,r3,-1
   476fc:	18800005 	stb	r2,0(r3)
   47700:	19bffb1e 	bne	r3,r6,476f0 <memmove+0x20>
   47704:	2005883a 	mov	r2,r4
   47708:	f800283a 	ret
   4770c:	01c003c4 	movi	r7,15
   47710:	39800a36 	bltu	r7,r6,4773c <memmove+0x6c>
   47714:	303ffb26 	beq	r6,zero,47704 <memmove+0x34>
   47718:	400f883a 	mov	r7,r8
   4771c:	320d883a 	add	r6,r6,r8
   47720:	28800003 	ldbu	r2,0(r5)
   47724:	29400044 	addi	r5,r5,1
   47728:	38800005 	stb	r2,0(r7)
   4772c:	39c00044 	addi	r7,r7,1
   47730:	39bffb1e 	bne	r7,r6,47720 <memmove+0x50>
   47734:	2005883a 	mov	r2,r4
   47738:	f800283a 	ret
   4773c:	1904b03a 	or	r2,r3,r4
   47740:	108000cc 	andi	r2,r2,3
   47744:	103ff31e 	bne	r2,zero,47714 <memmove+0x44>
   47748:	3811883a 	mov	r8,r7
   4774c:	180b883a 	mov	r5,r3
   47750:	200f883a 	mov	r7,r4
   47754:	28c00017 	ldw	r3,0(r5)
   47758:	31bffc04 	addi	r6,r6,-16
   4775c:	38c00015 	stw	r3,0(r7)
   47760:	28800117 	ldw	r2,4(r5)
   47764:	38800115 	stw	r2,4(r7)
   47768:	28c00217 	ldw	r3,8(r5)
   4776c:	38c00215 	stw	r3,8(r7)
   47770:	28800317 	ldw	r2,12(r5)
   47774:	29400404 	addi	r5,r5,16
   47778:	38800315 	stw	r2,12(r7)
   4777c:	39c00404 	addi	r7,r7,16
   47780:	41bff436 	bltu	r8,r6,47754 <memmove+0x84>
   47784:	008000c4 	movi	r2,3
   47788:	1180072e 	bgeu	r2,r6,477a8 <memmove+0xd8>
   4778c:	1007883a 	mov	r3,r2
   47790:	28800017 	ldw	r2,0(r5)
   47794:	31bfff04 	addi	r6,r6,-4
   47798:	29400104 	addi	r5,r5,4
   4779c:	38800015 	stw	r2,0(r7)
   477a0:	39c00104 	addi	r7,r7,4
   477a4:	19bffa36 	bltu	r3,r6,47790 <memmove+0xc0>
   477a8:	3811883a 	mov	r8,r7
   477ac:	003fd906 	br	47714 <memmove+0x44>

000477b0 <memset>:
   477b0:	008000c4 	movi	r2,3
   477b4:	29403fcc 	andi	r5,r5,255
   477b8:	2007883a 	mov	r3,r4
   477bc:	1180022e 	bgeu	r2,r6,477c8 <memset+0x18>
   477c0:	2084703a 	and	r2,r4,r2
   477c4:	10000826 	beq	r2,zero,477e8 <memset+0x38>
   477c8:	30000526 	beq	r6,zero,477e0 <memset+0x30>
   477cc:	2805883a 	mov	r2,r5
   477d0:	30cd883a 	add	r6,r6,r3
   477d4:	18800005 	stb	r2,0(r3)
   477d8:	18c00044 	addi	r3,r3,1
   477dc:	19bffd1e 	bne	r3,r6,477d4 <memset+0x24>
   477e0:	2005883a 	mov	r2,r4
   477e4:	f800283a 	ret
   477e8:	2804923a 	slli	r2,r5,8
   477ec:	020003c4 	movi	r8,15
   477f0:	200f883a 	mov	r7,r4
   477f4:	2884b03a 	or	r2,r5,r2
   477f8:	1006943a 	slli	r3,r2,16
   477fc:	10c6b03a 	or	r3,r2,r3
   47800:	41800a2e 	bgeu	r8,r6,4782c <memset+0x7c>
   47804:	4005883a 	mov	r2,r8
   47808:	31bffc04 	addi	r6,r6,-16
   4780c:	38c00015 	stw	r3,0(r7)
   47810:	38c00115 	stw	r3,4(r7)
   47814:	38c00215 	stw	r3,8(r7)
   47818:	38c00315 	stw	r3,12(r7)
   4781c:	39c00404 	addi	r7,r7,16
   47820:	11bff936 	bltu	r2,r6,47808 <memset+0x58>
   47824:	008000c4 	movi	r2,3
   47828:	1180052e 	bgeu	r2,r6,47840 <memset+0x90>
   4782c:	31bfff04 	addi	r6,r6,-4
   47830:	008000c4 	movi	r2,3
   47834:	38c00015 	stw	r3,0(r7)
   47838:	39c00104 	addi	r7,r7,4
   4783c:	11bffb36 	bltu	r2,r6,4782c <memset+0x7c>
   47840:	3807883a 	mov	r3,r7
   47844:	003fe006 	br	477c8 <memset+0x18>

00047848 <_Bfree>:
   47848:	28000826 	beq	r5,zero,4786c <_Bfree+0x24>
   4784c:	28800117 	ldw	r2,4(r5)
   47850:	21001317 	ldw	r4,76(r4)
   47854:	1085883a 	add	r2,r2,r2
   47858:	1085883a 	add	r2,r2,r2
   4785c:	1105883a 	add	r2,r2,r4
   47860:	10c00017 	ldw	r3,0(r2)
   47864:	28c00015 	stw	r3,0(r5)
   47868:	11400015 	stw	r5,0(r2)
   4786c:	f800283a 	ret

00047870 <__hi0bits>:
   47870:	20bfffec 	andhi	r2,r4,65535
   47874:	10001426 	beq	r2,zero,478c8 <__hi0bits+0x58>
   47878:	0007883a 	mov	r3,zero
   4787c:	20bfc02c 	andhi	r2,r4,65280
   47880:	1000021e 	bne	r2,zero,4788c <__hi0bits+0x1c>
   47884:	2008923a 	slli	r4,r4,8
   47888:	18c00204 	addi	r3,r3,8
   4788c:	20bc002c 	andhi	r2,r4,61440
   47890:	1000021e 	bne	r2,zero,4789c <__hi0bits+0x2c>
   47894:	2008913a 	slli	r4,r4,4
   47898:	18c00104 	addi	r3,r3,4
   4789c:	20b0002c 	andhi	r2,r4,49152
   478a0:	1000031e 	bne	r2,zero,478b0 <__hi0bits+0x40>
   478a4:	2105883a 	add	r2,r4,r4
   478a8:	18c00084 	addi	r3,r3,2
   478ac:	1089883a 	add	r4,r2,r2
   478b0:	20000316 	blt	r4,zero,478c0 <__hi0bits+0x50>
   478b4:	2090002c 	andhi	r2,r4,16384
   478b8:	10000626 	beq	r2,zero,478d4 <__hi0bits+0x64>
   478bc:	18c00044 	addi	r3,r3,1
   478c0:	1805883a 	mov	r2,r3
   478c4:	f800283a 	ret
   478c8:	2008943a 	slli	r4,r4,16
   478cc:	00c00404 	movi	r3,16
   478d0:	003fea06 	br	4787c <__hi0bits+0xc>
   478d4:	00c00804 	movi	r3,32
   478d8:	1805883a 	mov	r2,r3
   478dc:	f800283a 	ret

000478e0 <__lo0bits>:
   478e0:	20c00017 	ldw	r3,0(r4)
   478e4:	188001cc 	andi	r2,r3,7
   478e8:	10000a26 	beq	r2,zero,47914 <__lo0bits+0x34>
   478ec:	1880004c 	andi	r2,r3,1
   478f0:	1005003a 	cmpeq	r2,r2,zero
   478f4:	10002126 	beq	r2,zero,4797c <__lo0bits+0x9c>
   478f8:	1880008c 	andi	r2,r3,2
   478fc:	1000251e 	bne	r2,zero,47994 <__lo0bits+0xb4>
   47900:	1804d0ba 	srli	r2,r3,2
   47904:	01400084 	movi	r5,2
   47908:	20800015 	stw	r2,0(r4)
   4790c:	2805883a 	mov	r2,r5
   47910:	f800283a 	ret
   47914:	18bfffcc 	andi	r2,r3,65535
   47918:	10001526 	beq	r2,zero,47970 <__lo0bits+0x90>
   4791c:	000b883a 	mov	r5,zero
   47920:	18803fcc 	andi	r2,r3,255
   47924:	1000021e 	bne	r2,zero,47930 <__lo0bits+0x50>
   47928:	1806d23a 	srli	r3,r3,8
   4792c:	29400204 	addi	r5,r5,8
   47930:	188003cc 	andi	r2,r3,15
   47934:	1000021e 	bne	r2,zero,47940 <__lo0bits+0x60>
   47938:	1806d13a 	srli	r3,r3,4
   4793c:	29400104 	addi	r5,r5,4
   47940:	188000cc 	andi	r2,r3,3
   47944:	1000021e 	bne	r2,zero,47950 <__lo0bits+0x70>
   47948:	1806d0ba 	srli	r3,r3,2
   4794c:	29400084 	addi	r5,r5,2
   47950:	1880004c 	andi	r2,r3,1
   47954:	1000031e 	bne	r2,zero,47964 <__lo0bits+0x84>
   47958:	1806d07a 	srli	r3,r3,1
   4795c:	18000a26 	beq	r3,zero,47988 <__lo0bits+0xa8>
   47960:	29400044 	addi	r5,r5,1
   47964:	2805883a 	mov	r2,r5
   47968:	20c00015 	stw	r3,0(r4)
   4796c:	f800283a 	ret
   47970:	1806d43a 	srli	r3,r3,16
   47974:	01400404 	movi	r5,16
   47978:	003fe906 	br	47920 <__lo0bits+0x40>
   4797c:	000b883a 	mov	r5,zero
   47980:	2805883a 	mov	r2,r5
   47984:	f800283a 	ret
   47988:	01400804 	movi	r5,32
   4798c:	2805883a 	mov	r2,r5
   47990:	f800283a 	ret
   47994:	1804d07a 	srli	r2,r3,1
   47998:	01400044 	movi	r5,1
   4799c:	20800015 	stw	r2,0(r4)
   479a0:	003fda06 	br	4790c <__lo0bits+0x2c>

000479a4 <__mcmp>:
   479a4:	20800417 	ldw	r2,16(r4)
   479a8:	28c00417 	ldw	r3,16(r5)
   479ac:	10cfc83a 	sub	r7,r2,r3
   479b0:	38000c1e 	bne	r7,zero,479e4 <__mcmp+0x40>
   479b4:	18c5883a 	add	r2,r3,r3
   479b8:	1085883a 	add	r2,r2,r2
   479bc:	10c00504 	addi	r3,r2,20
   479c0:	21000504 	addi	r4,r4,20
   479c4:	28cb883a 	add	r5,r5,r3
   479c8:	2085883a 	add	r2,r4,r2
   479cc:	10bfff04 	addi	r2,r2,-4
   479d0:	297fff04 	addi	r5,r5,-4
   479d4:	11800017 	ldw	r6,0(r2)
   479d8:	28c00017 	ldw	r3,0(r5)
   479dc:	30c0031e 	bne	r6,r3,479ec <__mcmp+0x48>
   479e0:	20bffa36 	bltu	r4,r2,479cc <__mcmp+0x28>
   479e4:	3805883a 	mov	r2,r7
   479e8:	f800283a 	ret
   479ec:	30c00336 	bltu	r6,r3,479fc <__mcmp+0x58>
   479f0:	01c00044 	movi	r7,1
   479f4:	3805883a 	mov	r2,r7
   479f8:	f800283a 	ret
   479fc:	01ffffc4 	movi	r7,-1
   47a00:	003ff806 	br	479e4 <__mcmp+0x40>

00047a04 <__ulp>:
   47a04:	295ffc2c 	andhi	r5,r5,32752
   47a08:	013f3034 	movhi	r4,64704
   47a0c:	290b883a 	add	r5,r5,r4
   47a10:	0145c83a 	sub	r2,zero,r5
   47a14:	1007d53a 	srai	r3,r2,20
   47a18:	000d883a 	mov	r6,zero
   47a1c:	0140040e 	bge	zero,r5,47a30 <__ulp+0x2c>
   47a20:	280f883a 	mov	r7,r5
   47a24:	3807883a 	mov	r3,r7
   47a28:	3005883a 	mov	r2,r6
   47a2c:	f800283a 	ret
   47a30:	008004c4 	movi	r2,19
   47a34:	193ffb04 	addi	r4,r3,-20
   47a38:	10c00c0e 	bge	r2,r3,47a6c <__ulp+0x68>
   47a3c:	008007c4 	movi	r2,31
   47a40:	1107c83a 	sub	r3,r2,r4
   47a44:	00800784 	movi	r2,30
   47a48:	01400044 	movi	r5,1
   47a4c:	11000216 	blt	r2,r4,47a58 <__ulp+0x54>
   47a50:	00800044 	movi	r2,1
   47a54:	10ca983a 	sll	r5,r2,r3
   47a58:	000f883a 	mov	r7,zero
   47a5c:	280d883a 	mov	r6,r5
   47a60:	3807883a 	mov	r3,r7
   47a64:	3005883a 	mov	r2,r6
   47a68:	f800283a 	ret
   47a6c:	00800234 	movhi	r2,8
   47a70:	10cfd83a 	sra	r7,r2,r3
   47a74:	000d883a 	mov	r6,zero
   47a78:	3005883a 	mov	r2,r6
   47a7c:	3807883a 	mov	r3,r7
   47a80:	f800283a 	ret

00047a84 <__b2d>:
   47a84:	20800417 	ldw	r2,16(r4)
   47a88:	defff904 	addi	sp,sp,-28
   47a8c:	dd000415 	stw	r20,16(sp)
   47a90:	1085883a 	add	r2,r2,r2
   47a94:	25000504 	addi	r20,r4,20
   47a98:	1085883a 	add	r2,r2,r2
   47a9c:	dc000015 	stw	r16,0(sp)
   47aa0:	a0a1883a 	add	r16,r20,r2
   47aa4:	dd400515 	stw	r21,20(sp)
   47aa8:	857fff17 	ldw	r21,-4(r16)
   47aac:	dc400115 	stw	r17,4(sp)
   47ab0:	dfc00615 	stw	ra,24(sp)
   47ab4:	a809883a 	mov	r4,r21
   47ab8:	2823883a 	mov	r17,r5
   47abc:	dcc00315 	stw	r19,12(sp)
   47ac0:	dc800215 	stw	r18,8(sp)
   47ac4:	00478700 	call	47870 <__hi0bits>
   47ac8:	100b883a 	mov	r5,r2
   47acc:	00800804 	movi	r2,32
   47ad0:	1145c83a 	sub	r2,r2,r5
   47ad4:	88800015 	stw	r2,0(r17)
   47ad8:	00800284 	movi	r2,10
   47adc:	80ffff04 	addi	r3,r16,-4
   47ae0:	11401416 	blt	r2,r5,47b34 <__b2d+0xb0>
   47ae4:	008002c4 	movi	r2,11
   47ae8:	1149c83a 	sub	r4,r2,r5
   47aec:	a0c02736 	bltu	r20,r3,47b8c <__b2d+0x108>
   47af0:	000d883a 	mov	r6,zero
   47af4:	28800544 	addi	r2,r5,21
   47af8:	a906d83a 	srl	r3,r21,r4
   47afc:	a884983a 	sll	r2,r21,r2
   47b00:	1ccffc34 	orhi	r19,r3,16368
   47b04:	11a4b03a 	or	r18,r2,r6
   47b08:	9005883a 	mov	r2,r18
   47b0c:	9807883a 	mov	r3,r19
   47b10:	dfc00617 	ldw	ra,24(sp)
   47b14:	dd400517 	ldw	r21,20(sp)
   47b18:	dd000417 	ldw	r20,16(sp)
   47b1c:	dcc00317 	ldw	r19,12(sp)
   47b20:	dc800217 	ldw	r18,8(sp)
   47b24:	dc400117 	ldw	r17,4(sp)
   47b28:	dc000017 	ldw	r16,0(sp)
   47b2c:	dec00704 	addi	sp,sp,28
   47b30:	f800283a 	ret
   47b34:	a0c00e36 	bltu	r20,r3,47b70 <__b2d+0xec>
   47b38:	293ffd44 	addi	r4,r5,-11
   47b3c:	000d883a 	mov	r6,zero
   47b40:	20000f26 	beq	r4,zero,47b80 <__b2d+0xfc>
   47b44:	00800804 	movi	r2,32
   47b48:	110bc83a 	sub	r5,r2,r4
   47b4c:	a0c01236 	bltu	r20,r3,47b98 <__b2d+0x114>
   47b50:	000f883a 	mov	r7,zero
   47b54:	a904983a 	sll	r2,r21,r4
   47b58:	3146d83a 	srl	r3,r6,r5
   47b5c:	3108983a 	sll	r4,r6,r4
   47b60:	108ffc34 	orhi	r2,r2,16368
   47b64:	18a6b03a 	or	r19,r3,r2
   47b68:	3924b03a 	or	r18,r7,r4
   47b6c:	003fe606 	br	47b08 <__b2d+0x84>
   47b70:	293ffd44 	addi	r4,r5,-11
   47b74:	81bffe17 	ldw	r6,-8(r16)
   47b78:	80fffe04 	addi	r3,r16,-8
   47b7c:	203ff11e 	bne	r4,zero,47b44 <__b2d+0xc0>
   47b80:	accffc34 	orhi	r19,r21,16368
   47b84:	3025883a 	mov	r18,r6
   47b88:	003fdf06 	br	47b08 <__b2d+0x84>
   47b8c:	18bfff17 	ldw	r2,-4(r3)
   47b90:	110cd83a 	srl	r6,r2,r4
   47b94:	003fd706 	br	47af4 <__b2d+0x70>
   47b98:	18bfff17 	ldw	r2,-4(r3)
   47b9c:	114ed83a 	srl	r7,r2,r5
   47ba0:	003fec06 	br	47b54 <__b2d+0xd0>

00047ba4 <__ratio>:
   47ba4:	defff904 	addi	sp,sp,-28
   47ba8:	dc400215 	stw	r17,8(sp)
   47bac:	2823883a 	mov	r17,r5
   47bb0:	d80b883a 	mov	r5,sp
   47bb4:	dfc00615 	stw	ra,24(sp)
   47bb8:	dd000515 	stw	r20,20(sp)
   47bbc:	dcc00415 	stw	r19,16(sp)
   47bc0:	dc800315 	stw	r18,12(sp)
   47bc4:	2025883a 	mov	r18,r4
   47bc8:	0047a840 	call	47a84 <__b2d>
   47bcc:	8809883a 	mov	r4,r17
   47bd0:	d9400104 	addi	r5,sp,4
   47bd4:	1027883a 	mov	r19,r2
   47bd8:	1829883a 	mov	r20,r3
   47bdc:	0047a840 	call	47a84 <__b2d>
   47be0:	89000417 	ldw	r4,16(r17)
   47be4:	91c00417 	ldw	r7,16(r18)
   47be8:	d9800117 	ldw	r6,4(sp)
   47bec:	180b883a 	mov	r5,r3
   47bf0:	390fc83a 	sub	r7,r7,r4
   47bf4:	1009883a 	mov	r4,r2
   47bf8:	d8800017 	ldw	r2,0(sp)
   47bfc:	380e917a 	slli	r7,r7,5
   47c00:	2011883a 	mov	r8,r4
   47c04:	1185c83a 	sub	r2,r2,r6
   47c08:	11c5883a 	add	r2,r2,r7
   47c0c:	1006953a 	slli	r3,r2,20
   47c10:	2813883a 	mov	r9,r5
   47c14:	00800d0e 	bge	zero,r2,47c4c <__ratio+0xa8>
   47c18:	1d29883a 	add	r20,r3,r20
   47c1c:	a00b883a 	mov	r5,r20
   47c20:	480f883a 	mov	r7,r9
   47c24:	9809883a 	mov	r4,r19
   47c28:	400d883a 	mov	r6,r8
   47c2c:	004e6640 	call	4e664 <__divdf3>
   47c30:	dfc00617 	ldw	ra,24(sp)
   47c34:	dd000517 	ldw	r20,20(sp)
   47c38:	dcc00417 	ldw	r19,16(sp)
   47c3c:	dc800317 	ldw	r18,12(sp)
   47c40:	dc400217 	ldw	r17,8(sp)
   47c44:	dec00704 	addi	sp,sp,28
   47c48:	f800283a 	ret
   47c4c:	28d3c83a 	sub	r9,r5,r3
   47c50:	003ff206 	br	47c1c <__ratio+0x78>

00047c54 <_mprec_log10>:
   47c54:	defffe04 	addi	sp,sp,-8
   47c58:	008005c4 	movi	r2,23
   47c5c:	dc000015 	stw	r16,0(sp)
   47c60:	dfc00115 	stw	ra,4(sp)
   47c64:	2021883a 	mov	r16,r4
   47c68:	11000c16 	blt	r2,r4,47c9c <_mprec_log10+0x48>
   47c6c:	200490fa 	slli	r2,r4,3
   47c70:	00c00174 	movhi	r3,5
   47c74:	18ca9504 	addi	r3,r3,10836
   47c78:	10c5883a 	add	r2,r2,r3
   47c7c:	12400117 	ldw	r9,4(r2)
   47c80:	12000017 	ldw	r8,0(r2)
   47c84:	4807883a 	mov	r3,r9
   47c88:	4005883a 	mov	r2,r8
   47c8c:	dfc00117 	ldw	ra,4(sp)
   47c90:	dc000017 	ldw	r16,0(sp)
   47c94:	dec00204 	addi	sp,sp,8
   47c98:	f800283a 	ret
   47c9c:	0011883a 	mov	r8,zero
   47ca0:	024ffc34 	movhi	r9,16368
   47ca4:	0005883a 	mov	r2,zero
   47ca8:	00d00934 	movhi	r3,16420
   47cac:	480b883a 	mov	r5,r9
   47cb0:	4009883a 	mov	r4,r8
   47cb4:	180f883a 	mov	r7,r3
   47cb8:	100d883a 	mov	r6,r2
   47cbc:	004e2a00 	call	4e2a0 <__muldf3>
   47cc0:	843fffc4 	addi	r16,r16,-1
   47cc4:	1011883a 	mov	r8,r2
   47cc8:	1813883a 	mov	r9,r3
   47ccc:	803ff51e 	bne	r16,zero,47ca4 <_mprec_log10+0x50>
   47cd0:	4005883a 	mov	r2,r8
   47cd4:	4807883a 	mov	r3,r9
   47cd8:	dfc00117 	ldw	ra,4(sp)
   47cdc:	dc000017 	ldw	r16,0(sp)
   47ce0:	dec00204 	addi	sp,sp,8
   47ce4:	f800283a 	ret

00047ce8 <__copybits>:
   47ce8:	297fffc4 	addi	r5,r5,-1
   47cec:	30800417 	ldw	r2,16(r6)
   47cf0:	280bd17a 	srai	r5,r5,5
   47cf4:	31800504 	addi	r6,r6,20
   47cf8:	1085883a 	add	r2,r2,r2
   47cfc:	294b883a 	add	r5,r5,r5
   47d00:	294b883a 	add	r5,r5,r5
   47d04:	1085883a 	add	r2,r2,r2
   47d08:	290b883a 	add	r5,r5,r4
   47d0c:	3087883a 	add	r3,r6,r2
   47d10:	29400104 	addi	r5,r5,4
   47d14:	30c0052e 	bgeu	r6,r3,47d2c <__copybits+0x44>
   47d18:	30800017 	ldw	r2,0(r6)
   47d1c:	31800104 	addi	r6,r6,4
   47d20:	20800015 	stw	r2,0(r4)
   47d24:	21000104 	addi	r4,r4,4
   47d28:	30fffb36 	bltu	r6,r3,47d18 <__copybits+0x30>
   47d2c:	2140032e 	bgeu	r4,r5,47d3c <__copybits+0x54>
   47d30:	20000015 	stw	zero,0(r4)
   47d34:	21000104 	addi	r4,r4,4
   47d38:	217ffd36 	bltu	r4,r5,47d30 <__copybits+0x48>
   47d3c:	f800283a 	ret

00047d40 <__any_on>:
   47d40:	20800417 	ldw	r2,16(r4)
   47d44:	2807d17a 	srai	r3,r5,5
   47d48:	21000504 	addi	r4,r4,20
   47d4c:	10c00d0e 	bge	r2,r3,47d84 <__any_on+0x44>
   47d50:	1085883a 	add	r2,r2,r2
   47d54:	1085883a 	add	r2,r2,r2
   47d58:	208d883a 	add	r6,r4,r2
   47d5c:	2180182e 	bgeu	r4,r6,47dc0 <__any_on+0x80>
   47d60:	30bfff17 	ldw	r2,-4(r6)
   47d64:	30ffff04 	addi	r3,r6,-4
   47d68:	1000041e 	bne	r2,zero,47d7c <__any_on+0x3c>
   47d6c:	20c0142e 	bgeu	r4,r3,47dc0 <__any_on+0x80>
   47d70:	18ffff04 	addi	r3,r3,-4
   47d74:	18800017 	ldw	r2,0(r3)
   47d78:	103ffc26 	beq	r2,zero,47d6c <__any_on+0x2c>
   47d7c:	00800044 	movi	r2,1
   47d80:	f800283a 	ret
   47d84:	18800a0e 	bge	r3,r2,47db0 <__any_on+0x70>
   47d88:	294007cc 	andi	r5,r5,31
   47d8c:	28000826 	beq	r5,zero,47db0 <__any_on+0x70>
   47d90:	18c5883a 	add	r2,r3,r3
   47d94:	1085883a 	add	r2,r2,r2
   47d98:	208d883a 	add	r6,r4,r2
   47d9c:	30c00017 	ldw	r3,0(r6)
   47da0:	1944d83a 	srl	r2,r3,r5
   47da4:	1144983a 	sll	r2,r2,r5
   47da8:	18bff41e 	bne	r3,r2,47d7c <__any_on+0x3c>
   47dac:	003feb06 	br	47d5c <__any_on+0x1c>
   47db0:	18c5883a 	add	r2,r3,r3
   47db4:	1085883a 	add	r2,r2,r2
   47db8:	208d883a 	add	r6,r4,r2
   47dbc:	003fe706 	br	47d5c <__any_on+0x1c>
   47dc0:	0005883a 	mov	r2,zero
   47dc4:	f800283a 	ret

00047dc8 <_Balloc>:
   47dc8:	20c01317 	ldw	r3,76(r4)
   47dcc:	defffb04 	addi	sp,sp,-20
   47dd0:	dcc00315 	stw	r19,12(sp)
   47dd4:	dc800215 	stw	r18,8(sp)
   47dd8:	dfc00415 	stw	ra,16(sp)
   47ddc:	2825883a 	mov	r18,r5
   47de0:	dc400115 	stw	r17,4(sp)
   47de4:	dc000015 	stw	r16,0(sp)
   47de8:	2027883a 	mov	r19,r4
   47dec:	01800404 	movi	r6,16
   47df0:	01400104 	movi	r5,4
   47df4:	18001726 	beq	r3,zero,47e54 <_Balloc+0x8c>
   47df8:	01400044 	movi	r5,1
   47dfc:	9485883a 	add	r2,r18,r18
   47e00:	2ca2983a 	sll	r17,r5,r18
   47e04:	1085883a 	add	r2,r2,r2
   47e08:	10c7883a 	add	r3,r2,r3
   47e0c:	1c000017 	ldw	r16,0(r3)
   47e10:	8c4d883a 	add	r6,r17,r17
   47e14:	318d883a 	add	r6,r6,r6
   47e18:	9809883a 	mov	r4,r19
   47e1c:	31800504 	addi	r6,r6,20
   47e20:	80001226 	beq	r16,zero,47e6c <_Balloc+0xa4>
   47e24:	80800017 	ldw	r2,0(r16)
   47e28:	18800015 	stw	r2,0(r3)
   47e2c:	80000415 	stw	zero,16(r16)
   47e30:	80000315 	stw	zero,12(r16)
   47e34:	8005883a 	mov	r2,r16
   47e38:	dfc00417 	ldw	ra,16(sp)
   47e3c:	dcc00317 	ldw	r19,12(sp)
   47e40:	dc800217 	ldw	r18,8(sp)
   47e44:	dc400117 	ldw	r17,4(sp)
   47e48:	dc000017 	ldw	r16,0(sp)
   47e4c:	dec00504 	addi	sp,sp,20
   47e50:	f800283a 	ret
   47e54:	004bda40 	call	4bda4 <_calloc_r>
   47e58:	1007883a 	mov	r3,r2
   47e5c:	0021883a 	mov	r16,zero
   47e60:	98801315 	stw	r2,76(r19)
   47e64:	103fe41e 	bne	r2,zero,47df8 <_Balloc+0x30>
   47e68:	003ff206 	br	47e34 <_Balloc+0x6c>
   47e6c:	004bda40 	call	4bda4 <_calloc_r>
   47e70:	103ff026 	beq	r2,zero,47e34 <_Balloc+0x6c>
   47e74:	1021883a 	mov	r16,r2
   47e78:	14800115 	stw	r18,4(r2)
   47e7c:	14400215 	stw	r17,8(r2)
   47e80:	003fea06 	br	47e2c <_Balloc+0x64>

00047e84 <__d2b>:
   47e84:	defff504 	addi	sp,sp,-44
   47e88:	dcc00515 	stw	r19,20(sp)
   47e8c:	04c00044 	movi	r19,1
   47e90:	dc000215 	stw	r16,8(sp)
   47e94:	2821883a 	mov	r16,r5
   47e98:	980b883a 	mov	r5,r19
   47e9c:	ddc00915 	stw	r23,36(sp)
   47ea0:	dd800815 	stw	r22,32(sp)
   47ea4:	dd400715 	stw	r21,28(sp)
   47ea8:	dd000615 	stw	r20,24(sp)
   47eac:	dc800415 	stw	r18,16(sp)
   47eb0:	dc400315 	stw	r17,12(sp)
   47eb4:	dfc00a15 	stw	ra,40(sp)
   47eb8:	3023883a 	mov	r17,r6
   47ebc:	382d883a 	mov	r22,r7
   47ec0:	ddc00b17 	ldw	r23,44(sp)
   47ec4:	0047dc80 	call	47dc8 <_Balloc>
   47ec8:	1025883a 	mov	r18,r2
   47ecc:	00a00034 	movhi	r2,32768
   47ed0:	10bfffc4 	addi	r2,r2,-1
   47ed4:	8888703a 	and	r4,r17,r2
   47ed8:	202ad53a 	srli	r21,r4,20
   47edc:	00800434 	movhi	r2,16
   47ee0:	10bfffc4 	addi	r2,r2,-1
   47ee4:	8886703a 	and	r3,r17,r2
   47ee8:	a829003a 	cmpeq	r20,r21,zero
   47eec:	800b883a 	mov	r5,r16
   47ef0:	d8c00115 	stw	r3,4(sp)
   47ef4:	94000504 	addi	r16,r18,20
   47ef8:	a000021e 	bne	r20,zero,47f04 <__d2b+0x80>
   47efc:	18c00434 	orhi	r3,r3,16
   47f00:	d8c00115 	stw	r3,4(sp)
   47f04:	28002726 	beq	r5,zero,47fa4 <__d2b+0x120>
   47f08:	d809883a 	mov	r4,sp
   47f0c:	d9400015 	stw	r5,0(sp)
   47f10:	00478e00 	call	478e0 <__lo0bits>
   47f14:	100d883a 	mov	r6,r2
   47f18:	10003526 	beq	r2,zero,47ff0 <__d2b+0x16c>
   47f1c:	d8c00117 	ldw	r3,4(sp)
   47f20:	00800804 	movi	r2,32
   47f24:	1185c83a 	sub	r2,r2,r6
   47f28:	d9000017 	ldw	r4,0(sp)
   47f2c:	1886983a 	sll	r3,r3,r2
   47f30:	1906b03a 	or	r3,r3,r4
   47f34:	90c00515 	stw	r3,20(r18)
   47f38:	d8c00117 	ldw	r3,4(sp)
   47f3c:	1986d83a 	srl	r3,r3,r6
   47f40:	d8c00115 	stw	r3,4(sp)
   47f44:	180b003a 	cmpeq	r5,r3,zero
   47f48:	00800084 	movi	r2,2
   47f4c:	114bc83a 	sub	r5,r2,r5
   47f50:	80c00115 	stw	r3,4(r16)
   47f54:	91400415 	stw	r5,16(r18)
   47f58:	a0001a1e 	bne	r20,zero,47fc4 <__d2b+0x140>
   47f5c:	3545883a 	add	r2,r6,r21
   47f60:	10bef344 	addi	r2,r2,-1075
   47f64:	00c00d44 	movi	r3,53
   47f68:	b0800015 	stw	r2,0(r22)
   47f6c:	1987c83a 	sub	r3,r3,r6
   47f70:	b8c00015 	stw	r3,0(r23)
   47f74:	9005883a 	mov	r2,r18
   47f78:	dfc00a17 	ldw	ra,40(sp)
   47f7c:	ddc00917 	ldw	r23,36(sp)
   47f80:	dd800817 	ldw	r22,32(sp)
   47f84:	dd400717 	ldw	r21,28(sp)
   47f88:	dd000617 	ldw	r20,24(sp)
   47f8c:	dcc00517 	ldw	r19,20(sp)
   47f90:	dc800417 	ldw	r18,16(sp)
   47f94:	dc400317 	ldw	r17,12(sp)
   47f98:	dc000217 	ldw	r16,8(sp)
   47f9c:	dec00b04 	addi	sp,sp,44
   47fa0:	f800283a 	ret
   47fa4:	d9000104 	addi	r4,sp,4
   47fa8:	00478e00 	call	478e0 <__lo0bits>
   47fac:	11800804 	addi	r6,r2,32
   47fb0:	d8800117 	ldw	r2,4(sp)
   47fb4:	94c00415 	stw	r19,16(r18)
   47fb8:	980b883a 	mov	r5,r19
   47fbc:	90800515 	stw	r2,20(r18)
   47fc0:	a03fe626 	beq	r20,zero,47f5c <__d2b+0xd8>
   47fc4:	2945883a 	add	r2,r5,r5
   47fc8:	1085883a 	add	r2,r2,r2
   47fcc:	1405883a 	add	r2,r2,r16
   47fd0:	113fff17 	ldw	r4,-4(r2)
   47fd4:	30fef384 	addi	r3,r6,-1074
   47fd8:	2820917a 	slli	r16,r5,5
   47fdc:	b0c00015 	stw	r3,0(r22)
   47fe0:	00478700 	call	47870 <__hi0bits>
   47fe4:	80a1c83a 	sub	r16,r16,r2
   47fe8:	bc000015 	stw	r16,0(r23)
   47fec:	003fe106 	br	47f74 <__d2b+0xf0>
   47ff0:	d8800017 	ldw	r2,0(sp)
   47ff4:	90800515 	stw	r2,20(r18)
   47ff8:	d8c00117 	ldw	r3,4(sp)
   47ffc:	003fd106 	br	47f44 <__d2b+0xc0>

00048000 <__mdiff>:
   48000:	defffb04 	addi	sp,sp,-20
   48004:	dc000015 	stw	r16,0(sp)
   48008:	2821883a 	mov	r16,r5
   4800c:	dc800215 	stw	r18,8(sp)
   48010:	300b883a 	mov	r5,r6
   48014:	2025883a 	mov	r18,r4
   48018:	8009883a 	mov	r4,r16
   4801c:	dc400115 	stw	r17,4(sp)
   48020:	dfc00415 	stw	ra,16(sp)
   48024:	dcc00315 	stw	r19,12(sp)
   48028:	3023883a 	mov	r17,r6
   4802c:	00479a40 	call	479a4 <__mcmp>
   48030:	10004226 	beq	r2,zero,4813c <__mdiff+0x13c>
   48034:	10005016 	blt	r2,zero,48178 <__mdiff+0x178>
   48038:	0027883a 	mov	r19,zero
   4803c:	81400117 	ldw	r5,4(r16)
   48040:	9009883a 	mov	r4,r18
   48044:	0047dc80 	call	47dc8 <_Balloc>
   48048:	1019883a 	mov	r12,r2
   4804c:	82800417 	ldw	r10,16(r16)
   48050:	88800417 	ldw	r2,16(r17)
   48054:	81800504 	addi	r6,r16,20
   48058:	5287883a 	add	r3,r10,r10
   4805c:	1085883a 	add	r2,r2,r2
   48060:	18c7883a 	add	r3,r3,r3
   48064:	1085883a 	add	r2,r2,r2
   48068:	8a000504 	addi	r8,r17,20
   4806c:	64c00315 	stw	r19,12(r12)
   48070:	30db883a 	add	r13,r6,r3
   48074:	4097883a 	add	r11,r8,r2
   48078:	61c00504 	addi	r7,r12,20
   4807c:	0013883a 	mov	r9,zero
   48080:	31000017 	ldw	r4,0(r6)
   48084:	41400017 	ldw	r5,0(r8)
   48088:	42000104 	addi	r8,r8,4
   4808c:	20bfffcc 	andi	r2,r4,65535
   48090:	28ffffcc 	andi	r3,r5,65535
   48094:	10c5c83a 	sub	r2,r2,r3
   48098:	1245883a 	add	r2,r2,r9
   4809c:	2008d43a 	srli	r4,r4,16
   480a0:	280ad43a 	srli	r5,r5,16
   480a4:	1007d43a 	srai	r3,r2,16
   480a8:	3880000d 	sth	r2,0(r7)
   480ac:	2149c83a 	sub	r4,r4,r5
   480b0:	20c9883a 	add	r4,r4,r3
   480b4:	3900008d 	sth	r4,2(r7)
   480b8:	31800104 	addi	r6,r6,4
   480bc:	39c00104 	addi	r7,r7,4
   480c0:	2013d43a 	srai	r9,r4,16
   480c4:	42ffee36 	bltu	r8,r11,48080 <__mdiff+0x80>
   480c8:	33400c2e 	bgeu	r6,r13,480fc <__mdiff+0xfc>
   480cc:	30800017 	ldw	r2,0(r6)
   480d0:	31800104 	addi	r6,r6,4
   480d4:	10ffffcc 	andi	r3,r2,65535
   480d8:	1a47883a 	add	r3,r3,r9
   480dc:	1004d43a 	srli	r2,r2,16
   480e0:	1809d43a 	srai	r4,r3,16
   480e4:	38c0000d 	sth	r3,0(r7)
   480e8:	1105883a 	add	r2,r2,r4
   480ec:	3880008d 	sth	r2,2(r7)
   480f0:	1013d43a 	srai	r9,r2,16
   480f4:	39c00104 	addi	r7,r7,4
   480f8:	337ff436 	bltu	r6,r13,480cc <__mdiff+0xcc>
   480fc:	38bfff17 	ldw	r2,-4(r7)
   48100:	38ffff04 	addi	r3,r7,-4
   48104:	1000041e 	bne	r2,zero,48118 <__mdiff+0x118>
   48108:	18ffff04 	addi	r3,r3,-4
   4810c:	18800017 	ldw	r2,0(r3)
   48110:	52bfffc4 	addi	r10,r10,-1
   48114:	103ffc26 	beq	r2,zero,48108 <__mdiff+0x108>
   48118:	6005883a 	mov	r2,r12
   4811c:	62800415 	stw	r10,16(r12)
   48120:	dfc00417 	ldw	ra,16(sp)
   48124:	dcc00317 	ldw	r19,12(sp)
   48128:	dc800217 	ldw	r18,8(sp)
   4812c:	dc400117 	ldw	r17,4(sp)
   48130:	dc000017 	ldw	r16,0(sp)
   48134:	dec00504 	addi	sp,sp,20
   48138:	f800283a 	ret
   4813c:	9009883a 	mov	r4,r18
   48140:	000b883a 	mov	r5,zero
   48144:	0047dc80 	call	47dc8 <_Balloc>
   48148:	1019883a 	mov	r12,r2
   4814c:	00800044 	movi	r2,1
   48150:	60800415 	stw	r2,16(r12)
   48154:	6005883a 	mov	r2,r12
   48158:	60000515 	stw	zero,20(r12)
   4815c:	dfc00417 	ldw	ra,16(sp)
   48160:	dcc00317 	ldw	r19,12(sp)
   48164:	dc800217 	ldw	r18,8(sp)
   48168:	dc400117 	ldw	r17,4(sp)
   4816c:	dc000017 	ldw	r16,0(sp)
   48170:	dec00504 	addi	sp,sp,20
   48174:	f800283a 	ret
   48178:	880d883a 	mov	r6,r17
   4817c:	04c00044 	movi	r19,1
   48180:	8023883a 	mov	r17,r16
   48184:	3021883a 	mov	r16,r6
   48188:	003fac06 	br	4803c <__mdiff+0x3c>

0004818c <__lshift>:
   4818c:	defff904 	addi	sp,sp,-28
   48190:	28800417 	ldw	r2,16(r5)
   48194:	dc000015 	stw	r16,0(sp)
   48198:	3021d17a 	srai	r16,r6,5
   4819c:	28c00217 	ldw	r3,8(r5)
   481a0:	10800044 	addi	r2,r2,1
   481a4:	dc400115 	stw	r17,4(sp)
   481a8:	80a3883a 	add	r17,r16,r2
   481ac:	dd400515 	stw	r21,20(sp)
   481b0:	dd000415 	stw	r20,16(sp)
   481b4:	dc800215 	stw	r18,8(sp)
   481b8:	dfc00615 	stw	ra,24(sp)
   481bc:	2825883a 	mov	r18,r5
   481c0:	dcc00315 	stw	r19,12(sp)
   481c4:	3029883a 	mov	r20,r6
   481c8:	202b883a 	mov	r21,r4
   481cc:	29400117 	ldw	r5,4(r5)
   481d0:	1c40030e 	bge	r3,r17,481e0 <__lshift+0x54>
   481d4:	18c7883a 	add	r3,r3,r3
   481d8:	29400044 	addi	r5,r5,1
   481dc:	1c7ffd16 	blt	r3,r17,481d4 <__lshift+0x48>
   481e0:	a809883a 	mov	r4,r21
   481e4:	0047dc80 	call	47dc8 <_Balloc>
   481e8:	1027883a 	mov	r19,r2
   481ec:	11400504 	addi	r5,r2,20
   481f0:	0400090e 	bge	zero,r16,48218 <__lshift+0x8c>
   481f4:	2805883a 	mov	r2,r5
   481f8:	0007883a 	mov	r3,zero
   481fc:	18c00044 	addi	r3,r3,1
   48200:	10000015 	stw	zero,0(r2)
   48204:	10800104 	addi	r2,r2,4
   48208:	80fffc1e 	bne	r16,r3,481fc <__lshift+0x70>
   4820c:	8405883a 	add	r2,r16,r16
   48210:	1085883a 	add	r2,r2,r2
   48214:	288b883a 	add	r5,r5,r2
   48218:	90800417 	ldw	r2,16(r18)
   4821c:	91000504 	addi	r4,r18,20
   48220:	a18007cc 	andi	r6,r20,31
   48224:	1085883a 	add	r2,r2,r2
   48228:	1085883a 	add	r2,r2,r2
   4822c:	208f883a 	add	r7,r4,r2
   48230:	30001e26 	beq	r6,zero,482ac <__lshift+0x120>
   48234:	00800804 	movi	r2,32
   48238:	1191c83a 	sub	r8,r2,r6
   4823c:	0007883a 	mov	r3,zero
   48240:	20800017 	ldw	r2,0(r4)
   48244:	1184983a 	sll	r2,r2,r6
   48248:	1884b03a 	or	r2,r3,r2
   4824c:	28800015 	stw	r2,0(r5)
   48250:	20c00017 	ldw	r3,0(r4)
   48254:	21000104 	addi	r4,r4,4
   48258:	29400104 	addi	r5,r5,4
   4825c:	1a06d83a 	srl	r3,r3,r8
   48260:	21fff736 	bltu	r4,r7,48240 <__lshift+0xb4>
   48264:	28c00015 	stw	r3,0(r5)
   48268:	18000126 	beq	r3,zero,48270 <__lshift+0xe4>
   4826c:	8c400044 	addi	r17,r17,1
   48270:	88bfffc4 	addi	r2,r17,-1
   48274:	98800415 	stw	r2,16(r19)
   48278:	a809883a 	mov	r4,r21
   4827c:	900b883a 	mov	r5,r18
   48280:	00478480 	call	47848 <_Bfree>
   48284:	9805883a 	mov	r2,r19
   48288:	dfc00617 	ldw	ra,24(sp)
   4828c:	dd400517 	ldw	r21,20(sp)
   48290:	dd000417 	ldw	r20,16(sp)
   48294:	dcc00317 	ldw	r19,12(sp)
   48298:	dc800217 	ldw	r18,8(sp)
   4829c:	dc400117 	ldw	r17,4(sp)
   482a0:	dc000017 	ldw	r16,0(sp)
   482a4:	dec00704 	addi	sp,sp,28
   482a8:	f800283a 	ret
   482ac:	20800017 	ldw	r2,0(r4)
   482b0:	21000104 	addi	r4,r4,4
   482b4:	28800015 	stw	r2,0(r5)
   482b8:	29400104 	addi	r5,r5,4
   482bc:	21ffec2e 	bgeu	r4,r7,48270 <__lshift+0xe4>
   482c0:	20800017 	ldw	r2,0(r4)
   482c4:	21000104 	addi	r4,r4,4
   482c8:	28800015 	stw	r2,0(r5)
   482cc:	29400104 	addi	r5,r5,4
   482d0:	21fff636 	bltu	r4,r7,482ac <__lshift+0x120>
   482d4:	003fe606 	br	48270 <__lshift+0xe4>

000482d8 <__multiply>:
   482d8:	defff004 	addi	sp,sp,-64
   482dc:	dc800815 	stw	r18,32(sp)
   482e0:	dc400715 	stw	r17,28(sp)
   482e4:	2c800417 	ldw	r18,16(r5)
   482e8:	34400417 	ldw	r17,16(r6)
   482ec:	dcc00915 	stw	r19,36(sp)
   482f0:	dc000615 	stw	r16,24(sp)
   482f4:	dfc00f15 	stw	ra,60(sp)
   482f8:	df000e15 	stw	fp,56(sp)
   482fc:	ddc00d15 	stw	r23,52(sp)
   48300:	dd800c15 	stw	r22,48(sp)
   48304:	dd400b15 	stw	r21,44(sp)
   48308:	dd000a15 	stw	r20,40(sp)
   4830c:	2821883a 	mov	r16,r5
   48310:	3027883a 	mov	r19,r6
   48314:	9440040e 	bge	r18,r17,48328 <__multiply+0x50>
   48318:	8825883a 	mov	r18,r17
   4831c:	2c400417 	ldw	r17,16(r5)
   48320:	2827883a 	mov	r19,r5
   48324:	3021883a 	mov	r16,r6
   48328:	80800217 	ldw	r2,8(r16)
   4832c:	9447883a 	add	r3,r18,r17
   48330:	d8c00415 	stw	r3,16(sp)
   48334:	81400117 	ldw	r5,4(r16)
   48338:	10c0010e 	bge	r2,r3,48340 <__multiply+0x68>
   4833c:	29400044 	addi	r5,r5,1
   48340:	0047dc80 	call	47dc8 <_Balloc>
   48344:	d8800515 	stw	r2,20(sp)
   48348:	d9000417 	ldw	r4,16(sp)
   4834c:	d8c00517 	ldw	r3,20(sp)
   48350:	2105883a 	add	r2,r4,r4
   48354:	1085883a 	add	r2,r2,r2
   48358:	19000504 	addi	r4,r3,20
   4835c:	2085883a 	add	r2,r4,r2
   48360:	d8800315 	stw	r2,12(sp)
   48364:	2080052e 	bgeu	r4,r2,4837c <__multiply+0xa4>
   48368:	2005883a 	mov	r2,r4
   4836c:	d8c00317 	ldw	r3,12(sp)
   48370:	10000015 	stw	zero,0(r2)
   48374:	10800104 	addi	r2,r2,4
   48378:	10fffc36 	bltu	r2,r3,4836c <__multiply+0x94>
   4837c:	8c45883a 	add	r2,r17,r17
   48380:	9487883a 	add	r3,r18,r18
   48384:	9dc00504 	addi	r23,r19,20
   48388:	1085883a 	add	r2,r2,r2
   4838c:	84000504 	addi	r16,r16,20
   48390:	18c7883a 	add	r3,r3,r3
   48394:	b885883a 	add	r2,r23,r2
   48398:	dc000015 	stw	r16,0(sp)
   4839c:	d8800215 	stw	r2,8(sp)
   483a0:	80f9883a 	add	fp,r16,r3
   483a4:	b880432e 	bgeu	r23,r2,484b4 <__multiply+0x1dc>
   483a8:	d9000115 	stw	r4,4(sp)
   483ac:	b9000017 	ldw	r4,0(r23)
   483b0:	253fffcc 	andi	r20,r4,65535
   483b4:	a0001a26 	beq	r20,zero,48420 <__multiply+0x148>
   483b8:	dcc00017 	ldw	r19,0(sp)
   483bc:	dc800117 	ldw	r18,4(sp)
   483c0:	002b883a 	mov	r21,zero
   483c4:	9c400017 	ldw	r17,0(r19)
   483c8:	94000017 	ldw	r16,0(r18)
   483cc:	a009883a 	mov	r4,r20
   483d0:	897fffcc 	andi	r5,r17,65535
   483d4:	004f1100 	call	4f110 <__mulsi3>
   483d8:	880ad43a 	srli	r5,r17,16
   483dc:	80ffffcc 	andi	r3,r16,65535
   483e0:	a8c7883a 	add	r3,r21,r3
   483e4:	a009883a 	mov	r4,r20
   483e8:	10e3883a 	add	r17,r2,r3
   483ec:	8020d43a 	srli	r16,r16,16
   483f0:	004f1100 	call	4f110 <__mulsi3>
   483f4:	8806d43a 	srli	r3,r17,16
   483f8:	1405883a 	add	r2,r2,r16
   483fc:	9cc00104 	addi	r19,r19,4
   48400:	1887883a 	add	r3,r3,r2
   48404:	90c0008d 	sth	r3,2(r18)
   48408:	9440000d 	sth	r17,0(r18)
   4840c:	182ad43a 	srli	r21,r3,16
   48410:	94800104 	addi	r18,r18,4
   48414:	9f3feb36 	bltu	r19,fp,483c4 <__multiply+0xec>
   48418:	95400015 	stw	r21,0(r18)
   4841c:	b9000017 	ldw	r4,0(r23)
   48420:	202ad43a 	srli	r21,r4,16
   48424:	a8001c26 	beq	r21,zero,48498 <__multiply+0x1c0>
   48428:	d9000117 	ldw	r4,4(sp)
   4842c:	dd000017 	ldw	r20,0(sp)
   48430:	002d883a 	mov	r22,zero
   48434:	24c00017 	ldw	r19,0(r4)
   48438:	2025883a 	mov	r18,r4
   4843c:	9823883a 	mov	r17,r19
   48440:	a4000017 	ldw	r16,0(r20)
   48444:	a809883a 	mov	r4,r21
   48448:	a5000104 	addi	r20,r20,4
   4844c:	817fffcc 	andi	r5,r16,65535
   48450:	004f1100 	call	4f110 <__mulsi3>
   48454:	8806d43a 	srli	r3,r17,16
   48458:	800ad43a 	srli	r5,r16,16
   4845c:	94c0000d 	sth	r19,0(r18)
   48460:	b0c7883a 	add	r3,r22,r3
   48464:	10e1883a 	add	r16,r2,r3
   48468:	9400008d 	sth	r16,2(r18)
   4846c:	a809883a 	mov	r4,r21
   48470:	94800104 	addi	r18,r18,4
   48474:	004f1100 	call	4f110 <__mulsi3>
   48478:	94400017 	ldw	r17,0(r18)
   4847c:	8020d43a 	srli	r16,r16,16
   48480:	88ffffcc 	andi	r3,r17,65535
   48484:	10c5883a 	add	r2,r2,r3
   48488:	80a7883a 	add	r19,r16,r2
   4848c:	982cd43a 	srli	r22,r19,16
   48490:	a73feb36 	bltu	r20,fp,48440 <__multiply+0x168>
   48494:	94c00015 	stw	r19,0(r18)
   48498:	d8800217 	ldw	r2,8(sp)
   4849c:	bdc00104 	addi	r23,r23,4
   484a0:	b880042e 	bgeu	r23,r2,484b4 <__multiply+0x1dc>
   484a4:	d8c00117 	ldw	r3,4(sp)
   484a8:	18c00104 	addi	r3,r3,4
   484ac:	d8c00115 	stw	r3,4(sp)
   484b0:	003fbe06 	br	483ac <__multiply+0xd4>
   484b4:	d9000417 	ldw	r4,16(sp)
   484b8:	01000c0e 	bge	zero,r4,484ec <__multiply+0x214>
   484bc:	d8c00317 	ldw	r3,12(sp)
   484c0:	18bfff17 	ldw	r2,-4(r3)
   484c4:	18ffff04 	addi	r3,r3,-4
   484c8:	10000326 	beq	r2,zero,484d8 <__multiply+0x200>
   484cc:	00000706 	br	484ec <__multiply+0x214>
   484d0:	18800017 	ldw	r2,0(r3)
   484d4:	1000051e 	bne	r2,zero,484ec <__multiply+0x214>
   484d8:	d9000417 	ldw	r4,16(sp)
   484dc:	18ffff04 	addi	r3,r3,-4
   484e0:	213fffc4 	addi	r4,r4,-1
   484e4:	d9000415 	stw	r4,16(sp)
   484e8:	203ff91e 	bne	r4,zero,484d0 <__multiply+0x1f8>
   484ec:	d8800417 	ldw	r2,16(sp)
   484f0:	d8c00517 	ldw	r3,20(sp)
   484f4:	18800415 	stw	r2,16(r3)
   484f8:	1805883a 	mov	r2,r3
   484fc:	dfc00f17 	ldw	ra,60(sp)
   48500:	df000e17 	ldw	fp,56(sp)
   48504:	ddc00d17 	ldw	r23,52(sp)
   48508:	dd800c17 	ldw	r22,48(sp)
   4850c:	dd400b17 	ldw	r21,44(sp)
   48510:	dd000a17 	ldw	r20,40(sp)
   48514:	dcc00917 	ldw	r19,36(sp)
   48518:	dc800817 	ldw	r18,32(sp)
   4851c:	dc400717 	ldw	r17,28(sp)
   48520:	dc000617 	ldw	r16,24(sp)
   48524:	dec01004 	addi	sp,sp,64
   48528:	f800283a 	ret

0004852c <__i2b>:
   4852c:	defffd04 	addi	sp,sp,-12
   48530:	dc000015 	stw	r16,0(sp)
   48534:	04000044 	movi	r16,1
   48538:	dc800115 	stw	r18,4(sp)
   4853c:	2825883a 	mov	r18,r5
   48540:	800b883a 	mov	r5,r16
   48544:	dfc00215 	stw	ra,8(sp)
   48548:	0047dc80 	call	47dc8 <_Balloc>
   4854c:	14000415 	stw	r16,16(r2)
   48550:	14800515 	stw	r18,20(r2)
   48554:	dfc00217 	ldw	ra,8(sp)
   48558:	dc800117 	ldw	r18,4(sp)
   4855c:	dc000017 	ldw	r16,0(sp)
   48560:	dec00304 	addi	sp,sp,12
   48564:	f800283a 	ret

00048568 <__multadd>:
   48568:	defff604 	addi	sp,sp,-40
   4856c:	dd800615 	stw	r22,24(sp)
   48570:	2d800417 	ldw	r22,16(r5)
   48574:	df000815 	stw	fp,32(sp)
   48578:	ddc00715 	stw	r23,28(sp)
   4857c:	dd400515 	stw	r21,20(sp)
   48580:	dd000415 	stw	r20,16(sp)
   48584:	dcc00315 	stw	r19,12(sp)
   48588:	dc800215 	stw	r18,8(sp)
   4858c:	dfc00915 	stw	ra,36(sp)
   48590:	dc400115 	stw	r17,4(sp)
   48594:	dc000015 	stw	r16,0(sp)
   48598:	282f883a 	mov	r23,r5
   4859c:	2039883a 	mov	fp,r4
   485a0:	302b883a 	mov	r21,r6
   485a4:	3829883a 	mov	r20,r7
   485a8:	2c800504 	addi	r18,r5,20
   485ac:	0027883a 	mov	r19,zero
   485b0:	94400017 	ldw	r17,0(r18)
   485b4:	a80b883a 	mov	r5,r21
   485b8:	9cc00044 	addi	r19,r19,1
   485bc:	893fffcc 	andi	r4,r17,65535
   485c0:	004f1100 	call	4f110 <__mulsi3>
   485c4:	8808d43a 	srli	r4,r17,16
   485c8:	1521883a 	add	r16,r2,r20
   485cc:	a80b883a 	mov	r5,r21
   485d0:	004f1100 	call	4f110 <__mulsi3>
   485d4:	8008d43a 	srli	r4,r16,16
   485d8:	843fffcc 	andi	r16,r16,65535
   485dc:	1105883a 	add	r2,r2,r4
   485e0:	1006943a 	slli	r3,r2,16
   485e4:	1028d43a 	srli	r20,r2,16
   485e8:	1c07883a 	add	r3,r3,r16
   485ec:	90c00015 	stw	r3,0(r18)
   485f0:	94800104 	addi	r18,r18,4
   485f4:	9dbfee16 	blt	r19,r22,485b0 <__multadd+0x48>
   485f8:	a0000826 	beq	r20,zero,4861c <__multadd+0xb4>
   485fc:	b8800217 	ldw	r2,8(r23)
   48600:	b080130e 	bge	r22,r2,48650 <__multadd+0xe8>
   48604:	b585883a 	add	r2,r22,r22
   48608:	1085883a 	add	r2,r2,r2
   4860c:	15c5883a 	add	r2,r2,r23
   48610:	b0c00044 	addi	r3,r22,1
   48614:	15000515 	stw	r20,20(r2)
   48618:	b8c00415 	stw	r3,16(r23)
   4861c:	b805883a 	mov	r2,r23
   48620:	dfc00917 	ldw	ra,36(sp)
   48624:	df000817 	ldw	fp,32(sp)
   48628:	ddc00717 	ldw	r23,28(sp)
   4862c:	dd800617 	ldw	r22,24(sp)
   48630:	dd400517 	ldw	r21,20(sp)
   48634:	dd000417 	ldw	r20,16(sp)
   48638:	dcc00317 	ldw	r19,12(sp)
   4863c:	dc800217 	ldw	r18,8(sp)
   48640:	dc400117 	ldw	r17,4(sp)
   48644:	dc000017 	ldw	r16,0(sp)
   48648:	dec00a04 	addi	sp,sp,40
   4864c:	f800283a 	ret
   48650:	b9400117 	ldw	r5,4(r23)
   48654:	e009883a 	mov	r4,fp
   48658:	29400044 	addi	r5,r5,1
   4865c:	0047dc80 	call	47dc8 <_Balloc>
   48660:	b9800417 	ldw	r6,16(r23)
   48664:	b9400304 	addi	r5,r23,12
   48668:	11000304 	addi	r4,r2,12
   4866c:	318d883a 	add	r6,r6,r6
   48670:	318d883a 	add	r6,r6,r6
   48674:	31800204 	addi	r6,r6,8
   48678:	1023883a 	mov	r17,r2
   4867c:	00476300 	call	47630 <memcpy>
   48680:	b80b883a 	mov	r5,r23
   48684:	e009883a 	mov	r4,fp
   48688:	00478480 	call	47848 <_Bfree>
   4868c:	882f883a 	mov	r23,r17
   48690:	003fdc06 	br	48604 <__multadd+0x9c>

00048694 <__pow5mult>:
   48694:	defffa04 	addi	sp,sp,-24
   48698:	308000cc 	andi	r2,r6,3
   4869c:	dd000415 	stw	r20,16(sp)
   486a0:	dcc00315 	stw	r19,12(sp)
   486a4:	dc000015 	stw	r16,0(sp)
   486a8:	dfc00515 	stw	ra,20(sp)
   486ac:	dc800215 	stw	r18,8(sp)
   486b0:	dc400115 	stw	r17,4(sp)
   486b4:	3021883a 	mov	r16,r6
   486b8:	2027883a 	mov	r19,r4
   486bc:	2829883a 	mov	r20,r5
   486c0:	10002b1e 	bne	r2,zero,48770 <__pow5mult+0xdc>
   486c4:	8025d0ba 	srai	r18,r16,2
   486c8:	90001b26 	beq	r18,zero,48738 <__pow5mult+0xa4>
   486cc:	9c001217 	ldw	r16,72(r19)
   486d0:	8000081e 	bne	r16,zero,486f4 <__pow5mult+0x60>
   486d4:	00003006 	br	48798 <__pow5mult+0x104>
   486d8:	800b883a 	mov	r5,r16
   486dc:	800d883a 	mov	r6,r16
   486e0:	9809883a 	mov	r4,r19
   486e4:	90001426 	beq	r18,zero,48738 <__pow5mult+0xa4>
   486e8:	80800017 	ldw	r2,0(r16)
   486ec:	10001b26 	beq	r2,zero,4875c <__pow5mult+0xc8>
   486f0:	1021883a 	mov	r16,r2
   486f4:	9080004c 	andi	r2,r18,1
   486f8:	1005003a 	cmpeq	r2,r2,zero
   486fc:	9025d07a 	srai	r18,r18,1
   48700:	800d883a 	mov	r6,r16
   48704:	9809883a 	mov	r4,r19
   48708:	a00b883a 	mov	r5,r20
   4870c:	103ff21e 	bne	r2,zero,486d8 <__pow5mult+0x44>
   48710:	00482d80 	call	482d8 <__multiply>
   48714:	a00b883a 	mov	r5,r20
   48718:	9809883a 	mov	r4,r19
   4871c:	1023883a 	mov	r17,r2
   48720:	00478480 	call	47848 <_Bfree>
   48724:	8829883a 	mov	r20,r17
   48728:	800b883a 	mov	r5,r16
   4872c:	800d883a 	mov	r6,r16
   48730:	9809883a 	mov	r4,r19
   48734:	903fec1e 	bne	r18,zero,486e8 <__pow5mult+0x54>
   48738:	a005883a 	mov	r2,r20
   4873c:	dfc00517 	ldw	ra,20(sp)
   48740:	dd000417 	ldw	r20,16(sp)
   48744:	dcc00317 	ldw	r19,12(sp)
   48748:	dc800217 	ldw	r18,8(sp)
   4874c:	dc400117 	ldw	r17,4(sp)
   48750:	dc000017 	ldw	r16,0(sp)
   48754:	dec00604 	addi	sp,sp,24
   48758:	f800283a 	ret
   4875c:	00482d80 	call	482d8 <__multiply>
   48760:	80800015 	stw	r2,0(r16)
   48764:	1021883a 	mov	r16,r2
   48768:	10000015 	stw	zero,0(r2)
   4876c:	003fe106 	br	486f4 <__pow5mult+0x60>
   48770:	1085883a 	add	r2,r2,r2
   48774:	00c00174 	movhi	r3,5
   48778:	18cadb04 	addi	r3,r3,11116
   4877c:	1085883a 	add	r2,r2,r2
   48780:	10c5883a 	add	r2,r2,r3
   48784:	11bfff17 	ldw	r6,-4(r2)
   48788:	000f883a 	mov	r7,zero
   4878c:	00485680 	call	48568 <__multadd>
   48790:	1029883a 	mov	r20,r2
   48794:	003fcb06 	br	486c4 <__pow5mult+0x30>
   48798:	9809883a 	mov	r4,r19
   4879c:	01409c44 	movi	r5,625
   487a0:	004852c0 	call	4852c <__i2b>
   487a4:	98801215 	stw	r2,72(r19)
   487a8:	1021883a 	mov	r16,r2
   487ac:	10000015 	stw	zero,0(r2)
   487b0:	003fd006 	br	486f4 <__pow5mult+0x60>

000487b4 <__s2b>:
   487b4:	defff904 	addi	sp,sp,-28
   487b8:	dcc00315 	stw	r19,12(sp)
   487bc:	dc800215 	stw	r18,8(sp)
   487c0:	2827883a 	mov	r19,r5
   487c4:	2025883a 	mov	r18,r4
   487c8:	01400244 	movi	r5,9
   487cc:	39000204 	addi	r4,r7,8
   487d0:	dd000415 	stw	r20,16(sp)
   487d4:	dc400115 	stw	r17,4(sp)
   487d8:	dfc00615 	stw	ra,24(sp)
   487dc:	dd400515 	stw	r21,20(sp)
   487e0:	dc000015 	stw	r16,0(sp)
   487e4:	3829883a 	mov	r20,r7
   487e8:	3023883a 	mov	r17,r6
   487ec:	004f0400 	call	4f040 <__divsi3>
   487f0:	00c00044 	movi	r3,1
   487f4:	1880350e 	bge	r3,r2,488cc <__s2b+0x118>
   487f8:	000b883a 	mov	r5,zero
   487fc:	18c7883a 	add	r3,r3,r3
   48800:	29400044 	addi	r5,r5,1
   48804:	18bffd16 	blt	r3,r2,487fc <__s2b+0x48>
   48808:	9009883a 	mov	r4,r18
   4880c:	0047dc80 	call	47dc8 <_Balloc>
   48810:	1011883a 	mov	r8,r2
   48814:	d8800717 	ldw	r2,28(sp)
   48818:	00c00044 	movi	r3,1
   4881c:	01800244 	movi	r6,9
   48820:	40800515 	stw	r2,20(r8)
   48824:	40c00415 	stw	r3,16(r8)
   48828:	3440260e 	bge	r6,r17,488c4 <__s2b+0x110>
   4882c:	3021883a 	mov	r16,r6
   48830:	99ab883a 	add	r21,r19,r6
   48834:	9c05883a 	add	r2,r19,r16
   48838:	11c00007 	ldb	r7,0(r2)
   4883c:	400b883a 	mov	r5,r8
   48840:	9009883a 	mov	r4,r18
   48844:	39fff404 	addi	r7,r7,-48
   48848:	01800284 	movi	r6,10
   4884c:	00485680 	call	48568 <__multadd>
   48850:	84000044 	addi	r16,r16,1
   48854:	1011883a 	mov	r8,r2
   48858:	8c3ff61e 	bne	r17,r16,48834 <__s2b+0x80>
   4885c:	ac45883a 	add	r2,r21,r17
   48860:	117ffe04 	addi	r5,r2,-8
   48864:	880d883a 	mov	r6,r17
   48868:	35000c0e 	bge	r6,r20,4889c <__s2b+0xe8>
   4886c:	a185c83a 	sub	r2,r20,r6
   48870:	2821883a 	mov	r16,r5
   48874:	28a3883a 	add	r17,r5,r2
   48878:	81c00007 	ldb	r7,0(r16)
   4887c:	400b883a 	mov	r5,r8
   48880:	9009883a 	mov	r4,r18
   48884:	39fff404 	addi	r7,r7,-48
   48888:	01800284 	movi	r6,10
   4888c:	00485680 	call	48568 <__multadd>
   48890:	84000044 	addi	r16,r16,1
   48894:	1011883a 	mov	r8,r2
   48898:	847ff71e 	bne	r16,r17,48878 <__s2b+0xc4>
   4889c:	4005883a 	mov	r2,r8
   488a0:	dfc00617 	ldw	ra,24(sp)
   488a4:	dd400517 	ldw	r21,20(sp)
   488a8:	dd000417 	ldw	r20,16(sp)
   488ac:	dcc00317 	ldw	r19,12(sp)
   488b0:	dc800217 	ldw	r18,8(sp)
   488b4:	dc400117 	ldw	r17,4(sp)
   488b8:	dc000017 	ldw	r16,0(sp)
   488bc:	dec00704 	addi	sp,sp,28
   488c0:	f800283a 	ret
   488c4:	99400284 	addi	r5,r19,10
   488c8:	003fe706 	br	48868 <__s2b+0xb4>
   488cc:	000b883a 	mov	r5,zero
   488d0:	003fcd06 	br	48808 <__s2b+0x54>

000488d4 <putc>:
   488d4:	defffc04 	addi	sp,sp,-16
   488d8:	dc800215 	stw	r18,8(sp)
   488dc:	04800174 	movhi	r18,5
   488e0:	9491d604 	addi	r18,r18,18264
   488e4:	90c00017 	ldw	r3,0(r18)
   488e8:	dc400115 	stw	r17,4(sp)
   488ec:	dc000015 	stw	r16,0(sp)
   488f0:	dfc00315 	stw	ra,12(sp)
   488f4:	2023883a 	mov	r17,r4
   488f8:	2821883a 	mov	r16,r5
   488fc:	18000226 	beq	r3,zero,48908 <putc+0x34>
   48900:	18800e17 	ldw	r2,56(r3)
   48904:	10001126 	beq	r2,zero,4894c <putc+0x78>
   48908:	80800217 	ldw	r2,8(r16)
   4890c:	10ffffc4 	addi	r3,r2,-1
   48910:	80c00215 	stw	r3,8(r16)
   48914:	18001316 	blt	r3,zero,48964 <putc+0x90>
   48918:	80800017 	ldw	r2,0(r16)
   4891c:	14400005 	stb	r17,0(r2)
   48920:	80c00017 	ldw	r3,0(r16)
   48924:	18800044 	addi	r2,r3,1
   48928:	18c00003 	ldbu	r3,0(r3)
   4892c:	80800015 	stw	r2,0(r16)
   48930:	1805883a 	mov	r2,r3
   48934:	dfc00317 	ldw	ra,12(sp)
   48938:	dc800217 	ldw	r18,8(sp)
   4893c:	dc400117 	ldw	r17,4(sp)
   48940:	dc000017 	ldw	r16,0(sp)
   48944:	dec00404 	addi	sp,sp,16
   48948:	f800283a 	ret
   4894c:	1809883a 	mov	r4,r3
   48950:	0045b540 	call	45b54 <__sinit>
   48954:	80800217 	ldw	r2,8(r16)
   48958:	10ffffc4 	addi	r3,r2,-1
   4895c:	80c00215 	stw	r3,8(r16)
   48960:	183fed0e 	bge	r3,zero,48918 <putc+0x44>
   48964:	80800617 	ldw	r2,24(r16)
   48968:	18800f16 	blt	r3,r2,489a8 <putc+0xd4>
   4896c:	80800017 	ldw	r2,0(r16)
   48970:	14400005 	stb	r17,0(r2)
   48974:	81000017 	ldw	r4,0(r16)
   48978:	00800284 	movi	r2,10
   4897c:	20c00003 	ldbu	r3,0(r4)
   48980:	18801226 	beq	r3,r2,489cc <putc+0xf8>
   48984:	20800044 	addi	r2,r4,1
   48988:	80800015 	stw	r2,0(r16)
   4898c:	1805883a 	mov	r2,r3
   48990:	dfc00317 	ldw	ra,12(sp)
   48994:	dc800217 	ldw	r18,8(sp)
   48998:	dc400117 	ldw	r17,4(sp)
   4899c:	dc000017 	ldw	r16,0(sp)
   489a0:	dec00404 	addi	sp,sp,16
   489a4:	f800283a 	ret
   489a8:	91000017 	ldw	r4,0(r18)
   489ac:	880b883a 	mov	r5,r17
   489b0:	800d883a 	mov	r6,r16
   489b4:	dfc00317 	ldw	ra,12(sp)
   489b8:	dc800217 	ldw	r18,8(sp)
   489bc:	dc400117 	ldw	r17,4(sp)
   489c0:	dc000017 	ldw	r16,0(sp)
   489c4:	dec00404 	addi	sp,sp,16
   489c8:	004bbe01 	jmpi	4bbe0 <__swbuf_r>
   489cc:	91000017 	ldw	r4,0(r18)
   489d0:	180b883a 	mov	r5,r3
   489d4:	003ff606 	br	489b0 <putc+0xdc>

000489d8 <_putc_r>:
   489d8:	defffc04 	addi	sp,sp,-16
   489dc:	dc400215 	stw	r17,8(sp)
   489e0:	dc000115 	stw	r16,4(sp)
   489e4:	dfc00315 	stw	ra,12(sp)
   489e8:	2021883a 	mov	r16,r4
   489ec:	2823883a 	mov	r17,r5
   489f0:	20000226 	beq	r4,zero,489fc <_putc_r+0x24>
   489f4:	20800e17 	ldw	r2,56(r4)
   489f8:	10001026 	beq	r2,zero,48a3c <_putc_r+0x64>
   489fc:	30800217 	ldw	r2,8(r6)
   48a00:	10ffffc4 	addi	r3,r2,-1
   48a04:	30c00215 	stw	r3,8(r6)
   48a08:	18001316 	blt	r3,zero,48a58 <_putc_r+0x80>
   48a0c:	30800017 	ldw	r2,0(r6)
   48a10:	14400005 	stb	r17,0(r2)
   48a14:	30c00017 	ldw	r3,0(r6)
   48a18:	18800044 	addi	r2,r3,1
   48a1c:	18c00003 	ldbu	r3,0(r3)
   48a20:	30800015 	stw	r2,0(r6)
   48a24:	1805883a 	mov	r2,r3
   48a28:	dfc00317 	ldw	ra,12(sp)
   48a2c:	dc400217 	ldw	r17,8(sp)
   48a30:	dc000117 	ldw	r16,4(sp)
   48a34:	dec00404 	addi	sp,sp,16
   48a38:	f800283a 	ret
   48a3c:	d9800015 	stw	r6,0(sp)
   48a40:	0045b540 	call	45b54 <__sinit>
   48a44:	d9800017 	ldw	r6,0(sp)
   48a48:	30800217 	ldw	r2,8(r6)
   48a4c:	10ffffc4 	addi	r3,r2,-1
   48a50:	30c00215 	stw	r3,8(r6)
   48a54:	183fed0e 	bge	r3,zero,48a0c <_putc_r+0x34>
   48a58:	30800617 	ldw	r2,24(r6)
   48a5c:	18800e16 	blt	r3,r2,48a98 <_putc_r+0xc0>
   48a60:	30800017 	ldw	r2,0(r6)
   48a64:	14400005 	stb	r17,0(r2)
   48a68:	31000017 	ldw	r4,0(r6)
   48a6c:	00800284 	movi	r2,10
   48a70:	20c00003 	ldbu	r3,0(r4)
   48a74:	18800f26 	beq	r3,r2,48ab4 <_putc_r+0xdc>
   48a78:	20800044 	addi	r2,r4,1
   48a7c:	30800015 	stw	r2,0(r6)
   48a80:	1805883a 	mov	r2,r3
   48a84:	dfc00317 	ldw	ra,12(sp)
   48a88:	dc400217 	ldw	r17,8(sp)
   48a8c:	dc000117 	ldw	r16,4(sp)
   48a90:	dec00404 	addi	sp,sp,16
   48a94:	f800283a 	ret
   48a98:	8009883a 	mov	r4,r16
   48a9c:	880b883a 	mov	r5,r17
   48aa0:	dfc00317 	ldw	ra,12(sp)
   48aa4:	dc400217 	ldw	r17,8(sp)
   48aa8:	dc000117 	ldw	r16,4(sp)
   48aac:	dec00404 	addi	sp,sp,16
   48ab0:	004bbe01 	jmpi	4bbe0 <__swbuf_r>
   48ab4:	8009883a 	mov	r4,r16
   48ab8:	180b883a 	mov	r5,r3
   48abc:	003ff806 	br	48aa0 <_putc_r+0xc8>

00048ac0 <_realloc_r>:
   48ac0:	defff404 	addi	sp,sp,-48
   48ac4:	dd800815 	stw	r22,32(sp)
   48ac8:	dc800415 	stw	r18,16(sp)
   48acc:	dc400315 	stw	r17,12(sp)
   48ad0:	dfc00b15 	stw	ra,44(sp)
   48ad4:	df000a15 	stw	fp,40(sp)
   48ad8:	ddc00915 	stw	r23,36(sp)
   48adc:	dd400715 	stw	r21,28(sp)
   48ae0:	dd000615 	stw	r20,24(sp)
   48ae4:	dcc00515 	stw	r19,20(sp)
   48ae8:	dc000215 	stw	r16,8(sp)
   48aec:	2825883a 	mov	r18,r5
   48af0:	3023883a 	mov	r17,r6
   48af4:	202d883a 	mov	r22,r4
   48af8:	2800c926 	beq	r5,zero,48e20 <_realloc_r+0x360>
   48afc:	005006c0 	call	5006c <__malloc_lock>
   48b00:	943ffe04 	addi	r16,r18,-8
   48b04:	88c002c4 	addi	r3,r17,11
   48b08:	00800584 	movi	r2,22
   48b0c:	82000117 	ldw	r8,4(r16)
   48b10:	10c01b2e 	bgeu	r2,r3,48b80 <_realloc_r+0xc0>
   48b14:	00bffe04 	movi	r2,-8
   48b18:	188e703a 	and	r7,r3,r2
   48b1c:	3839883a 	mov	fp,r7
   48b20:	38001a16 	blt	r7,zero,48b8c <_realloc_r+0xcc>
   48b24:	e4401936 	bltu	fp,r17,48b8c <_realloc_r+0xcc>
   48b28:	013fff04 	movi	r4,-4
   48b2c:	4126703a 	and	r19,r8,r4
   48b30:	99c02616 	blt	r19,r7,48bcc <_realloc_r+0x10c>
   48b34:	802b883a 	mov	r21,r16
   48b38:	9829883a 	mov	r20,r19
   48b3c:	84000204 	addi	r16,r16,8
   48b40:	a80f883a 	mov	r7,r21
   48b44:	a70dc83a 	sub	r6,r20,fp
   48b48:	008003c4 	movi	r2,15
   48b4c:	1180c136 	bltu	r2,r6,48e54 <_realloc_r+0x394>
   48b50:	38800117 	ldw	r2,4(r7)
   48b54:	a549883a 	add	r4,r20,r21
   48b58:	1080004c 	andi	r2,r2,1
   48b5c:	a084b03a 	or	r2,r20,r2
   48b60:	38800115 	stw	r2,4(r7)
   48b64:	20c00117 	ldw	r3,4(r4)
   48b68:	18c00054 	ori	r3,r3,1
   48b6c:	20c00115 	stw	r3,4(r4)
   48b70:	b009883a 	mov	r4,r22
   48b74:	005008c0 	call	5008c <__malloc_unlock>
   48b78:	8023883a 	mov	r17,r16
   48b7c:	00000606 	br	48b98 <_realloc_r+0xd8>
   48b80:	01c00404 	movi	r7,16
   48b84:	3839883a 	mov	fp,r7
   48b88:	e47fe72e 	bgeu	fp,r17,48b28 <_realloc_r+0x68>
   48b8c:	00800304 	movi	r2,12
   48b90:	0023883a 	mov	r17,zero
   48b94:	b0800015 	stw	r2,0(r22)
   48b98:	8805883a 	mov	r2,r17
   48b9c:	dfc00b17 	ldw	ra,44(sp)
   48ba0:	df000a17 	ldw	fp,40(sp)
   48ba4:	ddc00917 	ldw	r23,36(sp)
   48ba8:	dd800817 	ldw	r22,32(sp)
   48bac:	dd400717 	ldw	r21,28(sp)
   48bb0:	dd000617 	ldw	r20,24(sp)
   48bb4:	dcc00517 	ldw	r19,20(sp)
   48bb8:	dc800417 	ldw	r18,16(sp)
   48bbc:	dc400317 	ldw	r17,12(sp)
   48bc0:	dc000217 	ldw	r16,8(sp)
   48bc4:	dec00c04 	addi	sp,sp,48
   48bc8:	f800283a 	ret
   48bcc:	00800174 	movhi	r2,5
   48bd0:	108c4804 	addi	r2,r2,12576
   48bd4:	12400217 	ldw	r9,8(r2)
   48bd8:	84cd883a 	add	r6,r16,r19
   48bdc:	802b883a 	mov	r21,r16
   48be0:	3240b926 	beq	r6,r9,48ec8 <_realloc_r+0x408>
   48be4:	31400117 	ldw	r5,4(r6)
   48be8:	00bfff84 	movi	r2,-2
   48bec:	2884703a 	and	r2,r5,r2
   48bf0:	1185883a 	add	r2,r2,r6
   48bf4:	10c00117 	ldw	r3,4(r2)
   48bf8:	18c0004c 	andi	r3,r3,1
   48bfc:	1807003a 	cmpeq	r3,r3,zero
   48c00:	1800a326 	beq	r3,zero,48e90 <_realloc_r+0x3d0>
   48c04:	2908703a 	and	r4,r5,r4
   48c08:	9929883a 	add	r20,r19,r4
   48c0c:	a1c0a30e 	bge	r20,r7,48e9c <_realloc_r+0x3dc>
   48c10:	4080004c 	andi	r2,r8,1
   48c14:	1000551e 	bne	r2,zero,48d6c <_realloc_r+0x2ac>
   48c18:	80800017 	ldw	r2,0(r16)
   48c1c:	80afc83a 	sub	r23,r16,r2
   48c20:	b8c00117 	ldw	r3,4(r23)
   48c24:	00bfff04 	movi	r2,-4
   48c28:	1884703a 	and	r2,r3,r2
   48c2c:	30002e26 	beq	r6,zero,48ce8 <_realloc_r+0x228>
   48c30:	3240b926 	beq	r6,r9,48f18 <_realloc_r+0x458>
   48c34:	98a9883a 	add	r20,r19,r2
   48c38:	2509883a 	add	r4,r4,r20
   48c3c:	d9000015 	stw	r4,0(sp)
   48c40:	21c02a16 	blt	r4,r7,48cec <_realloc_r+0x22c>
   48c44:	30800317 	ldw	r2,12(r6)
   48c48:	30c00217 	ldw	r3,8(r6)
   48c4c:	01400904 	movi	r5,36
   48c50:	99bfff04 	addi	r6,r19,-4
   48c54:	18800315 	stw	r2,12(r3)
   48c58:	10c00215 	stw	r3,8(r2)
   48c5c:	b9000317 	ldw	r4,12(r23)
   48c60:	b8800217 	ldw	r2,8(r23)
   48c64:	b82b883a 	mov	r21,r23
   48c68:	bc000204 	addi	r16,r23,8
   48c6c:	20800215 	stw	r2,8(r4)
   48c70:	11000315 	stw	r4,12(r2)
   48c74:	2980e436 	bltu	r5,r6,49008 <_realloc_r+0x548>
   48c78:	008004c4 	movi	r2,19
   48c7c:	9009883a 	mov	r4,r18
   48c80:	8011883a 	mov	r8,r16
   48c84:	11800f2e 	bgeu	r2,r6,48cc4 <_realloc_r+0x204>
   48c88:	90800017 	ldw	r2,0(r18)
   48c8c:	ba000404 	addi	r8,r23,16
   48c90:	91000204 	addi	r4,r18,8
   48c94:	b8800215 	stw	r2,8(r23)
   48c98:	90c00117 	ldw	r3,4(r18)
   48c9c:	008006c4 	movi	r2,27
   48ca0:	b8c00315 	stw	r3,12(r23)
   48ca4:	1180072e 	bgeu	r2,r6,48cc4 <_realloc_r+0x204>
   48ca8:	90c00217 	ldw	r3,8(r18)
   48cac:	ba000604 	addi	r8,r23,24
   48cb0:	91000404 	addi	r4,r18,16
   48cb4:	b8c00415 	stw	r3,16(r23)
   48cb8:	90800317 	ldw	r2,12(r18)
   48cbc:	b8800515 	stw	r2,20(r23)
   48cc0:	3140e726 	beq	r6,r5,49060 <_realloc_r+0x5a0>
   48cc4:	20800017 	ldw	r2,0(r4)
   48cc8:	dd000017 	ldw	r20,0(sp)
   48ccc:	b80f883a 	mov	r7,r23
   48cd0:	40800015 	stw	r2,0(r8)
   48cd4:	20c00117 	ldw	r3,4(r4)
   48cd8:	40c00115 	stw	r3,4(r8)
   48cdc:	20800217 	ldw	r2,8(r4)
   48ce0:	40800215 	stw	r2,8(r8)
   48ce4:	003f9706 	br	48b44 <_realloc_r+0x84>
   48ce8:	98a9883a 	add	r20,r19,r2
   48cec:	a1c01f16 	blt	r20,r7,48d6c <_realloc_r+0x2ac>
   48cf0:	b8c00317 	ldw	r3,12(r23)
   48cf4:	b8800217 	ldw	r2,8(r23)
   48cf8:	99bfff04 	addi	r6,r19,-4
   48cfc:	01400904 	movi	r5,36
   48d00:	b82b883a 	mov	r21,r23
   48d04:	18800215 	stw	r2,8(r3)
   48d08:	10c00315 	stw	r3,12(r2)
   48d0c:	bc000204 	addi	r16,r23,8
   48d10:	2980c336 	bltu	r5,r6,49020 <_realloc_r+0x560>
   48d14:	008004c4 	movi	r2,19
   48d18:	9009883a 	mov	r4,r18
   48d1c:	8011883a 	mov	r8,r16
   48d20:	11800f2e 	bgeu	r2,r6,48d60 <_realloc_r+0x2a0>
   48d24:	90800017 	ldw	r2,0(r18)
   48d28:	ba000404 	addi	r8,r23,16
   48d2c:	91000204 	addi	r4,r18,8
   48d30:	b8800215 	stw	r2,8(r23)
   48d34:	90c00117 	ldw	r3,4(r18)
   48d38:	008006c4 	movi	r2,27
   48d3c:	b8c00315 	stw	r3,12(r23)
   48d40:	1180072e 	bgeu	r2,r6,48d60 <_realloc_r+0x2a0>
   48d44:	90c00217 	ldw	r3,8(r18)
   48d48:	ba000604 	addi	r8,r23,24
   48d4c:	91000404 	addi	r4,r18,16
   48d50:	b8c00415 	stw	r3,16(r23)
   48d54:	90800317 	ldw	r2,12(r18)
   48d58:	b8800515 	stw	r2,20(r23)
   48d5c:	3140c726 	beq	r6,r5,4907c <_realloc_r+0x5bc>
   48d60:	20800017 	ldw	r2,0(r4)
   48d64:	b80f883a 	mov	r7,r23
   48d68:	003fd906 	br	48cd0 <_realloc_r+0x210>
   48d6c:	880b883a 	mov	r5,r17
   48d70:	b009883a 	mov	r4,r22
   48d74:	0046d0c0 	call	46d0c <_malloc_r>
   48d78:	1023883a 	mov	r17,r2
   48d7c:	10002526 	beq	r2,zero,48e14 <_realloc_r+0x354>
   48d80:	80800117 	ldw	r2,4(r16)
   48d84:	00ffff84 	movi	r3,-2
   48d88:	893ffe04 	addi	r4,r17,-8
   48d8c:	10c4703a 	and	r2,r2,r3
   48d90:	8085883a 	add	r2,r16,r2
   48d94:	20809526 	beq	r4,r2,48fec <_realloc_r+0x52c>
   48d98:	99bfff04 	addi	r6,r19,-4
   48d9c:	01c00904 	movi	r7,36
   48da0:	39804536 	bltu	r7,r6,48eb8 <_realloc_r+0x3f8>
   48da4:	008004c4 	movi	r2,19
   48da8:	9009883a 	mov	r4,r18
   48dac:	880b883a 	mov	r5,r17
   48db0:	11800f2e 	bgeu	r2,r6,48df0 <_realloc_r+0x330>
   48db4:	90800017 	ldw	r2,0(r18)
   48db8:	89400204 	addi	r5,r17,8
   48dbc:	91000204 	addi	r4,r18,8
   48dc0:	88800015 	stw	r2,0(r17)
   48dc4:	90c00117 	ldw	r3,4(r18)
   48dc8:	008006c4 	movi	r2,27
   48dcc:	88c00115 	stw	r3,4(r17)
   48dd0:	1180072e 	bgeu	r2,r6,48df0 <_realloc_r+0x330>
   48dd4:	90c00217 	ldw	r3,8(r18)
   48dd8:	89400404 	addi	r5,r17,16
   48ddc:	91000404 	addi	r4,r18,16
   48de0:	88c00215 	stw	r3,8(r17)
   48de4:	90800317 	ldw	r2,12(r18)
   48de8:	88800315 	stw	r2,12(r17)
   48dec:	31c09126 	beq	r6,r7,49034 <_realloc_r+0x574>
   48df0:	20800017 	ldw	r2,0(r4)
   48df4:	28800015 	stw	r2,0(r5)
   48df8:	20c00117 	ldw	r3,4(r4)
   48dfc:	28c00115 	stw	r3,4(r5)
   48e00:	20800217 	ldw	r2,8(r4)
   48e04:	28800215 	stw	r2,8(r5)
   48e08:	900b883a 	mov	r5,r18
   48e0c:	b009883a 	mov	r4,r22
   48e10:	00461580 	call	46158 <_free_r>
   48e14:	b009883a 	mov	r4,r22
   48e18:	005008c0 	call	5008c <__malloc_unlock>
   48e1c:	003f5e06 	br	48b98 <_realloc_r+0xd8>
   48e20:	300b883a 	mov	r5,r6
   48e24:	dfc00b17 	ldw	ra,44(sp)
   48e28:	df000a17 	ldw	fp,40(sp)
   48e2c:	ddc00917 	ldw	r23,36(sp)
   48e30:	dd800817 	ldw	r22,32(sp)
   48e34:	dd400717 	ldw	r21,28(sp)
   48e38:	dd000617 	ldw	r20,24(sp)
   48e3c:	dcc00517 	ldw	r19,20(sp)
   48e40:	dc800417 	ldw	r18,16(sp)
   48e44:	dc400317 	ldw	r17,12(sp)
   48e48:	dc000217 	ldw	r16,8(sp)
   48e4c:	dec00c04 	addi	sp,sp,48
   48e50:	0046d0c1 	jmpi	46d0c <_malloc_r>
   48e54:	38800117 	ldw	r2,4(r7)
   48e58:	e54b883a 	add	r5,fp,r21
   48e5c:	31000054 	ori	r4,r6,1
   48e60:	1080004c 	andi	r2,r2,1
   48e64:	1704b03a 	or	r2,r2,fp
   48e68:	38800115 	stw	r2,4(r7)
   48e6c:	29000115 	stw	r4,4(r5)
   48e70:	2987883a 	add	r3,r5,r6
   48e74:	18800117 	ldw	r2,4(r3)
   48e78:	29400204 	addi	r5,r5,8
   48e7c:	b009883a 	mov	r4,r22
   48e80:	10800054 	ori	r2,r2,1
   48e84:	18800115 	stw	r2,4(r3)
   48e88:	00461580 	call	46158 <_free_r>
   48e8c:	003f3806 	br	48b70 <_realloc_r+0xb0>
   48e90:	000d883a 	mov	r6,zero
   48e94:	0009883a 	mov	r4,zero
   48e98:	003f5d06 	br	48c10 <_realloc_r+0x150>
   48e9c:	30c00217 	ldw	r3,8(r6)
   48ea0:	30800317 	ldw	r2,12(r6)
   48ea4:	800f883a 	mov	r7,r16
   48ea8:	84000204 	addi	r16,r16,8
   48eac:	10c00215 	stw	r3,8(r2)
   48eb0:	18800315 	stw	r2,12(r3)
   48eb4:	003f2306 	br	48b44 <_realloc_r+0x84>
   48eb8:	8809883a 	mov	r4,r17
   48ebc:	900b883a 	mov	r5,r18
   48ec0:	00476d00 	call	476d0 <memmove>
   48ec4:	003fd006 	br	48e08 <_realloc_r+0x348>
   48ec8:	30800117 	ldw	r2,4(r6)
   48ecc:	e0c00404 	addi	r3,fp,16
   48ed0:	1108703a 	and	r4,r2,r4
   48ed4:	9905883a 	add	r2,r19,r4
   48ed8:	10ff4d16 	blt	r2,r3,48c10 <_realloc_r+0x150>
   48edc:	1705c83a 	sub	r2,r2,fp
   48ee0:	870b883a 	add	r5,r16,fp
   48ee4:	10800054 	ori	r2,r2,1
   48ee8:	28800115 	stw	r2,4(r5)
   48eec:	80c00117 	ldw	r3,4(r16)
   48ef0:	00800174 	movhi	r2,5
   48ef4:	108c4804 	addi	r2,r2,12576
   48ef8:	b009883a 	mov	r4,r22
   48efc:	18c0004c 	andi	r3,r3,1
   48f00:	e0c6b03a 	or	r3,fp,r3
   48f04:	11400215 	stw	r5,8(r2)
   48f08:	80c00115 	stw	r3,4(r16)
   48f0c:	005008c0 	call	5008c <__malloc_unlock>
   48f10:	84400204 	addi	r17,r16,8
   48f14:	003f2006 	br	48b98 <_realloc_r+0xd8>
   48f18:	98a9883a 	add	r20,r19,r2
   48f1c:	2509883a 	add	r4,r4,r20
   48f20:	e0800404 	addi	r2,fp,16
   48f24:	d9000115 	stw	r4,4(sp)
   48f28:	20bf7016 	blt	r4,r2,48cec <_realloc_r+0x22c>
   48f2c:	b8c00317 	ldw	r3,12(r23)
   48f30:	b8800217 	ldw	r2,8(r23)
   48f34:	99bfff04 	addi	r6,r19,-4
   48f38:	01400904 	movi	r5,36
   48f3c:	18800215 	stw	r2,8(r3)
   48f40:	10c00315 	stw	r3,12(r2)
   48f44:	bc400204 	addi	r17,r23,8
   48f48:	29804136 	bltu	r5,r6,49050 <_realloc_r+0x590>
   48f4c:	008004c4 	movi	r2,19
   48f50:	9009883a 	mov	r4,r18
   48f54:	880f883a 	mov	r7,r17
   48f58:	11800f2e 	bgeu	r2,r6,48f98 <_realloc_r+0x4d8>
   48f5c:	90800017 	ldw	r2,0(r18)
   48f60:	b9c00404 	addi	r7,r23,16
   48f64:	91000204 	addi	r4,r18,8
   48f68:	b8800215 	stw	r2,8(r23)
   48f6c:	90c00117 	ldw	r3,4(r18)
   48f70:	008006c4 	movi	r2,27
   48f74:	b8c00315 	stw	r3,12(r23)
   48f78:	1180072e 	bgeu	r2,r6,48f98 <_realloc_r+0x4d8>
   48f7c:	90c00217 	ldw	r3,8(r18)
   48f80:	b9c00604 	addi	r7,r23,24
   48f84:	91000404 	addi	r4,r18,16
   48f88:	b8c00415 	stw	r3,16(r23)
   48f8c:	90800317 	ldw	r2,12(r18)
   48f90:	b8800515 	stw	r2,20(r23)
   48f94:	31404026 	beq	r6,r5,49098 <_realloc_r+0x5d8>
   48f98:	20800017 	ldw	r2,0(r4)
   48f9c:	38800015 	stw	r2,0(r7)
   48fa0:	20c00117 	ldw	r3,4(r4)
   48fa4:	38c00115 	stw	r3,4(r7)
   48fa8:	20800217 	ldw	r2,8(r4)
   48fac:	38800215 	stw	r2,8(r7)
   48fb0:	d8c00117 	ldw	r3,4(sp)
   48fb4:	bf0b883a 	add	r5,r23,fp
   48fb8:	b009883a 	mov	r4,r22
   48fbc:	1f05c83a 	sub	r2,r3,fp
   48fc0:	10800054 	ori	r2,r2,1
   48fc4:	28800115 	stw	r2,4(r5)
   48fc8:	b8c00117 	ldw	r3,4(r23)
   48fcc:	00800174 	movhi	r2,5
   48fd0:	108c4804 	addi	r2,r2,12576
   48fd4:	11400215 	stw	r5,8(r2)
   48fd8:	18c0004c 	andi	r3,r3,1
   48fdc:	e0c6b03a 	or	r3,fp,r3
   48fe0:	b8c00115 	stw	r3,4(r23)
   48fe4:	005008c0 	call	5008c <__malloc_unlock>
   48fe8:	003eeb06 	br	48b98 <_realloc_r+0xd8>
   48fec:	20800117 	ldw	r2,4(r4)
   48ff0:	00ffff04 	movi	r3,-4
   48ff4:	800f883a 	mov	r7,r16
   48ff8:	10c4703a 	and	r2,r2,r3
   48ffc:	98a9883a 	add	r20,r19,r2
   49000:	84000204 	addi	r16,r16,8
   49004:	003ecf06 	br	48b44 <_realloc_r+0x84>
   49008:	900b883a 	mov	r5,r18
   4900c:	8009883a 	mov	r4,r16
   49010:	00476d00 	call	476d0 <memmove>
   49014:	dd000017 	ldw	r20,0(sp)
   49018:	b80f883a 	mov	r7,r23
   4901c:	003ec906 	br	48b44 <_realloc_r+0x84>
   49020:	900b883a 	mov	r5,r18
   49024:	8009883a 	mov	r4,r16
   49028:	00476d00 	call	476d0 <memmove>
   4902c:	b80f883a 	mov	r7,r23
   49030:	003ec406 	br	48b44 <_realloc_r+0x84>
   49034:	90c00417 	ldw	r3,16(r18)
   49038:	89400604 	addi	r5,r17,24
   4903c:	91000604 	addi	r4,r18,24
   49040:	88c00415 	stw	r3,16(r17)
   49044:	90800517 	ldw	r2,20(r18)
   49048:	88800515 	stw	r2,20(r17)
   4904c:	003f6806 	br	48df0 <_realloc_r+0x330>
   49050:	900b883a 	mov	r5,r18
   49054:	8809883a 	mov	r4,r17
   49058:	00476d00 	call	476d0 <memmove>
   4905c:	003fd406 	br	48fb0 <_realloc_r+0x4f0>
   49060:	90c00417 	ldw	r3,16(r18)
   49064:	91000604 	addi	r4,r18,24
   49068:	ba000804 	addi	r8,r23,32
   4906c:	b8c00615 	stw	r3,24(r23)
   49070:	90800517 	ldw	r2,20(r18)
   49074:	b8800715 	stw	r2,28(r23)
   49078:	003f1206 	br	48cc4 <_realloc_r+0x204>
   4907c:	90c00417 	ldw	r3,16(r18)
   49080:	91000604 	addi	r4,r18,24
   49084:	ba000804 	addi	r8,r23,32
   49088:	b8c00615 	stw	r3,24(r23)
   4908c:	90800517 	ldw	r2,20(r18)
   49090:	b8800715 	stw	r2,28(r23)
   49094:	003f3206 	br	48d60 <_realloc_r+0x2a0>
   49098:	90c00417 	ldw	r3,16(r18)
   4909c:	91000604 	addi	r4,r18,24
   490a0:	b9c00804 	addi	r7,r23,32
   490a4:	b8c00615 	stw	r3,24(r23)
   490a8:	90800517 	ldw	r2,20(r18)
   490ac:	b8800715 	stw	r2,28(r23)
   490b0:	003fb906 	br	48f98 <_realloc_r+0x4d8>

000490b4 <__srefill_r>:
   490b4:	defffd04 	addi	sp,sp,-12
   490b8:	dc400115 	stw	r17,4(sp)
   490bc:	dc000015 	stw	r16,0(sp)
   490c0:	dfc00215 	stw	ra,8(sp)
   490c4:	2023883a 	mov	r17,r4
   490c8:	2821883a 	mov	r16,r5
   490cc:	20000226 	beq	r4,zero,490d8 <__srefill_r+0x24>
   490d0:	20800e17 	ldw	r2,56(r4)
   490d4:	10004126 	beq	r2,zero,491dc <__srefill_r+0x128>
   490d8:	80c0030b 	ldhu	r3,12(r16)
   490dc:	80000115 	stw	zero,4(r16)
   490e0:	1880080c 	andi	r2,r3,32
   490e4:	1000361e 	bne	r2,zero,491c0 <__srefill_r+0x10c>
   490e8:	1880010c 	andi	r2,r3,4
   490ec:	1000211e 	bne	r2,zero,49174 <__srefill_r+0xc0>
   490f0:	1880040c 	andi	r2,r3,16
   490f4:	10005026 	beq	r2,zero,49238 <__srefill_r+0x184>
   490f8:	1880020c 	andi	r2,r3,8
   490fc:	1000541e 	bne	r2,zero,49250 <__srefill_r+0x19c>
   49100:	8080030b 	ldhu	r2,12(r16)
   49104:	10800114 	ori	r2,r2,4
   49108:	8080030d 	sth	r2,12(r16)
   4910c:	80800417 	ldw	r2,16(r16)
   49110:	10004526 	beq	r2,zero,49228 <__srefill_r+0x174>
   49114:	8080030b 	ldhu	r2,12(r16)
   49118:	108000cc 	andi	r2,r2,3
   4911c:	1000361e 	bne	r2,zero,491f8 <__srefill_r+0x144>
   49120:	81800417 	ldw	r6,16(r16)
   49124:	80c00817 	ldw	r3,32(r16)
   49128:	81400717 	ldw	r5,28(r16)
   4912c:	81c00517 	ldw	r7,20(r16)
   49130:	8809883a 	mov	r4,r17
   49134:	81800015 	stw	r6,0(r16)
   49138:	183ee83a 	callr	r3
   4913c:	80c0030b 	ldhu	r3,12(r16)
   49140:	1009883a 	mov	r4,r2
   49144:	80800115 	stw	r2,4(r16)
   49148:	00b7ffc4 	movi	r2,-8193
   4914c:	1884703a 	and	r2,r3,r2
   49150:	8080030d 	sth	r2,12(r16)
   49154:	0100230e 	bge	zero,r4,491e4 <__srefill_r+0x130>
   49158:	0009883a 	mov	r4,zero
   4915c:	2005883a 	mov	r2,r4
   49160:	dfc00217 	ldw	ra,8(sp)
   49164:	dc400117 	ldw	r17,4(sp)
   49168:	dc000017 	ldw	r16,0(sp)
   4916c:	dec00304 	addi	sp,sp,12
   49170:	f800283a 	ret
   49174:	81400c17 	ldw	r5,48(r16)
   49178:	283fe426 	beq	r5,zero,4910c <__srefill_r+0x58>
   4917c:	80801004 	addi	r2,r16,64
   49180:	28800226 	beq	r5,r2,4918c <__srefill_r+0xd8>
   49184:	8809883a 	mov	r4,r17
   49188:	00461580 	call	46158 <_free_r>
   4918c:	80800f17 	ldw	r2,60(r16)
   49190:	80000c15 	stw	zero,48(r16)
   49194:	80800115 	stw	r2,4(r16)
   49198:	103fdc26 	beq	r2,zero,4910c <__srefill_r+0x58>
   4919c:	80800e17 	ldw	r2,56(r16)
   491a0:	0009883a 	mov	r4,zero
   491a4:	80800015 	stw	r2,0(r16)
   491a8:	2005883a 	mov	r2,r4
   491ac:	dfc00217 	ldw	ra,8(sp)
   491b0:	dc400117 	ldw	r17,4(sp)
   491b4:	dc000017 	ldw	r16,0(sp)
   491b8:	dec00304 	addi	sp,sp,12
   491bc:	f800283a 	ret
   491c0:	013fffc4 	movi	r4,-1
   491c4:	2005883a 	mov	r2,r4
   491c8:	dfc00217 	ldw	ra,8(sp)
   491cc:	dc400117 	ldw	r17,4(sp)
   491d0:	dc000017 	ldw	r16,0(sp)
   491d4:	dec00304 	addi	sp,sp,12
   491d8:	f800283a 	ret
   491dc:	0045b540 	call	45b54 <__sinit>
   491e0:	003fbd06 	br	490d8 <__srefill_r+0x24>
   491e4:	20000b1e 	bne	r4,zero,49214 <__srefill_r+0x160>
   491e8:	10800814 	ori	r2,r2,32
   491ec:	013fffc4 	movi	r4,-1
   491f0:	8080030d 	sth	r2,12(r16)
   491f4:	003fd906 	br	4915c <__srefill_r+0xa8>
   491f8:	00800174 	movhi	r2,5
   491fc:	1091d704 	addi	r2,r2,18268
   49200:	11000017 	ldw	r4,0(r2)
   49204:	01400174 	movhi	r5,5
   49208:	29649e04 	addi	r5,r5,-28040
   4920c:	00469d00 	call	469d0 <_fwalk>
   49210:	003fc306 	br	49120 <__srefill_r+0x6c>
   49214:	10801014 	ori	r2,r2,64
   49218:	013fffc4 	movi	r4,-1
   4921c:	8080030d 	sth	r2,12(r16)
   49220:	80000115 	stw	zero,4(r16)
   49224:	003fcd06 	br	4915c <__srefill_r+0xa8>
   49228:	8809883a 	mov	r4,r17
   4922c:	800b883a 	mov	r5,r16
   49230:	0046b780 	call	46b78 <__smakebuf_r>
   49234:	003fb706 	br	49114 <__srefill_r+0x60>
   49238:	18c01014 	ori	r3,r3,64
   4923c:	00800244 	movi	r2,9
   49240:	013fffc4 	movi	r4,-1
   49244:	88800015 	stw	r2,0(r17)
   49248:	80c0030d 	sth	r3,12(r16)
   4924c:	003fc306 	br	4915c <__srefill_r+0xa8>
   49250:	8809883a 	mov	r4,r17
   49254:	800b883a 	mov	r5,r16
   49258:	00458bc0 	call	458bc <_fflush_r>
   4925c:	103fd81e 	bne	r2,zero,491c0 <__srefill_r+0x10c>
   49260:	8080030b 	ldhu	r2,12(r16)
   49264:	80000215 	stw	zero,8(r16)
   49268:	80000615 	stw	zero,24(r16)
   4926c:	10bffdcc 	andi	r2,r2,65527
   49270:	8080030d 	sth	r2,12(r16)
   49274:	003fa206 	br	49100 <__srefill_r+0x4c>

00049278 <lflush>:
   49278:	20c0030b 	ldhu	r3,12(r4)
   4927c:	01400244 	movi	r5,9
   49280:	0005883a 	mov	r2,zero
   49284:	18c0024c 	andi	r3,r3,9
   49288:	19400126 	beq	r3,r5,49290 <lflush+0x18>
   4928c:	f800283a 	ret
   49290:	0045ab81 	jmpi	45ab8 <fflush>

00049294 <__isinfd>:
   49294:	200d883a 	mov	r6,r4
   49298:	0109c83a 	sub	r4,zero,r4
   4929c:	2188b03a 	or	r4,r4,r6
   492a0:	2008d7fa 	srli	r4,r4,31
   492a4:	00a00034 	movhi	r2,32768
   492a8:	10bfffc4 	addi	r2,r2,-1
   492ac:	1144703a 	and	r2,r2,r5
   492b0:	2088b03a 	or	r4,r4,r2
   492b4:	009ffc34 	movhi	r2,32752
   492b8:	1105c83a 	sub	r2,r2,r4
   492bc:	0087c83a 	sub	r3,zero,r2
   492c0:	10c4b03a 	or	r2,r2,r3
   492c4:	1004d7fa 	srli	r2,r2,31
   492c8:	00c00044 	movi	r3,1
   492cc:	1885c83a 	sub	r2,r3,r2
   492d0:	f800283a 	ret

000492d4 <__isnand>:
   492d4:	200d883a 	mov	r6,r4
   492d8:	0109c83a 	sub	r4,zero,r4
   492dc:	2188b03a 	or	r4,r4,r6
   492e0:	2008d7fa 	srli	r4,r4,31
   492e4:	00a00034 	movhi	r2,32768
   492e8:	10bfffc4 	addi	r2,r2,-1
   492ec:	1144703a 	and	r2,r2,r5
   492f0:	2088b03a 	or	r4,r4,r2
   492f4:	009ffc34 	movhi	r2,32752
   492f8:	1105c83a 	sub	r2,r2,r4
   492fc:	1004d7fa 	srli	r2,r2,31
   49300:	f800283a 	ret

00049304 <_sbrk_r>:
   49304:	defffd04 	addi	sp,sp,-12
   49308:	dc000015 	stw	r16,0(sp)
   4930c:	04000174 	movhi	r16,5
   49310:	84188f04 	addi	r16,r16,25148
   49314:	dc400115 	stw	r17,4(sp)
   49318:	80000015 	stw	zero,0(r16)
   4931c:	2023883a 	mov	r17,r4
   49320:	2809883a 	mov	r4,r5
   49324:	dfc00215 	stw	ra,8(sp)
   49328:	00502a80 	call	502a8 <sbrk>
   4932c:	1007883a 	mov	r3,r2
   49330:	00bfffc4 	movi	r2,-1
   49334:	18800626 	beq	r3,r2,49350 <_sbrk_r+0x4c>
   49338:	1805883a 	mov	r2,r3
   4933c:	dfc00217 	ldw	ra,8(sp)
   49340:	dc400117 	ldw	r17,4(sp)
   49344:	dc000017 	ldw	r16,0(sp)
   49348:	dec00304 	addi	sp,sp,12
   4934c:	f800283a 	ret
   49350:	80800017 	ldw	r2,0(r16)
   49354:	103ff826 	beq	r2,zero,49338 <_sbrk_r+0x34>
   49358:	88800015 	stw	r2,0(r17)
   4935c:	1805883a 	mov	r2,r3
   49360:	dfc00217 	ldw	ra,8(sp)
   49364:	dc400117 	ldw	r17,4(sp)
   49368:	dc000017 	ldw	r16,0(sp)
   4936c:	dec00304 	addi	sp,sp,12
   49370:	f800283a 	ret

00049374 <__sccl>:
   49374:	28c00003 	ldbu	r3,0(r5)
   49378:	00801784 	movi	r2,94
   4937c:	2a000044 	addi	r8,r5,1
   49380:	18802526 	beq	r3,r2,49418 <__sccl+0xa4>
   49384:	180f883a 	mov	r7,r3
   49388:	0013883a 	mov	r9,zero
   4938c:	000d883a 	mov	r6,zero
   49390:	0007883a 	mov	r3,zero
   49394:	01404004 	movi	r5,256
   49398:	1905883a 	add	r2,r3,r4
   4939c:	18c00044 	addi	r3,r3,1
   493a0:	11800005 	stb	r6,0(r2)
   493a4:	197ffc1e 	bne	r3,r5,49398 <__sccl+0x24>
   493a8:	38000c26 	beq	r7,zero,493dc <__sccl+0x68>
   493ac:	00800044 	movi	r2,1
   493b0:	124dc83a 	sub	r6,r2,r9
   493b4:	3905883a 	add	r2,r7,r4
   493b8:	11800005 	stb	r6,0(r2)
   493bc:	41400044 	addi	r5,r8,1
   493c0:	02400b44 	movi	r9,45
   493c4:	02801744 	movi	r10,93
   493c8:	28bfffc3 	ldbu	r2,-1(r5)
   493cc:	2811883a 	mov	r8,r5
   493d0:	12400726 	beq	r2,r9,493f0 <__sccl+0x7c>
   493d4:	12800226 	beq	r2,r10,493e0 <__sccl+0x6c>
   493d8:	1000031e 	bne	r2,zero,493e8 <__sccl+0x74>
   493dc:	423fffc4 	addi	r8,r8,-1
   493e0:	4005883a 	mov	r2,r8
   493e4:	f800283a 	ret
   493e8:	100f883a 	mov	r7,r2
   493ec:	003ff106 	br	493b4 <__sccl+0x40>
   493f0:	28c00003 	ldbu	r3,0(r5)
   493f4:	1a800d26 	beq	r3,r10,4942c <__sccl+0xb8>
   493f8:	19c00c16 	blt	r3,r7,4942c <__sccl+0xb8>
   493fc:	21c5883a 	add	r2,r4,r7
   49400:	39c00044 	addi	r7,r7,1
   49404:	11800045 	stb	r6,1(r2)
   49408:	10800044 	addi	r2,r2,1
   4940c:	38fffc16 	blt	r7,r3,49400 <__sccl+0x8c>
   49410:	29400084 	addi	r5,r5,2
   49414:	003fec06 	br	493c8 <__sccl+0x54>
   49418:	29c00043 	ldbu	r7,1(r5)
   4941c:	02400044 	movi	r9,1
   49420:	2a000084 	addi	r8,r5,2
   49424:	480d883a 	mov	r6,r9
   49428:	003fd906 	br	49390 <__sccl+0x1c>
   4942c:	01c00b44 	movi	r7,45
   49430:	003fe006 	br	493b4 <__sccl+0x40>

00049434 <nanf>:
   49434:	009ff034 	movhi	r2,32704
   49438:	f800283a 	ret

0004943c <sprintf>:
   4943c:	deffe504 	addi	sp,sp,-108
   49440:	2013883a 	mov	r9,r4
   49444:	dfc01815 	stw	ra,96(sp)
   49448:	d9801915 	stw	r6,100(sp)
   4944c:	d9c01a15 	stw	r7,104(sp)
   49450:	d8801904 	addi	r2,sp,100
   49454:	d8800015 	stw	r2,0(sp)
   49458:	00800174 	movhi	r2,5
   4945c:	1091d604 	addi	r2,r2,18264
   49460:	11000017 	ldw	r4,0(r2)
   49464:	d9c00017 	ldw	r7,0(sp)
   49468:	00808204 	movi	r2,520
   4946c:	00e00034 	movhi	r3,32768
   49470:	18ffffc4 	addi	r3,r3,-1
   49474:	280d883a 	mov	r6,r5
   49478:	d880040d 	sth	r2,16(sp)
   4947c:	d9400104 	addi	r5,sp,4
   49480:	00bfffc4 	movi	r2,-1
   49484:	d8c00615 	stw	r3,24(sp)
   49488:	d8c00315 	stw	r3,12(sp)
   4948c:	da400515 	stw	r9,20(sp)
   49490:	d880048d 	sth	r2,18(sp)
   49494:	da400115 	stw	r9,4(sp)
   49498:	00409180 	call	40918 <___vfprintf_internal_r>
   4949c:	d8c00117 	ldw	r3,4(sp)
   494a0:	18000005 	stb	zero,0(r3)
   494a4:	dfc01817 	ldw	ra,96(sp)
   494a8:	dec01b04 	addi	sp,sp,108
   494ac:	f800283a 	ret

000494b0 <_sprintf_r>:
   494b0:	deffe604 	addi	sp,sp,-104
   494b4:	2813883a 	mov	r9,r5
   494b8:	dfc01815 	stw	ra,96(sp)
   494bc:	d9c01915 	stw	r7,100(sp)
   494c0:	d8801904 	addi	r2,sp,100
   494c4:	d8800015 	stw	r2,0(sp)
   494c8:	100f883a 	mov	r7,r2
   494cc:	00808204 	movi	r2,520
   494d0:	00e00034 	movhi	r3,32768
   494d4:	18ffffc4 	addi	r3,r3,-1
   494d8:	d880040d 	sth	r2,16(sp)
   494dc:	d9400104 	addi	r5,sp,4
   494e0:	00bfffc4 	movi	r2,-1
   494e4:	d8c00615 	stw	r3,24(sp)
   494e8:	d8c00315 	stw	r3,12(sp)
   494ec:	da400515 	stw	r9,20(sp)
   494f0:	d880048d 	sth	r2,18(sp)
   494f4:	da400115 	stw	r9,4(sp)
   494f8:	00409180 	call	40918 <___vfprintf_internal_r>
   494fc:	d8c00117 	ldw	r3,4(sp)
   49500:	18000005 	stb	zero,0(r3)
   49504:	dfc01817 	ldw	ra,96(sp)
   49508:	dec01a04 	addi	sp,sp,104
   4950c:	f800283a 	ret

00049510 <__sclose>:
   49510:	2940038f 	ldh	r5,14(r5)
   49514:	004be6c1 	jmpi	4be6c <_close_r>

00049518 <__sseek>:
   49518:	defffe04 	addi	sp,sp,-8
   4951c:	dc000015 	stw	r16,0(sp)
   49520:	2821883a 	mov	r16,r5
   49524:	2940038f 	ldh	r5,14(r5)
   49528:	dfc00115 	stw	ra,4(sp)
   4952c:	004ccb00 	call	4ccb0 <_lseek_r>
   49530:	1007883a 	mov	r3,r2
   49534:	00bfffc4 	movi	r2,-1
   49538:	18800926 	beq	r3,r2,49560 <__sseek+0x48>
   4953c:	8080030b 	ldhu	r2,12(r16)
   49540:	80c01415 	stw	r3,80(r16)
   49544:	10840014 	ori	r2,r2,4096
   49548:	8080030d 	sth	r2,12(r16)
   4954c:	1805883a 	mov	r2,r3
   49550:	dfc00117 	ldw	ra,4(sp)
   49554:	dc000017 	ldw	r16,0(sp)
   49558:	dec00204 	addi	sp,sp,8
   4955c:	f800283a 	ret
   49560:	8080030b 	ldhu	r2,12(r16)
   49564:	10bbffcc 	andi	r2,r2,61439
   49568:	8080030d 	sth	r2,12(r16)
   4956c:	1805883a 	mov	r2,r3
   49570:	dfc00117 	ldw	ra,4(sp)
   49574:	dc000017 	ldw	r16,0(sp)
   49578:	dec00204 	addi	sp,sp,8
   4957c:	f800283a 	ret

00049580 <__swrite>:
   49580:	2880030b 	ldhu	r2,12(r5)
   49584:	defffb04 	addi	sp,sp,-20
   49588:	dcc00315 	stw	r19,12(sp)
   4958c:	1080400c 	andi	r2,r2,256
   49590:	dc800215 	stw	r18,8(sp)
   49594:	dc400115 	stw	r17,4(sp)
   49598:	dc000015 	stw	r16,0(sp)
   4959c:	3027883a 	mov	r19,r6
   495a0:	3825883a 	mov	r18,r7
   495a4:	dfc00415 	stw	ra,16(sp)
   495a8:	2821883a 	mov	r16,r5
   495ac:	000d883a 	mov	r6,zero
   495b0:	01c00084 	movi	r7,2
   495b4:	2023883a 	mov	r17,r4
   495b8:	10000226 	beq	r2,zero,495c4 <__swrite+0x44>
   495bc:	2940038f 	ldh	r5,14(r5)
   495c0:	004ccb00 	call	4ccb0 <_lseek_r>
   495c4:	8080030b 	ldhu	r2,12(r16)
   495c8:	8140038f 	ldh	r5,14(r16)
   495cc:	8809883a 	mov	r4,r17
   495d0:	10bbffcc 	andi	r2,r2,61439
   495d4:	980d883a 	mov	r6,r19
   495d8:	900f883a 	mov	r7,r18
   495dc:	8080030d 	sth	r2,12(r16)
   495e0:	dfc00417 	ldw	ra,16(sp)
   495e4:	dcc00317 	ldw	r19,12(sp)
   495e8:	dc800217 	ldw	r18,8(sp)
   495ec:	dc400117 	ldw	r17,4(sp)
   495f0:	dc000017 	ldw	r16,0(sp)
   495f4:	dec00504 	addi	sp,sp,20
   495f8:	004bd2c1 	jmpi	4bd2c <_write_r>

000495fc <__sread>:
   495fc:	defffe04 	addi	sp,sp,-8
   49600:	dc000015 	stw	r16,0(sp)
   49604:	2821883a 	mov	r16,r5
   49608:	2940038f 	ldh	r5,14(r5)
   4960c:	dfc00115 	stw	ra,4(sp)
   49610:	004cd280 	call	4cd28 <_read_r>
   49614:	1007883a 	mov	r3,r2
   49618:	10000816 	blt	r2,zero,4963c <__sread+0x40>
   4961c:	80801417 	ldw	r2,80(r16)
   49620:	10c5883a 	add	r2,r2,r3
   49624:	80801415 	stw	r2,80(r16)
   49628:	1805883a 	mov	r2,r3
   4962c:	dfc00117 	ldw	ra,4(sp)
   49630:	dc000017 	ldw	r16,0(sp)
   49634:	dec00204 	addi	sp,sp,8
   49638:	f800283a 	ret
   4963c:	8080030b 	ldhu	r2,12(r16)
   49640:	10bbffcc 	andi	r2,r2,61439
   49644:	8080030d 	sth	r2,12(r16)
   49648:	1805883a 	mov	r2,r3
   4964c:	dfc00117 	ldw	ra,4(sp)
   49650:	dc000017 	ldw	r16,0(sp)
   49654:	dec00204 	addi	sp,sp,8
   49658:	f800283a 	ret

0004965c <strcmp>:
   4965c:	2144b03a 	or	r2,r4,r5
   49660:	108000cc 	andi	r2,r2,3
   49664:	10001d1e 	bne	r2,zero,496dc <strcmp+0x80>
   49668:	200f883a 	mov	r7,r4
   4966c:	28800017 	ldw	r2,0(r5)
   49670:	21000017 	ldw	r4,0(r4)
   49674:	280d883a 	mov	r6,r5
   49678:	2080161e 	bne	r4,r2,496d4 <strcmp+0x78>
   4967c:	023fbff4 	movhi	r8,65279
   49680:	423fbfc4 	addi	r8,r8,-257
   49684:	2207883a 	add	r3,r4,r8
   49688:	01602074 	movhi	r5,32897
   4968c:	29602004 	addi	r5,r5,-32640
   49690:	1946703a 	and	r3,r3,r5
   49694:	0104303a 	nor	r2,zero,r4
   49698:	10c4703a 	and	r2,r2,r3
   4969c:	10001c1e 	bne	r2,zero,49710 <strcmp+0xb4>
   496a0:	4013883a 	mov	r9,r8
   496a4:	2811883a 	mov	r8,r5
   496a8:	00000106 	br	496b0 <strcmp+0x54>
   496ac:	1800181e 	bne	r3,zero,49710 <strcmp+0xb4>
   496b0:	39c00104 	addi	r7,r7,4
   496b4:	39000017 	ldw	r4,0(r7)
   496b8:	31800104 	addi	r6,r6,4
   496bc:	31400017 	ldw	r5,0(r6)
   496c0:	2245883a 	add	r2,r4,r9
   496c4:	1204703a 	and	r2,r2,r8
   496c8:	0106303a 	nor	r3,zero,r4
   496cc:	1886703a 	and	r3,r3,r2
   496d0:	217ff626 	beq	r4,r5,496ac <strcmp+0x50>
   496d4:	3809883a 	mov	r4,r7
   496d8:	300b883a 	mov	r5,r6
   496dc:	20c00007 	ldb	r3,0(r4)
   496e0:	1800051e 	bne	r3,zero,496f8 <strcmp+0x9c>
   496e4:	00000606 	br	49700 <strcmp+0xa4>
   496e8:	21000044 	addi	r4,r4,1
   496ec:	20c00007 	ldb	r3,0(r4)
   496f0:	29400044 	addi	r5,r5,1
   496f4:	18000226 	beq	r3,zero,49700 <strcmp+0xa4>
   496f8:	28800007 	ldb	r2,0(r5)
   496fc:	18bffa26 	beq	r3,r2,496e8 <strcmp+0x8c>
   49700:	20c00003 	ldbu	r3,0(r4)
   49704:	28800003 	ldbu	r2,0(r5)
   49708:	1885c83a 	sub	r2,r3,r2
   4970c:	f800283a 	ret
   49710:	0005883a 	mov	r2,zero
   49714:	f800283a 	ret

00049718 <match>:
   49718:	21800017 	ldw	r6,0(r4)
   4971c:	01c01004 	movi	r7,64
   49720:	02001684 	movi	r8,90
   49724:	28800007 	ldb	r2,0(r5)
   49728:	29400044 	addi	r5,r5,1
   4972c:	10000826 	beq	r2,zero,49750 <match+0x38>
   49730:	31800044 	addi	r6,r6,1
   49734:	30c00007 	ldb	r3,0(r6)
   49738:	38c0020e 	bge	r7,r3,49744 <match+0x2c>
   4973c:	40c00116 	blt	r8,r3,49744 <match+0x2c>
   49740:	18c00804 	addi	r3,r3,32
   49744:	18bff726 	beq	r3,r2,49724 <match+0xc>
   49748:	0005883a 	mov	r2,zero
   4974c:	f800283a 	ret
   49750:	30800044 	addi	r2,r6,1
   49754:	20800015 	stw	r2,0(r4)
   49758:	00800044 	movi	r2,1
   4975c:	f800283a 	ret

00049760 <_strtod_r>:
   49760:	deffd504 	addi	sp,sp,-172
   49764:	df002915 	stw	fp,164(sp)
   49768:	dd402615 	stw	r21,152(sp)
   4976c:	dd002515 	stw	r20,148(sp)
   49770:	dfc02a15 	stw	ra,168(sp)
   49774:	ddc02815 	stw	r23,160(sp)
   49778:	dd802715 	stw	r22,156(sp)
   4977c:	dcc02415 	stw	r19,144(sp)
   49780:	dc802315 	stw	r18,140(sp)
   49784:	dc402215 	stw	r17,136(sp)
   49788:	dc002115 	stw	r16,132(sp)
   4978c:	2829883a 	mov	r20,r5
   49790:	202b883a 	mov	r21,r4
   49794:	d9801d15 	stw	r6,116(sp)
   49798:	d8000915 	stw	zero,36(sp)
   4979c:	d8000a15 	stw	zero,40(sp)
   497a0:	d9400415 	stw	r5,16(sp)
   497a4:	df000904 	addi	fp,sp,36
   497a8:	dc000417 	ldw	r16,16(sp)
   497ac:	00800b44 	movi	r2,45
   497b0:	80c00003 	ldbu	r3,0(r16)
   497b4:	10c03536 	bltu	r2,r3,4988c <_strtod_r+0x12c>
   497b8:	18c5883a 	add	r2,r3,r3
   497bc:	1085883a 	add	r2,r2,r2
   497c0:	00c00174 	movhi	r3,5
   497c4:	18e5f504 	addi	r3,r3,-26668
   497c8:	10c5883a 	add	r2,r2,r3
   497cc:	11000017 	ldw	r4,0(r2)
   497d0:	2000683a 	jmp	r4
   497d4:	00049a0c 	andi	zero,zero,4712
   497d8:	0004988c 	andi	zero,zero,4706
   497dc:	0004988c 	andi	zero,zero,4706
   497e0:	0004988c 	andi	zero,zero,4706
   497e4:	0004988c 	andi	zero,zero,4706
   497e8:	0004988c 	andi	zero,zero,4706
   497ec:	0004988c 	andi	zero,zero,4706
   497f0:	0004988c 	andi	zero,zero,4706
   497f4:	0004988c 	andi	zero,zero,4706
   497f8:	00049d54 	movui	zero,4725
   497fc:	00049d54 	movui	zero,4725
   49800:	00049d54 	movui	zero,4725
   49804:	00049d54 	movui	zero,4725
   49808:	00049d54 	movui	zero,4725
   4980c:	0004988c 	andi	zero,zero,4706
   49810:	0004988c 	andi	zero,zero,4706
   49814:	0004988c 	andi	zero,zero,4706
   49818:	0004988c 	andi	zero,zero,4706
   4981c:	0004988c 	andi	zero,zero,4706
   49820:	0004988c 	andi	zero,zero,4706
   49824:	0004988c 	andi	zero,zero,4706
   49828:	0004988c 	andi	zero,zero,4706
   4982c:	0004988c 	andi	zero,zero,4706
   49830:	0004988c 	andi	zero,zero,4706
   49834:	0004988c 	andi	zero,zero,4706
   49838:	0004988c 	andi	zero,zero,4706
   4983c:	0004988c 	andi	zero,zero,4706
   49840:	0004988c 	andi	zero,zero,4706
   49844:	0004988c 	andi	zero,zero,4706
   49848:	0004988c 	andi	zero,zero,4706
   4984c:	0004988c 	andi	zero,zero,4706
   49850:	0004988c 	andi	zero,zero,4706
   49854:	00049d54 	movui	zero,4725
   49858:	0004988c 	andi	zero,zero,4706
   4985c:	0004988c 	andi	zero,zero,4706
   49860:	0004988c 	andi	zero,zero,4706
   49864:	0004988c 	andi	zero,zero,4706
   49868:	0004988c 	andi	zero,zero,4706
   4986c:	0004988c 	andi	zero,zero,4706
   49870:	0004988c 	andi	zero,zero,4706
   49874:	0004988c 	andi	zero,zero,4706
   49878:	0004988c 	andi	zero,zero,4706
   4987c:	0004988c 	andi	zero,zero,4706
   49880:	00049d34 	movhi	zero,4724
   49884:	0004988c 	andi	zero,zero,4706
   49888:	00049d60 	cmpeqi	zero,zero,4725
   4988c:	d8001515 	stw	zero,84(sp)
   49890:	80c00007 	ldb	r3,0(r16)
   49894:	00800c04 	movi	r2,48
   49898:	1880e926 	beq	r3,r2,49c40 <_strtod_r+0x4e0>
   4989c:	d8001615 	stw	zero,88(sp)
   498a0:	dc001415 	stw	r16,80(sp)
   498a4:	84400007 	ldb	r17,0(r16)
   498a8:	00800bc4 	movi	r2,47
   498ac:	1443760e 	bge	r2,r17,4a688 <_strtod_r+0xf28>
   498b0:	00800e44 	movi	r2,57
   498b4:	14437416 	blt	r2,r17,4a688 <_strtod_r+0xf28>
   498b8:	8025883a 	mov	r18,r16
   498bc:	0027883a 	mov	r19,zero
   498c0:	d8001215 	stw	zero,72(sp)
   498c4:	d8001115 	stw	zero,68(sp)
   498c8:	00000f06 	br	49908 <_strtod_r+0x1a8>
   498cc:	d9001217 	ldw	r4,72(sp)
   498d0:	01400284 	movi	r5,10
   498d4:	004f1100 	call	4f110 <__mulsi3>
   498d8:	1445883a 	add	r2,r2,r17
   498dc:	10bff404 	addi	r2,r2,-48
   498e0:	d8801215 	stw	r2,72(sp)
   498e4:	94000044 	addi	r16,r18,1
   498e8:	dc000415 	stw	r16,16(sp)
   498ec:	84400007 	ldb	r17,0(r16)
   498f0:	00800bc4 	movi	r2,47
   498f4:	9cc00044 	addi	r19,r19,1
   498f8:	8025883a 	mov	r18,r16
   498fc:	1440130e 	bge	r2,r17,4994c <_strtod_r+0x1ec>
   49900:	00800e44 	movi	r2,57
   49904:	14401116 	blt	r2,r17,4994c <_strtod_r+0x1ec>
   49908:	00800204 	movi	r2,8
   4990c:	14ffef0e 	bge	r2,r19,498cc <_strtod_r+0x16c>
   49910:	008003c4 	movi	r2,15
   49914:	14fff316 	blt	r2,r19,498e4 <_strtod_r+0x184>
   49918:	d9001117 	ldw	r4,68(sp)
   4991c:	01400284 	movi	r5,10
   49920:	94000044 	addi	r16,r18,1
   49924:	004f1100 	call	4f110 <__mulsi3>
   49928:	1445883a 	add	r2,r2,r17
   4992c:	10bff404 	addi	r2,r2,-48
   49930:	d8801115 	stw	r2,68(sp)
   49934:	dc000415 	stw	r16,16(sp)
   49938:	84400007 	ldb	r17,0(r16)
   4993c:	00800bc4 	movi	r2,47
   49940:	9cc00044 	addi	r19,r19,1
   49944:	8025883a 	mov	r18,r16
   49948:	147fed16 	blt	r2,r17,49900 <_strtod_r+0x1a0>
   4994c:	00800b84 	movi	r2,46
   49950:	8880c926 	beq	r17,r2,49c78 <_strtod_r+0x518>
   49954:	dcc01815 	stw	r19,96(sp)
   49958:	d8001b15 	stw	zero,108(sp)
   4995c:	d8001715 	stw	zero,92(sp)
   49960:	000d883a 	mov	r6,zero
   49964:	00801944 	movi	r2,101
   49968:	88802126 	beq	r17,r2,499f0 <_strtod_r+0x290>
   4996c:	00801144 	movi	r2,69
   49970:	88801f26 	beq	r17,r2,499f0 <_strtod_r+0x290>
   49974:	d9001817 	ldw	r4,96(sp)
   49978:	2024c03a 	cmpne	r18,r4,zero
   4997c:	0009883a 	mov	r4,zero
   49980:	9000651e 	bne	r18,zero,49b18 <_strtod_r+0x3b8>
   49984:	3000c926 	beq	r6,zero,49cac <_strtod_r+0x54c>
   49988:	d8801d17 	ldw	r2,116(sp)
   4998c:	10000326 	beq	r2,zero,4999c <_strtod_r+0x23c>
   49990:	d8800417 	ldw	r2,16(sp)
   49994:	d8c01d17 	ldw	r3,116(sp)
   49998:	18800015 	stw	r2,0(r3)
   4999c:	d9001517 	ldw	r4,84(sp)
   499a0:	2005003a 	cmpeq	r2,r4,zero
   499a4:	10001c1e 	bne	r2,zero,49a18 <_strtod_r+0x2b8>
   499a8:	e0800017 	ldw	r2,0(fp)
   499ac:	e0c00117 	ldw	r3,4(fp)
   499b0:	1009883a 	mov	r4,r2
   499b4:	1960003c 	xorhi	r5,r3,32768
   499b8:	2005883a 	mov	r2,r4
   499bc:	2807883a 	mov	r3,r5
   499c0:	dfc02a17 	ldw	ra,168(sp)
   499c4:	df002917 	ldw	fp,164(sp)
   499c8:	ddc02817 	ldw	r23,160(sp)
   499cc:	dd802717 	ldw	r22,156(sp)
   499d0:	dd402617 	ldw	r21,152(sp)
   499d4:	dd002517 	ldw	r20,148(sp)
   499d8:	dcc02417 	ldw	r19,144(sp)
   499dc:	dc802317 	ldw	r18,140(sp)
   499e0:	dc402217 	ldw	r17,136(sp)
   499e4:	dc002117 	ldw	r16,132(sp)
   499e8:	dec02b04 	addi	sp,sp,172
   499ec:	f800283a 	ret
   499f0:	d8801817 	ldw	r2,96(sp)
   499f4:	1024c03a 	cmpne	r18,r2,zero
   499f8:	90000a1e 	bne	r18,zero,49a24 <_strtod_r+0x2c4>
   499fc:	3000091e 	bne	r6,zero,49a24 <_strtod_r+0x2c4>
   49a00:	d8c01617 	ldw	r3,88(sp)
   49a04:	1805003a 	cmpeq	r2,r3,zero
   49a08:	10000626 	beq	r2,zero,49a24 <_strtod_r+0x2c4>
   49a0c:	d8001515 	stw	zero,84(sp)
   49a10:	dd000415 	stw	r20,16(sp)
   49a14:	003fdc06 	br	49988 <_strtod_r+0x228>
   49a18:	e1000017 	ldw	r4,0(fp)
   49a1c:	e1400117 	ldw	r5,4(fp)
   49a20:	003fe506 	br	499b8 <_strtod_r+0x258>
   49a24:	dd000417 	ldw	r20,16(sp)
   49a28:	00800ac4 	movi	r2,43
   49a2c:	a4000044 	addi	r16,r20,1
   49a30:	dc000415 	stw	r16,16(sp)
   49a34:	a0c00047 	ldb	r3,1(r20)
   49a38:	8009883a 	mov	r4,r16
   49a3c:	1880cb26 	beq	r3,r2,49d6c <_strtod_r+0x60c>
   49a40:	00800b44 	movi	r2,45
   49a44:	18838326 	beq	r3,r2,4a854 <_strtod_r+0x10f4>
   49a48:	1823883a 	mov	r17,r3
   49a4c:	88fff404 	addi	r3,r17,-48
   49a50:	00800244 	movi	r2,9
   49a54:	d8001915 	stw	zero,100(sp)
   49a58:	10c0cb36 	bltu	r2,r3,49d88 <_strtod_r+0x628>
   49a5c:	00800c04 	movi	r2,48
   49a60:	8880061e 	bne	r17,r2,49a7c <_strtod_r+0x31c>
   49a64:	dc000417 	ldw	r16,16(sp)
   49a68:	8805883a 	mov	r2,r17
   49a6c:	84000044 	addi	r16,r16,1
   49a70:	dc000415 	stw	r16,16(sp)
   49a74:	84400007 	ldb	r17,0(r16)
   49a78:	88bffc26 	beq	r17,r2,49a6c <_strtod_r+0x30c>
   49a7c:	88fff3c4 	addi	r3,r17,-49
   49a80:	00800204 	movi	r2,8
   49a84:	10ffbd36 	bltu	r2,r3,4997c <_strtod_r+0x21c>
   49a88:	dc000417 	ldw	r16,16(sp)
   49a8c:	893ff404 	addi	r4,r17,-48
   49a90:	00c00bc4 	movi	r3,47
   49a94:	dc001315 	stw	r16,76(sp)
   49a98:	84000044 	addi	r16,r16,1
   49a9c:	dc000415 	stw	r16,16(sp)
   49aa0:	84400007 	ldb	r17,0(r16)
   49aa4:	1c40100e 	bge	r3,r17,49ae8 <_strtod_r+0x388>
   49aa8:	00800e44 	movi	r2,57
   49aac:	14400e16 	blt	r2,r17,49ae8 <_strtod_r+0x388>
   49ab0:	182f883a 	mov	r23,r3
   49ab4:	102d883a 	mov	r22,r2
   49ab8:	00000106 	br	49ac0 <_strtod_r+0x360>
   49abc:	b4400a16 	blt	r22,r17,49ae8 <_strtod_r+0x388>
   49ac0:	84000044 	addi	r16,r16,1
   49ac4:	01400284 	movi	r5,10
   49ac8:	d9802015 	stw	r6,128(sp)
   49acc:	004f1100 	call	4f110 <__mulsi3>
   49ad0:	dc000415 	stw	r16,16(sp)
   49ad4:	8885883a 	add	r2,r17,r2
   49ad8:	84400007 	ldb	r17,0(r16)
   49adc:	113ff404 	addi	r4,r2,-48
   49ae0:	d9802017 	ldw	r6,128(sp)
   49ae4:	bc7ff516 	blt	r23,r17,49abc <_strtod_r+0x35c>
   49ae8:	d8801317 	ldw	r2,76(sp)
   49aec:	8087c83a 	sub	r3,r16,r2
   49af0:	00800204 	movi	r2,8
   49af4:	10c2ff16 	blt	r2,r3,4a6f4 <_strtod_r+0xf94>
   49af8:	009387c4 	movi	r2,19999
   49afc:	1100010e 	bge	r2,r4,49b04 <_strtod_r+0x3a4>
   49b00:	1009883a 	mov	r4,r2
   49b04:	d8c01917 	ldw	r3,100(sp)
   49b08:	1805003a 	cmpeq	r2,r3,zero
   49b0c:	103f9c1e 	bne	r2,zero,49980 <_strtod_r+0x220>
   49b10:	0109c83a 	sub	r4,zero,r4
   49b14:	903f9b26 	beq	r18,zero,49984 <_strtod_r+0x224>
   49b18:	d8801717 	ldw	r2,92(sp)
   49b1c:	2089c83a 	sub	r4,r4,r2
   49b20:	d9000f15 	stw	r4,60(sp)
   49b24:	9800811e 	bne	r19,zero,49d2c <_strtod_r+0x5cc>
   49b28:	dd001817 	ldw	r20,96(sp)
   49b2c:	dc801817 	ldw	r18,96(sp)
   49b30:	00800404 	movi	r2,16
   49b34:	1480010e 	bge	r2,r18,49b3c <_strtod_r+0x3dc>
   49b38:	1025883a 	mov	r18,r2
   49b3c:	d9001217 	ldw	r4,72(sp)
   49b40:	004ee300 	call	4ee30 <__floatunsidf>
   49b44:	100f883a 	mov	r7,r2
   49b48:	e0800015 	stw	r2,0(fp)
   49b4c:	00800244 	movi	r2,9
   49b50:	e0c00115 	stw	r3,4(fp)
   49b54:	1480160e 	bge	r2,r18,49bb0 <_strtod_r+0x450>
   49b58:	900c90fa 	slli	r6,r18,3
   49b5c:	01000174 	movhi	r4,5
   49b60:	210a9504 	addi	r4,r4,10836
   49b64:	180b883a 	mov	r5,r3
   49b68:	310d883a 	add	r6,r6,r4
   49b6c:	30ffef17 	ldw	r3,-68(r6)
   49b70:	30bfee17 	ldw	r2,-72(r6)
   49b74:	3809883a 	mov	r4,r7
   49b78:	180f883a 	mov	r7,r3
   49b7c:	100d883a 	mov	r6,r2
   49b80:	004e2a00 	call	4e2a0 <__muldf3>
   49b84:	d9001117 	ldw	r4,68(sp)
   49b88:	1021883a 	mov	r16,r2
   49b8c:	1823883a 	mov	r17,r3
   49b90:	004ee300 	call	4ee30 <__floatunsidf>
   49b94:	880b883a 	mov	r5,r17
   49b98:	180f883a 	mov	r7,r3
   49b9c:	8009883a 	mov	r4,r16
   49ba0:	100d883a 	mov	r6,r2
   49ba4:	004e22c0 	call	4e22c <__adddf3>
   49ba8:	e0c00115 	stw	r3,4(fp)
   49bac:	e0800015 	stw	r2,0(fp)
   49bb0:	d8c01817 	ldw	r3,96(sp)
   49bb4:	010003c4 	movi	r4,15
   49bb8:	20c09e16 	blt	r4,r3,49e34 <_strtod_r+0x6d4>
   49bbc:	d8800f17 	ldw	r2,60(sp)
   49bc0:	103f7126 	beq	r2,zero,49988 <_strtod_r+0x228>
   49bc4:	0083d90e 	bge	zero,r2,4ab2c <_strtod_r+0x13cc>
   49bc8:	d8c00f17 	ldw	r3,60(sp)
   49bcc:	00800584 	movi	r2,22
   49bd0:	10c2ca0e 	bge	r2,r3,4a6fc <_strtod_r+0xf9c>
   49bd4:	d8801817 	ldw	r2,96(sp)
   49bd8:	d8c00f17 	ldw	r3,60(sp)
   49bdc:	20a3c83a 	sub	r17,r4,r2
   49be0:	88800584 	addi	r2,r17,22
   49be4:	10c09316 	blt	r2,r3,49e34 <_strtod_r+0x6d4>
   49be8:	880890fa 	slli	r4,r17,3
   49bec:	04000174 	movhi	r16,5
   49bf0:	840a9504 	addi	r16,r16,10836
   49bf4:	e0800017 	ldw	r2,0(fp)
   49bf8:	2409883a 	add	r4,r4,r16
   49bfc:	22000017 	ldw	r8,0(r4)
   49c00:	22400117 	ldw	r9,4(r4)
   49c04:	e0c00117 	ldw	r3,4(fp)
   49c08:	1009883a 	mov	r4,r2
   49c0c:	480f883a 	mov	r7,r9
   49c10:	180b883a 	mov	r5,r3
   49c14:	400d883a 	mov	r6,r8
   49c18:	004e2a00 	call	4e2a0 <__muldf3>
   49c1c:	d9000f17 	ldw	r4,60(sp)
   49c20:	180b883a 	mov	r5,r3
   49c24:	2455c83a 	sub	r10,r4,r17
   49c28:	501490fa 	slli	r10,r10,3
   49c2c:	1009883a 	mov	r4,r2
   49c30:	5415883a 	add	r10,r10,r16
   49c34:	52000017 	ldw	r8,0(r10)
   49c38:	52400117 	ldw	r9,4(r10)
   49c3c:	0002b906 	br	4a724 <_strtod_r+0xfc4>
   49c40:	80c00047 	ldb	r3,1(r16)
   49c44:	00801604 	movi	r2,88
   49c48:	18805226 	beq	r3,r2,49d94 <_strtod_r+0x634>
   49c4c:	00801e04 	movi	r2,120
   49c50:	18805026 	beq	r3,r2,49d94 <_strtod_r+0x634>
   49c54:	84000044 	addi	r16,r16,1
   49c58:	dc000415 	stw	r16,16(sp)
   49c5c:	80c00007 	ldb	r3,0(r16)
   49c60:	00800c04 	movi	r2,48
   49c64:	18bffb26 	beq	r3,r2,49c54 <_strtod_r+0x4f4>
   49c68:	183f4726 	beq	r3,zero,49988 <_strtod_r+0x228>
   49c6c:	01000044 	movi	r4,1
   49c70:	d9001615 	stw	r4,88(sp)
   49c74:	003f0a06 	br	498a0 <_strtod_r+0x140>
   49c78:	84000044 	addi	r16,r16,1
   49c7c:	dc000415 	stw	r16,16(sp)
   49c80:	94400047 	ldb	r17,1(r18)
   49c84:	9800ba26 	beq	r19,zero,49f70 <_strtod_r+0x810>
   49c88:	dcc01815 	stw	r19,96(sp)
   49c8c:	d8001715 	stw	zero,92(sp)
   49c90:	000d883a 	mov	r6,zero
   49c94:	8dbff404 	addi	r22,r17,-48
   49c98:	00800244 	movi	r2,9
   49c9c:	15826e2e 	bgeu	r2,r22,4a658 <_strtod_r+0xef8>
   49ca0:	01000044 	movi	r4,1
   49ca4:	d9001b15 	stw	r4,108(sp)
   49ca8:	003f2e06 	br	49964 <_strtod_r+0x204>
   49cac:	d8c01617 	ldw	r3,88(sp)
   49cb0:	1804c03a 	cmpne	r2,r3,zero
   49cb4:	103f341e 	bne	r2,zero,49988 <_strtod_r+0x228>
   49cb8:	d9001b17 	ldw	r4,108(sp)
   49cbc:	2004c03a 	cmpne	r2,r4,zero
   49cc0:	103f521e 	bne	r2,zero,49a0c <_strtod_r+0x2ac>
   49cc4:	00801384 	movi	r2,78
   49cc8:	8883b526 	beq	r17,r2,4aba0 <_strtod_r+0x1440>
   49ccc:	1443b016 	blt	r2,r17,4ab90 <_strtod_r+0x1430>
   49cd0:	00801244 	movi	r2,73
   49cd4:	88bf4d1e 	bne	r17,r2,49a0c <_strtod_r+0x2ac>
   49cd8:	dc000404 	addi	r16,sp,16
   49cdc:	8009883a 	mov	r4,r16
   49ce0:	01400174 	movhi	r5,5
   49ce4:	294ade04 	addi	r5,r5,11128
   49ce8:	00497180 	call	49718 <match>
   49cec:	103f4726 	beq	r2,zero,49a0c <_strtod_r+0x2ac>
   49cf0:	d8800417 	ldw	r2,16(sp)
   49cf4:	8009883a 	mov	r4,r16
   49cf8:	01400174 	movhi	r5,5
   49cfc:	294adf04 	addi	r5,r5,11132
   49d00:	143fffc4 	addi	r16,r2,-1
   49d04:	dc000415 	stw	r16,16(sp)
   49d08:	00497180 	call	49718 <match>
   49d0c:	1000031e 	bne	r2,zero,49d1c <_strtod_r+0x5bc>
   49d10:	d8800417 	ldw	r2,16(sp)
   49d14:	14000044 	addi	r16,r2,1
   49d18:	dc000415 	stw	r16,16(sp)
   49d1c:	019ffc34 	movhi	r6,32752
   49d20:	e1800115 	stw	r6,4(fp)
   49d24:	e0000015 	stw	zero,0(fp)
   49d28:	003f1706 	br	49988 <_strtod_r+0x228>
   49d2c:	9829883a 	mov	r20,r19
   49d30:	003f7e06 	br	49b2c <_strtod_r+0x3cc>
   49d34:	d8001515 	stw	zero,84(sp)
   49d38:	84000044 	addi	r16,r16,1
   49d3c:	dc000415 	stw	r16,16(sp)
   49d40:	80800007 	ldb	r2,0(r16)
   49d44:	103ed21e 	bne	r2,zero,49890 <_strtod_r+0x130>
   49d48:	d8001515 	stw	zero,84(sp)
   49d4c:	dd000415 	stw	r20,16(sp)
   49d50:	003f0d06 	br	49988 <_strtod_r+0x228>
   49d54:	84000044 	addi	r16,r16,1
   49d58:	dc000415 	stw	r16,16(sp)
   49d5c:	003e9206 	br	497a8 <_strtod_r+0x48>
   49d60:	00800044 	movi	r2,1
   49d64:	d8801515 	stw	r2,84(sp)
   49d68:	003ff306 	br	49d38 <_strtod_r+0x5d8>
   49d6c:	d8001915 	stw	zero,100(sp)
   49d70:	84000044 	addi	r16,r16,1
   49d74:	dc000415 	stw	r16,16(sp)
   49d78:	24400047 	ldb	r17,1(r4)
   49d7c:	00800244 	movi	r2,9
   49d80:	88fff404 	addi	r3,r17,-48
   49d84:	10ff352e 	bgeu	r2,r3,49a5c <_strtod_r+0x2fc>
   49d88:	0009883a 	mov	r4,zero
   49d8c:	dd000415 	stw	r20,16(sp)
   49d90:	003efb06 	br	49980 <_strtod_r+0x220>
   49d94:	d8c01517 	ldw	r3,84(sp)
   49d98:	04400174 	movhi	r17,5
   49d9c:	8c4d4f04 	addi	r17,r17,13628
   49da0:	d8800504 	addi	r2,sp,20
   49da4:	a809883a 	mov	r4,r21
   49da8:	d9400404 	addi	r5,sp,16
   49dac:	880d883a 	mov	r6,r17
   49db0:	d9c00604 	addi	r7,sp,24
   49db4:	d8800015 	stw	r2,0(sp)
   49db8:	d8c00115 	stw	r3,4(sp)
   49dbc:	004c1b00 	call	4c1b0 <__gethex>
   49dc0:	140001cc 	andi	r16,r2,7
   49dc4:	1025883a 	mov	r18,r2
   49dc8:	803eef26 	beq	r16,zero,49988 <_strtod_r+0x228>
   49dcc:	04c00184 	movi	r19,6
   49dd0:	84ff0e26 	beq	r16,r19,49a0c <_strtod_r+0x2ac>
   49dd4:	d9800517 	ldw	r6,20(sp)
   49dd8:	30000626 	beq	r6,zero,49df4 <_strtod_r+0x694>
   49ddc:	89400017 	ldw	r5,0(r17)
   49de0:	d9000d04 	addi	r4,sp,52
   49de4:	0047ce80 	call	47ce8 <__copybits>
   49de8:	d9400517 	ldw	r5,20(sp)
   49dec:	a809883a 	mov	r4,r21
   49df0:	00478480 	call	47848 <_Bfree>
   49df4:	d9400617 	ldw	r5,24(sp)
   49df8:	9c025436 	bltu	r19,r16,4a74c <_strtod_r+0xfec>
   49dfc:	8405883a 	add	r2,r16,r16
   49e00:	1085883a 	add	r2,r2,r2
   49e04:	00c00174 	movhi	r3,5
   49e08:	18e78604 	addi	r3,r3,-25064
   49e0c:	10c5883a 	add	r2,r2,r3
   49e10:	11000017 	ldw	r4,0(r2)
   49e14:	2000683a 	jmp	r4
   49e18:	0004a78c 	andi	zero,zero,4766
   49e1c:	0004a798 	cmpnei	zero,zero,4766
   49e20:	0004a73c 	xorhi	zero,zero,4764
   49e24:	0004a764 	muli	zero,zero,4765
   49e28:	0004a774 	movhi	zero,4765
   49e2c:	0004a798 	cmpnei	zero,zero,4766
   49e30:	0004a78c 	andi	zero,zero,4766
   49e34:	d9001817 	ldw	r4,96(sp)
   49e38:	d8c00f17 	ldw	r3,60(sp)
   49e3c:	2485c83a 	sub	r2,r4,r18
   49e40:	18a1883a 	add	r16,r3,r2
   49e44:	0402e80e 	bge	zero,r16,4a9e8 <_strtod_r+0x1288>
   49e48:	814003cc 	andi	r5,r16,15
   49e4c:	28000f26 	beq	r5,zero,49e8c <_strtod_r+0x72c>
   49e50:	280a90fa 	slli	r5,r5,3
   49e54:	01000174 	movhi	r4,5
   49e58:	210a9504 	addi	r4,r4,10836
   49e5c:	e0800017 	ldw	r2,0(fp)
   49e60:	290b883a 	add	r5,r5,r4
   49e64:	2a000017 	ldw	r8,0(r5)
   49e68:	e0c00117 	ldw	r3,4(fp)
   49e6c:	2a400117 	ldw	r9,4(r5)
   49e70:	1009883a 	mov	r4,r2
   49e74:	180b883a 	mov	r5,r3
   49e78:	480f883a 	mov	r7,r9
   49e7c:	400d883a 	mov	r6,r8
   49e80:	004e2a00 	call	4e2a0 <__muldf3>
   49e84:	e0c00115 	stw	r3,4(fp)
   49e88:	e0800015 	stw	r2,0(fp)
   49e8c:	00bffc04 	movi	r2,-16
   49e90:	808c703a 	and	r6,r16,r2
   49e94:	30006726 	beq	r6,zero,4a034 <_strtod_r+0x8d4>
   49e98:	00804d04 	movi	r2,308
   49e9c:	11820f16 	blt	r2,r6,4a6dc <_strtod_r+0xf7c>
   49ea0:	3021d13a 	srai	r16,r6,4
   49ea4:	00800044 	movi	r2,1
   49ea8:	14037f0e 	bge	r2,r16,4aca8 <_strtod_r+0x1548>
   49eac:	05800174 	movhi	r22,5
   49eb0:	b58ac704 	addi	r22,r22,11036
   49eb4:	1027883a 	mov	r19,r2
   49eb8:	0025883a 	mov	r18,zero
   49ebc:	b023883a 	mov	r17,r22
   49ec0:	8080004c 	andi	r2,r16,1
   49ec4:	1005003a 	cmpeq	r2,r2,zero
   49ec8:	1000091e 	bne	r2,zero,49ef0 <_strtod_r+0x790>
   49ecc:	e0800017 	ldw	r2,0(fp)
   49ed0:	e0c00117 	ldw	r3,4(fp)
   49ed4:	89800017 	ldw	r6,0(r17)
   49ed8:	89c00117 	ldw	r7,4(r17)
   49edc:	180b883a 	mov	r5,r3
   49ee0:	1009883a 	mov	r4,r2
   49ee4:	004e2a00 	call	4e2a0 <__muldf3>
   49ee8:	e0c00115 	stw	r3,4(fp)
   49eec:	e0800015 	stw	r2,0(fp)
   49ef0:	8021d07a 	srai	r16,r16,1
   49ef4:	94800044 	addi	r18,r18,1
   49ef8:	8c400204 	addi	r17,r17,8
   49efc:	9c3ff016 	blt	r19,r16,49ec0 <_strtod_r+0x760>
   49f00:	900e90fa 	slli	r7,r18,3
   49f04:	e2000117 	ldw	r8,4(fp)
   49f08:	e1000017 	ldw	r4,0(fp)
   49f0c:	3d8f883a 	add	r7,r7,r22
   49f10:	38800017 	ldw	r2,0(r7)
   49f14:	38c00117 	ldw	r3,4(r7)
   49f18:	01bf2c34 	movhi	r6,64688
   49f1c:	418d883a 	add	r6,r8,r6
   49f20:	300b883a 	mov	r5,r6
   49f24:	180f883a 	mov	r7,r3
   49f28:	100d883a 	mov	r6,r2
   49f2c:	004e2a00 	call	4e2a0 <__muldf3>
   49f30:	1009883a 	mov	r4,r2
   49f34:	180b883a 	mov	r5,r3
   49f38:	199ffc2c 	andhi	r6,r3,32752
   49f3c:	009f2834 	movhi	r2,31904
   49f40:	e1000015 	stw	r4,0(fp)
   49f44:	e1400115 	stw	r5,4(fp)
   49f48:	1181e436 	bltu	r2,r6,4a6dc <_strtod_r+0xf7c>
   49f4c:	009f2434 	movhi	r2,31888
   49f50:	11833f2e 	bgeu	r2,r6,4ac50 <_strtod_r+0x14f0>
   49f54:	d8001c15 	stw	zero,112(sp)
   49f58:	019ffc34 	movhi	r6,32752
   49f5c:	31bfffc4 	addi	r6,r6,-1
   49f60:	01ffffc4 	movi	r7,-1
   49f64:	e1800115 	stw	r6,4(fp)
   49f68:	e1c00015 	stw	r7,0(fp)
   49f6c:	00003206 	br	4a038 <_strtod_r+0x8d8>
   49f70:	00800c04 	movi	r2,48
   49f74:	8883221e 	bne	r17,r2,4ac00 <_strtod_r+0x14a0>
   49f78:	8805883a 	mov	r2,r17
   49f7c:	000d883a 	mov	r6,zero
   49f80:	84000044 	addi	r16,r16,1
   49f84:	dc000415 	stw	r16,16(sp)
   49f88:	84400007 	ldb	r17,0(r16)
   49f8c:	31800044 	addi	r6,r6,1
   49f90:	88bffb26 	beq	r17,r2,49f80 <_strtod_r+0x820>
   49f94:	88fff3c4 	addi	r3,r17,-49
   49f98:	00800204 	movi	r2,8
   49f9c:	10c1ca36 	bltu	r2,r3,4a6c8 <_strtod_r+0xf68>
   49fa0:	d8c00417 	ldw	r3,16(sp)
   49fa4:	d9801715 	stw	r6,92(sp)
   49fa8:	8dbff404 	addi	r22,r17,-48
   49fac:	d8c01415 	stw	r3,80(sp)
   49fb0:	1821883a 	mov	r16,r3
   49fb4:	d8001815 	stw	zero,96(sp)
   49fb8:	01800044 	movi	r6,1
   49fbc:	b0023526 	beq	r22,zero,4a894 <_strtod_r+0x1134>
   49fc0:	d9001717 	ldw	r4,92(sp)
   49fc4:	00800044 	movi	r2,1
   49fc8:	2189883a 	add	r4,r4,r6
   49fcc:	d9001715 	stw	r4,92(sp)
   49fd0:	1183390e 	bge	r2,r6,4acb8 <_strtod_r+0x1558>
   49fd4:	dc401817 	ldw	r17,96(sp)
   49fd8:	1025883a 	mov	r18,r2
   49fdc:	05c00204 	movi	r23,8
   49fe0:	00000806 	br	4a004 <_strtod_r+0x8a4>
   49fe4:	d9001217 	ldw	r4,72(sp)
   49fe8:	01400284 	movi	r5,10
   49fec:	d9802015 	stw	r6,128(sp)
   49ff0:	004f1100 	call	4f110 <__mulsi3>
   49ff4:	d9802017 	ldw	r6,128(sp)
   49ff8:	d8801215 	stw	r2,72(sp)
   49ffc:	94800044 	addi	r18,r18,1
   4a000:	91821726 	beq	r18,r6,4a860 <_strtod_r+0x1100>
   4a004:	8c400044 	addi	r17,r17,1
   4a008:	88bfffc4 	addi	r2,r17,-1
   4a00c:	b8bff50e 	bge	r23,r2,49fe4 <_strtod_r+0x884>
   4a010:	00800404 	movi	r2,16
   4a014:	147ff916 	blt	r2,r17,49ffc <_strtod_r+0x89c>
   4a018:	d9001117 	ldw	r4,68(sp)
   4a01c:	01400284 	movi	r5,10
   4a020:	d9802015 	stw	r6,128(sp)
   4a024:	004f1100 	call	4f110 <__mulsi3>
   4a028:	d9802017 	ldw	r6,128(sp)
   4a02c:	d8801115 	stw	r2,68(sp)
   4a030:	003ff206 	br	49ffc <_strtod_r+0x89c>
   4a034:	d8001c15 	stw	zero,112(sp)
   4a038:	d8c01217 	ldw	r3,72(sp)
   4a03c:	d9401417 	ldw	r5,80(sp)
   4a040:	d9c01817 	ldw	r7,96(sp)
   4a044:	a809883a 	mov	r4,r21
   4a048:	a00d883a 	mov	r6,r20
   4a04c:	d8c00015 	stw	r3,0(sp)
   4a050:	00487b40 	call	487b4 <__s2b>
   4a054:	11000304 	addi	r4,r2,12
   4a058:	d8801015 	stw	r2,64(sp)
   4a05c:	d8800f17 	ldw	r2,60(sp)
   4a060:	d9001f15 	stw	r4,124(sp)
   4a064:	1004803a 	cmplt	r2,r2,zero
   4a068:	d8801e15 	stw	r2,120(sp)
   4a06c:	d8c01017 	ldw	r3,64(sp)
   4a070:	a809883a 	mov	r4,r21
   4a074:	19400117 	ldw	r5,4(r3)
   4a078:	0047dc80 	call	47dc8 <_Balloc>
   4a07c:	d9001017 	ldw	r4,64(sp)
   4a080:	d9401f17 	ldw	r5,124(sp)
   4a084:	102f883a 	mov	r23,r2
   4a088:	21800417 	ldw	r6,16(r4)
   4a08c:	11000304 	addi	r4,r2,12
   4a090:	318d883a 	add	r6,r6,r6
   4a094:	318d883a 	add	r6,r6,r6
   4a098:	31800204 	addi	r6,r6,8
   4a09c:	00476300 	call	47630 <memcpy>
   4a0a0:	e2000017 	ldw	r8,0(fp)
   4a0a4:	e2400117 	ldw	r9,4(fp)
   4a0a8:	a809883a 	mov	r4,r21
   4a0ac:	400b883a 	mov	r5,r8
   4a0b0:	d9c00204 	addi	r7,sp,8
   4a0b4:	d8800304 	addi	r2,sp,12
   4a0b8:	480d883a 	mov	r6,r9
   4a0bc:	d8800015 	stw	r2,0(sp)
   4a0c0:	0047e840 	call	47e84 <__d2b>
   4a0c4:	a809883a 	mov	r4,r21
   4a0c8:	01400044 	movi	r5,1
   4a0cc:	d8800515 	stw	r2,20(sp)
   4a0d0:	004852c0 	call	4852c <__i2b>
   4a0d4:	d8c01e17 	ldw	r3,120(sp)
   4a0d8:	102d883a 	mov	r22,r2
   4a0dc:	1801091e 	bne	r3,zero,4a504 <_strtod_r+0xda4>
   4a0e0:	dd000f17 	ldw	r20,60(sp)
   4a0e4:	000f883a 	mov	r7,zero
   4a0e8:	0013883a 	mov	r9,zero
   4a0ec:	a011883a 	mov	r8,r20
   4a0f0:	d8800217 	ldw	r2,8(sp)
   4a0f4:	10010116 	blt	r2,zero,4a4fc <_strtod_r+0xd9c>
   4a0f8:	388f883a 	add	r7,r7,r2
   4a0fc:	d8c01c17 	ldw	r3,112(sp)
   4a100:	d9400317 	ldw	r5,12(sp)
   4a104:	10c9c83a 	sub	r4,r2,r3
   4a108:	2145883a 	add	r2,r4,r5
   4a10c:	10bfffc4 	addi	r2,r2,-1
   4a110:	00ff0084 	movi	r3,-1022
   4a114:	10c09f0e 	bge	r2,r3,4a394 <_strtod_r+0xc34>
   4a118:	21810cc4 	addi	r6,r4,1075
   4a11c:	d9001c17 	ldw	r4,112(sp)
   4a120:	4185883a 	add	r2,r8,r6
   4a124:	39a1883a 	add	r16,r7,r6
   4a128:	20a5883a 	add	r18,r4,r2
   4a12c:	3807883a 	mov	r3,r7
   4a130:	81c0010e 	bge	r16,r7,4a138 <_strtod_r+0x9d8>
   4a134:	8007883a 	mov	r3,r16
   4a138:	9005883a 	mov	r2,r18
   4a13c:	1c80010e 	bge	r3,r18,4a144 <_strtod_r+0x9e4>
   4a140:	1805883a 	mov	r2,r3
   4a144:	0080eb0e 	bge	zero,r2,4a4f4 <_strtod_r+0xd94>
   4a148:	38a7c83a 	sub	r19,r7,r2
   4a14c:	80a1c83a 	sub	r16,r16,r2
   4a150:	90a5c83a 	sub	r18,r18,r2
   4a154:	02400e0e 	bge	zero,r9,4a190 <_strtod_r+0xa30>
   4a158:	480d883a 	mov	r6,r9
   4a15c:	b00b883a 	mov	r5,r22
   4a160:	a809883a 	mov	r4,r21
   4a164:	00486940 	call	48694 <__pow5mult>
   4a168:	d9800517 	ldw	r6,20(sp)
   4a16c:	a809883a 	mov	r4,r21
   4a170:	100b883a 	mov	r5,r2
   4a174:	102d883a 	mov	r22,r2
   4a178:	00482d80 	call	482d8 <__multiply>
   4a17c:	d9400517 	ldw	r5,20(sp)
   4a180:	1023883a 	mov	r17,r2
   4a184:	a809883a 	mov	r4,r21
   4a188:	00478480 	call	47848 <_Bfree>
   4a18c:	dc400515 	stw	r17,20(sp)
   4a190:	0400050e 	bge	zero,r16,4a1a8 <_strtod_r+0xa48>
   4a194:	d9400517 	ldw	r5,20(sp)
   4a198:	800d883a 	mov	r6,r16
   4a19c:	a809883a 	mov	r4,r21
   4a1a0:	004818c0 	call	4818c <__lshift>
   4a1a4:	d8800515 	stw	r2,20(sp)
   4a1a8:	a000741e 	bne	r20,zero,4a37c <_strtod_r+0xc1c>
   4a1ac:	0480050e 	bge	zero,r18,4a1c4 <_strtod_r+0xa64>
   4a1b0:	b80b883a 	mov	r5,r23
   4a1b4:	900d883a 	mov	r6,r18
   4a1b8:	a809883a 	mov	r4,r21
   4a1bc:	004818c0 	call	4818c <__lshift>
   4a1c0:	102f883a 	mov	r23,r2
   4a1c4:	04c0050e 	bge	zero,r19,4a1dc <_strtod_r+0xa7c>
   4a1c8:	b00b883a 	mov	r5,r22
   4a1cc:	980d883a 	mov	r6,r19
   4a1d0:	a809883a 	mov	r4,r21
   4a1d4:	004818c0 	call	4818c <__lshift>
   4a1d8:	102d883a 	mov	r22,r2
   4a1dc:	d9400517 	ldw	r5,20(sp)
   4a1e0:	a809883a 	mov	r4,r21
   4a1e4:	b80d883a 	mov	r6,r23
   4a1e8:	00480000 	call	48000 <__mdiff>
   4a1ec:	1029883a 	mov	r20,r2
   4a1f0:	10800317 	ldw	r2,12(r2)
   4a1f4:	a009883a 	mov	r4,r20
   4a1f8:	a0000315 	stw	zero,12(r20)
   4a1fc:	b00b883a 	mov	r5,r22
   4a200:	d8801a15 	stw	r2,104(sp)
   4a204:	00479a40 	call	479a4 <__mcmp>
   4a208:	1001a616 	blt	r2,zero,4a8a4 <_strtod_r+0x1144>
   4a20c:	10016d26 	beq	r2,zero,4a7c4 <_strtod_r+0x1064>
   4a210:	a009883a 	mov	r4,r20
   4a214:	b00b883a 	mov	r5,r22
   4a218:	0047ba40 	call	47ba4 <__ratio>
   4a21c:	0011883a 	mov	r8,zero
   4a220:	02500034 	movhi	r9,16384
   4a224:	480f883a 	mov	r7,r9
   4a228:	1009883a 	mov	r4,r2
   4a22c:	180b883a 	mov	r5,r3
   4a230:	400d883a 	mov	r6,r8
   4a234:	1021883a 	mov	r16,r2
   4a238:	1823883a 	mov	r17,r3
   4a23c:	004eb640 	call	4eb64 <__ledf2>
   4a240:	00805716 	blt	zero,r2,4a3a0 <_strtod_r+0xc40>
   4a244:	d8801a17 	ldw	r2,104(sp)
   4a248:	1025003a 	cmpeq	r18,r2,zero
   4a24c:	90008c1e 	bne	r18,zero,4a480 <_strtod_r+0xd20>
   4a250:	008ffc34 	movhi	r2,16368
   4a254:	0021883a 	mov	r16,zero
   4a258:	1023883a 	mov	r17,r2
   4a25c:	d8000715 	stw	zero,28(sp)
   4a260:	d8800815 	stw	r2,32(sp)
   4a264:	e1c00117 	ldw	r7,4(fp)
   4a268:	009ff834 	movhi	r2,32736
   4a26c:	3cdffc2c 	andhi	r19,r7,32752
   4a270:	98805f26 	beq	r19,r2,4a3f0 <_strtod_r+0xc90>
   4a274:	d8c01c17 	ldw	r3,112(sp)
   4a278:	18001b26 	beq	r3,zero,4a2e8 <_strtod_r+0xb88>
   4a27c:	0081a834 	movhi	r2,1696
   4a280:	14c01936 	bltu	r2,r19,4a2e8 <_strtod_r+0xb88>
   4a284:	00bff034 	movhi	r2,65472
   4a288:	00d07834 	movhi	r3,16864
   4a28c:	18ffffc4 	addi	r3,r3,-1
   4a290:	180f883a 	mov	r7,r3
   4a294:	8009883a 	mov	r4,r16
   4a298:	880b883a 	mov	r5,r17
   4a29c:	100d883a 	mov	r6,r2
   4a2a0:	004eb640 	call	4eb64 <__ledf2>
   4a2a4:	00800b16 	blt	zero,r2,4a2d4 <_strtod_r+0xb74>
   4a2a8:	880b883a 	mov	r5,r17
   4a2ac:	8009883a 	mov	r4,r16
   4a2b0:	004cec40 	call	4cec4 <__fixunsdfsi>
   4a2b4:	1000e31e 	bne	r2,zero,4a644 <_strtod_r+0xee4>
   4a2b8:	0021883a 	mov	r16,zero
   4a2bc:	044ffc34 	movhi	r17,16368
   4a2c0:	9000dd1e 	bne	r18,zero,4a638 <_strtod_r+0xed8>
   4a2c4:	8005883a 	mov	r2,r16
   4a2c8:	8807883a 	mov	r3,r17
   4a2cc:	d8c00815 	stw	r3,32(sp)
   4a2d0:	d8800715 	stw	r2,28(sp)
   4a2d4:	d8800817 	ldw	r2,32(sp)
   4a2d8:	00c1ac34 	movhi	r3,1712
   4a2dc:	14c5c83a 	sub	r2,r2,r19
   4a2e0:	10c5883a 	add	r2,r2,r3
   4a2e4:	d8800815 	stw	r2,32(sp)
   4a2e8:	e0800017 	ldw	r2,0(fp)
   4a2ec:	e0c00117 	ldw	r3,4(fp)
   4a2f0:	1009883a 	mov	r4,r2
   4a2f4:	180b883a 	mov	r5,r3
   4a2f8:	0047a040 	call	47a04 <__ulp>
   4a2fc:	d9800717 	ldw	r6,28(sp)
   4a300:	d9c00817 	ldw	r7,32(sp)
   4a304:	180b883a 	mov	r5,r3
   4a308:	1009883a 	mov	r4,r2
   4a30c:	004e2a00 	call	4e2a0 <__muldf3>
   4a310:	e2000017 	ldw	r8,0(fp)
   4a314:	e2400117 	ldw	r9,4(fp)
   4a318:	180b883a 	mov	r5,r3
   4a31c:	1009883a 	mov	r4,r2
   4a320:	480f883a 	mov	r7,r9
   4a324:	400d883a 	mov	r6,r8
   4a328:	004e22c0 	call	4e22c <__adddf3>
   4a32c:	e0c00115 	stw	r3,4(fp)
   4a330:	e0800015 	stw	r2,0(fp)
   4a334:	d9001c17 	ldw	r4,112(sp)
   4a338:	e4800117 	ldw	r18,4(fp)
   4a33c:	2000021e 	bne	r4,zero,4a348 <_strtod_r+0xbe8>
   4a340:	909ffc2c 	andhi	r2,r18,32752
   4a344:	98807f26 	beq	r19,r2,4a544 <_strtod_r+0xde4>
   4a348:	d9400517 	ldw	r5,20(sp)
   4a34c:	a809883a 	mov	r4,r21
   4a350:	00478480 	call	47848 <_Bfree>
   4a354:	a809883a 	mov	r4,r21
   4a358:	b80b883a 	mov	r5,r23
   4a35c:	00478480 	call	47848 <_Bfree>
   4a360:	a809883a 	mov	r4,r21
   4a364:	b00b883a 	mov	r5,r22
   4a368:	00478480 	call	47848 <_Bfree>
   4a36c:	a809883a 	mov	r4,r21
   4a370:	a00b883a 	mov	r5,r20
   4a374:	00478480 	call	47848 <_Bfree>
   4a378:	003f3c06 	br	4a06c <_strtod_r+0x90c>
   4a37c:	b80b883a 	mov	r5,r23
   4a380:	a00d883a 	mov	r6,r20
   4a384:	a809883a 	mov	r4,r21
   4a388:	00486940 	call	48694 <__pow5mult>
   4a38c:	102f883a 	mov	r23,r2
   4a390:	003f8606 	br	4a1ac <_strtod_r+0xa4c>
   4a394:	00800d84 	movi	r2,54
   4a398:	114dc83a 	sub	r6,r2,r5
   4a39c:	003f5f06 	br	4a11c <_strtod_r+0x9bc>
   4a3a0:	0005883a 	mov	r2,zero
   4a3a4:	00cff834 	movhi	r3,16352
   4a3a8:	8009883a 	mov	r4,r16
   4a3ac:	880b883a 	mov	r5,r17
   4a3b0:	180f883a 	mov	r7,r3
   4a3b4:	100d883a 	mov	r6,r2
   4a3b8:	004e2a00 	call	4e2a0 <__muldf3>
   4a3bc:	1009883a 	mov	r4,r2
   4a3c0:	d8801a17 	ldw	r2,104(sp)
   4a3c4:	2021883a 	mov	r16,r4
   4a3c8:	1823883a 	mov	r17,r3
   4a3cc:	1025003a 	cmpeq	r18,r2,zero
   4a3d0:	9000451e 	bne	r18,zero,4a4e8 <_strtod_r+0xd88>
   4a3d4:	2005883a 	mov	r2,r4
   4a3d8:	d8800715 	stw	r2,28(sp)
   4a3dc:	d8c00815 	stw	r3,32(sp)
   4a3e0:	e1c00117 	ldw	r7,4(fp)
   4a3e4:	009ff834 	movhi	r2,32736
   4a3e8:	3cdffc2c 	andhi	r19,r7,32752
   4a3ec:	98bfa11e 	bne	r19,r2,4a274 <_strtod_r+0xb14>
   4a3f0:	e1000017 	ldw	r4,0(fp)
   4a3f4:	01bf2c34 	movhi	r6,64688
   4a3f8:	398d883a 	add	r6,r7,r6
   4a3fc:	d9000b15 	stw	r4,44(sp)
   4a400:	d9c00c15 	stw	r7,48(sp)
   4a404:	300b883a 	mov	r5,r6
   4a408:	e1800115 	stw	r6,4(fp)
   4a40c:	0047a040 	call	47a04 <__ulp>
   4a410:	d9800717 	ldw	r6,28(sp)
   4a414:	d9c00817 	ldw	r7,32(sp)
   4a418:	180b883a 	mov	r5,r3
   4a41c:	1009883a 	mov	r4,r2
   4a420:	004e2a00 	call	4e2a0 <__muldf3>
   4a424:	e2000017 	ldw	r8,0(fp)
   4a428:	e2400117 	ldw	r9,4(fp)
   4a42c:	180b883a 	mov	r5,r3
   4a430:	1009883a 	mov	r4,r2
   4a434:	480f883a 	mov	r7,r9
   4a438:	400d883a 	mov	r6,r8
   4a43c:	004e22c0 	call	4e22c <__adddf3>
   4a440:	1009883a 	mov	r4,r2
   4a444:	180b883a 	mov	r5,r3
   4a448:	009f2834 	movhi	r2,31904
   4a44c:	10bfffc4 	addi	r2,r2,-1
   4a450:	18dffc2c 	andhi	r3,r3,32752
   4a454:	e1000015 	stw	r4,0(fp)
   4a458:	e1400115 	stw	r5,4(fp)
   4a45c:	10c0722e 	bgeu	r2,r3,4a628 <_strtod_r+0xec8>
   4a460:	d8800c17 	ldw	r2,48(sp)
   4a464:	011ffc34 	movhi	r4,32752
   4a468:	213fffc4 	addi	r4,r4,-1
   4a46c:	11007d26 	beq	r2,r4,4a664 <_strtod_r+0xf04>
   4a470:	01ffffc4 	movi	r7,-1
   4a474:	e1000115 	stw	r4,4(fp)
   4a478:	e1c00015 	stw	r7,0(fp)
   4a47c:	003fb206 	br	4a348 <_strtod_r+0xbe8>
   4a480:	e0c00017 	ldw	r3,0(fp)
   4a484:	1800251e 	bne	r3,zero,4a51c <_strtod_r+0xdbc>
   4a488:	e0800117 	ldw	r2,4(fp)
   4a48c:	00c00434 	movhi	r3,16
   4a490:	18ffffc4 	addi	r3,r3,-1
   4a494:	10c4703a 	and	r2,r2,r3
   4a498:	1000241e 	bne	r2,zero,4a52c <_strtod_r+0xdcc>
   4a49c:	0005883a 	mov	r2,zero
   4a4a0:	00cffc34 	movhi	r3,16368
   4a4a4:	180f883a 	mov	r7,r3
   4a4a8:	8009883a 	mov	r4,r16
   4a4ac:	880b883a 	mov	r5,r17
   4a4b0:	100d883a 	mov	r6,r2
   4a4b4:	004eadc0 	call	4eadc <__ltdf2>
   4a4b8:	10014616 	blt	r2,zero,4a9d4 <_strtod_r+0x1274>
   4a4bc:	0005883a 	mov	r2,zero
   4a4c0:	00cff834 	movhi	r3,16352
   4a4c4:	880b883a 	mov	r5,r17
   4a4c8:	8009883a 	mov	r4,r16
   4a4cc:	180f883a 	mov	r7,r3
   4a4d0:	100d883a 	mov	r6,r2
   4a4d4:	004e2a00 	call	4e2a0 <__muldf3>
   4a4d8:	1823883a 	mov	r17,r3
   4a4dc:	1021883a 	mov	r16,r2
   4a4e0:	18e0003c 	xorhi	r3,r3,32768
   4a4e4:	003fbc06 	br	4a3d8 <_strtod_r+0xc78>
   4a4e8:	2005883a 	mov	r2,r4
   4a4ec:	18e0003c 	xorhi	r3,r3,32768
   4a4f0:	003fb906 	br	4a3d8 <_strtod_r+0xc78>
   4a4f4:	3827883a 	mov	r19,r7
   4a4f8:	003f1606 	br	4a154 <_strtod_r+0x9f4>
   4a4fc:	4091c83a 	sub	r8,r8,r2
   4a500:	003efe06 	br	4a0fc <_strtod_r+0x99c>
   4a504:	d9000f17 	ldw	r4,60(sp)
   4a508:	0011883a 	mov	r8,zero
   4a50c:	0029883a 	mov	r20,zero
   4a510:	0113c83a 	sub	r9,zero,r4
   4a514:	480f883a 	mov	r7,r9
   4a518:	003ef506 	br	4a0f0 <_strtod_r+0x990>
   4a51c:	00800044 	movi	r2,1
   4a520:	1880021e 	bne	r3,r2,4a52c <_strtod_r+0xdcc>
   4a524:	e0800117 	ldw	r2,4(fp)
   4a528:	1000c526 	beq	r2,zero,4a840 <_strtod_r+0x10e0>
   4a52c:	00affc34 	movhi	r2,49136
   4a530:	0021883a 	mov	r16,zero
   4a534:	044ffc34 	movhi	r17,16368
   4a538:	d8800815 	stw	r2,32(sp)
   4a53c:	d8000715 	stw	zero,28(sp)
   4a540:	003f4806 	br	4a264 <_strtod_r+0xb04>
   4a544:	880b883a 	mov	r5,r17
   4a548:	8009883a 	mov	r4,r16
   4a54c:	004ece40 	call	4ece4 <__fixdfsi>
   4a550:	1009883a 	mov	r4,r2
   4a554:	004ebec0 	call	4ebec <__floatsidf>
   4a558:	880b883a 	mov	r5,r17
   4a55c:	8009883a 	mov	r4,r16
   4a560:	100d883a 	mov	r6,r2
   4a564:	180f883a 	mov	r7,r3
   4a568:	004e1ac0 	call	4e1ac <__subdf3>
   4a56c:	100b883a 	mov	r5,r2
   4a570:	1021883a 	mov	r16,r2
   4a574:	d8801a17 	ldw	r2,104(sp)
   4a578:	180d883a 	mov	r6,r3
   4a57c:	1823883a 	mov	r17,r3
   4a580:	1000061e 	bne	r2,zero,4a59c <_strtod_r+0xe3c>
   4a584:	e0800017 	ldw	r2,0(fp)
   4a588:	1000041e 	bne	r2,zero,4a59c <_strtod_r+0xe3c>
   4a58c:	00c00434 	movhi	r3,16
   4a590:	18ffffc4 	addi	r3,r3,-1
   4a594:	90c4703a 	and	r2,r18,r3
   4a598:	10004026 	beq	r2,zero,4a69c <_strtod_r+0xf3c>
   4a59c:	00a52834 	movhi	r2,38048
   4a5a0:	108d6544 	addi	r2,r2,13717
   4a5a4:	00cff834 	movhi	r3,16352
   4a5a8:	18ffffc4 	addi	r3,r3,-1
   4a5ac:	180f883a 	mov	r7,r3
   4a5b0:	8009883a 	mov	r4,r16
   4a5b4:	880b883a 	mov	r5,r17
   4a5b8:	100d883a 	mov	r6,r2
   4a5bc:	004eadc0 	call	4eadc <__ltdf2>
   4a5c0:	10000916 	blt	r2,zero,4a5e8 <_strtod_r+0xe88>
   4a5c4:	008d6c34 	movhi	r2,13744
   4a5c8:	10b94d44 	addi	r2,r2,-6859
   4a5cc:	00cff834 	movhi	r3,16352
   4a5d0:	880b883a 	mov	r5,r17
   4a5d4:	180f883a 	mov	r7,r3
   4a5d8:	8009883a 	mov	r4,r16
   4a5dc:	100d883a 	mov	r6,r2
   4a5e0:	004e9cc0 	call	4e9cc <__gtdf2>
   4a5e4:	00bf580e 	bge	zero,r2,4a348 <_strtod_r+0xbe8>
   4a5e8:	d9400517 	ldw	r5,20(sp)
   4a5ec:	a809883a 	mov	r4,r21
   4a5f0:	00478480 	call	47848 <_Bfree>
   4a5f4:	a809883a 	mov	r4,r21
   4a5f8:	b80b883a 	mov	r5,r23
   4a5fc:	00478480 	call	47848 <_Bfree>
   4a600:	a809883a 	mov	r4,r21
   4a604:	b00b883a 	mov	r5,r22
   4a608:	00478480 	call	47848 <_Bfree>
   4a60c:	d9401017 	ldw	r5,64(sp)
   4a610:	a809883a 	mov	r4,r21
   4a614:	00478480 	call	47848 <_Bfree>
   4a618:	a809883a 	mov	r4,r21
   4a61c:	a00b883a 	mov	r5,r20
   4a620:	00478480 	call	47848 <_Bfree>
   4a624:	003cd806 	br	49988 <_strtod_r+0x228>
   4a628:	0080d434 	movhi	r2,848
   4a62c:	288d883a 	add	r6,r5,r2
   4a630:	e1800115 	stw	r6,4(fp)
   4a634:	003f3f06 	br	4a334 <_strtod_r+0xbd4>
   4a638:	8005883a 	mov	r2,r16
   4a63c:	88e0003c 	xorhi	r3,r17,32768
   4a640:	003f2206 	br	4a2cc <_strtod_r+0xb6c>
   4a644:	1009883a 	mov	r4,r2
   4a648:	004ee300 	call	4ee30 <__floatunsidf>
   4a64c:	1021883a 	mov	r16,r2
   4a650:	1823883a 	mov	r17,r3
   4a654:	003f1a06 	br	4a2c0 <_strtod_r+0xb60>
   4a658:	dc000417 	ldw	r16,16(sp)
   4a65c:	31800044 	addi	r6,r6,1
   4a660:	003e5606 	br	49fbc <_strtod_r+0x85c>
   4a664:	d8c00b17 	ldw	r3,44(sp)
   4a668:	00bfffc4 	movi	r2,-1
   4a66c:	18bf801e 	bne	r3,r2,4a470 <_strtod_r+0xd10>
   4a670:	00c00884 	movi	r3,34
   4a674:	a8c00015 	stw	r3,0(r21)
   4a678:	009ffc34 	movhi	r2,32752
   4a67c:	e0800115 	stw	r2,4(fp)
   4a680:	e0000015 	stw	zero,0(fp)
   4a684:	003fd806 	br	4a5e8 <_strtod_r+0xe88>
   4a688:	8025883a 	mov	r18,r16
   4a68c:	0027883a 	mov	r19,zero
   4a690:	d8001215 	stw	zero,72(sp)
   4a694:	d8001115 	stw	zero,68(sp)
   4a698:	003cac06 	br	4994c <_strtod_r+0x1ec>
   4a69c:	00a52834 	movhi	r2,38048
   4a6a0:	108d6544 	addi	r2,r2,13717
   4a6a4:	00cff434 	movhi	r3,16336
   4a6a8:	18ffffc4 	addi	r3,r3,-1
   4a6ac:	2809883a 	mov	r4,r5
   4a6b0:	180f883a 	mov	r7,r3
   4a6b4:	300b883a 	mov	r5,r6
   4a6b8:	100d883a 	mov	r6,r2
   4a6bc:	004eadc0 	call	4eadc <__ltdf2>
   4a6c0:	103f210e 	bge	r2,zero,4a348 <_strtod_r+0xbe8>
   4a6c4:	003fc806 	br	4a5e8 <_strtod_r+0xe88>
   4a6c8:	00800044 	movi	r2,1
   4a6cc:	d8001815 	stw	zero,96(sp)
   4a6d0:	d8801b15 	stw	r2,108(sp)
   4a6d4:	d8001715 	stw	zero,92(sp)
   4a6d8:	003ca206 	br	49964 <_strtod_r+0x204>
   4a6dc:	00800884 	movi	r2,34
   4a6e0:	a8800015 	stw	r2,0(r21)
   4a6e4:	019ffc34 	movhi	r6,32752
   4a6e8:	e1800115 	stw	r6,4(fp)
   4a6ec:	e0000015 	stw	zero,0(fp)
   4a6f0:	003ca506 	br	49988 <_strtod_r+0x228>
   4a6f4:	011387c4 	movi	r4,19999
   4a6f8:	003d0206 	br	49b04 <_strtod_r+0x3a4>
   4a6fc:	180a90fa 	slli	r5,r3,3
   4a700:	e0800017 	ldw	r2,0(fp)
   4a704:	e0c00117 	ldw	r3,4(fp)
   4a708:	01000174 	movhi	r4,5
   4a70c:	210a9504 	addi	r4,r4,10836
   4a710:	290b883a 	add	r5,r5,r4
   4a714:	2a000017 	ldw	r8,0(r5)
   4a718:	2a400117 	ldw	r9,4(r5)
   4a71c:	1009883a 	mov	r4,r2
   4a720:	180b883a 	mov	r5,r3
   4a724:	480f883a 	mov	r7,r9
   4a728:	400d883a 	mov	r6,r8
   4a72c:	004e2a00 	call	4e2a0 <__muldf3>
   4a730:	e0c00115 	stw	r3,4(fp)
   4a734:	e0800015 	stw	r2,0(fp)
   4a738:	003c9306 	br	49988 <_strtod_r+0x228>
   4a73c:	d8800d17 	ldw	r2,52(sp)
   4a740:	e0800015 	stw	r2,0(fp)
   4a744:	d8c00e17 	ldw	r3,56(sp)
   4a748:	e0c00115 	stw	r3,4(fp)
   4a74c:	9080020c 	andi	r2,r18,8
   4a750:	103c8d26 	beq	r2,zero,49988 <_strtod_r+0x228>
   4a754:	e0800117 	ldw	r2,4(fp)
   4a758:	10a00034 	orhi	r2,r2,32768
   4a75c:	e0800115 	stw	r2,4(fp)
   4a760:	003c8906 	br	49988 <_strtod_r+0x228>
   4a764:	009ffc34 	movhi	r2,32752
   4a768:	e0800115 	stw	r2,4(fp)
   4a76c:	e0000015 	stw	zero,0(fp)
   4a770:	003ff606 	br	4a74c <_strtod_r+0xfec>
   4a774:	00a00034 	movhi	r2,32768
   4a778:	10bfffc4 	addi	r2,r2,-1
   4a77c:	00ffffc4 	movi	r3,-1
   4a780:	e0800115 	stw	r2,4(fp)
   4a784:	e0c00015 	stw	r3,0(fp)
   4a788:	003ff006 	br	4a74c <_strtod_r+0xfec>
   4a78c:	e0000115 	stw	zero,4(fp)
   4a790:	e0000015 	stw	zero,0(fp)
   4a794:	003fed06 	br	4a74c <_strtod_r+0xfec>
   4a798:	d8800e17 	ldw	r2,56(sp)
   4a79c:	29010cc4 	addi	r4,r5,1075
   4a7a0:	00fffc34 	movhi	r3,65520
   4a7a4:	18ffffc4 	addi	r3,r3,-1
   4a7a8:	2008953a 	slli	r4,r4,20
   4a7ac:	10c4703a 	and	r2,r2,r3
   4a7b0:	d8c00d17 	ldw	r3,52(sp)
   4a7b4:	1104b03a 	or	r2,r2,r4
   4a7b8:	e0800115 	stw	r2,4(fp)
   4a7bc:	e0c00015 	stw	r3,0(fp)
   4a7c0:	003fe206 	br	4a74c <_strtod_r+0xfec>
   4a7c4:	d8c01a17 	ldw	r3,104(sp)
   4a7c8:	1825003a 	cmpeq	r18,r3,zero
   4a7cc:	9000cf1e 	bne	r18,zero,4ab0c <_strtod_r+0x13ac>
   4a7d0:	e1400117 	ldw	r5,4(fp)
   4a7d4:	01000434 	movhi	r4,16
   4a7d8:	213fffc4 	addi	r4,r4,-1
   4a7dc:	2904703a 	and	r2,r5,r4
   4a7e0:	11006826 	beq	r2,r4,4a984 <_strtod_r+0x1224>
   4a7e4:	e1c00017 	ldw	r7,0(fp)
   4a7e8:	3880004c 	andi	r2,r7,1
   4a7ec:	1005003a 	cmpeq	r2,r2,zero
   4a7f0:	1000601e 	bne	r2,zero,4a974 <_strtod_r+0x1214>
   4a7f4:	90010426 	beq	r18,zero,4ac08 <_strtod_r+0x14a8>
   4a7f8:	e4400117 	ldw	r17,4(fp)
   4a7fc:	3809883a 	mov	r4,r7
   4a800:	3821883a 	mov	r16,r7
   4a804:	880b883a 	mov	r5,r17
   4a808:	0047a040 	call	47a04 <__ulp>
   4a80c:	180f883a 	mov	r7,r3
   4a810:	880b883a 	mov	r5,r17
   4a814:	8009883a 	mov	r4,r16
   4a818:	100d883a 	mov	r6,r2
   4a81c:	004e1ac0 	call	4e1ac <__subdf3>
   4a820:	1009883a 	mov	r4,r2
   4a824:	000d883a 	mov	r6,zero
   4a828:	000f883a 	mov	r7,zero
   4a82c:	180b883a 	mov	r5,r3
   4a830:	e0800015 	stw	r2,0(fp)
   4a834:	e0c00115 	stw	r3,4(fp)
   4a838:	004e9440 	call	4e944 <__nedf2>
   4a83c:	10004d1e 	bne	r2,zero,4a974 <_strtod_r+0x1214>
   4a840:	00800884 	movi	r2,34
   4a844:	a8800015 	stw	r2,0(r21)
   4a848:	e0000015 	stw	zero,0(fp)
   4a84c:	e0000115 	stw	zero,4(fp)
   4a850:	003f6506 	br	4a5e8 <_strtod_r+0xe88>
   4a854:	00800044 	movi	r2,1
   4a858:	d8801915 	stw	r2,100(sp)
   4a85c:	003d4406 	br	49d70 <_strtod_r+0x610>
   4a860:	d8c01817 	ldw	r3,96(sp)
   4a864:	1985883a 	add	r2,r3,r6
   4a868:	11ffffc4 	addi	r7,r2,-1
   4a86c:	39000044 	addi	r4,r7,1
   4a870:	00800204 	movi	r2,8
   4a874:	d9001815 	stw	r4,96(sp)
   4a878:	11c0d716 	blt	r2,r7,4abd8 <_strtod_r+0x1478>
   4a87c:	d9001217 	ldw	r4,72(sp)
   4a880:	01400284 	movi	r5,10
   4a884:	004f1100 	call	4f110 <__mulsi3>
   4a888:	1585883a 	add	r2,r2,r22
   4a88c:	d8801215 	stw	r2,72(sp)
   4a890:	000d883a 	mov	r6,zero
   4a894:	84000044 	addi	r16,r16,1
   4a898:	dc000415 	stw	r16,16(sp)
   4a89c:	84400007 	ldb	r17,0(r16)
   4a8a0:	003cfc06 	br	49c94 <_strtod_r+0x534>
   4a8a4:	d8c01a17 	ldw	r3,104(sp)
   4a8a8:	1800321e 	bne	r3,zero,4a974 <_strtod_r+0x1214>
   4a8ac:	e0800017 	ldw	r2,0(fp)
   4a8b0:	1000b31e 	bne	r2,zero,4ab80 <_strtod_r+0x1420>
   4a8b4:	e0c00117 	ldw	r3,4(fp)
   4a8b8:	01000434 	movhi	r4,16
   4a8bc:	213fffc4 	addi	r4,r4,-1
   4a8c0:	1904703a 	and	r2,r3,r4
   4a8c4:	1000e71e 	bne	r2,zero,4ac64 <_strtod_r+0x1504>
   4a8c8:	18dffc2c 	andhi	r3,r3,32752
   4a8cc:	0081ac34 	movhi	r2,1712
   4a8d0:	10c0282e 	bgeu	r2,r3,4a974 <_strtod_r+0x1214>
   4a8d4:	a0800517 	ldw	r2,20(r20)
   4a8d8:	1000031e 	bne	r2,zero,4a8e8 <_strtod_r+0x1188>
   4a8dc:	a0c00417 	ldw	r3,16(r20)
   4a8e0:	00800044 	movi	r2,1
   4a8e4:	10c0a60e 	bge	r2,r3,4ab80 <_strtod_r+0x1420>
   4a8e8:	a00b883a 	mov	r5,r20
   4a8ec:	a809883a 	mov	r4,r21
   4a8f0:	01800044 	movi	r6,1
   4a8f4:	004818c0 	call	4818c <__lshift>
   4a8f8:	1009883a 	mov	r4,r2
   4a8fc:	b00b883a 	mov	r5,r22
   4a900:	1029883a 	mov	r20,r2
   4a904:	00479a40 	call	479a4 <__mcmp>
   4a908:	00809d0e 	bge	zero,r2,4ab80 <_strtod_r+0x1420>
   4a90c:	e1800117 	ldw	r6,4(fp)
   4a910:	d9001c17 	ldw	r4,112(sp)
   4a914:	2013003a 	cmpeq	r9,r4,zero
   4a918:	4800d61e 	bne	r9,zero,4ac74 <_strtod_r+0x1514>
   4a91c:	30dffc2c 	andhi	r3,r6,32752
   4a920:	0081ac34 	movhi	r2,1712
   4a924:	10c0d336 	bltu	r2,r3,4ac74 <_strtod_r+0x1514>
   4a928:	0080dc34 	movhi	r2,880
   4a92c:	10ffc42e 	bgeu	r2,r3,4a840 <_strtod_r+0x10e0>
   4a930:	e0800017 	ldw	r2,0(fp)
   4a934:	e0c00117 	ldw	r3,4(fp)
   4a938:	020e5434 	movhi	r8,14672
   4a93c:	000d883a 	mov	r6,zero
   4a940:	400f883a 	mov	r7,r8
   4a944:	180b883a 	mov	r5,r3
   4a948:	1009883a 	mov	r4,r2
   4a94c:	da000c15 	stw	r8,48(sp)
   4a950:	d8000b15 	stw	zero,44(sp)
   4a954:	004e2a00 	call	4e2a0 <__muldf3>
   4a958:	e0800015 	stw	r2,0(fp)
   4a95c:	e0c00115 	stw	r3,4(fp)
   4a960:	183f211e 	bne	r3,zero,4a5e8 <_strtod_r+0xe88>
   4a964:	103f201e 	bne	r2,zero,4a5e8 <_strtod_r+0xe88>
   4a968:	00800884 	movi	r2,34
   4a96c:	a8800015 	stw	r2,0(r21)
   4a970:	003f1d06 	br	4a5e8 <_strtod_r+0xe88>
   4a974:	d9001c17 	ldw	r4,112(sp)
   4a978:	2013003a 	cmpeq	r9,r4,zero
   4a97c:	483f1a1e 	bne	r9,zero,4a5e8 <_strtod_r+0xe88>
   4a980:	003feb06 	br	4a930 <_strtod_r+0x11d0>
   4a984:	d8801c17 	ldw	r2,112(sp)
   4a988:	e1c00017 	ldw	r7,0(fp)
   4a98c:	1013003a 	cmpeq	r9,r2,zero
   4a990:	4800c31e 	bne	r9,zero,4aca0 <_strtod_r+0x1540>
   4a994:	28dffc2c 	andhi	r3,r5,32752
   4a998:	0081a834 	movhi	r2,1696
   4a99c:	10c0c036 	bltu	r2,r3,4aca0 <_strtod_r+0x1540>
   4a9a0:	1804d53a 	srli	r2,r3,20
   4a9a4:	00c01ac4 	movi	r3,107
   4a9a8:	013fffc4 	movi	r4,-1
   4a9ac:	1887c83a 	sub	r3,r3,r2
   4a9b0:	20c4983a 	sll	r2,r4,r3
   4a9b4:	11ff8c1e 	bne	r2,r7,4a7e8 <_strtod_r+0x1088>
   4a9b8:	28dffc2c 	andhi	r3,r5,32752
   4a9bc:	00800434 	movhi	r2,16
   4a9c0:	188d883a 	add	r6,r3,r2
   4a9c4:	e1800115 	stw	r6,4(fp)
   4a9c8:	e0000015 	stw	zero,0(fp)
   4a9cc:	483f061e 	bne	r9,zero,4a5e8 <_strtod_r+0xe88>
   4a9d0:	003fd706 	br	4a930 <_strtod_r+0x11d0>
   4a9d4:	0021883a 	mov	r16,zero
   4a9d8:	0005883a 	mov	r2,zero
   4a9dc:	044ff834 	movhi	r17,16352
   4a9e0:	00eff834 	movhi	r3,49120
   4a9e4:	003e7c06 	br	4a3d8 <_strtod_r+0xc78>
   4a9e8:	803d9226 	beq	r16,zero,4a034 <_strtod_r+0x8d4>
   4a9ec:	0421c83a 	sub	r16,zero,r16
   4a9f0:	814003cc 	andi	r5,r16,15
   4a9f4:	28000f26 	beq	r5,zero,4aa34 <_strtod_r+0x12d4>
   4a9f8:	280a90fa 	slli	r5,r5,3
   4a9fc:	01000174 	movhi	r4,5
   4aa00:	210a9504 	addi	r4,r4,10836
   4aa04:	e0800017 	ldw	r2,0(fp)
   4aa08:	290b883a 	add	r5,r5,r4
   4aa0c:	2a000017 	ldw	r8,0(r5)
   4aa10:	e0c00117 	ldw	r3,4(fp)
   4aa14:	2a400117 	ldw	r9,4(r5)
   4aa18:	1009883a 	mov	r4,r2
   4aa1c:	180b883a 	mov	r5,r3
   4aa20:	480f883a 	mov	r7,r9
   4aa24:	400d883a 	mov	r6,r8
   4aa28:	004e6640 	call	4e664 <__divdf3>
   4aa2c:	e0c00115 	stw	r3,4(fp)
   4aa30:	e0800015 	stw	r2,0(fp)
   4aa34:	8021d13a 	srai	r16,r16,4
   4aa38:	803d7e26 	beq	r16,zero,4a034 <_strtod_r+0x8d4>
   4aa3c:	008007c4 	movi	r2,31
   4aa40:	14002d16 	blt	r2,r16,4aaf8 <_strtod_r+0x1398>
   4aa44:	8080040c 	andi	r2,r16,16
   4aa48:	10009d26 	beq	r2,zero,4acc0 <_strtod_r+0x1560>
   4aa4c:	01001a84 	movi	r4,106
   4aa50:	d9001c15 	stw	r4,112(sp)
   4aa54:	0400110e 	bge	zero,r16,4aa9c <_strtod_r+0x133c>
   4aa58:	04400174 	movhi	r17,5
   4aa5c:	8c4ae204 	addi	r17,r17,11144
   4aa60:	8080004c 	andi	r2,r16,1
   4aa64:	1005003a 	cmpeq	r2,r2,zero
   4aa68:	1000091e 	bne	r2,zero,4aa90 <_strtod_r+0x1330>
   4aa6c:	e0800017 	ldw	r2,0(fp)
   4aa70:	e0c00117 	ldw	r3,4(fp)
   4aa74:	89800017 	ldw	r6,0(r17)
   4aa78:	89c00117 	ldw	r7,4(r17)
   4aa7c:	180b883a 	mov	r5,r3
   4aa80:	1009883a 	mov	r4,r2
   4aa84:	004e2a00 	call	4e2a0 <__muldf3>
   4aa88:	e0c00115 	stw	r3,4(fp)
   4aa8c:	e0800015 	stw	r2,0(fp)
   4aa90:	8021d07a 	srai	r16,r16,1
   4aa94:	8c400204 	addi	r17,r17,8
   4aa98:	043ff116 	blt	zero,r16,4aa60 <_strtod_r+0x1300>
   4aa9c:	d8801c17 	ldw	r2,112(sp)
   4aaa0:	10000d26 	beq	r2,zero,4aad8 <_strtod_r+0x1378>
   4aaa4:	e1000117 	ldw	r4,4(fp)
   4aaa8:	00c01ac4 	movi	r3,107
   4aaac:	209ffc2c 	andhi	r2,r4,32752
   4aab0:	1004d53a 	srli	r2,r2,20
   4aab4:	1887c83a 	sub	r3,r3,r2
   4aab8:	00c0070e 	bge	zero,r3,4aad8 <_strtod_r+0x1378>
   4aabc:	008007c4 	movi	r2,31
   4aac0:	10c0940e 	bge	r2,r3,4ad14 <_strtod_r+0x15b4>
   4aac4:	00800d04 	movi	r2,52
   4aac8:	e0000015 	stw	zero,0(fp)
   4aacc:	10c08b0e 	bge	r2,r3,4acfc <_strtod_r+0x159c>
   4aad0:	0180dc34 	movhi	r6,880
   4aad4:	e1800115 	stw	r6,4(fp)
   4aad8:	e0800017 	ldw	r2,0(fp)
   4aadc:	e0c00117 	ldw	r3,4(fp)
   4aae0:	000d883a 	mov	r6,zero
   4aae4:	000f883a 	mov	r7,zero
   4aae8:	180b883a 	mov	r5,r3
   4aaec:	1009883a 	mov	r4,r2
   4aaf0:	004e9440 	call	4e944 <__nedf2>
   4aaf4:	103d501e 	bne	r2,zero,4a038 <_strtod_r+0x8d8>
   4aaf8:	00800884 	movi	r2,34
   4aafc:	a8800015 	stw	r2,0(r21)
   4ab00:	e0000015 	stw	zero,0(fp)
   4ab04:	e0000115 	stw	zero,4(fp)
   4ab08:	003b9f06 	br	49988 <_strtod_r+0x228>
   4ab0c:	e1800117 	ldw	r6,4(fp)
   4ab10:	00c00434 	movhi	r3,16
   4ab14:	18ffffc4 	addi	r3,r3,-1
   4ab18:	30c4703a 	and	r2,r6,r3
   4ab1c:	103f311e 	bne	r2,zero,4a7e4 <_strtod_r+0x1084>
   4ab20:	e1c00017 	ldw	r7,0(fp)
   4ab24:	383f301e 	bne	r7,zero,4a7e8 <_strtod_r+0x1088>
   4ab28:	003f7906 	br	4a910 <_strtod_r+0x11b0>
   4ab2c:	d8c00f17 	ldw	r3,60(sp)
   4ab30:	00bffa84 	movi	r2,-22
   4ab34:	18bcbf16 	blt	r3,r2,49e34 <_strtod_r+0x6d4>
   4ab38:	1809883a 	mov	r4,r3
   4ab3c:	017ffe04 	movi	r5,-8
   4ab40:	004f1100 	call	4f110 <__mulsi3>
   4ab44:	00c00174 	movhi	r3,5
   4ab48:	18ca9504 	addi	r3,r3,10836
   4ab4c:	10c5883a 	add	r2,r2,r3
   4ab50:	e2000017 	ldw	r8,0(fp)
   4ab54:	e2400117 	ldw	r9,4(fp)
   4ab58:	12800017 	ldw	r10,0(r2)
   4ab5c:	12c00117 	ldw	r11,4(r2)
   4ab60:	480b883a 	mov	r5,r9
   4ab64:	4009883a 	mov	r4,r8
   4ab68:	580f883a 	mov	r7,r11
   4ab6c:	500d883a 	mov	r6,r10
   4ab70:	004e6640 	call	4e664 <__divdf3>
   4ab74:	e0c00115 	stw	r3,4(fp)
   4ab78:	e0800015 	stw	r2,0(fp)
   4ab7c:	003b8206 	br	49988 <_strtod_r+0x228>
   4ab80:	d8801c17 	ldw	r2,112(sp)
   4ab84:	1013003a 	cmpeq	r9,r2,zero
   4ab88:	483e971e 	bne	r9,zero,4a5e8 <_strtod_r+0xe88>
   4ab8c:	003f6806 	br	4a930 <_strtod_r+0x11d0>
   4ab90:	00801a44 	movi	r2,105
   4ab94:	88bc5026 	beq	r17,r2,49cd8 <_strtod_r+0x578>
   4ab98:	00801b84 	movi	r2,110
   4ab9c:	88bb9b1e 	bne	r17,r2,49a0c <_strtod_r+0x2ac>
   4aba0:	dc000404 	addi	r16,sp,16
   4aba4:	8009883a 	mov	r4,r16
   4aba8:	01400174 	movhi	r5,5
   4abac:	294ae104 	addi	r5,r5,11140
   4abb0:	00497180 	call	49718 <match>
   4abb4:	103b9526 	beq	r2,zero,49a0c <_strtod_r+0x2ac>
   4abb8:	d8800417 	ldw	r2,16(sp)
   4abbc:	00c00a04 	movi	r3,40
   4abc0:	11000007 	ldb	r4,0(r2)
   4abc4:	20c04026 	beq	r4,r3,4acc8 <_strtod_r+0x1568>
   4abc8:	01bffe34 	movhi	r6,65528
   4abcc:	e1800115 	stw	r6,4(fp)
   4abd0:	e0000015 	stw	zero,0(fp)
   4abd4:	003b6c06 	br	49988 <_strtod_r+0x228>
   4abd8:	d8c01817 	ldw	r3,96(sp)
   4abdc:	00800404 	movi	r2,16
   4abe0:	10c00516 	blt	r2,r3,4abf8 <_strtod_r+0x1498>
   4abe4:	d9001117 	ldw	r4,68(sp)
   4abe8:	01400284 	movi	r5,10
   4abec:	004f1100 	call	4f110 <__mulsi3>
   4abf0:	1585883a 	add	r2,r2,r22
   4abf4:	d8801115 	stw	r2,68(sp)
   4abf8:	000d883a 	mov	r6,zero
   4abfc:	003f2506 	br	4a894 <_strtod_r+0x1134>
   4ac00:	000d883a 	mov	r6,zero
   4ac04:	003ce306 	br	49f94 <_strtod_r+0x834>
   4ac08:	e4400117 	ldw	r17,4(fp)
   4ac0c:	3809883a 	mov	r4,r7
   4ac10:	3821883a 	mov	r16,r7
   4ac14:	880b883a 	mov	r5,r17
   4ac18:	0047a040 	call	47a04 <__ulp>
   4ac1c:	180f883a 	mov	r7,r3
   4ac20:	880b883a 	mov	r5,r17
   4ac24:	8009883a 	mov	r4,r16
   4ac28:	100d883a 	mov	r6,r2
   4ac2c:	004e22c0 	call	4e22c <__adddf3>
   4ac30:	180b883a 	mov	r5,r3
   4ac34:	d8c01c17 	ldw	r3,112(sp)
   4ac38:	1009883a 	mov	r4,r2
   4ac3c:	e1400115 	stw	r5,4(fp)
   4ac40:	1813003a 	cmpeq	r9,r3,zero
   4ac44:	e1000015 	stw	r4,0(fp)
   4ac48:	483e671e 	bne	r9,zero,4a5e8 <_strtod_r+0xe88>
   4ac4c:	003f3806 	br	4a930 <_strtod_r+0x11d0>
   4ac50:	0080d434 	movhi	r2,848
   4ac54:	188d883a 	add	r6,r3,r2
   4ac58:	d8001c15 	stw	zero,112(sp)
   4ac5c:	e1800115 	stw	r6,4(fp)
   4ac60:	003cf506 	br	4a038 <_strtod_r+0x8d8>
   4ac64:	d8c01c17 	ldw	r3,112(sp)
   4ac68:	1813003a 	cmpeq	r9,r3,zero
   4ac6c:	483e5e1e 	bne	r9,zero,4a5e8 <_strtod_r+0xe88>
   4ac70:	003f2f06 	br	4a930 <_strtod_r+0x11d0>
   4ac74:	309ffc2c 	andhi	r2,r6,32752
   4ac78:	00fffc34 	movhi	r3,65520
   4ac7c:	10c5883a 	add	r2,r2,r3
   4ac80:	00c00434 	movhi	r3,16
   4ac84:	18ffffc4 	addi	r3,r3,-1
   4ac88:	10ccb03a 	or	r6,r2,r3
   4ac8c:	01ffffc4 	movi	r7,-1
   4ac90:	e1800115 	stw	r6,4(fp)
   4ac94:	e1c00015 	stw	r7,0(fp)
   4ac98:	483e531e 	bne	r9,zero,4a5e8 <_strtod_r+0xe88>
   4ac9c:	003f2406 	br	4a930 <_strtod_r+0x11d0>
   4aca0:	00bfffc4 	movi	r2,-1
   4aca4:	003f4306 	br	4a9b4 <_strtod_r+0x1254>
   4aca8:	0025883a 	mov	r18,zero
   4acac:	05800174 	movhi	r22,5
   4acb0:	b58ac704 	addi	r22,r22,11036
   4acb4:	003c9206 	br	49f00 <_strtod_r+0x7a0>
   4acb8:	d9c01817 	ldw	r7,96(sp)
   4acbc:	003eeb06 	br	4a86c <_strtod_r+0x110c>
   4acc0:	d8001c15 	stw	zero,112(sp)
   4acc4:	003f6306 	br	4aa54 <_strtod_r+0x12f4>
   4acc8:	8009883a 	mov	r4,r16
   4accc:	01400174 	movhi	r5,5
   4acd0:	294d4a04 	addi	r5,r5,13608
   4acd4:	d9800d04 	addi	r6,sp,52
   4acd8:	004c9f80 	call	4c9f8 <__hexnan>
   4acdc:	00c00144 	movi	r3,5
   4ace0:	10ffb91e 	bne	r2,r3,4abc8 <_strtod_r+0x1468>
   4ace4:	d8800e17 	ldw	r2,56(sp)
   4ace8:	d9c00d17 	ldw	r7,52(sp)
   4acec:	119ffc34 	orhi	r6,r2,32752
   4acf0:	e1800115 	stw	r6,4(fp)
   4acf4:	e1c00015 	stw	r7,0(fp)
   4acf8:	003b2306 	br	49988 <_strtod_r+0x228>
   4acfc:	18fff804 	addi	r3,r3,-32
   4ad00:	00bfffc4 	movi	r2,-1
   4ad04:	10c4983a 	sll	r2,r2,r3
   4ad08:	208c703a 	and	r6,r4,r2
   4ad0c:	e1800115 	stw	r6,4(fp)
   4ad10:	003f7106 	br	4aad8 <_strtod_r+0x1378>
   4ad14:	00bfffc4 	movi	r2,-1
   4ad18:	10c4983a 	sll	r2,r2,r3
   4ad1c:	e0c00017 	ldw	r3,0(fp)
   4ad20:	188e703a 	and	r7,r3,r2
   4ad24:	e1c00015 	stw	r7,0(fp)
   4ad28:	003f6b06 	br	4aad8 <_strtod_r+0x1378>

0004ad2c <strtof>:
   4ad2c:	defffa04 	addi	sp,sp,-24
   4ad30:	dd000415 	stw	r20,16(sp)
   4ad34:	05000174 	movhi	r20,5
   4ad38:	a511d604 	addi	r20,r20,18264
   4ad3c:	2007883a 	mov	r3,r4
   4ad40:	a1000017 	ldw	r4,0(r20)
   4ad44:	280d883a 	mov	r6,r5
   4ad48:	180b883a 	mov	r5,r3
   4ad4c:	dfc00515 	stw	ra,20(sp)
   4ad50:	dcc00315 	stw	r19,12(sp)
   4ad54:	dc800215 	stw	r18,8(sp)
   4ad58:	dc400115 	stw	r17,4(sp)
   4ad5c:	dc000015 	stw	r16,0(sp)
   4ad60:	00497600 	call	49760 <_strtod_r>
   4ad64:	180b883a 	mov	r5,r3
   4ad68:	1009883a 	mov	r4,r2
   4ad6c:	1823883a 	mov	r17,r3
   4ad70:	1021883a 	mov	r16,r2
   4ad74:	004edbc0 	call	4edbc <__truncdfsf2>
   4ad78:	1009883a 	mov	r4,r2
   4ad7c:	000b883a 	mov	r5,zero
   4ad80:	1025883a 	mov	r18,r2
   4ad84:	1027883a 	mov	r19,r2
   4ad88:	004dc340 	call	4dc34 <__nesf2>
   4ad8c:	000d883a 	mov	r6,zero
   4ad90:	000f883a 	mov	r7,zero
   4ad94:	8009883a 	mov	r4,r16
   4ad98:	880b883a 	mov	r5,r17
   4ad9c:	10000e1e 	bne	r2,zero,4add8 <strtof+0xac>
   4ada0:	004e9440 	call	4e944 <__nedf2>
   4ada4:	10000c26 	beq	r2,zero,4add8 <strtof+0xac>
   4ada8:	a0c00017 	ldw	r3,0(r20)
   4adac:	00800884 	movi	r2,34
   4adb0:	18800015 	stw	r2,0(r3)
   4adb4:	9805883a 	mov	r2,r19
   4adb8:	dfc00517 	ldw	ra,20(sp)
   4adbc:	dd000417 	ldw	r20,16(sp)
   4adc0:	dcc00317 	ldw	r19,12(sp)
   4adc4:	dc800217 	ldw	r18,8(sp)
   4adc8:	dc400117 	ldw	r17,4(sp)
   4adcc:	dc000017 	ldw	r16,0(sp)
   4add0:	dec00604 	addi	sp,sp,24
   4add4:	f800283a 	ret
   4add8:	9009883a 	mov	r4,r18
   4addc:	015fe034 	movhi	r5,32640
   4ade0:	297fffc4 	addi	r5,r5,-1
   4ade4:	004dcac0 	call	4dcac <__gtsf2>
   4ade8:	00ffffc4 	movi	r3,-1
   4adec:	011ffc34 	movhi	r4,32752
   4adf0:	213fffc4 	addi	r4,r4,-1
   4adf4:	200f883a 	mov	r7,r4
   4adf8:	180d883a 	mov	r6,r3
   4adfc:	8009883a 	mov	r4,r16
   4ae00:	880b883a 	mov	r5,r17
   4ae04:	00800f16 	blt	zero,r2,4ae44 <strtof+0x118>
   4ae08:	9009883a 	mov	r4,r18
   4ae0c:	017fe034 	movhi	r5,65408
   4ae10:	297fffc4 	addi	r5,r5,-1
   4ae14:	004dd240 	call	4dd24 <__ltsf2>
   4ae18:	023fffc4 	movi	r8,-1
   4ae1c:	027ffc34 	movhi	r9,65520
   4ae20:	4a7fffc4 	addi	r9,r9,-1
   4ae24:	880b883a 	mov	r5,r17
   4ae28:	480f883a 	mov	r7,r9
   4ae2c:	8009883a 	mov	r4,r16
   4ae30:	400d883a 	mov	r6,r8
   4ae34:	103fdf0e 	bge	r2,zero,4adb4 <strtof+0x88>
   4ae38:	004eadc0 	call	4eadc <__ltdf2>
   4ae3c:	103fda0e 	bge	r2,zero,4ada8 <strtof+0x7c>
   4ae40:	003fdc06 	br	4adb4 <strtof+0x88>
   4ae44:	004e9cc0 	call	4e9cc <__gtdf2>
   4ae48:	00bfd70e 	bge	zero,r2,4ada8 <strtof+0x7c>
   4ae4c:	003fee06 	br	4ae08 <strtof+0xdc>

0004ae50 <strtod>:
   4ae50:	01800174 	movhi	r6,5
   4ae54:	3191d604 	addi	r6,r6,18264
   4ae58:	2007883a 	mov	r3,r4
   4ae5c:	31000017 	ldw	r4,0(r6)
   4ae60:	280d883a 	mov	r6,r5
   4ae64:	180b883a 	mov	r5,r3
   4ae68:	00497601 	jmpi	49760 <_strtod_r>

0004ae6c <_strtol_r>:
   4ae6c:	defff304 	addi	sp,sp,-52
   4ae70:	00800174 	movhi	r2,5
   4ae74:	1091d804 	addi	r2,r2,18272
   4ae78:	dd000715 	stw	r20,28(sp)
   4ae7c:	15000017 	ldw	r20,0(r2)
   4ae80:	ddc00a15 	stw	r23,40(sp)
   4ae84:	dc800515 	stw	r18,20(sp)
   4ae88:	dc400415 	stw	r17,16(sp)
   4ae8c:	dfc00c15 	stw	ra,48(sp)
   4ae90:	df000b15 	stw	fp,44(sp)
   4ae94:	dd800915 	stw	r22,36(sp)
   4ae98:	dd400815 	stw	r21,32(sp)
   4ae9c:	dcc00615 	stw	r19,24(sp)
   4aea0:	dc000315 	stw	r16,12(sp)
   4aea4:	282f883a 	mov	r23,r5
   4aea8:	d9000115 	stw	r4,4(sp)
   4aeac:	d9800215 	stw	r6,8(sp)
   4aeb0:	3825883a 	mov	r18,r7
   4aeb4:	2823883a 	mov	r17,r5
   4aeb8:	8c000007 	ldb	r16,0(r17)
   4aebc:	8c400044 	addi	r17,r17,1
   4aec0:	a407883a 	add	r3,r20,r16
   4aec4:	18800003 	ldbu	r2,0(r3)
   4aec8:	1080020c 	andi	r2,r2,8
   4aecc:	103ffa1e 	bne	r2,zero,4aeb8 <_strtol_r+0x4c>
   4aed0:	00800b44 	movi	r2,45
   4aed4:	80805c26 	beq	r16,r2,4b048 <_strtol_r+0x1dc>
   4aed8:	00800ac4 	movi	r2,43
   4aedc:	80805726 	beq	r16,r2,4b03c <_strtol_r+0x1d0>
   4aee0:	d8000015 	stw	zero,0(sp)
   4aee4:	9007003a 	cmpeq	r3,r18,zero
   4aee8:	1800431e 	bne	r3,zero,4aff8 <_strtol_r+0x18c>
   4aeec:	00800404 	movi	r2,16
   4aef0:	90804126 	beq	r18,r2,4aff8 <_strtol_r+0x18c>
   4aef4:	902b883a 	mov	r21,r18
   4aef8:	d8c00017 	ldw	r3,0(sp)
   4aefc:	1838c03a 	cmpne	fp,r3,zero
   4af00:	e0004a1e 	bne	fp,zero,4b02c <_strtol_r+0x1c0>
   4af04:	04e00034 	movhi	r19,32768
   4af08:	9cffffc4 	addi	r19,r19,-1
   4af0c:	9809883a 	mov	r4,r19
   4af10:	a80b883a 	mov	r5,r21
   4af14:	004f1080 	call	4f108 <__umodsi3>
   4af18:	9809883a 	mov	r4,r19
   4af1c:	a80b883a 	mov	r5,r21
   4af20:	102d883a 	mov	r22,r2
   4af24:	004f1000 	call	4f100 <__udivsi3>
   4af28:	1027883a 	mov	r19,r2
   4af2c:	a405883a 	add	r2,r20,r16
   4af30:	11400003 	ldbu	r5,0(r2)
   4af34:	0009883a 	mov	r4,zero
   4af38:	000d883a 	mov	r6,zero
   4af3c:	28c0010c 	andi	r3,r5,4
   4af40:	18000f26 	beq	r3,zero,4af80 <_strtol_r+0x114>
   4af44:	843ff404 	addi	r16,r16,-48
   4af48:	8480150e 	bge	r16,r18,4afa0 <_strtol_r+0x134>
   4af4c:	30003216 	blt	r6,zero,4b018 <_strtol_r+0x1ac>
   4af50:	99003136 	bltu	r19,r4,4b018 <_strtol_r+0x1ac>
   4af54:	24c02f26 	beq	r4,r19,4b014 <_strtol_r+0x1a8>
   4af58:	a80b883a 	mov	r5,r21
   4af5c:	004f1100 	call	4f110 <__mulsi3>
   4af60:	1409883a 	add	r4,r2,r16
   4af64:	01800044 	movi	r6,1
   4af68:	8c000007 	ldb	r16,0(r17)
   4af6c:	8c400044 	addi	r17,r17,1
   4af70:	a405883a 	add	r2,r20,r16
   4af74:	11400003 	ldbu	r5,0(r2)
   4af78:	28c0010c 	andi	r3,r5,4
   4af7c:	183ff11e 	bne	r3,zero,4af44 <_strtol_r+0xd8>
   4af80:	288000cc 	andi	r2,r5,3
   4af84:	10000626 	beq	r2,zero,4afa0 <_strtol_r+0x134>
   4af88:	2880004c 	andi	r2,r5,1
   4af8c:	1005003a 	cmpeq	r2,r2,zero
   4af90:	1000231e 	bne	r2,zero,4b020 <_strtol_r+0x1b4>
   4af94:	00800dc4 	movi	r2,55
   4af98:	80a1c83a 	sub	r16,r16,r2
   4af9c:	84bfeb16 	blt	r16,r18,4af4c <_strtol_r+0xe0>
   4afa0:	30002e16 	blt	r6,zero,4b05c <_strtol_r+0x1f0>
   4afa4:	e000231e 	bne	fp,zero,4b034 <_strtol_r+0x1c8>
   4afa8:	2007883a 	mov	r3,r4
   4afac:	d8800217 	ldw	r2,8(sp)
   4afb0:	10000426 	beq	r2,zero,4afc4 <_strtol_r+0x158>
   4afb4:	30000126 	beq	r6,zero,4afbc <_strtol_r+0x150>
   4afb8:	8dffffc4 	addi	r23,r17,-1
   4afbc:	d9000217 	ldw	r4,8(sp)
   4afc0:	25c00015 	stw	r23,0(r4)
   4afc4:	1805883a 	mov	r2,r3
   4afc8:	dfc00c17 	ldw	ra,48(sp)
   4afcc:	df000b17 	ldw	fp,44(sp)
   4afd0:	ddc00a17 	ldw	r23,40(sp)
   4afd4:	dd800917 	ldw	r22,36(sp)
   4afd8:	dd400817 	ldw	r21,32(sp)
   4afdc:	dd000717 	ldw	r20,28(sp)
   4afe0:	dcc00617 	ldw	r19,24(sp)
   4afe4:	dc800517 	ldw	r18,20(sp)
   4afe8:	dc400417 	ldw	r17,16(sp)
   4afec:	dc000317 	ldw	r16,12(sp)
   4aff0:	dec00d04 	addi	sp,sp,52
   4aff4:	f800283a 	ret
   4aff8:	00800c04 	movi	r2,48
   4affc:	80801f26 	beq	r16,r2,4b07c <_strtol_r+0x210>
   4b000:	183fbc26 	beq	r3,zero,4aef4 <_strtol_r+0x88>
   4b004:	00800c04 	movi	r2,48
   4b008:	80802926 	beq	r16,r2,4b0b0 <_strtol_r+0x244>
   4b00c:	04800284 	movi	r18,10
   4b010:	003fb806 	br	4aef4 <_strtol_r+0x88>
   4b014:	b43fd00e 	bge	r22,r16,4af58 <_strtol_r+0xec>
   4b018:	01bfffc4 	movi	r6,-1
   4b01c:	003fd206 	br	4af68 <_strtol_r+0xfc>
   4b020:	008015c4 	movi	r2,87
   4b024:	80a1c83a 	sub	r16,r16,r2
   4b028:	003fdc06 	br	4af9c <_strtol_r+0x130>
   4b02c:	04e00034 	movhi	r19,32768
   4b030:	003fb606 	br	4af0c <_strtol_r+0xa0>
   4b034:	0107c83a 	sub	r3,zero,r4
   4b038:	003fdc06 	br	4afac <_strtol_r+0x140>
   4b03c:	8c000007 	ldb	r16,0(r17)
   4b040:	8c400044 	addi	r17,r17,1
   4b044:	003fa606 	br	4aee0 <_strtol_r+0x74>
   4b048:	8c000007 	ldb	r16,0(r17)
   4b04c:	00800044 	movi	r2,1
   4b050:	8c400044 	addi	r17,r17,1
   4b054:	d8800015 	stw	r2,0(sp)
   4b058:	003fa206 	br	4aee4 <_strtol_r+0x78>
   4b05c:	d9000017 	ldw	r4,0(sp)
   4b060:	2005003a 	cmpeq	r2,r4,zero
   4b064:	10000f1e 	bne	r2,zero,4b0a4 <_strtol_r+0x238>
   4b068:	00e00034 	movhi	r3,32768
   4b06c:	d9000117 	ldw	r4,4(sp)
   4b070:	00800884 	movi	r2,34
   4b074:	20800015 	stw	r2,0(r4)
   4b078:	003fcc06 	br	4afac <_strtol_r+0x140>
   4b07c:	89000007 	ldb	r4,0(r17)
   4b080:	00801e04 	movi	r2,120
   4b084:	20800226 	beq	r4,r2,4b090 <_strtol_r+0x224>
   4b088:	00801604 	movi	r2,88
   4b08c:	20bfdc1e 	bne	r4,r2,4b000 <_strtol_r+0x194>
   4b090:	8c000047 	ldb	r16,1(r17)
   4b094:	04800404 	movi	r18,16
   4b098:	8c400084 	addi	r17,r17,2
   4b09c:	902b883a 	mov	r21,r18
   4b0a0:	003f9506 	br	4aef8 <_strtol_r+0x8c>
   4b0a4:	00e00034 	movhi	r3,32768
   4b0a8:	18ffffc4 	addi	r3,r3,-1
   4b0ac:	003fef06 	br	4b06c <_strtol_r+0x200>
   4b0b0:	04800204 	movi	r18,8
   4b0b4:	902b883a 	mov	r21,r18
   4b0b8:	003f8f06 	br	4aef8 <_strtol_r+0x8c>

0004b0bc <strtol>:
   4b0bc:	00800174 	movhi	r2,5
   4b0c0:	1091d604 	addi	r2,r2,18264
   4b0c4:	2013883a 	mov	r9,r4
   4b0c8:	11000017 	ldw	r4,0(r2)
   4b0cc:	2805883a 	mov	r2,r5
   4b0d0:	300f883a 	mov	r7,r6
   4b0d4:	480b883a 	mov	r5,r9
   4b0d8:	100d883a 	mov	r6,r2
   4b0dc:	004ae6c1 	jmpi	4ae6c <_strtol_r>

0004b0e0 <_strtoll_r>:
   4b0e0:	defff004 	addi	sp,sp,-64
   4b0e4:	00800174 	movhi	r2,5
   4b0e8:	1091d804 	addi	r2,r2,18272
   4b0ec:	df000e15 	stw	fp,56(sp)
   4b0f0:	17000017 	ldw	fp,0(r2)
   4b0f4:	ddc00d15 	stw	r23,52(sp)
   4b0f8:	dd000a15 	stw	r20,40(sp)
   4b0fc:	dfc00f15 	stw	ra,60(sp)
   4b100:	dd800c15 	stw	r22,48(sp)
   4b104:	dd400b15 	stw	r21,44(sp)
   4b108:	dcc00915 	stw	r19,36(sp)
   4b10c:	dc800815 	stw	r18,32(sp)
   4b110:	dc400715 	stw	r17,28(sp)
   4b114:	dc000615 	stw	r16,24(sp)
   4b118:	d9400315 	stw	r5,12(sp)
   4b11c:	d9000215 	stw	r4,8(sp)
   4b120:	d9800415 	stw	r6,16(sp)
   4b124:	382f883a 	mov	r23,r7
   4b128:	2829883a 	mov	r20,r5
   4b12c:	a4c00007 	ldb	r19,0(r20)
   4b130:	a5000044 	addi	r20,r20,1
   4b134:	e4c7883a 	add	r3,fp,r19
   4b138:	18800003 	ldbu	r2,0(r3)
   4b13c:	1080020c 	andi	r2,r2,8
   4b140:	103ffa1e 	bne	r2,zero,4b12c <_strtoll_r+0x4c>
   4b144:	00800b44 	movi	r2,45
   4b148:	98808826 	beq	r19,r2,4b36c <_strtoll_r+0x28c>
   4b14c:	00800ac4 	movi	r2,43
   4b150:	98808326 	beq	r19,r2,4b360 <_strtoll_r+0x280>
   4b154:	d8000115 	stw	zero,4(sp)
   4b158:	b807003a 	cmpeq	r3,r23,zero
   4b15c:	18005f1e 	bne	r3,zero,4b2dc <_strtoll_r+0x1fc>
   4b160:	00800404 	movi	r2,16
   4b164:	b8805d26 	beq	r23,r2,4b2dc <_strtoll_r+0x1fc>
   4b168:	b82dd7fa 	srai	r22,r23,31
   4b16c:	b82b883a 	mov	r21,r23
   4b170:	d8c00117 	ldw	r3,4(sp)
   4b174:	1806c03a 	cmpne	r3,r3,zero
   4b178:	d8c00515 	stw	r3,20(sp)
   4b17c:	1800631e 	bne	r3,zero,4b30c <_strtoll_r+0x22c>
   4b180:	043fffc4 	movi	r16,-1
   4b184:	04600034 	movhi	r17,32768
   4b188:	8c7fffc4 	addi	r17,r17,-1
   4b18c:	880b883a 	mov	r5,r17
   4b190:	8009883a 	mov	r4,r16
   4b194:	a80d883a 	mov	r6,r21
   4b198:	b00f883a 	mov	r7,r22
   4b19c:	004d5d40 	call	4d5d4 <__umoddi3>
   4b1a0:	880b883a 	mov	r5,r17
   4b1a4:	8009883a 	mov	r4,r16
   4b1a8:	b00f883a 	mov	r7,r22
   4b1ac:	a80d883a 	mov	r6,r21
   4b1b0:	d8800015 	stw	r2,0(sp)
   4b1b4:	004cf680 	call	4cf68 <__udivdi3>
   4b1b8:	1023883a 	mov	r17,r2
   4b1bc:	e4c5883a 	add	r2,fp,r19
   4b1c0:	11000003 	ldbu	r4,0(r2)
   4b1c4:	1825883a 	mov	r18,r3
   4b1c8:	0015883a 	mov	r10,zero
   4b1cc:	20c0010c 	andi	r3,r4,4
   4b1d0:	0017883a 	mov	r11,zero
   4b1d4:	000f883a 	mov	r7,zero
   4b1d8:	18001a26 	beq	r3,zero,4b244 <_strtoll_r+0x164>
   4b1dc:	9c3ff404 	addi	r16,r19,-48
   4b1e0:	85c0200e 	bge	r16,r23,4b264 <_strtoll_r+0x184>
   4b1e4:	38003b16 	blt	r7,zero,4b2d4 <_strtoll_r+0x1f4>
   4b1e8:	92c03a36 	bltu	r18,r11,4b2d4 <_strtoll_r+0x1f4>
   4b1ec:	5c803826 	beq	r11,r18,4b2d0 <_strtoll_r+0x1f0>
   4b1f0:	54404c26 	beq	r10,r17,4b324 <_strtoll_r+0x244>
   4b1f4:	580b883a 	mov	r5,r11
   4b1f8:	5009883a 	mov	r4,r10
   4b1fc:	a80d883a 	mov	r6,r21
   4b200:	b00f883a 	mov	r7,r22
   4b204:	004cda00 	call	4cda0 <__muldi3>
   4b208:	8013d7fa 	srai	r9,r16,31
   4b20c:	100d883a 	mov	r6,r2
   4b210:	1405883a 	add	r2,r2,r16
   4b214:	118d803a 	cmpltu	r6,r2,r6
   4b218:	1a47883a 	add	r3,r3,r9
   4b21c:	30cd883a 	add	r6,r6,r3
   4b220:	1015883a 	mov	r10,r2
   4b224:	3017883a 	mov	r11,r6
   4b228:	01c00044 	movi	r7,1
   4b22c:	a4c00007 	ldb	r19,0(r20)
   4b230:	a5000044 	addi	r20,r20,1
   4b234:	e4c5883a 	add	r2,fp,r19
   4b238:	11000003 	ldbu	r4,0(r2)
   4b23c:	20c0010c 	andi	r3,r4,4
   4b240:	183fe61e 	bne	r3,zero,4b1dc <_strtoll_r+0xfc>
   4b244:	208000cc 	andi	r2,r4,3
   4b248:	10000626 	beq	r2,zero,4b264 <_strtoll_r+0x184>
   4b24c:	2080004c 	andi	r2,r4,1
   4b250:	1005003a 	cmpeq	r2,r2,zero
   4b254:	1000301e 	bne	r2,zero,4b318 <_strtoll_r+0x238>
   4b258:	02000dc4 	movi	r8,55
   4b25c:	9a21c83a 	sub	r16,r19,r8
   4b260:	85ffe016 	blt	r16,r23,4b1e4 <_strtoll_r+0x104>
   4b264:	38004616 	blt	r7,zero,4b380 <_strtoll_r+0x2a0>
   4b268:	d8800517 	ldw	r2,20(sp)
   4b26c:	1000341e 	bne	r2,zero,4b340 <_strtoll_r+0x260>
   4b270:	500b883a 	mov	r5,r10
   4b274:	580d883a 	mov	r6,r11
   4b278:	d8c00417 	ldw	r3,16(sp)
   4b27c:	18000626 	beq	r3,zero,4b298 <_strtoll_r+0x1b8>
   4b280:	38000226 	beq	r7,zero,4b28c <_strtoll_r+0x1ac>
   4b284:	a53fffc4 	addi	r20,r20,-1
   4b288:	dd000315 	stw	r20,12(sp)
   4b28c:	d8c00317 	ldw	r3,12(sp)
   4b290:	d8800417 	ldw	r2,16(sp)
   4b294:	10c00015 	stw	r3,0(r2)
   4b298:	2805883a 	mov	r2,r5
   4b29c:	3007883a 	mov	r3,r6
   4b2a0:	dfc00f17 	ldw	ra,60(sp)
   4b2a4:	df000e17 	ldw	fp,56(sp)
   4b2a8:	ddc00d17 	ldw	r23,52(sp)
   4b2ac:	dd800c17 	ldw	r22,48(sp)
   4b2b0:	dd400b17 	ldw	r21,44(sp)
   4b2b4:	dd000a17 	ldw	r20,40(sp)
   4b2b8:	dcc00917 	ldw	r19,36(sp)
   4b2bc:	dc800817 	ldw	r18,32(sp)
   4b2c0:	dc400717 	ldw	r17,28(sp)
   4b2c4:	dc000617 	ldw	r16,24(sp)
   4b2c8:	dec01004 	addi	sp,sp,64
   4b2cc:	f800283a 	ret
   4b2d0:	8abfc72e 	bgeu	r17,r10,4b1f0 <_strtoll_r+0x110>
   4b2d4:	01ffffc4 	movi	r7,-1
   4b2d8:	003fd406 	br	4b22c <_strtoll_r+0x14c>
   4b2dc:	00800c04 	movi	r2,48
   4b2e0:	98803226 	beq	r19,r2,4b3ac <_strtoll_r+0x2cc>
   4b2e4:	183fa026 	beq	r3,zero,4b168 <_strtoll_r+0x88>
   4b2e8:	00800c04 	movi	r2,48
   4b2ec:	98803e26 	beq	r19,r2,4b3e8 <_strtoll_r+0x308>
   4b2f0:	d8c00117 	ldw	r3,4(sp)
   4b2f4:	05c00284 	movi	r23,10
   4b2f8:	b82b883a 	mov	r21,r23
   4b2fc:	1806c03a 	cmpne	r3,r3,zero
   4b300:	002d883a 	mov	r22,zero
   4b304:	d8c00515 	stw	r3,20(sp)
   4b308:	183f9d26 	beq	r3,zero,4b180 <_strtoll_r+0xa0>
   4b30c:	0021883a 	mov	r16,zero
   4b310:	04600034 	movhi	r17,32768
   4b314:	003f9d06 	br	4b18c <_strtoll_r+0xac>
   4b318:	020015c4 	movi	r8,87
   4b31c:	9a21c83a 	sub	r16,r19,r8
   4b320:	003fcf06 	br	4b260 <_strtoll_r+0x180>
   4b324:	5cbfb31e 	bne	r11,r18,4b1f4 <_strtoll_r+0x114>
   4b328:	d8800017 	ldw	r2,0(sp)
   4b32c:	143fb10e 	bge	r2,r16,4b1f4 <_strtoll_r+0x114>
   4b330:	8815883a 	mov	r10,r17
   4b334:	9017883a 	mov	r11,r18
   4b338:	01ffffc4 	movi	r7,-1
   4b33c:	003fbb06 	br	4b22c <_strtoll_r+0x14c>
   4b340:	0009883a 	mov	r4,zero
   4b344:	2285c83a 	sub	r2,r4,r10
   4b348:	2089803a 	cmpltu	r4,r4,r2
   4b34c:	02c7c83a 	sub	r3,zero,r11
   4b350:	1909c83a 	sub	r4,r3,r4
   4b354:	100b883a 	mov	r5,r2
   4b358:	200d883a 	mov	r6,r4
   4b35c:	003fc606 	br	4b278 <_strtoll_r+0x198>
   4b360:	a4c00007 	ldb	r19,0(r20)
   4b364:	a5000044 	addi	r20,r20,1
   4b368:	003f7a06 	br	4b154 <_strtoll_r+0x74>
   4b36c:	a4c00007 	ldb	r19,0(r20)
   4b370:	00800044 	movi	r2,1
   4b374:	a5000044 	addi	r20,r20,1
   4b378:	d8800115 	stw	r2,4(sp)
   4b37c:	003f7606 	br	4b158 <_strtoll_r+0x78>
   4b380:	d8c00117 	ldw	r3,4(sp)
   4b384:	1805003a 	cmpeq	r2,r3,zero
   4b388:	1000131e 	bne	r2,zero,4b3d8 <_strtoll_r+0x2f8>
   4b38c:	0005883a 	mov	r2,zero
   4b390:	00e00034 	movhi	r3,32768
   4b394:	100b883a 	mov	r5,r2
   4b398:	180d883a 	mov	r6,r3
   4b39c:	d8c00217 	ldw	r3,8(sp)
   4b3a0:	00800884 	movi	r2,34
   4b3a4:	18800015 	stw	r2,0(r3)
   4b3a8:	003fb306 	br	4b278 <_strtoll_r+0x198>
   4b3ac:	a1000007 	ldb	r4,0(r20)
   4b3b0:	00801e04 	movi	r2,120
   4b3b4:	20800226 	beq	r4,r2,4b3c0 <_strtoll_r+0x2e0>
   4b3b8:	00801604 	movi	r2,88
   4b3bc:	20bfc91e 	bne	r4,r2,4b2e4 <_strtoll_r+0x204>
   4b3c0:	a4c00047 	ldb	r19,1(r20)
   4b3c4:	05c00404 	movi	r23,16
   4b3c8:	b82b883a 	mov	r21,r23
   4b3cc:	a5000084 	addi	r20,r20,2
   4b3d0:	002d883a 	mov	r22,zero
   4b3d4:	003f6606 	br	4b170 <_strtoll_r+0x90>
   4b3d8:	017fffc4 	movi	r5,-1
   4b3dc:	01a00034 	movhi	r6,32768
   4b3e0:	31bfffc4 	addi	r6,r6,-1
   4b3e4:	003fed06 	br	4b39c <_strtoll_r+0x2bc>
   4b3e8:	05c00204 	movi	r23,8
   4b3ec:	b82b883a 	mov	r21,r23
   4b3f0:	002d883a 	mov	r22,zero
   4b3f4:	003f5e06 	br	4b170 <_strtoll_r+0x90>

0004b3f8 <_strtoul_r>:
   4b3f8:	defff404 	addi	sp,sp,-48
   4b3fc:	00800174 	movhi	r2,5
   4b400:	1091d804 	addi	r2,r2,18272
   4b404:	dd000615 	stw	r20,24(sp)
   4b408:	15000017 	ldw	r20,0(r2)
   4b40c:	df000a15 	stw	fp,40(sp)
   4b410:	ddc00915 	stw	r23,36(sp)
   4b414:	dc800415 	stw	r18,16(sp)
   4b418:	dc400315 	stw	r17,12(sp)
   4b41c:	dfc00b15 	stw	ra,44(sp)
   4b420:	dd800815 	stw	r22,32(sp)
   4b424:	dd400715 	stw	r21,28(sp)
   4b428:	dcc00515 	stw	r19,20(sp)
   4b42c:	dc000215 	stw	r16,8(sp)
   4b430:	282f883a 	mov	r23,r5
   4b434:	d9000115 	stw	r4,4(sp)
   4b438:	3039883a 	mov	fp,r6
   4b43c:	3825883a 	mov	r18,r7
   4b440:	2823883a 	mov	r17,r5
   4b444:	8c000007 	ldb	r16,0(r17)
   4b448:	8c400044 	addi	r17,r17,1
   4b44c:	a407883a 	add	r3,r20,r16
   4b450:	18800003 	ldbu	r2,0(r3)
   4b454:	1080020c 	andi	r2,r2,8
   4b458:	103ffa1e 	bne	r2,zero,4b444 <_strtoul_r+0x4c>
   4b45c:	00800b44 	movi	r2,45
   4b460:	80805826 	beq	r16,r2,4b5c4 <_strtoul_r+0x1cc>
   4b464:	00800ac4 	movi	r2,43
   4b468:	80805326 	beq	r16,r2,4b5b8 <_strtoul_r+0x1c0>
   4b46c:	d8000015 	stw	zero,0(sp)
   4b470:	9007003a 	cmpeq	r3,r18,zero
   4b474:	18003d1e 	bne	r3,zero,4b56c <_strtoul_r+0x174>
   4b478:	00800404 	movi	r2,16
   4b47c:	90803b26 	beq	r18,r2,4b56c <_strtoul_r+0x174>
   4b480:	013fffc4 	movi	r4,-1
   4b484:	900b883a 	mov	r5,r18
   4b488:	004f1000 	call	4f100 <__udivsi3>
   4b48c:	013fffc4 	movi	r4,-1
   4b490:	900b883a 	mov	r5,r18
   4b494:	1027883a 	mov	r19,r2
   4b498:	004f1080 	call	4f108 <__umodsi3>
   4b49c:	102d883a 	mov	r22,r2
   4b4a0:	902b883a 	mov	r21,r18
   4b4a4:	a405883a 	add	r2,r20,r16
   4b4a8:	11400003 	ldbu	r5,0(r2)
   4b4ac:	0009883a 	mov	r4,zero
   4b4b0:	000d883a 	mov	r6,zero
   4b4b4:	28c0010c 	andi	r3,r5,4
   4b4b8:	18000f26 	beq	r3,zero,4b4f8 <_strtoul_r+0x100>
   4b4bc:	843ff404 	addi	r16,r16,-48
   4b4c0:	8480150e 	bge	r16,r18,4b518 <_strtoul_r+0x120>
   4b4c4:	30003516 	blt	r6,zero,4b59c <_strtoul_r+0x1a4>
   4b4c8:	99003436 	bltu	r19,r4,4b59c <_strtoul_r+0x1a4>
   4b4cc:	24c03226 	beq	r4,r19,4b598 <_strtoul_r+0x1a0>
   4b4d0:	a80b883a 	mov	r5,r21
   4b4d4:	004f1100 	call	4f110 <__mulsi3>
   4b4d8:	1409883a 	add	r4,r2,r16
   4b4dc:	01800044 	movi	r6,1
   4b4e0:	8c000007 	ldb	r16,0(r17)
   4b4e4:	8c400044 	addi	r17,r17,1
   4b4e8:	a405883a 	add	r2,r20,r16
   4b4ec:	11400003 	ldbu	r5,0(r2)
   4b4f0:	28c0010c 	andi	r3,r5,4
   4b4f4:	183ff11e 	bne	r3,zero,4b4bc <_strtoul_r+0xc4>
   4b4f8:	288000cc 	andi	r2,r5,3
   4b4fc:	10000626 	beq	r2,zero,4b518 <_strtoul_r+0x120>
   4b500:	2880004c 	andi	r2,r5,1
   4b504:	1005003a 	cmpeq	r2,r2,zero
   4b508:	1000261e 	bne	r2,zero,4b5a4 <_strtoul_r+0x1ac>
   4b50c:	00800dc4 	movi	r2,55
   4b510:	80a1c83a 	sub	r16,r16,r2
   4b514:	84bfeb16 	blt	r16,r18,4b4c4 <_strtoul_r+0xcc>
   4b518:	3000420e 	bge	r6,zero,4b624 <_strtoul_r+0x22c>
   4b51c:	d8c00117 	ldw	r3,4(sp)
   4b520:	00800884 	movi	r2,34
   4b524:	013fffc4 	movi	r4,-1
   4b528:	18800015 	stw	r2,0(r3)
   4b52c:	e0000226 	beq	fp,zero,4b538 <_strtoul_r+0x140>
   4b530:	30001f1e 	bne	r6,zero,4b5b0 <_strtoul_r+0x1b8>
   4b534:	e5c00015 	stw	r23,0(fp)
   4b538:	2005883a 	mov	r2,r4
   4b53c:	dfc00b17 	ldw	ra,44(sp)
   4b540:	df000a17 	ldw	fp,40(sp)
   4b544:	ddc00917 	ldw	r23,36(sp)
   4b548:	dd800817 	ldw	r22,32(sp)
   4b54c:	dd400717 	ldw	r21,28(sp)
   4b550:	dd000617 	ldw	r20,24(sp)
   4b554:	dcc00517 	ldw	r19,20(sp)
   4b558:	dc800417 	ldw	r18,16(sp)
   4b55c:	dc400317 	ldw	r17,12(sp)
   4b560:	dc000217 	ldw	r16,8(sp)
   4b564:	dec00c04 	addi	sp,sp,48
   4b568:	f800283a 	ret
   4b56c:	00800c04 	movi	r2,48
   4b570:	80801926 	beq	r16,r2,4b5d8 <_strtoul_r+0x1e0>
   4b574:	183fc226 	beq	r3,zero,4b480 <_strtoul_r+0x88>
   4b578:	00800c04 	movi	r2,48
   4b57c:	80802326 	beq	r16,r2,4b60c <_strtoul_r+0x214>
   4b580:	04800284 	movi	r18,10
   4b584:	902b883a 	mov	r21,r18
   4b588:	04c666b4 	movhi	r19,6554
   4b58c:	9ce66644 	addi	r19,r19,-26215
   4b590:	05800144 	movi	r22,5
   4b594:	003fc306 	br	4b4a4 <_strtoul_r+0xac>
   4b598:	b43fcd0e 	bge	r22,r16,4b4d0 <_strtoul_r+0xd8>
   4b59c:	01bfffc4 	movi	r6,-1
   4b5a0:	003fcf06 	br	4b4e0 <_strtoul_r+0xe8>
   4b5a4:	008015c4 	movi	r2,87
   4b5a8:	80a1c83a 	sub	r16,r16,r2
   4b5ac:	003fd906 	br	4b514 <_strtoul_r+0x11c>
   4b5b0:	8dffffc4 	addi	r23,r17,-1
   4b5b4:	003fdf06 	br	4b534 <_strtoul_r+0x13c>
   4b5b8:	8c000007 	ldb	r16,0(r17)
   4b5bc:	8c400044 	addi	r17,r17,1
   4b5c0:	003faa06 	br	4b46c <_strtoul_r+0x74>
   4b5c4:	8c000007 	ldb	r16,0(r17)
   4b5c8:	00800044 	movi	r2,1
   4b5cc:	8c400044 	addi	r17,r17,1
   4b5d0:	d8800015 	stw	r2,0(sp)
   4b5d4:	003fa606 	br	4b470 <_strtoul_r+0x78>
   4b5d8:	89000007 	ldb	r4,0(r17)
   4b5dc:	00801e04 	movi	r2,120
   4b5e0:	20800226 	beq	r4,r2,4b5ec <_strtoul_r+0x1f4>
   4b5e4:	00801604 	movi	r2,88
   4b5e8:	20bfe21e 	bne	r4,r2,4b574 <_strtoul_r+0x17c>
   4b5ec:	8c000047 	ldb	r16,1(r17)
   4b5f0:	04800404 	movi	r18,16
   4b5f4:	8c400084 	addi	r17,r17,2
   4b5f8:	902b883a 	mov	r21,r18
   4b5fc:	04c40034 	movhi	r19,4096
   4b600:	9cffffc4 	addi	r19,r19,-1
   4b604:	058003c4 	movi	r22,15
   4b608:	003fa606 	br	4b4a4 <_strtoul_r+0xac>
   4b60c:	04800204 	movi	r18,8
   4b610:	902b883a 	mov	r21,r18
   4b614:	04c80034 	movhi	r19,8192
   4b618:	9cffffc4 	addi	r19,r19,-1
   4b61c:	058001c4 	movi	r22,7
   4b620:	003fa006 	br	4b4a4 <_strtoul_r+0xac>
   4b624:	d8c00017 	ldw	r3,0(sp)
   4b628:	1805003a 	cmpeq	r2,r3,zero
   4b62c:	103fbf1e 	bne	r2,zero,4b52c <_strtoul_r+0x134>
   4b630:	0109c83a 	sub	r4,zero,r4
   4b634:	003fbd06 	br	4b52c <_strtoul_r+0x134>

0004b638 <strtoul>:
   4b638:	00800174 	movhi	r2,5
   4b63c:	1091d604 	addi	r2,r2,18264
   4b640:	2013883a 	mov	r9,r4
   4b644:	11000017 	ldw	r4,0(r2)
   4b648:	2805883a 	mov	r2,r5
   4b64c:	300f883a 	mov	r7,r6
   4b650:	480b883a 	mov	r5,r9
   4b654:	100d883a 	mov	r6,r2
   4b658:	004b3f81 	jmpi	4b3f8 <_strtoul_r>

0004b65c <_strtoull_r>:
   4b65c:	defff104 	addi	sp,sp,-60
   4b660:	00800174 	movhi	r2,5
   4b664:	1091d804 	addi	r2,r2,18272
   4b668:	df000d15 	stw	fp,52(sp)
   4b66c:	17000017 	ldw	fp,0(r2)
   4b670:	ddc00c15 	stw	r23,48(sp)
   4b674:	dcc00815 	stw	r19,32(sp)
   4b678:	dfc00e15 	stw	ra,56(sp)
   4b67c:	dd800b15 	stw	r22,44(sp)
   4b680:	dd400a15 	stw	r21,40(sp)
   4b684:	dd000915 	stw	r20,36(sp)
   4b688:	dc800715 	stw	r18,28(sp)
   4b68c:	dc400615 	stw	r17,24(sp)
   4b690:	dc000515 	stw	r16,20(sp)
   4b694:	d9400215 	stw	r5,8(sp)
   4b698:	d9000115 	stw	r4,4(sp)
   4b69c:	d9800315 	stw	r6,12(sp)
   4b6a0:	382f883a 	mov	r23,r7
   4b6a4:	2827883a 	mov	r19,r5
   4b6a8:	9d000007 	ldb	r20,0(r19)
   4b6ac:	9cc00044 	addi	r19,r19,1
   4b6b0:	e507883a 	add	r3,fp,r20
   4b6b4:	18800003 	ldbu	r2,0(r3)
   4b6b8:	1080020c 	andi	r2,r2,8
   4b6bc:	103ffa1e 	bne	r2,zero,4b6a8 <_strtoull_r+0x4c>
   4b6c0:	00800b44 	movi	r2,45
   4b6c4:	a0807a26 	beq	r20,r2,4b8b0 <_strtoull_r+0x254>
   4b6c8:	00800ac4 	movi	r2,43
   4b6cc:	a0807526 	beq	r20,r2,4b8a4 <_strtoull_r+0x248>
   4b6d0:	d8000015 	stw	zero,0(sp)
   4b6d4:	b807003a 	cmpeq	r3,r23,zero
   4b6d8:	18005a1e 	bne	r3,zero,4b844 <_strtoull_r+0x1e8>
   4b6dc:	00800404 	movi	r2,16
   4b6e0:	b8805826 	beq	r23,r2,4b844 <_strtoull_r+0x1e8>
   4b6e4:	b82dd7fa 	srai	r22,r23,31
   4b6e8:	043fffc4 	movi	r16,-1
   4b6ec:	8009883a 	mov	r4,r16
   4b6f0:	800b883a 	mov	r5,r16
   4b6f4:	b80d883a 	mov	r6,r23
   4b6f8:	b00f883a 	mov	r7,r22
   4b6fc:	004cf680 	call	4cf68 <__udivdi3>
   4b700:	8009883a 	mov	r4,r16
   4b704:	800b883a 	mov	r5,r16
   4b708:	b80d883a 	mov	r6,r23
   4b70c:	b00f883a 	mov	r7,r22
   4b710:	1023883a 	mov	r17,r2
   4b714:	1825883a 	mov	r18,r3
   4b718:	004d5d40 	call	4d5d4 <__umoddi3>
   4b71c:	b82b883a 	mov	r21,r23
   4b720:	1019883a 	mov	r12,r2
   4b724:	e505883a 	add	r2,fp,r20
   4b728:	11000003 	ldbu	r4,0(r2)
   4b72c:	0015883a 	mov	r10,zero
   4b730:	0017883a 	mov	r11,zero
   4b734:	20c0010c 	andi	r3,r4,4
   4b738:	000d883a 	mov	r6,zero
   4b73c:	18001c26 	beq	r3,zero,4b7b0 <_strtoull_r+0x154>
   4b740:	a43ff404 	addi	r16,r20,-48
   4b744:	85c0220e 	bge	r16,r23,4b7d0 <_strtoull_r+0x174>
   4b748:	30003c16 	blt	r6,zero,4b83c <_strtoull_r+0x1e0>
   4b74c:	92c03b36 	bltu	r18,r11,4b83c <_strtoull_r+0x1e0>
   4b750:	5c803926 	beq	r11,r18,4b838 <_strtoull_r+0x1dc>
   4b754:	54404c26 	beq	r10,r17,4b888 <_strtoull_r+0x22c>
   4b758:	580b883a 	mov	r5,r11
   4b75c:	5009883a 	mov	r4,r10
   4b760:	a80d883a 	mov	r6,r21
   4b764:	b00f883a 	mov	r7,r22
   4b768:	db000415 	stw	r12,16(sp)
   4b76c:	004cda00 	call	4cda0 <__muldi3>
   4b770:	8013d7fa 	srai	r9,r16,31
   4b774:	100d883a 	mov	r6,r2
   4b778:	1405883a 	add	r2,r2,r16
   4b77c:	118d803a 	cmpltu	r6,r2,r6
   4b780:	1a47883a 	add	r3,r3,r9
   4b784:	db000417 	ldw	r12,16(sp)
   4b788:	30cd883a 	add	r6,r6,r3
   4b78c:	3017883a 	mov	r11,r6
   4b790:	1015883a 	mov	r10,r2
   4b794:	01800044 	movi	r6,1
   4b798:	9d000007 	ldb	r20,0(r19)
   4b79c:	9cc00044 	addi	r19,r19,1
   4b7a0:	e505883a 	add	r2,fp,r20
   4b7a4:	11000003 	ldbu	r4,0(r2)
   4b7a8:	20c0010c 	andi	r3,r4,4
   4b7ac:	183fe41e 	bne	r3,zero,4b740 <_strtoull_r+0xe4>
   4b7b0:	208000cc 	andi	r2,r4,3
   4b7b4:	10000626 	beq	r2,zero,4b7d0 <_strtoull_r+0x174>
   4b7b8:	2080004c 	andi	r2,r4,1
   4b7bc:	1005003a 	cmpeq	r2,r2,zero
   4b7c0:	10002e1e 	bne	r2,zero,4b87c <_strtoull_r+0x220>
   4b7c4:	02000dc4 	movi	r8,55
   4b7c8:	a221c83a 	sub	r16,r20,r8
   4b7cc:	85ffde16 	blt	r16,r23,4b748 <_strtoull_r+0xec>
   4b7d0:	3000530e 	bge	r6,zero,4b920 <_strtoull_r+0x2c4>
   4b7d4:	d8c00117 	ldw	r3,4(sp)
   4b7d8:	02bfffc4 	movi	r10,-1
   4b7dc:	00800884 	movi	r2,34
   4b7e0:	5017883a 	mov	r11,r10
   4b7e4:	18800015 	stw	r2,0(r3)
   4b7e8:	d8800317 	ldw	r2,12(sp)
   4b7ec:	10000426 	beq	r2,zero,4b800 <_strtoull_r+0x1a4>
   4b7f0:	3000291e 	bne	r6,zero,4b898 <_strtoull_r+0x23c>
   4b7f4:	d8800217 	ldw	r2,8(sp)
   4b7f8:	d8c00317 	ldw	r3,12(sp)
   4b7fc:	18800015 	stw	r2,0(r3)
   4b800:	5005883a 	mov	r2,r10
   4b804:	5807883a 	mov	r3,r11
   4b808:	dfc00e17 	ldw	ra,56(sp)
   4b80c:	df000d17 	ldw	fp,52(sp)
   4b810:	ddc00c17 	ldw	r23,48(sp)
   4b814:	dd800b17 	ldw	r22,44(sp)
   4b818:	dd400a17 	ldw	r21,40(sp)
   4b81c:	dd000917 	ldw	r20,36(sp)
   4b820:	dcc00817 	ldw	r19,32(sp)
   4b824:	dc800717 	ldw	r18,28(sp)
   4b828:	dc400617 	ldw	r17,24(sp)
   4b82c:	dc000517 	ldw	r16,20(sp)
   4b830:	dec00f04 	addi	sp,sp,60
   4b834:	f800283a 	ret
   4b838:	8abfc62e 	bgeu	r17,r10,4b754 <_strtoull_r+0xf8>
   4b83c:	01bfffc4 	movi	r6,-1
   4b840:	003fd506 	br	4b798 <_strtoull_r+0x13c>
   4b844:	00800c04 	movi	r2,48
   4b848:	a0801e26 	beq	r20,r2,4b8c4 <_strtoull_r+0x268>
   4b84c:	183fa526 	beq	r3,zero,4b6e4 <_strtoull_r+0x88>
   4b850:	00800c04 	movi	r2,48
   4b854:	a0802a26 	beq	r20,r2,4b900 <_strtoull_r+0x2a4>
   4b858:	05c00284 	movi	r23,10
   4b85c:	b82b883a 	mov	r21,r23
   4b860:	046666b4 	movhi	r17,39322
   4b864:	8c666644 	addi	r17,r17,-26215
   4b868:	002d883a 	mov	r22,zero
   4b86c:	048666b4 	movhi	r18,6554
   4b870:	94a66644 	addi	r18,r18,-26215
   4b874:	03000144 	movi	r12,5
   4b878:	003faa06 	br	4b724 <_strtoull_r+0xc8>
   4b87c:	020015c4 	movi	r8,87
   4b880:	a221c83a 	sub	r16,r20,r8
   4b884:	003fd106 	br	4b7cc <_strtoull_r+0x170>
   4b888:	5cbfb31e 	bne	r11,r18,4b758 <_strtoull_r+0xfc>
   4b88c:	643fb20e 	bge	r12,r16,4b758 <_strtoull_r+0xfc>
   4b890:	01bfffc4 	movi	r6,-1
   4b894:	003fc006 	br	4b798 <_strtoull_r+0x13c>
   4b898:	9cffffc4 	addi	r19,r19,-1
   4b89c:	dcc00215 	stw	r19,8(sp)
   4b8a0:	003fd406 	br	4b7f4 <_strtoull_r+0x198>
   4b8a4:	9d000007 	ldb	r20,0(r19)
   4b8a8:	9cc00044 	addi	r19,r19,1
   4b8ac:	003f8806 	br	4b6d0 <_strtoull_r+0x74>
   4b8b0:	9d000007 	ldb	r20,0(r19)
   4b8b4:	00800044 	movi	r2,1
   4b8b8:	9cc00044 	addi	r19,r19,1
   4b8bc:	d8800015 	stw	r2,0(sp)
   4b8c0:	003f8406 	br	4b6d4 <_strtoull_r+0x78>
   4b8c4:	99000007 	ldb	r4,0(r19)
   4b8c8:	00801e04 	movi	r2,120
   4b8cc:	20800226 	beq	r4,r2,4b8d8 <_strtoull_r+0x27c>
   4b8d0:	00801604 	movi	r2,88
   4b8d4:	20bfdd1e 	bne	r4,r2,4b84c <_strtoull_r+0x1f0>
   4b8d8:	9d000047 	ldb	r20,1(r19)
   4b8dc:	05c00404 	movi	r23,16
   4b8e0:	b82b883a 	mov	r21,r23
   4b8e4:	047fffc4 	movi	r17,-1
   4b8e8:	9cc00084 	addi	r19,r19,2
   4b8ec:	002d883a 	mov	r22,zero
   4b8f0:	04840034 	movhi	r18,4096
   4b8f4:	94bfffc4 	addi	r18,r18,-1
   4b8f8:	030003c4 	movi	r12,15
   4b8fc:	003f8906 	br	4b724 <_strtoull_r+0xc8>
   4b900:	05c00204 	movi	r23,8
   4b904:	b82b883a 	mov	r21,r23
   4b908:	047fffc4 	movi	r17,-1
   4b90c:	002d883a 	mov	r22,zero
   4b910:	04880034 	movhi	r18,8192
   4b914:	94bfffc4 	addi	r18,r18,-1
   4b918:	030001c4 	movi	r12,7
   4b91c:	003f8106 	br	4b724 <_strtoull_r+0xc8>
   4b920:	d8c00017 	ldw	r3,0(sp)
   4b924:	1805003a 	cmpeq	r2,r3,zero
   4b928:	103faf1e 	bne	r2,zero,4b7e8 <_strtoull_r+0x18c>
   4b92c:	0009883a 	mov	r4,zero
   4b930:	2285c83a 	sub	r2,r4,r10
   4b934:	02c7c83a 	sub	r3,zero,r11
   4b938:	2089803a 	cmpltu	r4,r4,r2
   4b93c:	1909c83a 	sub	r4,r3,r4
   4b940:	1015883a 	mov	r10,r2
   4b944:	2017883a 	mov	r11,r4
   4b948:	003fa706 	br	4b7e8 <_strtoull_r+0x18c>

0004b94c <__submore>:
   4b94c:	defffa04 	addi	sp,sp,-24
   4b950:	28c00c17 	ldw	r3,48(r5)
   4b954:	dc800215 	stw	r18,8(sp)
   4b958:	2825883a 	mov	r18,r5
   4b95c:	dc000015 	stw	r16,0(sp)
   4b960:	90801004 	addi	r2,r18,64
   4b964:	04010004 	movi	r16,1024
   4b968:	dfc00515 	stw	ra,20(sp)
   4b96c:	dd000415 	stw	r20,16(sp)
   4b970:	dcc00315 	stw	r19,12(sp)
   4b974:	dc400115 	stw	r17,4(sp)
   4b978:	800b883a 	mov	r5,r16
   4b97c:	18801b26 	beq	r3,r2,4b9ec <__submore+0xa0>
   4b980:	94400d17 	ldw	r17,52(r18)
   4b984:	180b883a 	mov	r5,r3
   4b988:	8c69883a 	add	r20,r17,r17
   4b98c:	a00d883a 	mov	r6,r20
   4b990:	0048ac00 	call	48ac0 <_realloc_r>
   4b994:	1467883a 	add	r19,r2,r17
   4b998:	1021883a 	mov	r16,r2
   4b99c:	880d883a 	mov	r6,r17
   4b9a0:	9809883a 	mov	r4,r19
   4b9a4:	100b883a 	mov	r5,r2
   4b9a8:	10000e26 	beq	r2,zero,4b9e4 <__submore+0x98>
   4b9ac:	00476300 	call	47630 <memcpy>
   4b9b0:	000d883a 	mov	r6,zero
   4b9b4:	95000d15 	stw	r20,52(r18)
   4b9b8:	94c00015 	stw	r19,0(r18)
   4b9bc:	94000c15 	stw	r16,48(r18)
   4b9c0:	3005883a 	mov	r2,r6
   4b9c4:	dfc00517 	ldw	ra,20(sp)
   4b9c8:	dd000417 	ldw	r20,16(sp)
   4b9cc:	dcc00317 	ldw	r19,12(sp)
   4b9d0:	dc800217 	ldw	r18,8(sp)
   4b9d4:	dc400117 	ldw	r17,4(sp)
   4b9d8:	dc000017 	ldw	r16,0(sp)
   4b9dc:	dec00604 	addi	sp,sp,24
   4b9e0:	f800283a 	ret
   4b9e4:	01bfffc4 	movi	r6,-1
   4b9e8:	003ff506 	br	4b9c0 <__submore+0x74>
   4b9ec:	0046d0c0 	call	46d0c <_malloc_r>
   4b9f0:	1009883a 	mov	r4,r2
   4b9f4:	1140ff44 	addi	r5,r2,1021
   4b9f8:	000d883a 	mov	r6,zero
   4b9fc:	103ff926 	beq	r2,zero,4b9e4 <__submore+0x98>
   4ba00:	90801083 	ldbu	r2,66(r18)
   4ba04:	94000d15 	stw	r16,52(r18)
   4ba08:	91000c15 	stw	r4,48(r18)
   4ba0c:	28800085 	stb	r2,2(r5)
   4ba10:	90c01043 	ldbu	r3,65(r18)
   4ba14:	28c00045 	stb	r3,1(r5)
   4ba18:	90801003 	ldbu	r2,64(r18)
   4ba1c:	2080ff45 	stb	r2,1021(r4)
   4ba20:	91400015 	stw	r5,0(r18)
   4ba24:	003fe606 	br	4b9c0 <__submore+0x74>

0004ba28 <_ungetc_r>:
   4ba28:	defffc04 	addi	sp,sp,-16
   4ba2c:	00bfffc4 	movi	r2,-1
   4ba30:	dc400215 	stw	r17,8(sp)
   4ba34:	dc000115 	stw	r16,4(sp)
   4ba38:	dfc00315 	stw	ra,12(sp)
   4ba3c:	2821883a 	mov	r16,r5
   4ba40:	2023883a 	mov	r17,r4
   4ba44:	28801826 	beq	r5,r2,4baa8 <_ungetc_r+0x80>
   4ba48:	20000226 	beq	r4,zero,4ba54 <_ungetc_r+0x2c>
   4ba4c:	20800e17 	ldw	r2,56(r4)
   4ba50:	10001b26 	beq	r2,zero,4bac0 <_ungetc_r+0x98>
   4ba54:	3100030b 	ldhu	r4,12(r6)
   4ba58:	00bff7c4 	movi	r2,-33
   4ba5c:	2084703a 	and	r2,r4,r2
   4ba60:	117fffcc 	andi	r5,r2,65535
   4ba64:	28c0010c 	andi	r3,r5,4
   4ba68:	1009883a 	mov	r4,r2
   4ba6c:	3080030d 	sth	r2,12(r6)
   4ba70:	18003526 	beq	r3,zero,4bb48 <_ungetc_r+0x120>
   4ba74:	30800c17 	ldw	r2,48(r6)
   4ba78:	84003fcc 	andi	r16,r16,255
   4ba7c:	10001426 	beq	r2,zero,4bad0 <_ungetc_r+0xa8>
   4ba80:	30c00117 	ldw	r3,4(r6)
   4ba84:	30800d17 	ldw	r2,52(r6)
   4ba88:	1880380e 	bge	r3,r2,4bb6c <_ungetc_r+0x144>
   4ba8c:	30c00017 	ldw	r3,0(r6)
   4ba90:	19ffffc4 	addi	r7,r3,-1
   4ba94:	31c00015 	stw	r7,0(r6)
   4ba98:	1c3fffc5 	stb	r16,-1(r3)
   4ba9c:	30800117 	ldw	r2,4(r6)
   4baa0:	10800044 	addi	r2,r2,1
   4baa4:	30800115 	stw	r2,4(r6)
   4baa8:	8005883a 	mov	r2,r16
   4baac:	dfc00317 	ldw	ra,12(sp)
   4bab0:	dc400217 	ldw	r17,8(sp)
   4bab4:	dc000117 	ldw	r16,4(sp)
   4bab8:	dec00404 	addi	sp,sp,16
   4babc:	f800283a 	ret
   4bac0:	d9800015 	stw	r6,0(sp)
   4bac4:	0045b540 	call	45b54 <__sinit>
   4bac8:	d9800017 	ldw	r6,0(sp)
   4bacc:	003fe106 	br	4ba54 <_ungetc_r+0x2c>
   4bad0:	30800417 	ldw	r2,16(r6)
   4bad4:	10002326 	beq	r2,zero,4bb64 <_ungetc_r+0x13c>
   4bad8:	31c00017 	ldw	r7,0(r6)
   4badc:	11c0022e 	bgeu	r2,r7,4bae8 <_ungetc_r+0xc0>
   4bae0:	38bfffc3 	ldbu	r2,-1(r7)
   4bae4:	80801226 	beq	r16,r2,4bb30 <_ungetc_r+0x108>
   4bae8:	30c00117 	ldw	r3,4(r6)
   4baec:	00800044 	movi	r2,1
   4baf0:	30800115 	stw	r2,4(r6)
   4baf4:	008000c4 	movi	r2,3
   4baf8:	31001004 	addi	r4,r6,64
   4bafc:	31401084 	addi	r5,r6,66
   4bb00:	30800d15 	stw	r2,52(r6)
   4bb04:	8005883a 	mov	r2,r16
   4bb08:	30c00f15 	stw	r3,60(r6)
   4bb0c:	31c00e15 	stw	r7,56(r6)
   4bb10:	31000c15 	stw	r4,48(r6)
   4bb14:	31400015 	stw	r5,0(r6)
   4bb18:	34001085 	stb	r16,66(r6)
   4bb1c:	dfc00317 	ldw	ra,12(sp)
   4bb20:	dc400217 	ldw	r17,8(sp)
   4bb24:	dc000117 	ldw	r16,4(sp)
   4bb28:	dec00404 	addi	sp,sp,16
   4bb2c:	f800283a 	ret
   4bb30:	30800117 	ldw	r2,4(r6)
   4bb34:	39ffffc4 	addi	r7,r7,-1
   4bb38:	31c00015 	stw	r7,0(r6)
   4bb3c:	10800044 	addi	r2,r2,1
   4bb40:	30800115 	stw	r2,4(r6)
   4bb44:	003fd806 	br	4baa8 <_ungetc_r+0x80>
   4bb48:	2880040c 	andi	r2,r5,16
   4bb4c:	10000d26 	beq	r2,zero,4bb84 <_ungetc_r+0x15c>
   4bb50:	2880020c 	andi	r2,r5,8
   4bb54:	10000d1e 	bne	r2,zero,4bb8c <_ungetc_r+0x164>
   4bb58:	20800114 	ori	r2,r4,4
   4bb5c:	3080030d 	sth	r2,12(r6)
   4bb60:	003fc406 	br	4ba74 <_ungetc_r+0x4c>
   4bb64:	31c00017 	ldw	r7,0(r6)
   4bb68:	003fdf06 	br	4bae8 <_ungetc_r+0xc0>
   4bb6c:	300b883a 	mov	r5,r6
   4bb70:	8809883a 	mov	r4,r17
   4bb74:	d9800015 	stw	r6,0(sp)
   4bb78:	004b94c0 	call	4b94c <__submore>
   4bb7c:	d9800017 	ldw	r6,0(sp)
   4bb80:	103fc226 	beq	r2,zero,4ba8c <_ungetc_r+0x64>
   4bb84:	043fffc4 	movi	r16,-1
   4bb88:	003fc706 	br	4baa8 <_ungetc_r+0x80>
   4bb8c:	300b883a 	mov	r5,r6
   4bb90:	8809883a 	mov	r4,r17
   4bb94:	d9800015 	stw	r6,0(sp)
   4bb98:	00458bc0 	call	458bc <_fflush_r>
   4bb9c:	d9800017 	ldw	r6,0(sp)
   4bba0:	103ff81e 	bne	r2,zero,4bb84 <_ungetc_r+0x15c>
   4bba4:	3100030b 	ldhu	r4,12(r6)
   4bba8:	00bffdc4 	movi	r2,-9
   4bbac:	30000215 	stw	zero,8(r6)
   4bbb0:	2084703a 	and	r2,r4,r2
   4bbb4:	1009883a 	mov	r4,r2
   4bbb8:	3080030d 	sth	r2,12(r6)
   4bbbc:	30000615 	stw	zero,24(r6)
   4bbc0:	003fe506 	br	4bb58 <_ungetc_r+0x130>

0004bbc4 <ungetc>:
   4bbc4:	01800174 	movhi	r6,5
   4bbc8:	3191d604 	addi	r6,r6,18264
   4bbcc:	2007883a 	mov	r3,r4
   4bbd0:	31000017 	ldw	r4,0(r6)
   4bbd4:	280d883a 	mov	r6,r5
   4bbd8:	180b883a 	mov	r5,r3
   4bbdc:	004ba281 	jmpi	4ba28 <_ungetc_r>

0004bbe0 <__swbuf_r>:
   4bbe0:	defffc04 	addi	sp,sp,-16
   4bbe4:	dc400215 	stw	r17,8(sp)
   4bbe8:	dc000115 	stw	r16,4(sp)
   4bbec:	dfc00315 	stw	ra,12(sp)
   4bbf0:	2023883a 	mov	r17,r4
   4bbf4:	2821883a 	mov	r16,r5
   4bbf8:	20000226 	beq	r4,zero,4bc04 <__swbuf_r+0x24>
   4bbfc:	20800e17 	ldw	r2,56(r4)
   4bc00:	10002f26 	beq	r2,zero,4bcc0 <__swbuf_r+0xe0>
   4bc04:	3080030b 	ldhu	r2,12(r6)
   4bc08:	30c00617 	ldw	r3,24(r6)
   4bc0c:	1080020c 	andi	r2,r2,8
   4bc10:	30c00215 	stw	r3,8(r6)
   4bc14:	10002226 	beq	r2,zero,4bca0 <__swbuf_r+0xc0>
   4bc18:	30c00417 	ldw	r3,16(r6)
   4bc1c:	18002026 	beq	r3,zero,4bca0 <__swbuf_r+0xc0>
   4bc20:	31000017 	ldw	r4,0(r6)
   4bc24:	30800517 	ldw	r2,20(r6)
   4bc28:	20c7c83a 	sub	r3,r4,r3
   4bc2c:	18802f0e 	bge	r3,r2,4bcec <__swbuf_r+0x10c>
   4bc30:	19400044 	addi	r5,r3,1
   4bc34:	30800217 	ldw	r2,8(r6)
   4bc38:	84003fcc 	andi	r16,r16,255
   4bc3c:	20c00044 	addi	r3,r4,1
   4bc40:	10bfffc4 	addi	r2,r2,-1
   4bc44:	30800215 	stw	r2,8(r6)
   4bc48:	24000005 	stb	r16,0(r4)
   4bc4c:	30800517 	ldw	r2,20(r6)
   4bc50:	30c00015 	stw	r3,0(r6)
   4bc54:	11400c26 	beq	r2,r5,4bc88 <__swbuf_r+0xa8>
   4bc58:	3080030b 	ldhu	r2,12(r6)
   4bc5c:	1080004c 	andi	r2,r2,1
   4bc60:	1005003a 	cmpeq	r2,r2,zero
   4bc64:	10000626 	beq	r2,zero,4bc80 <__swbuf_r+0xa0>
   4bc68:	8005883a 	mov	r2,r16
   4bc6c:	dfc00317 	ldw	ra,12(sp)
   4bc70:	dc400217 	ldw	r17,8(sp)
   4bc74:	dc000117 	ldw	r16,4(sp)
   4bc78:	dec00404 	addi	sp,sp,16
   4bc7c:	f800283a 	ret
   4bc80:	00800284 	movi	r2,10
   4bc84:	80bff81e 	bne	r16,r2,4bc68 <__swbuf_r+0x88>
   4bc88:	8809883a 	mov	r4,r17
   4bc8c:	300b883a 	mov	r5,r6
   4bc90:	00458bc0 	call	458bc <_fflush_r>
   4bc94:	103ff426 	beq	r2,zero,4bc68 <__swbuf_r+0x88>
   4bc98:	043fffc4 	movi	r16,-1
   4bc9c:	003ff206 	br	4bc68 <__swbuf_r+0x88>
   4bca0:	300b883a 	mov	r5,r6
   4bca4:	8809883a 	mov	r4,r17
   4bca8:	d9800015 	stw	r6,0(sp)
   4bcac:	0043f880 	call	43f88 <__swsetup_r>
   4bcb0:	d9800017 	ldw	r6,0(sp)
   4bcb4:	1000061e 	bne	r2,zero,4bcd0 <__swbuf_r+0xf0>
   4bcb8:	30c00417 	ldw	r3,16(r6)
   4bcbc:	003fd806 	br	4bc20 <__swbuf_r+0x40>
   4bcc0:	d9800015 	stw	r6,0(sp)
   4bcc4:	0045b540 	call	45b54 <__sinit>
   4bcc8:	d9800017 	ldw	r6,0(sp)
   4bccc:	003fcd06 	br	4bc04 <__swbuf_r+0x24>
   4bcd0:	3080030b 	ldhu	r2,12(r6)
   4bcd4:	00c00244 	movi	r3,9
   4bcd8:	043fffc4 	movi	r16,-1
   4bcdc:	10801014 	ori	r2,r2,64
   4bce0:	3080030d 	sth	r2,12(r6)
   4bce4:	88c00015 	stw	r3,0(r17)
   4bce8:	003fdf06 	br	4bc68 <__swbuf_r+0x88>
   4bcec:	300b883a 	mov	r5,r6
   4bcf0:	8809883a 	mov	r4,r17
   4bcf4:	d9800015 	stw	r6,0(sp)
   4bcf8:	00458bc0 	call	458bc <_fflush_r>
   4bcfc:	d9800017 	ldw	r6,0(sp)
   4bd00:	103fe51e 	bne	r2,zero,4bc98 <__swbuf_r+0xb8>
   4bd04:	31000017 	ldw	r4,0(r6)
   4bd08:	01400044 	movi	r5,1
   4bd0c:	003fc906 	br	4bc34 <__swbuf_r+0x54>

0004bd10 <__swbuf>:
   4bd10:	01800174 	movhi	r6,5
   4bd14:	3191d604 	addi	r6,r6,18264
   4bd18:	2007883a 	mov	r3,r4
   4bd1c:	31000017 	ldw	r4,0(r6)
   4bd20:	280d883a 	mov	r6,r5
   4bd24:	180b883a 	mov	r5,r3
   4bd28:	004bbe01 	jmpi	4bbe0 <__swbuf_r>

0004bd2c <_write_r>:
   4bd2c:	defffd04 	addi	sp,sp,-12
   4bd30:	dc000015 	stw	r16,0(sp)
   4bd34:	04000174 	movhi	r16,5
   4bd38:	84188f04 	addi	r16,r16,25148
   4bd3c:	dc400115 	stw	r17,4(sp)
   4bd40:	80000015 	stw	zero,0(r16)
   4bd44:	2023883a 	mov	r17,r4
   4bd48:	2809883a 	mov	r4,r5
   4bd4c:	300b883a 	mov	r5,r6
   4bd50:	380d883a 	mov	r6,r7
   4bd54:	dfc00215 	stw	ra,8(sp)
   4bd58:	00503940 	call	50394 <write>
   4bd5c:	1007883a 	mov	r3,r2
   4bd60:	00bfffc4 	movi	r2,-1
   4bd64:	18800626 	beq	r3,r2,4bd80 <_write_r+0x54>
   4bd68:	1805883a 	mov	r2,r3
   4bd6c:	dfc00217 	ldw	ra,8(sp)
   4bd70:	dc400117 	ldw	r17,4(sp)
   4bd74:	dc000017 	ldw	r16,0(sp)
   4bd78:	dec00304 	addi	sp,sp,12
   4bd7c:	f800283a 	ret
   4bd80:	80800017 	ldw	r2,0(r16)
   4bd84:	103ff826 	beq	r2,zero,4bd68 <_write_r+0x3c>
   4bd88:	88800015 	stw	r2,0(r17)
   4bd8c:	1805883a 	mov	r2,r3
   4bd90:	dfc00217 	ldw	ra,8(sp)
   4bd94:	dc400117 	ldw	r17,4(sp)
   4bd98:	dc000017 	ldw	r16,0(sp)
   4bd9c:	dec00304 	addi	sp,sp,12
   4bda0:	f800283a 	ret

0004bda4 <_calloc_r>:
   4bda4:	defffe04 	addi	sp,sp,-8
   4bda8:	dc400015 	stw	r17,0(sp)
   4bdac:	2023883a 	mov	r17,r4
   4bdb0:	2809883a 	mov	r4,r5
   4bdb4:	300b883a 	mov	r5,r6
   4bdb8:	dfc00115 	stw	ra,4(sp)
   4bdbc:	004f1100 	call	4f110 <__mulsi3>
   4bdc0:	100b883a 	mov	r5,r2
   4bdc4:	8809883a 	mov	r4,r17
   4bdc8:	0046d0c0 	call	46d0c <_malloc_r>
   4bdcc:	1023883a 	mov	r17,r2
   4bdd0:	01c00904 	movi	r7,36
   4bdd4:	10000d26 	beq	r2,zero,4be0c <_calloc_r+0x68>
   4bdd8:	10ffff17 	ldw	r3,-4(r2)
   4bddc:	1009883a 	mov	r4,r2
   4bde0:	00bfff04 	movi	r2,-4
   4bde4:	1886703a 	and	r3,r3,r2
   4bde8:	1887883a 	add	r3,r3,r2
   4bdec:	180d883a 	mov	r6,r3
   4bdf0:	000b883a 	mov	r5,zero
   4bdf4:	38c01736 	bltu	r7,r3,4be54 <_calloc_r+0xb0>
   4bdf8:	008004c4 	movi	r2,19
   4bdfc:	10c00836 	bltu	r2,r3,4be20 <_calloc_r+0x7c>
   4be00:	20000215 	stw	zero,8(r4)
   4be04:	20000015 	stw	zero,0(r4)
   4be08:	20000115 	stw	zero,4(r4)
   4be0c:	8805883a 	mov	r2,r17
   4be10:	dfc00117 	ldw	ra,4(sp)
   4be14:	dc400017 	ldw	r17,0(sp)
   4be18:	dec00204 	addi	sp,sp,8
   4be1c:	f800283a 	ret
   4be20:	008006c4 	movi	r2,27
   4be24:	88000015 	stw	zero,0(r17)
   4be28:	88000115 	stw	zero,4(r17)
   4be2c:	89000204 	addi	r4,r17,8
   4be30:	10fff32e 	bgeu	r2,r3,4be00 <_calloc_r+0x5c>
   4be34:	88000215 	stw	zero,8(r17)
   4be38:	88000315 	stw	zero,12(r17)
   4be3c:	89000404 	addi	r4,r17,16
   4be40:	19ffef1e 	bne	r3,r7,4be00 <_calloc_r+0x5c>
   4be44:	89000604 	addi	r4,r17,24
   4be48:	88000415 	stw	zero,16(r17)
   4be4c:	88000515 	stw	zero,20(r17)
   4be50:	003feb06 	br	4be00 <_calloc_r+0x5c>
   4be54:	00477b00 	call	477b0 <memset>
   4be58:	8805883a 	mov	r2,r17
   4be5c:	dfc00117 	ldw	ra,4(sp)
   4be60:	dc400017 	ldw	r17,0(sp)
   4be64:	dec00204 	addi	sp,sp,8
   4be68:	f800283a 	ret

0004be6c <_close_r>:
   4be6c:	defffd04 	addi	sp,sp,-12
   4be70:	dc000015 	stw	r16,0(sp)
   4be74:	04000174 	movhi	r16,5
   4be78:	84188f04 	addi	r16,r16,25148
   4be7c:	dc400115 	stw	r17,4(sp)
   4be80:	80000015 	stw	zero,0(r16)
   4be84:	2023883a 	mov	r17,r4
   4be88:	2809883a 	mov	r4,r5
   4be8c:	dfc00215 	stw	ra,8(sp)
   4be90:	004f9d80 	call	4f9d8 <close>
   4be94:	1007883a 	mov	r3,r2
   4be98:	00bfffc4 	movi	r2,-1
   4be9c:	18800626 	beq	r3,r2,4beb8 <_close_r+0x4c>
   4bea0:	1805883a 	mov	r2,r3
   4bea4:	dfc00217 	ldw	ra,8(sp)
   4bea8:	dc400117 	ldw	r17,4(sp)
   4beac:	dc000017 	ldw	r16,0(sp)
   4beb0:	dec00304 	addi	sp,sp,12
   4beb4:	f800283a 	ret
   4beb8:	80800017 	ldw	r2,0(r16)
   4bebc:	103ff826 	beq	r2,zero,4bea0 <_close_r+0x34>
   4bec0:	88800015 	stw	r2,0(r17)
   4bec4:	1805883a 	mov	r2,r3
   4bec8:	dfc00217 	ldw	ra,8(sp)
   4becc:	dc400117 	ldw	r17,4(sp)
   4bed0:	dc000017 	ldw	r16,0(sp)
   4bed4:	dec00304 	addi	sp,sp,12
   4bed8:	f800283a 	ret

0004bedc <_fclose_r>:
   4bedc:	defffc04 	addi	sp,sp,-16
   4bee0:	dc400115 	stw	r17,4(sp)
   4bee4:	dc000015 	stw	r16,0(sp)
   4bee8:	dfc00315 	stw	ra,12(sp)
   4beec:	dc800215 	stw	r18,8(sp)
   4bef0:	2821883a 	mov	r16,r5
   4bef4:	2023883a 	mov	r17,r4
   4bef8:	28002926 	beq	r5,zero,4bfa0 <_fclose_r+0xc4>
   4befc:	0045b440 	call	45b44 <__sfp_lock_acquire>
   4bf00:	88000226 	beq	r17,zero,4bf0c <_fclose_r+0x30>
   4bf04:	88800e17 	ldw	r2,56(r17)
   4bf08:	10002d26 	beq	r2,zero,4bfc0 <_fclose_r+0xe4>
   4bf0c:	8080030f 	ldh	r2,12(r16)
   4bf10:	10002226 	beq	r2,zero,4bf9c <_fclose_r+0xc0>
   4bf14:	8809883a 	mov	r4,r17
   4bf18:	800b883a 	mov	r5,r16
   4bf1c:	00458bc0 	call	458bc <_fflush_r>
   4bf20:	1025883a 	mov	r18,r2
   4bf24:	80800b17 	ldw	r2,44(r16)
   4bf28:	10000426 	beq	r2,zero,4bf3c <_fclose_r+0x60>
   4bf2c:	81400717 	ldw	r5,28(r16)
   4bf30:	8809883a 	mov	r4,r17
   4bf34:	103ee83a 	callr	r2
   4bf38:	10002a16 	blt	r2,zero,4bfe4 <_fclose_r+0x108>
   4bf3c:	8080030b 	ldhu	r2,12(r16)
   4bf40:	1080200c 	andi	r2,r2,128
   4bf44:	1000231e 	bne	r2,zero,4bfd4 <_fclose_r+0xf8>
   4bf48:	81400c17 	ldw	r5,48(r16)
   4bf4c:	28000526 	beq	r5,zero,4bf64 <_fclose_r+0x88>
   4bf50:	80801004 	addi	r2,r16,64
   4bf54:	28800226 	beq	r5,r2,4bf60 <_fclose_r+0x84>
   4bf58:	8809883a 	mov	r4,r17
   4bf5c:	00461580 	call	46158 <_free_r>
   4bf60:	80000c15 	stw	zero,48(r16)
   4bf64:	81401117 	ldw	r5,68(r16)
   4bf68:	28000326 	beq	r5,zero,4bf78 <_fclose_r+0x9c>
   4bf6c:	8809883a 	mov	r4,r17
   4bf70:	00461580 	call	46158 <_free_r>
   4bf74:	80001115 	stw	zero,68(r16)
   4bf78:	8000030d 	sth	zero,12(r16)
   4bf7c:	0045b480 	call	45b48 <__sfp_lock_release>
   4bf80:	9005883a 	mov	r2,r18
   4bf84:	dfc00317 	ldw	ra,12(sp)
   4bf88:	dc800217 	ldw	r18,8(sp)
   4bf8c:	dc400117 	ldw	r17,4(sp)
   4bf90:	dc000017 	ldw	r16,0(sp)
   4bf94:	dec00404 	addi	sp,sp,16
   4bf98:	f800283a 	ret
   4bf9c:	0045b480 	call	45b48 <__sfp_lock_release>
   4bfa0:	0025883a 	mov	r18,zero
   4bfa4:	9005883a 	mov	r2,r18
   4bfa8:	dfc00317 	ldw	ra,12(sp)
   4bfac:	dc800217 	ldw	r18,8(sp)
   4bfb0:	dc400117 	ldw	r17,4(sp)
   4bfb4:	dc000017 	ldw	r16,0(sp)
   4bfb8:	dec00404 	addi	sp,sp,16
   4bfbc:	f800283a 	ret
   4bfc0:	8809883a 	mov	r4,r17
   4bfc4:	0045b540 	call	45b54 <__sinit>
   4bfc8:	8080030f 	ldh	r2,12(r16)
   4bfcc:	103fd11e 	bne	r2,zero,4bf14 <_fclose_r+0x38>
   4bfd0:	003ff206 	br	4bf9c <_fclose_r+0xc0>
   4bfd4:	81400417 	ldw	r5,16(r16)
   4bfd8:	8809883a 	mov	r4,r17
   4bfdc:	00461580 	call	46158 <_free_r>
   4bfe0:	003fd906 	br	4bf48 <_fclose_r+0x6c>
   4bfe4:	04bfffc4 	movi	r18,-1
   4bfe8:	003fd406 	br	4bf3c <_fclose_r+0x60>

0004bfec <fclose>:
   4bfec:	00800174 	movhi	r2,5
   4bff0:	1091d604 	addi	r2,r2,18264
   4bff4:	200b883a 	mov	r5,r4
   4bff8:	11000017 	ldw	r4,0(r2)
   4bffc:	004bedc1 	jmpi	4bedc <_fclose_r>

0004c000 <_fstat_r>:
   4c000:	defffd04 	addi	sp,sp,-12
   4c004:	dc000015 	stw	r16,0(sp)
   4c008:	04000174 	movhi	r16,5
   4c00c:	84188f04 	addi	r16,r16,25148
   4c010:	dc400115 	stw	r17,4(sp)
   4c014:	80000015 	stw	zero,0(r16)
   4c018:	2023883a 	mov	r17,r4
   4c01c:	2809883a 	mov	r4,r5
   4c020:	300b883a 	mov	r5,r6
   4c024:	dfc00215 	stw	ra,8(sp)
   4c028:	004fb640 	call	4fb64 <fstat>
   4c02c:	1007883a 	mov	r3,r2
   4c030:	00bfffc4 	movi	r2,-1
   4c034:	18800626 	beq	r3,r2,4c050 <_fstat_r+0x50>
   4c038:	1805883a 	mov	r2,r3
   4c03c:	dfc00217 	ldw	ra,8(sp)
   4c040:	dc400117 	ldw	r17,4(sp)
   4c044:	dc000017 	ldw	r16,0(sp)
   4c048:	dec00304 	addi	sp,sp,12
   4c04c:	f800283a 	ret
   4c050:	80800017 	ldw	r2,0(r16)
   4c054:	103ff826 	beq	r2,zero,4c038 <_fstat_r+0x38>
   4c058:	88800015 	stw	r2,0(r17)
   4c05c:	1805883a 	mov	r2,r3
   4c060:	dfc00217 	ldw	ra,8(sp)
   4c064:	dc400117 	ldw	r17,4(sp)
   4c068:	dc000017 	ldw	r16,0(sp)
   4c06c:	dec00304 	addi	sp,sp,12
   4c070:	f800283a 	ret

0004c074 <htinit>:
   4c074:	28800003 	ldbu	r2,0(r5)
   4c078:	10000626 	beq	r2,zero,4c094 <htinit+0x20>
   4c07c:	1105883a 	add	r2,r2,r4
   4c080:	11800005 	stb	r6,0(r2)
   4c084:	28800043 	ldbu	r2,1(r5)
   4c088:	31800044 	addi	r6,r6,1
   4c08c:	29400044 	addi	r5,r5,1
   4c090:	103ffa1e 	bne	r2,zero,4c07c <htinit+0x8>
   4c094:	f800283a 	ret

0004c098 <__hexdig_init>:
   4c098:	defffd04 	addi	sp,sp,-12
   4c09c:	dc400015 	stw	r17,0(sp)
   4c0a0:	04400174 	movhi	r17,5
   4c0a4:	8c58a004 	addi	r17,r17,25216
   4c0a8:	dcc00115 	stw	r19,4(sp)
   4c0ac:	8809883a 	mov	r4,r17
   4c0b0:	04c00684 	movi	r19,26
   4c0b4:	01400174 	movhi	r5,5
   4c0b8:	294aec04 	addi	r5,r5,11184
   4c0bc:	01800404 	movi	r6,16
   4c0c0:	dfc00215 	stw	ra,8(sp)
   4c0c4:	004c0740 	call	4c074 <htinit>
   4c0c8:	980d883a 	mov	r6,r19
   4c0cc:	8809883a 	mov	r4,r17
   4c0d0:	01400174 	movhi	r5,5
   4c0d4:	294aef04 	addi	r5,r5,11196
   4c0d8:	004c0740 	call	4c074 <htinit>
   4c0dc:	8809883a 	mov	r4,r17
   4c0e0:	980d883a 	mov	r6,r19
   4c0e4:	01400174 	movhi	r5,5
   4c0e8:	294af104 	addi	r5,r5,11204
   4c0ec:	dfc00217 	ldw	ra,8(sp)
   4c0f0:	dcc00117 	ldw	r19,4(sp)
   4c0f4:	dc400017 	ldw	r17,0(sp)
   4c0f8:	dec00304 	addi	sp,sp,12
   4c0fc:	004c0741 	jmpi	4c074 <htinit>

0004c100 <rshift>:
   4c100:	2807d17a 	srai	r3,r5,5
   4c104:	20800417 	ldw	r2,16(r4)
   4c108:	22400504 	addi	r9,r4,20
   4c10c:	480f883a 	mov	r7,r9
   4c110:	1880190e 	bge	r3,r2,4c178 <rshift+0x78>
   4c114:	1085883a 	add	r2,r2,r2
   4c118:	18c7883a 	add	r3,r3,r3
   4c11c:	1085883a 	add	r2,r2,r2
   4c120:	18c7883a 	add	r3,r3,r3
   4c124:	294007cc 	andi	r5,r5,31
   4c128:	4891883a 	add	r8,r9,r2
   4c12c:	48cd883a 	add	r6,r9,r3
   4c130:	28001726 	beq	r5,zero,4c190 <rshift+0x90>
   4c134:	30c00017 	ldw	r3,0(r6)
   4c138:	00800804 	movi	r2,32
   4c13c:	31800104 	addi	r6,r6,4
   4c140:	1155c83a 	sub	r10,r2,r5
   4c144:	1946d83a 	srl	r3,r3,r5
   4c148:	3200092e 	bgeu	r6,r8,4c170 <rshift+0x70>
   4c14c:	30800017 	ldw	r2,0(r6)
   4c150:	1284983a 	sll	r2,r2,r10
   4c154:	10c4b03a 	or	r2,r2,r3
   4c158:	38800015 	stw	r2,0(r7)
   4c15c:	30c00017 	ldw	r3,0(r6)
   4c160:	31800104 	addi	r6,r6,4
   4c164:	39c00104 	addi	r7,r7,4
   4c168:	1946d83a 	srl	r3,r3,r5
   4c16c:	323ff736 	bltu	r6,r8,4c14c <rshift+0x4c>
   4c170:	38c00015 	stw	r3,0(r7)
   4c174:	18000c1e 	bne	r3,zero,4c1a8 <rshift+0xa8>
   4c178:	3a45c83a 	sub	r2,r7,r9
   4c17c:	1005d0ba 	srai	r2,r2,2
   4c180:	20800415 	stw	r2,16(r4)
   4c184:	1000011e 	bne	r2,zero,4c18c <rshift+0x8c>
   4c188:	20000515 	stw	zero,20(r4)
   4c18c:	f800283a 	ret
   4c190:	323ff92e 	bgeu	r6,r8,4c178 <rshift+0x78>
   4c194:	30800017 	ldw	r2,0(r6)
   4c198:	31800104 	addi	r6,r6,4
   4c19c:	38800015 	stw	r2,0(r7)
   4c1a0:	39c00104 	addi	r7,r7,4
   4c1a4:	003ffa06 	br	4c190 <rshift+0x90>
   4c1a8:	39c00104 	addi	r7,r7,4
   4c1ac:	003ff206 	br	4c178 <rshift+0x78>

0004c1b0 <__gethex>:
   4c1b0:	defff104 	addi	sp,sp,-60
   4c1b4:	df000d15 	stw	fp,52(sp)
   4c1b8:	dcc00815 	stw	r19,32(sp)
   4c1bc:	dfc00e15 	stw	ra,56(sp)
   4c1c0:	ddc00c15 	stw	r23,48(sp)
   4c1c4:	dd800b15 	stw	r22,44(sp)
   4c1c8:	dd400a15 	stw	r21,40(sp)
   4c1cc:	dd000915 	stw	r20,36(sp)
   4c1d0:	dc800715 	stw	r18,28(sp)
   4c1d4:	dc400615 	stw	r17,24(sp)
   4c1d8:	dc000515 	stw	r16,20(sp)
   4c1dc:	04c00174 	movhi	r19,5
   4c1e0:	9cd8a004 	addi	r19,r19,25216
   4c1e4:	98800c03 	ldbu	r2,48(r19)
   4c1e8:	d9000115 	stw	r4,4(sp)
   4c1ec:	2839883a 	mov	fp,r5
   4c1f0:	d9800215 	stw	r6,8(sp)
   4c1f4:	d9c00315 	stw	r7,12(sp)
   4c1f8:	10007526 	beq	r2,zero,4c3d0 <__gethex+0x220>
   4c1fc:	e1800017 	ldw	r6,0(fp)
   4c200:	00800c04 	movi	r2,48
   4c204:	31000083 	ldbu	r4,2(r6)
   4c208:	30c00084 	addi	r3,r6,2
   4c20c:	2080761e 	bne	r4,r2,4c3e8 <__gethex+0x238>
   4c210:	200b883a 	mov	r5,r4
   4c214:	3007883a 	mov	r3,r6
   4c218:	188000c3 	ldbu	r2,3(r3)
   4c21c:	18c00044 	addi	r3,r3,1
   4c220:	1009883a 	mov	r4,r2
   4c224:	117ffc26 	beq	r2,r5,4c218 <__gethex+0x68>
   4c228:	198fc83a 	sub	r7,r3,r6
   4c22c:	19400084 	addi	r5,r3,2
   4c230:	24c5883a 	add	r2,r4,r19
   4c234:	10c00003 	ldbu	r3,0(r2)
   4c238:	18002e26 	beq	r3,zero,4c2f4 <__gethex+0x144>
   4c23c:	29000003 	ldbu	r4,0(r5)
   4c240:	282b883a 	mov	r21,r5
   4c244:	000d883a 	mov	r6,zero
   4c248:	002d883a 	mov	r22,zero
   4c24c:	21003fcc 	andi	r4,r4,255
   4c250:	24c5883a 	add	r2,r4,r19
   4c254:	10c00003 	ldbu	r3,0(r2)
   4c258:	18000526 	beq	r3,zero,4c270 <__gethex+0xc0>
   4c25c:	29400044 	addi	r5,r5,1
   4c260:	29000003 	ldbu	r4,0(r5)
   4c264:	24c5883a 	add	r2,r4,r19
   4c268:	10c00003 	ldbu	r3,0(r2)
   4c26c:	183ffb1e 	bne	r3,zero,4c25c <__gethex+0xac>
   4c270:	00800b84 	movi	r2,46
   4c274:	20805f26 	beq	r4,r2,4c3f4 <__gethex+0x244>
   4c278:	30008226 	beq	r6,zero,4c484 <__gethex+0x2d4>
   4c27c:	2985c83a 	sub	r2,r5,r6
   4c280:	1085883a 	add	r2,r2,r2
   4c284:	1085883a 	add	r2,r2,r2
   4c288:	0085c83a 	sub	r2,zero,r2
   4c28c:	d8800015 	stw	r2,0(sp)
   4c290:	2825883a 	mov	r18,r5
   4c294:	90c00003 	ldbu	r3,0(r18)
   4c298:	00801404 	movi	r2,80
   4c29c:	18801e26 	beq	r3,r2,4c318 <__gethex+0x168>
   4c2a0:	00801c04 	movi	r2,112
   4c2a4:	18801c26 	beq	r3,r2,4c318 <__gethex+0x168>
   4c2a8:	9023883a 	mov	r17,r18
   4c2ac:	b005003a 	cmpeq	r2,r22,zero
   4c2b0:	e4400015 	stw	r17,0(fp)
   4c2b4:	10008d1e 	bne	r2,zero,4c4ec <__gethex+0x33c>
   4c2b8:	38004326 	beq	r7,zero,4c3c8 <__gethex+0x218>
   4c2bc:	0025883a 	mov	r18,zero
   4c2c0:	9005883a 	mov	r2,r18
   4c2c4:	dfc00e17 	ldw	ra,56(sp)
   4c2c8:	df000d17 	ldw	fp,52(sp)
   4c2cc:	ddc00c17 	ldw	r23,48(sp)
   4c2d0:	dd800b17 	ldw	r22,44(sp)
   4c2d4:	dd400a17 	ldw	r21,40(sp)
   4c2d8:	dd000917 	ldw	r20,36(sp)
   4c2dc:	dcc00817 	ldw	r19,32(sp)
   4c2e0:	dc800717 	ldw	r18,28(sp)
   4c2e4:	dc400617 	ldw	r17,24(sp)
   4c2e8:	dc000517 	ldw	r16,20(sp)
   4c2ec:	dec00f04 	addi	sp,sp,60
   4c2f0:	f800283a 	ret
   4c2f4:	00800b84 	movi	r2,46
   4c2f8:	20805126 	beq	r4,r2,4c440 <__gethex+0x290>
   4c2fc:	2825883a 	mov	r18,r5
   4c300:	d8000015 	stw	zero,0(sp)
   4c304:	90c00003 	ldbu	r3,0(r18)
   4c308:	00801404 	movi	r2,80
   4c30c:	282b883a 	mov	r21,r5
   4c310:	05800044 	movi	r22,1
   4c314:	18bfe21e 	bne	r3,r2,4c2a0 <__gethex+0xf0>
   4c318:	90c00043 	ldbu	r3,1(r18)
   4c31c:	00800ac4 	movi	r2,43
   4c320:	91400044 	addi	r5,r18,1
   4c324:	18805126 	beq	r3,r2,4c46c <__gethex+0x2bc>
   4c328:	00800b44 	movi	r2,45
   4c32c:	18805326 	beq	r3,r2,4c47c <__gethex+0x2cc>
   4c330:	002f883a 	mov	r23,zero
   4c334:	1cc5883a 	add	r2,r3,r19
   4c338:	10800003 	ldbu	r2,0(r2)
   4c33c:	103fda26 	beq	r2,zero,4c2a8 <__gethex+0xf8>
   4c340:	01800644 	movi	r6,25
   4c344:	30bfd816 	blt	r6,r2,4c2a8 <__gethex+0xf8>
   4c348:	28c00043 	ldbu	r3,1(r5)
   4c34c:	113ffc04 	addi	r4,r2,-16
   4c350:	00800174 	movhi	r2,5
   4c354:	1098a004 	addi	r2,r2,25216
   4c358:	1887883a 	add	r3,r3,r2
   4c35c:	18800003 	ldbu	r2,0(r3)
   4c360:	2c400044 	addi	r17,r5,1
   4c364:	10001126 	beq	r2,zero,4c3ac <__gethex+0x1fc>
   4c368:	1021883a 	mov	r16,r2
   4c36c:	30800f16 	blt	r6,r2,4c3ac <__gethex+0x1fc>
   4c370:	3029883a 	mov	r20,r6
   4c374:	00000106 	br	4c37c <__gethex+0x1cc>
   4c378:	a0800c16 	blt	r20,r2,4c3ac <__gethex+0x1fc>
   4c37c:	8c400044 	addi	r17,r17,1
   4c380:	01400284 	movi	r5,10
   4c384:	d9c00415 	stw	r7,16(sp)
   4c388:	004f1100 	call	4f110 <__mulsi3>
   4c38c:	88c00003 	ldbu	r3,0(r17)
   4c390:	1405883a 	add	r2,r2,r16
   4c394:	113ffc04 	addi	r4,r2,-16
   4c398:	1cc7883a 	add	r3,r3,r19
   4c39c:	18800003 	ldbu	r2,0(r3)
   4c3a0:	d9c00417 	ldw	r7,16(sp)
   4c3a4:	1021883a 	mov	r16,r2
   4c3a8:	103ff31e 	bne	r2,zero,4c378 <__gethex+0x1c8>
   4c3ac:	b805003a 	cmpeq	r2,r23,zero
   4c3b0:	1000011e 	bne	r2,zero,4c3b8 <__gethex+0x208>
   4c3b4:	0109c83a 	sub	r4,zero,r4
   4c3b8:	d8800017 	ldw	r2,0(sp)
   4c3bc:	1105883a 	add	r2,r2,r4
   4c3c0:	d8800015 	stw	r2,0(sp)
   4c3c4:	003fb906 	br	4c2ac <__gethex+0xfc>
   4c3c8:	04800184 	movi	r18,6
   4c3cc:	003fbc06 	br	4c2c0 <__gethex+0x110>
   4c3d0:	004c0980 	call	4c098 <__hexdig_init>
   4c3d4:	e1800017 	ldw	r6,0(fp)
   4c3d8:	00800c04 	movi	r2,48
   4c3dc:	31000083 	ldbu	r4,2(r6)
   4c3e0:	30c00084 	addi	r3,r6,2
   4c3e4:	20bf8a26 	beq	r4,r2,4c210 <__gethex+0x60>
   4c3e8:	180b883a 	mov	r5,r3
   4c3ec:	000f883a 	mov	r7,zero
   4c3f0:	003f8f06 	br	4c230 <__gethex+0x80>
   4c3f4:	303fa11e 	bne	r6,zero,4c27c <__gethex+0xcc>
   4c3f8:	29400044 	addi	r5,r5,1
   4c3fc:	28800003 	ldbu	r2,0(r5)
   4c400:	14c5883a 	add	r2,r2,r19
   4c404:	10c00003 	ldbu	r3,0(r2)
   4c408:	1800b526 	beq	r3,zero,4c6e0 <__gethex+0x530>
   4c40c:	2809883a 	mov	r4,r5
   4c410:	21000044 	addi	r4,r4,1
   4c414:	20800003 	ldbu	r2,0(r4)
   4c418:	14c5883a 	add	r2,r2,r19
   4c41c:	10c00003 	ldbu	r3,0(r2)
   4c420:	183ffb1e 	bne	r3,zero,4c410 <__gethex+0x260>
   4c424:	2145c83a 	sub	r2,r4,r5
   4c428:	1085883a 	add	r2,r2,r2
   4c42c:	1085883a 	add	r2,r2,r2
   4c430:	0085c83a 	sub	r2,zero,r2
   4c434:	200b883a 	mov	r5,r4
   4c438:	d8800015 	stw	r2,0(sp)
   4c43c:	003f9406 	br	4c290 <__gethex+0xe0>
   4c440:	29000043 	ldbu	r4,1(r5)
   4c444:	00800174 	movhi	r2,5
   4c448:	1098a004 	addi	r2,r2,25216
   4c44c:	2c800044 	addi	r18,r5,1
   4c450:	2085883a 	add	r2,r4,r2
   4c454:	10c00003 	ldbu	r3,0(r2)
   4c458:	18000d1e 	bne	r3,zero,4c490 <__gethex+0x2e0>
   4c45c:	282b883a 	mov	r21,r5
   4c460:	05800044 	movi	r22,1
   4c464:	d8000015 	stw	zero,0(sp)
   4c468:	003f8a06 	br	4c294 <__gethex+0xe4>
   4c46c:	002f883a 	mov	r23,zero
   4c470:	29400044 	addi	r5,r5,1
   4c474:	28c00003 	ldbu	r3,0(r5)
   4c478:	003fae06 	br	4c334 <__gethex+0x184>
   4c47c:	05c00044 	movi	r23,1
   4c480:	003ffb06 	br	4c470 <__gethex+0x2c0>
   4c484:	2825883a 	mov	r18,r5
   4c488:	d8000015 	stw	zero,0(sp)
   4c48c:	003f8106 	br	4c294 <__gethex+0xe4>
   4c490:	00800c04 	movi	r2,48
   4c494:	20800e1e 	bne	r4,r2,4c4d0 <__gethex+0x320>
   4c498:	2007883a 	mov	r3,r4
   4c49c:	900b883a 	mov	r5,r18
   4c4a0:	29400044 	addi	r5,r5,1
   4c4a4:	29000003 	ldbu	r4,0(r5)
   4c4a8:	20803fcc 	andi	r2,r4,255
   4c4ac:	10fffc26 	beq	r2,r3,4c4a0 <__gethex+0x2f0>
   4c4b0:	14c5883a 	add	r2,r2,r19
   4c4b4:	10c00003 	ldbu	r3,0(r2)
   4c4b8:	1800071e 	bne	r3,zero,4c4d8 <__gethex+0x328>
   4c4bc:	01c00044 	movi	r7,1
   4c4c0:	900d883a 	mov	r6,r18
   4c4c4:	282b883a 	mov	r21,r5
   4c4c8:	382d883a 	mov	r22,r7
   4c4cc:	003f5f06 	br	4c24c <__gethex+0x9c>
   4c4d0:	91000003 	ldbu	r4,0(r18)
   4c4d4:	900b883a 	mov	r5,r18
   4c4d8:	900d883a 	mov	r6,r18
   4c4dc:	282b883a 	mov	r21,r5
   4c4e0:	01c00044 	movi	r7,1
   4c4e4:	002d883a 	mov	r22,zero
   4c4e8:	003f5806 	br	4c24c <__gethex+0x9c>
   4c4ec:	9545c83a 	sub	r2,r18,r21
   4c4f0:	10bfffc4 	addi	r2,r2,-1
   4c4f4:	00c001c4 	movi	r3,7
   4c4f8:	1880770e 	bge	r3,r2,4c6d8 <__gethex+0x528>
   4c4fc:	000b883a 	mov	r5,zero
   4c500:	1005d07a 	srai	r2,r2,1
   4c504:	29400044 	addi	r5,r5,1
   4c508:	18bffd16 	blt	r3,r2,4c500 <__gethex+0x350>
   4c50c:	d9000117 	ldw	r4,4(sp)
   4c510:	0047dc80 	call	47dc8 <_Balloc>
   4c514:	1029883a 	mov	r20,r2
   4c518:	15800504 	addi	r22,r2,20
   4c51c:	ac80562e 	bgeu	r21,r18,4c678 <__gethex+0x4c8>
   4c520:	900b883a 	mov	r5,r18
   4c524:	b011883a 	mov	r8,r22
   4c528:	000f883a 	mov	r7,zero
   4c52c:	0009883a 	mov	r4,zero
   4c530:	02400b84 	movi	r9,46
   4c534:	02800804 	movi	r10,32
   4c538:	297fffc4 	addi	r5,r5,-1
   4c53c:	28c00003 	ldbu	r3,0(r5)
   4c540:	1a400826 	beq	r3,r9,4c564 <__gethex+0x3b4>
   4c544:	380d883a 	mov	r6,r7
   4c548:	3a802a26 	beq	r7,r10,4c5f4 <__gethex+0x444>
   4c54c:	39c00104 	addi	r7,r7,4
   4c550:	1cc7883a 	add	r3,r3,r19
   4c554:	18800003 	ldbu	r2,0(r3)
   4c558:	108003cc 	andi	r2,r2,15
   4c55c:	1184983a 	sll	r2,r2,r6
   4c560:	2088b03a 	or	r4,r4,r2
   4c564:	a97ff436 	bltu	r21,r5,4c538 <__gethex+0x388>
   4c568:	40800104 	addi	r2,r8,4
   4c56c:	1585c83a 	sub	r2,r2,r22
   4c570:	1021d0ba 	srai	r16,r2,2
   4c574:	41000015 	stw	r4,0(r8)
   4c578:	a4000415 	stw	r16,16(r20)
   4c57c:	00478700 	call	47870 <__hi0bits>
   4c580:	d9000217 	ldw	r4,8(sp)
   4c584:	8006917a 	slli	r3,r16,5
   4c588:	24c00017 	ldw	r19,0(r4)
   4c58c:	1885c83a 	sub	r2,r3,r2
   4c590:	98801f16 	blt	r19,r2,4c610 <__gethex+0x460>
   4c594:	14c00c16 	blt	r2,r19,4c5c8 <__gethex+0x418>
   4c598:	002b883a 	mov	r21,zero
   4c59c:	d9000217 	ldw	r4,8(sp)
   4c5a0:	d8c00017 	ldw	r3,0(sp)
   4c5a4:	20800217 	ldw	r2,8(r4)
   4c5a8:	10c0360e 	bge	r2,r3,4c684 <__gethex+0x4d4>
   4c5ac:	d9000117 	ldw	r4,4(sp)
   4c5b0:	a00b883a 	mov	r5,r20
   4c5b4:	048028c4 	movi	r18,163
   4c5b8:	00478480 	call	47848 <_Bfree>
   4c5bc:	d9000f17 	ldw	r4,60(sp)
   4c5c0:	20000015 	stw	zero,0(r4)
   4c5c4:	003f3e06 	br	4c2c0 <__gethex+0x110>
   4c5c8:	d9000117 	ldw	r4,4(sp)
   4c5cc:	98a1c83a 	sub	r16,r19,r2
   4c5d0:	a00b883a 	mov	r5,r20
   4c5d4:	800d883a 	mov	r6,r16
   4c5d8:	004818c0 	call	4818c <__lshift>
   4c5dc:	d8c00017 	ldw	r3,0(sp)
   4c5e0:	1029883a 	mov	r20,r2
   4c5e4:	15800504 	addi	r22,r2,20
   4c5e8:	1c07c83a 	sub	r3,r3,r16
   4c5ec:	d8c00015 	stw	r3,0(sp)
   4c5f0:	003fe906 	br	4c598 <__gethex+0x3e8>
   4c5f4:	41000015 	stw	r4,0(r8)
   4c5f8:	28c00003 	ldbu	r3,0(r5)
   4c5fc:	01c00104 	movi	r7,4
   4c600:	000d883a 	mov	r6,zero
   4c604:	41d1883a 	add	r8,r8,r7
   4c608:	0009883a 	mov	r4,zero
   4c60c:	003fd006 	br	4c550 <__gethex+0x3a0>
   4c610:	14e1c83a 	sub	r16,r2,r19
   4c614:	a009883a 	mov	r4,r20
   4c618:	800b883a 	mov	r5,r16
   4c61c:	0047d400 	call	47d40 <__any_on>
   4c620:	1000081e 	bne	r2,zero,4c644 <__gethex+0x494>
   4c624:	002b883a 	mov	r21,zero
   4c628:	a009883a 	mov	r4,r20
   4c62c:	800b883a 	mov	r5,r16
   4c630:	004c1000 	call	4c100 <rshift>
   4c634:	d8800017 	ldw	r2,0(sp)
   4c638:	1405883a 	add	r2,r2,r16
   4c63c:	d8800015 	stw	r2,0(sp)
   4c640:	003fd606 	br	4c59c <__gethex+0x3ec>
   4c644:	817fffc4 	addi	r5,r16,-1
   4c648:	2805d17a 	srai	r2,r5,5
   4c64c:	290007cc 	andi	r4,r5,31
   4c650:	01800044 	movi	r6,1
   4c654:	1085883a 	add	r2,r2,r2
   4c658:	1085883a 	add	r2,r2,r2
   4c65c:	1585883a 	add	r2,r2,r22
   4c660:	3108983a 	sll	r4,r6,r4
   4c664:	10c00017 	ldw	r3,0(r2)
   4c668:	20c8703a 	and	r4,r4,r3
   4c66c:	20001e1e 	bne	r4,zero,4c6e8 <__gethex+0x538>
   4c670:	302b883a 	mov	r21,r6
   4c674:	003fec06 	br	4c628 <__gethex+0x478>
   4c678:	b011883a 	mov	r8,r22
   4c67c:	0009883a 	mov	r4,zero
   4c680:	003fb906 	br	4c568 <__gethex+0x3b8>
   4c684:	d8800217 	ldw	r2,8(sp)
   4c688:	d8c00017 	ldw	r3,0(sp)
   4c68c:	11000117 	ldw	r4,4(r2)
   4c690:	19001c16 	blt	r3,r4,4c704 <__gethex+0x554>
   4c694:	04800044 	movi	r18,1
   4c698:	a8000926 	beq	r21,zero,4c6c0 <__gethex+0x510>
   4c69c:	d8c00217 	ldw	r3,8(sp)
   4c6a0:	00800084 	movi	r2,2
   4c6a4:	19000317 	ldw	r4,12(r3)
   4c6a8:	20809826 	beq	r4,r2,4c90c <__gethex+0x75c>
   4c6ac:	008000c4 	movi	r2,3
   4c6b0:	20805b26 	beq	r4,r2,4c820 <__gethex+0x670>
   4c6b4:	00800044 	movi	r2,1
   4c6b8:	20804326 	beq	r4,r2,4c7c8 <__gethex+0x618>
   4c6bc:	94800414 	ori	r18,r18,16
   4c6c0:	d9000f17 	ldw	r4,60(sp)
   4c6c4:	d8800017 	ldw	r2,0(sp)
   4c6c8:	d8c00317 	ldw	r3,12(sp)
   4c6cc:	25000015 	stw	r20,0(r4)
   4c6d0:	18800015 	stw	r2,0(r3)
   4c6d4:	003efa06 	br	4c2c0 <__gethex+0x110>
   4c6d8:	000b883a 	mov	r5,zero
   4c6dc:	003f8b06 	br	4c50c <__gethex+0x35c>
   4c6e0:	d8000015 	stw	zero,0(sp)
   4c6e4:	003eea06 	br	4c290 <__gethex+0xe0>
   4c6e8:	3140180e 	bge	r6,r5,4c74c <__gethex+0x59c>
   4c6ec:	a009883a 	mov	r4,r20
   4c6f0:	817fff84 	addi	r5,r16,-2
   4c6f4:	0047d400 	call	47d40 <__any_on>
   4c6f8:	10001426 	beq	r2,zero,4c74c <__gethex+0x59c>
   4c6fc:	054000c4 	movi	r21,3
   4c700:	003fc906 	br	4c628 <__gethex+0x478>
   4c704:	d8800017 	ldw	r2,0(sp)
   4c708:	20a3c83a 	sub	r17,r4,r2
   4c70c:	8cc01116 	blt	r17,r19,4c754 <__gethex+0x5a4>
   4c710:	d8800217 	ldw	r2,8(sp)
   4c714:	10c00317 	ldw	r3,12(r2)
   4c718:	00800084 	movi	r2,2
   4c71c:	18809426 	beq	r3,r2,4c970 <__gethex+0x7c0>
   4c720:	008000c4 	movi	r2,3
   4c724:	18808f26 	beq	r3,r2,4c964 <__gethex+0x7b4>
   4c728:	00800044 	movi	r2,1
   4c72c:	18807c26 	beq	r3,r2,4c920 <__gethex+0x770>
   4c730:	d9000117 	ldw	r4,4(sp)
   4c734:	a00b883a 	mov	r5,r20
   4c738:	04801404 	movi	r18,80
   4c73c:	00478480 	call	47848 <_Bfree>
   4c740:	d9000f17 	ldw	r4,60(sp)
   4c744:	20000015 	stw	zero,0(r4)
   4c748:	003edd06 	br	4c2c0 <__gethex+0x110>
   4c74c:	05400084 	movi	r21,2
   4c750:	003fb506 	br	4c628 <__gethex+0x478>
   4c754:	8c3fffc4 	addi	r16,r17,-1
   4c758:	a8001526 	beq	r21,zero,4c7b0 <__gethex+0x600>
   4c75c:	05400044 	movi	r21,1
   4c760:	8005d17a 	srai	r2,r16,5
   4c764:	814007cc 	andi	r5,r16,31
   4c768:	00c00044 	movi	r3,1
   4c76c:	1085883a 	add	r2,r2,r2
   4c770:	1085883a 	add	r2,r2,r2
   4c774:	1585883a 	add	r2,r2,r22
   4c778:	1946983a 	sll	r3,r3,r5
   4c77c:	11000017 	ldw	r4,0(r2)
   4c780:	1906703a 	and	r3,r3,r4
   4c784:	18000126 	beq	r3,zero,4c78c <__gethex+0x5dc>
   4c788:	ad400094 	ori	r21,r21,2
   4c78c:	880b883a 	mov	r5,r17
   4c790:	a009883a 	mov	r4,r20
   4c794:	004c1000 	call	4c100 <rshift>
   4c798:	d8800217 	ldw	r2,8(sp)
   4c79c:	9c67c83a 	sub	r19,r19,r17
   4c7a0:	04800084 	movi	r18,2
   4c7a4:	10800117 	ldw	r2,4(r2)
   4c7a8:	d8800015 	stw	r2,0(sp)
   4c7ac:	003fba06 	br	4c698 <__gethex+0x4e8>
   4c7b0:	043feb0e 	bge	zero,r16,4c760 <__gethex+0x5b0>
   4c7b4:	a009883a 	mov	r4,r20
   4c7b8:	800b883a 	mov	r5,r16
   4c7bc:	0047d400 	call	47d40 <__any_on>
   4c7c0:	102b883a 	mov	r21,r2
   4c7c4:	003fe606 	br	4c760 <__gethex+0x5b0>
   4c7c8:	a880008c 	andi	r2,r21,2
   4c7cc:	103fbb26 	beq	r2,zero,4c6bc <__gethex+0x50c>
   4c7d0:	b0800017 	ldw	r2,0(r22)
   4c7d4:	a884b03a 	or	r2,r21,r2
   4c7d8:	1104703a 	and	r2,r2,r4
   4c7dc:	103fb726 	beq	r2,zero,4c6bc <__gethex+0x50c>
   4c7e0:	a4000417 	ldw	r16,16(r20)
   4c7e4:	b007883a 	mov	r3,r22
   4c7e8:	017fffc4 	movi	r5,-1
   4c7ec:	8405883a 	add	r2,r16,r16
   4c7f0:	10ab883a 	add	r21,r2,r2
   4c7f4:	802f883a 	mov	r23,r16
   4c7f8:	b549883a 	add	r4,r22,r21
   4c7fc:	00000306 	br	4c80c <__gethex+0x65c>
   4c800:	18000015 	stw	zero,0(r3)
   4c804:	18c00104 	addi	r3,r3,4
   4c808:	1900082e 	bgeu	r3,r4,4c82c <__gethex+0x67c>
   4c80c:	18800017 	ldw	r2,0(r3)
   4c810:	117ffb26 	beq	r2,r5,4c800 <__gethex+0x650>
   4c814:	10800044 	addi	r2,r2,1
   4c818:	18800015 	stw	r2,0(r3)
   4c81c:	00001e06 	br	4c898 <__gethex+0x6e8>
   4c820:	d8801017 	ldw	r2,64(sp)
   4c824:	103fa526 	beq	r2,zero,4c6bc <__gethex+0x50c>
   4c828:	003fed06 	br	4c7e0 <__gethex+0x630>
   4c82c:	a0800217 	ldw	r2,8(r20)
   4c830:	80801216 	blt	r16,r2,4c87c <__gethex+0x6cc>
   4c834:	a1400117 	ldw	r5,4(r20)
   4c838:	d9000117 	ldw	r4,4(sp)
   4c83c:	29400044 	addi	r5,r5,1
   4c840:	0047dc80 	call	47dc8 <_Balloc>
   4c844:	a1800417 	ldw	r6,16(r20)
   4c848:	a1400304 	addi	r5,r20,12
   4c84c:	11000304 	addi	r4,r2,12
   4c850:	318d883a 	add	r6,r6,r6
   4c854:	318d883a 	add	r6,r6,r6
   4c858:	31800204 	addi	r6,r6,8
   4c85c:	1023883a 	mov	r17,r2
   4c860:	00476300 	call	47630 <memcpy>
   4c864:	d9000117 	ldw	r4,4(sp)
   4c868:	a00b883a 	mov	r5,r20
   4c86c:	8d800504 	addi	r22,r17,20
   4c870:	00478480 	call	47848 <_Bfree>
   4c874:	8c000417 	ldw	r16,16(r17)
   4c878:	8829883a 	mov	r20,r17
   4c87c:	8405883a 	add	r2,r16,r16
   4c880:	1085883a 	add	r2,r2,r2
   4c884:	1505883a 	add	r2,r2,r20
   4c888:	84000044 	addi	r16,r16,1
   4c88c:	00c00044 	movi	r3,1
   4c890:	10c00515 	stw	r3,20(r2)
   4c894:	a4000415 	stw	r16,16(r20)
   4c898:	00800084 	movi	r2,2
   4c89c:	90801526 	beq	r18,r2,4c8f4 <__gethex+0x744>
   4c8a0:	bc000a16 	blt	r23,r16,4c8cc <__gethex+0x71c>
   4c8a4:	9c0007cc 	andi	r16,r19,31
   4c8a8:	8000021e 	bne	r16,zero,4c8b4 <__gethex+0x704>
   4c8ac:	94800814 	ori	r18,r18,32
   4c8b0:	003f8306 	br	4c6c0 <__gethex+0x510>
   4c8b4:	b545883a 	add	r2,r22,r21
   4c8b8:	113fff17 	ldw	r4,-4(r2)
   4c8bc:	00478700 	call	47870 <__hi0bits>
   4c8c0:	00c00804 	movi	r3,32
   4c8c4:	1c07c83a 	sub	r3,r3,r16
   4c8c8:	10fff80e 	bge	r2,r3,4c8ac <__gethex+0x6fc>
   4c8cc:	a009883a 	mov	r4,r20
   4c8d0:	01400044 	movi	r5,1
   4c8d4:	004c1000 	call	4c100 <rshift>
   4c8d8:	d9000217 	ldw	r4,8(sp)
   4c8dc:	d8c00017 	ldw	r3,0(sp)
   4c8e0:	20800217 	ldw	r2,8(r4)
   4c8e4:	18c00044 	addi	r3,r3,1
   4c8e8:	d8c00015 	stw	r3,0(sp)
   4c8ec:	10ff2f16 	blt	r2,r3,4c5ac <__gethex+0x3fc>
   4c8f0:	003fee06 	br	4c8ac <__gethex+0x6fc>
   4c8f4:	d8c00217 	ldw	r3,8(sp)
   4c8f8:	18800017 	ldw	r2,0(r3)
   4c8fc:	10bfffc4 	addi	r2,r2,-1
   4c900:	98801e26 	beq	r19,r2,4c97c <__gethex+0x7cc>
   4c904:	04800884 	movi	r18,34
   4c908:	003f6d06 	br	4c6c0 <__gethex+0x510>
   4c90c:	d9001017 	ldw	r4,64(sp)
   4c910:	00800044 	movi	r2,1
   4c914:	1105c83a 	sub	r2,r2,r4
   4c918:	103f6826 	beq	r2,zero,4c6bc <__gethex+0x50c>
   4c91c:	003fb006 	br	4c7e0 <__gethex+0x630>
   4c920:	9c7f831e 	bne	r19,r17,4c730 <__gethex+0x580>
   4c924:	1cc0060e 	bge	r3,r19,4c940 <__gethex+0x790>
   4c928:	98cbc83a 	sub	r5,r19,r3
   4c92c:	a009883a 	mov	r4,r20
   4c930:	0047d400 	call	47d40 <__any_on>
   4c934:	103f7e26 	beq	r2,zero,4c730 <__gethex+0x580>
   4c938:	d8c00217 	ldw	r3,8(sp)
   4c93c:	19000117 	ldw	r4,4(r3)
   4c940:	d8800317 	ldw	r2,12(sp)
   4c944:	d8c00f17 	ldw	r3,60(sp)
   4c948:	04000044 	movi	r16,1
   4c94c:	11000015 	stw	r4,0(r2)
   4c950:	04801884 	movi	r18,98
   4c954:	b4000015 	stw	r16,0(r22)
   4c958:	1d000015 	stw	r20,0(r3)
   4c95c:	a4000415 	stw	r16,16(r20)
   4c960:	003e5706 	br	4c2c0 <__gethex+0x110>
   4c964:	d8801017 	ldw	r2,64(sp)
   4c968:	103f7126 	beq	r2,zero,4c730 <__gethex+0x580>
   4c96c:	003ff406 	br	4c940 <__gethex+0x790>
   4c970:	d8c01017 	ldw	r3,64(sp)
   4c974:	183ff226 	beq	r3,zero,4c940 <__gethex+0x790>
   4c978:	003f6d06 	br	4c730 <__gethex+0x580>
   4c97c:	9805d17a 	srai	r2,r19,5
   4c980:	994007cc 	andi	r5,r19,31
   4c984:	00c00044 	movi	r3,1
   4c988:	1085883a 	add	r2,r2,r2
   4c98c:	1085883a 	add	r2,r2,r2
   4c990:	1585883a 	add	r2,r2,r22
   4c994:	1946983a 	sll	r3,r3,r5
   4c998:	11000017 	ldw	r4,0(r2)
   4c99c:	1906703a 	and	r3,r3,r4
   4c9a0:	183fd826 	beq	r3,zero,4c904 <__gethex+0x754>
   4c9a4:	04800844 	movi	r18,33
   4c9a8:	003f4506 	br	4c6c0 <__gethex+0x510>

0004c9ac <L_shift>:
   4c9ac:	00800204 	movi	r2,8
   4c9b0:	1185c83a 	sub	r2,r2,r6
   4c9b4:	1085883a 	add	r2,r2,r2
   4c9b8:	21c00017 	ldw	r7,0(r4)
   4c9bc:	1093883a 	add	r9,r2,r2
   4c9c0:	00800804 	movi	r2,32
   4c9c4:	200d883a 	mov	r6,r4
   4c9c8:	1251c83a 	sub	r8,r2,r9
   4c9cc:	31800104 	addi	r6,r6,4
   4c9d0:	3805883a 	mov	r2,r7
   4c9d4:	31c00017 	ldw	r7,0(r6)
   4c9d8:	3a08983a 	sll	r4,r7,r8
   4c9dc:	3a46d83a 	srl	r3,r7,r9
   4c9e0:	1104b03a 	or	r2,r2,r4
   4c9e4:	180f883a 	mov	r7,r3
   4c9e8:	30bfff15 	stw	r2,-4(r6)
   4c9ec:	30c00015 	stw	r3,0(r6)
   4c9f0:	317ff636 	bltu	r6,r5,4c9cc <L_shift+0x20>
   4c9f4:	f800283a 	ret

0004c9f8 <__hexnan>:
   4c9f8:	defff404 	addi	sp,sp,-48
   4c9fc:	dd800815 	stw	r22,32(sp)
   4ca00:	05800174 	movhi	r22,5
   4ca04:	b598a004 	addi	r22,r22,25216
   4ca08:	b0800c03 	ldbu	r2,48(r22)
   4ca0c:	dcc00515 	stw	r19,20(sp)
   4ca10:	dc000215 	stw	r16,8(sp)
   4ca14:	dfc00b15 	stw	ra,44(sp)
   4ca18:	df000a15 	stw	fp,40(sp)
   4ca1c:	ddc00915 	stw	r23,36(sp)
   4ca20:	dd400715 	stw	r21,28(sp)
   4ca24:	dd000615 	stw	r20,24(sp)
   4ca28:	dc800415 	stw	r18,16(sp)
   4ca2c:	dc400315 	stw	r17,12(sp)
   4ca30:	d9000115 	stw	r4,4(sp)
   4ca34:	2821883a 	mov	r16,r5
   4ca38:	3027883a 	mov	r19,r6
   4ca3c:	10007426 	beq	r2,zero,4cc10 <__hexnan+0x218>
   4ca40:	80c00017 	ldw	r3,0(r16)
   4ca44:	1805d17a 	srai	r2,r3,5
   4ca48:	18c007cc 	andi	r3,r3,31
   4ca4c:	1839003a 	cmpeq	fp,r3,zero
   4ca50:	1085883a 	add	r2,r2,r2
   4ca54:	1085883a 	add	r2,r2,r2
   4ca58:	d8c00015 	stw	r3,0(sp)
   4ca5c:	14c5883a 	add	r2,r2,r19
   4ca60:	e000011e 	bne	fp,zero,4ca68 <__hexnan+0x70>
   4ca64:	10800104 	addi	r2,r2,4
   4ca68:	d8c00117 	ldw	r3,4(sp)
   4ca6c:	153fff04 	addi	r20,r2,-4
   4ca70:	a021883a 	mov	r16,r20
   4ca74:	1c400017 	ldw	r17,0(r3)
   4ca78:	a02b883a 	mov	r21,r20
   4ca7c:	0025883a 	mov	r18,zero
   4ca80:	002f883a 	mov	r23,zero
   4ca84:	000d883a 	mov	r6,zero
   4ca88:	103fff15 	stw	zero,-4(r2)
   4ca8c:	8c400044 	addi	r17,r17,1
   4ca90:	89000003 	ldbu	r4,0(r17)
   4ca94:	20000e26 	beq	r4,zero,4cad0 <__hexnan+0xd8>
   4ca98:	2585883a 	add	r2,r4,r22
   4ca9c:	10c00003 	ldbu	r3,0(r2)
   4caa0:	18002e1e 	bne	r3,zero,4cb5c <__hexnan+0x164>
   4caa4:	00800804 	movi	r2,32
   4caa8:	11005536 	bltu	r2,r4,4cc00 <__hexnan+0x208>
   4caac:	bcbff70e 	bge	r23,r18,4ca8c <__hexnan+0x94>
   4cab0:	8540022e 	bgeu	r16,r21,4cabc <__hexnan+0xc4>
   4cab4:	008001c4 	movi	r2,7
   4cab8:	11803c0e 	bge	r2,r6,4cbac <__hexnan+0x1b4>
   4cabc:	9c003536 	bltu	r19,r16,4cb94 <__hexnan+0x19c>
   4cac0:	8c400044 	addi	r17,r17,1
   4cac4:	89000003 	ldbu	r4,0(r17)
   4cac8:	01800204 	movi	r6,8
   4cacc:	203ff21e 	bne	r4,zero,4ca98 <__hexnan+0xa0>
   4cad0:	90004d26 	beq	r18,zero,4cc08 <__hexnan+0x210>
   4cad4:	85404336 	bltu	r16,r21,4cbe4 <__hexnan+0x1ec>
   4cad8:	9c00382e 	bgeu	r19,r16,4cbbc <__hexnan+0x1c4>
   4cadc:	9807883a 	mov	r3,r19
   4cae0:	80800017 	ldw	r2,0(r16)
   4cae4:	84000104 	addi	r16,r16,4
   4cae8:	18800015 	stw	r2,0(r3)
   4caec:	18c00104 	addi	r3,r3,4
   4caf0:	a43ffb2e 	bgeu	r20,r16,4cae0 <__hexnan+0xe8>
   4caf4:	18000015 	stw	zero,0(r3)
   4caf8:	18c00104 	addi	r3,r3,4
   4cafc:	a0fffd2e 	bgeu	r20,r3,4caf4 <__hexnan+0xfc>
   4cb00:	a0800017 	ldw	r2,0(r20)
   4cb04:	1000071e 	bne	r2,zero,4cb24 <__hexnan+0x12c>
   4cb08:	9d004326 	beq	r19,r20,4cc18 <__hexnan+0x220>
   4cb0c:	a007883a 	mov	r3,r20
   4cb10:	00000106 	br	4cb18 <__hexnan+0x120>
   4cb14:	98c04026 	beq	r19,r3,4cc18 <__hexnan+0x220>
   4cb18:	18ffff04 	addi	r3,r3,-4
   4cb1c:	18800017 	ldw	r2,0(r3)
   4cb20:	103ffc26 	beq	r2,zero,4cb14 <__hexnan+0x11c>
   4cb24:	00c00144 	movi	r3,5
   4cb28:	1805883a 	mov	r2,r3
   4cb2c:	dfc00b17 	ldw	ra,44(sp)
   4cb30:	df000a17 	ldw	fp,40(sp)
   4cb34:	ddc00917 	ldw	r23,36(sp)
   4cb38:	dd800817 	ldw	r22,32(sp)
   4cb3c:	dd400717 	ldw	r21,28(sp)
   4cb40:	dd000617 	ldw	r20,24(sp)
   4cb44:	dcc00517 	ldw	r19,20(sp)
   4cb48:	dc800417 	ldw	r18,16(sp)
   4cb4c:	dc400317 	ldw	r17,12(sp)
   4cb50:	dc000217 	ldw	r16,8(sp)
   4cb54:	dec00c04 	addi	sp,sp,48
   4cb58:	f800283a 	ret
   4cb5c:	31800044 	addi	r6,r6,1
   4cb60:	00800204 	movi	r2,8
   4cb64:	94800044 	addi	r18,r18,1
   4cb68:	1180040e 	bge	r2,r6,4cb7c <__hexnan+0x184>
   4cb6c:	9c3fc72e 	bgeu	r19,r16,4ca8c <__hexnan+0x94>
   4cb70:	843fff04 	addi	r16,r16,-4
   4cb74:	80000015 	stw	zero,0(r16)
   4cb78:	01800044 	movi	r6,1
   4cb7c:	80800017 	ldw	r2,0(r16)
   4cb80:	18c003cc 	andi	r3,r3,15
   4cb84:	1004913a 	slli	r2,r2,4
   4cb88:	10c4b03a 	or	r2,r2,r3
   4cb8c:	80800015 	stw	r2,0(r16)
   4cb90:	003fbe06 	br	4ca8c <__hexnan+0x94>
   4cb94:	843fff04 	addi	r16,r16,-4
   4cb98:	802b883a 	mov	r21,r16
   4cb9c:	902f883a 	mov	r23,r18
   4cba0:	000d883a 	mov	r6,zero
   4cba4:	80000015 	stw	zero,0(r16)
   4cba8:	003fb806 	br	4ca8c <__hexnan+0x94>
   4cbac:	8009883a 	mov	r4,r16
   4cbb0:	a80b883a 	mov	r5,r21
   4cbb4:	004c9ac0 	call	4c9ac <L_shift>
   4cbb8:	003fc006 	br	4cabc <__hexnan+0xc4>
   4cbbc:	e03fd01e 	bne	fp,zero,4cb00 <__hexnan+0x108>
   4cbc0:	d8c00017 	ldw	r3,0(sp)
   4cbc4:	00800804 	movi	r2,32
   4cbc8:	10c5c83a 	sub	r2,r2,r3
   4cbcc:	00ffffc4 	movi	r3,-1
   4cbd0:	1886d83a 	srl	r3,r3,r2
   4cbd4:	a0800017 	ldw	r2,0(r20)
   4cbd8:	10c4703a 	and	r2,r2,r3
   4cbdc:	a0800015 	stw	r2,0(r20)
   4cbe0:	003fc806 	br	4cb04 <__hexnan+0x10c>
   4cbe4:	008001c4 	movi	r2,7
   4cbe8:	11bfbb16 	blt	r2,r6,4cad8 <__hexnan+0xe0>
   4cbec:	a80b883a 	mov	r5,r21
   4cbf0:	8009883a 	mov	r4,r16
   4cbf4:	004c9ac0 	call	4c9ac <L_shift>
   4cbf8:	9c3ff02e 	bgeu	r19,r16,4cbbc <__hexnan+0x1c4>
   4cbfc:	003fb706 	br	4cadc <__hexnan+0xe4>
   4cc00:	00800a44 	movi	r2,41
   4cc04:	20800826 	beq	r4,r2,4cc28 <__hexnan+0x230>
   4cc08:	00c00104 	movi	r3,4
   4cc0c:	003fc606 	br	4cb28 <__hexnan+0x130>
   4cc10:	004c0980 	call	4c098 <__hexdig_init>
   4cc14:	003f8a06 	br	4ca40 <__hexnan+0x48>
   4cc18:	00800044 	movi	r2,1
   4cc1c:	00c00144 	movi	r3,5
   4cc20:	98800015 	stw	r2,0(r19)
   4cc24:	003fc006 	br	4cb28 <__hexnan+0x130>
   4cc28:	903ff726 	beq	r18,zero,4cc08 <__hexnan+0x210>
   4cc2c:	d8c00117 	ldw	r3,4(sp)
   4cc30:	88800044 	addi	r2,r17,1
   4cc34:	18800015 	stw	r2,0(r3)
   4cc38:	857fa72e 	bgeu	r16,r21,4cad8 <__hexnan+0xe0>
   4cc3c:	003fe906 	br	4cbe4 <__hexnan+0x1ec>

0004cc40 <_isatty_r>:
   4cc40:	defffd04 	addi	sp,sp,-12
   4cc44:	dc000015 	stw	r16,0(sp)
   4cc48:	04000174 	movhi	r16,5
   4cc4c:	84188f04 	addi	r16,r16,25148
   4cc50:	dc400115 	stw	r17,4(sp)
   4cc54:	80000015 	stw	zero,0(r16)
   4cc58:	2023883a 	mov	r17,r4
   4cc5c:	2809883a 	mov	r4,r5
   4cc60:	dfc00215 	stw	ra,8(sp)
   4cc64:	004fc9c0 	call	4fc9c <isatty>
   4cc68:	1007883a 	mov	r3,r2
   4cc6c:	00bfffc4 	movi	r2,-1
   4cc70:	18800626 	beq	r3,r2,4cc8c <_isatty_r+0x4c>
   4cc74:	1805883a 	mov	r2,r3
   4cc78:	dfc00217 	ldw	ra,8(sp)
   4cc7c:	dc400117 	ldw	r17,4(sp)
   4cc80:	dc000017 	ldw	r16,0(sp)
   4cc84:	dec00304 	addi	sp,sp,12
   4cc88:	f800283a 	ret
   4cc8c:	80800017 	ldw	r2,0(r16)
   4cc90:	103ff826 	beq	r2,zero,4cc74 <_isatty_r+0x34>
   4cc94:	88800015 	stw	r2,0(r17)
   4cc98:	1805883a 	mov	r2,r3
   4cc9c:	dfc00217 	ldw	ra,8(sp)
   4cca0:	dc400117 	ldw	r17,4(sp)
   4cca4:	dc000017 	ldw	r16,0(sp)
   4cca8:	dec00304 	addi	sp,sp,12
   4ccac:	f800283a 	ret

0004ccb0 <_lseek_r>:
   4ccb0:	defffd04 	addi	sp,sp,-12
   4ccb4:	dc000015 	stw	r16,0(sp)
   4ccb8:	04000174 	movhi	r16,5
   4ccbc:	84188f04 	addi	r16,r16,25148
   4ccc0:	dc400115 	stw	r17,4(sp)
   4ccc4:	80000015 	stw	zero,0(r16)
   4ccc8:	2023883a 	mov	r17,r4
   4cccc:	2809883a 	mov	r4,r5
   4ccd0:	300b883a 	mov	r5,r6
   4ccd4:	380d883a 	mov	r6,r7
   4ccd8:	dfc00215 	stw	ra,8(sp)
   4ccdc:	004feac0 	call	4feac <lseek>
   4cce0:	1007883a 	mov	r3,r2
   4cce4:	00bfffc4 	movi	r2,-1
   4cce8:	18800626 	beq	r3,r2,4cd04 <_lseek_r+0x54>
   4ccec:	1805883a 	mov	r2,r3
   4ccf0:	dfc00217 	ldw	ra,8(sp)
   4ccf4:	dc400117 	ldw	r17,4(sp)
   4ccf8:	dc000017 	ldw	r16,0(sp)
   4ccfc:	dec00304 	addi	sp,sp,12
   4cd00:	f800283a 	ret
   4cd04:	80800017 	ldw	r2,0(r16)
   4cd08:	103ff826 	beq	r2,zero,4ccec <_lseek_r+0x3c>
   4cd0c:	88800015 	stw	r2,0(r17)
   4cd10:	1805883a 	mov	r2,r3
   4cd14:	dfc00217 	ldw	ra,8(sp)
   4cd18:	dc400117 	ldw	r17,4(sp)
   4cd1c:	dc000017 	ldw	r16,0(sp)
   4cd20:	dec00304 	addi	sp,sp,12
   4cd24:	f800283a 	ret

0004cd28 <_read_r>:
   4cd28:	defffd04 	addi	sp,sp,-12
   4cd2c:	dc000015 	stw	r16,0(sp)
   4cd30:	04000174 	movhi	r16,5
   4cd34:	84188f04 	addi	r16,r16,25148
   4cd38:	dc400115 	stw	r17,4(sp)
   4cd3c:	80000015 	stw	zero,0(r16)
   4cd40:	2023883a 	mov	r17,r4
   4cd44:	2809883a 	mov	r4,r5
   4cd48:	300b883a 	mov	r5,r6
   4cd4c:	380d883a 	mov	r6,r7
   4cd50:	dfc00215 	stw	ra,8(sp)
   4cd54:	00500ac0 	call	500ac <read>
   4cd58:	1007883a 	mov	r3,r2
   4cd5c:	00bfffc4 	movi	r2,-1
   4cd60:	18800626 	beq	r3,r2,4cd7c <_read_r+0x54>
   4cd64:	1805883a 	mov	r2,r3
   4cd68:	dfc00217 	ldw	ra,8(sp)
   4cd6c:	dc400117 	ldw	r17,4(sp)
   4cd70:	dc000017 	ldw	r16,0(sp)
   4cd74:	dec00304 	addi	sp,sp,12
   4cd78:	f800283a 	ret
   4cd7c:	80800017 	ldw	r2,0(r16)
   4cd80:	103ff826 	beq	r2,zero,4cd64 <_read_r+0x3c>
   4cd84:	88800015 	stw	r2,0(r17)
   4cd88:	1805883a 	mov	r2,r3
   4cd8c:	dfc00217 	ldw	ra,8(sp)
   4cd90:	dc400117 	ldw	r17,4(sp)
   4cd94:	dc000017 	ldw	r16,0(sp)
   4cd98:	dec00304 	addi	sp,sp,12
   4cd9c:	f800283a 	ret

0004cda0 <__muldi3>:
   4cda0:	defff204 	addi	sp,sp,-56
   4cda4:	df000c15 	stw	fp,48(sp)
   4cda8:	3038d43a 	srli	fp,r6,16
   4cdac:	dd000815 	stw	r20,32(sp)
   4cdb0:	dc400515 	stw	r17,20(sp)
   4cdb4:	2028d43a 	srli	r20,r4,16
   4cdb8:	247fffcc 	andi	r17,r4,65535
   4cdbc:	dc000415 	stw	r16,16(sp)
   4cdc0:	343fffcc 	andi	r16,r6,65535
   4cdc4:	dcc00715 	stw	r19,28(sp)
   4cdc8:	d9000015 	stw	r4,0(sp)
   4cdcc:	2827883a 	mov	r19,r5
   4cdd0:	8809883a 	mov	r4,r17
   4cdd4:	d9400115 	stw	r5,4(sp)
   4cdd8:	800b883a 	mov	r5,r16
   4cddc:	d9800215 	stw	r6,8(sp)
   4cde0:	dfc00d15 	stw	ra,52(sp)
   4cde4:	d9c00315 	stw	r7,12(sp)
   4cde8:	dd800a15 	stw	r22,40(sp)
   4cdec:	dd400915 	stw	r21,36(sp)
   4cdf0:	302d883a 	mov	r22,r6
   4cdf4:	ddc00b15 	stw	r23,44(sp)
   4cdf8:	dc800615 	stw	r18,24(sp)
   4cdfc:	004f1100 	call	4f110 <__mulsi3>
   4ce00:	8809883a 	mov	r4,r17
   4ce04:	e00b883a 	mov	r5,fp
   4ce08:	102b883a 	mov	r21,r2
   4ce0c:	004f1100 	call	4f110 <__mulsi3>
   4ce10:	800b883a 	mov	r5,r16
   4ce14:	a009883a 	mov	r4,r20
   4ce18:	1023883a 	mov	r17,r2
   4ce1c:	004f1100 	call	4f110 <__mulsi3>
   4ce20:	a009883a 	mov	r4,r20
   4ce24:	e00b883a 	mov	r5,fp
   4ce28:	1021883a 	mov	r16,r2
   4ce2c:	004f1100 	call	4f110 <__mulsi3>
   4ce30:	a8ffffcc 	andi	r3,r21,65535
   4ce34:	a82ad43a 	srli	r21,r21,16
   4ce38:	8c23883a 	add	r17,r17,r16
   4ce3c:	1011883a 	mov	r8,r2
   4ce40:	ac6b883a 	add	r21,r21,r17
   4ce44:	a804943a 	slli	r2,r21,16
   4ce48:	b009883a 	mov	r4,r22
   4ce4c:	980b883a 	mov	r5,r19
   4ce50:	10c7883a 	add	r3,r2,r3
   4ce54:	a812d43a 	srli	r9,r21,16
   4ce58:	180d883a 	mov	r6,r3
   4ce5c:	ac00022e 	bgeu	r21,r16,4ce68 <__muldi3+0xc8>
   4ce60:	00800074 	movhi	r2,1
   4ce64:	4091883a 	add	r8,r8,r2
   4ce68:	4267883a 	add	r19,r8,r9
   4ce6c:	302d883a 	mov	r22,r6
   4ce70:	004f1100 	call	4f110 <__mulsi3>
   4ce74:	d9400317 	ldw	r5,12(sp)
   4ce78:	d9000017 	ldw	r4,0(sp)
   4ce7c:	1023883a 	mov	r17,r2
   4ce80:	004f1100 	call	4f110 <__mulsi3>
   4ce84:	14cb883a 	add	r5,r2,r19
   4ce88:	894b883a 	add	r5,r17,r5
   4ce8c:	b005883a 	mov	r2,r22
   4ce90:	2807883a 	mov	r3,r5
   4ce94:	dfc00d17 	ldw	ra,52(sp)
   4ce98:	df000c17 	ldw	fp,48(sp)
   4ce9c:	ddc00b17 	ldw	r23,44(sp)
   4cea0:	dd800a17 	ldw	r22,40(sp)
   4cea4:	dd400917 	ldw	r21,36(sp)
   4cea8:	dd000817 	ldw	r20,32(sp)
   4ceac:	dcc00717 	ldw	r19,28(sp)
   4ceb0:	dc800617 	ldw	r18,24(sp)
   4ceb4:	dc400517 	ldw	r17,20(sp)
   4ceb8:	dc000417 	ldw	r16,16(sp)
   4cebc:	dec00e04 	addi	sp,sp,56
   4cec0:	f800283a 	ret

0004cec4 <__fixunsdfsi>:
   4cec4:	defffb04 	addi	sp,sp,-20
   4cec8:	dc400115 	stw	r17,4(sp)
   4cecc:	dc000015 	stw	r16,0(sp)
   4ced0:	04507834 	movhi	r17,16864
   4ced4:	0021883a 	mov	r16,zero
   4ced8:	800d883a 	mov	r6,r16
   4cedc:	880f883a 	mov	r7,r17
   4cee0:	dcc00315 	stw	r19,12(sp)
   4cee4:	dc800215 	stw	r18,8(sp)
   4cee8:	2827883a 	mov	r19,r5
   4ceec:	2025883a 	mov	r18,r4
   4cef0:	dfc00415 	stw	ra,16(sp)
   4cef4:	004ea540 	call	4ea54 <__gedf2>
   4cef8:	000d883a 	mov	r6,zero
   4cefc:	880f883a 	mov	r7,r17
   4cf00:	980b883a 	mov	r5,r19
   4cf04:	9009883a 	mov	r4,r18
   4cf08:	10000d16 	blt	r2,zero,4cf40 <__fixunsdfsi+0x7c>
   4cf0c:	004e1ac0 	call	4e1ac <__subdf3>
   4cf10:	180b883a 	mov	r5,r3
   4cf14:	1009883a 	mov	r4,r2
   4cf18:	004ece40 	call	4ece4 <__fixdfsi>
   4cf1c:	00e00034 	movhi	r3,32768
   4cf20:	10c5883a 	add	r2,r2,r3
   4cf24:	dfc00417 	ldw	ra,16(sp)
   4cf28:	dcc00317 	ldw	r19,12(sp)
   4cf2c:	dc800217 	ldw	r18,8(sp)
   4cf30:	dc400117 	ldw	r17,4(sp)
   4cf34:	dc000017 	ldw	r16,0(sp)
   4cf38:	dec00504 	addi	sp,sp,20
   4cf3c:	f800283a 	ret
   4cf40:	980b883a 	mov	r5,r19
   4cf44:	9009883a 	mov	r4,r18
   4cf48:	004ece40 	call	4ece4 <__fixdfsi>
   4cf4c:	dfc00417 	ldw	ra,16(sp)
   4cf50:	dcc00317 	ldw	r19,12(sp)
   4cf54:	dc800217 	ldw	r18,8(sp)
   4cf58:	dc400117 	ldw	r17,4(sp)
   4cf5c:	dc000017 	ldw	r16,0(sp)
   4cf60:	dec00504 	addi	sp,sp,20
   4cf64:	f800283a 	ret

0004cf68 <__udivdi3>:
   4cf68:	defff104 	addi	sp,sp,-60
   4cf6c:	0015883a 	mov	r10,zero
   4cf70:	2005883a 	mov	r2,r4
   4cf74:	3011883a 	mov	r8,r6
   4cf78:	df000d15 	stw	fp,52(sp)
   4cf7c:	dd400a15 	stw	r21,40(sp)
   4cf80:	dcc00815 	stw	r19,32(sp)
   4cf84:	dfc00e15 	stw	ra,56(sp)
   4cf88:	ddc00c15 	stw	r23,48(sp)
   4cf8c:	dd800b15 	stw	r22,44(sp)
   4cf90:	dd000915 	stw	r20,36(sp)
   4cf94:	dc800715 	stw	r18,28(sp)
   4cf98:	dc400615 	stw	r17,24(sp)
   4cf9c:	dc000515 	stw	r16,20(sp)
   4cfa0:	da800315 	stw	r10,12(sp)
   4cfa4:	4027883a 	mov	r19,r8
   4cfa8:	1039883a 	mov	fp,r2
   4cfac:	282b883a 	mov	r21,r5
   4cfb0:	da800415 	stw	r10,16(sp)
   4cfb4:	3800401e 	bne	r7,zero,4d0b8 <__udivdi3+0x150>
   4cfb8:	2a006536 	bltu	r5,r8,4d150 <__udivdi3+0x1e8>
   4cfbc:	4000b526 	beq	r8,zero,4d294 <__udivdi3+0x32c>
   4cfc0:	00bfffd4 	movui	r2,65535
   4cfc4:	14c0ad36 	bltu	r2,r19,4d27c <__udivdi3+0x314>
   4cfc8:	00803fc4 	movi	r2,255
   4cfcc:	14c15e36 	bltu	r2,r19,4d548 <__udivdi3+0x5e0>
   4cfd0:	000b883a 	mov	r5,zero
   4cfd4:	0005883a 	mov	r2,zero
   4cfd8:	9884d83a 	srl	r2,r19,r2
   4cfdc:	01000174 	movhi	r4,5
   4cfe0:	210af804 	addi	r4,r4,11232
   4cfe4:	01800804 	movi	r6,32
   4cfe8:	1105883a 	add	r2,r2,r4
   4cfec:	10c00003 	ldbu	r3,0(r2)
   4cff0:	28c7883a 	add	r3,r5,r3
   4cff4:	30e9c83a 	sub	r20,r6,r3
   4cff8:	a0010a1e 	bne	r20,zero,4d424 <__udivdi3+0x4bc>
   4cffc:	982ed43a 	srli	r23,r19,16
   4d000:	acebc83a 	sub	r21,r21,r19
   4d004:	9dbfffcc 	andi	r22,r19,65535
   4d008:	05000044 	movi	r20,1
   4d00c:	a809883a 	mov	r4,r21
   4d010:	b80b883a 	mov	r5,r23
   4d014:	004f1000 	call	4f100 <__udivsi3>
   4d018:	100b883a 	mov	r5,r2
   4d01c:	b009883a 	mov	r4,r22
   4d020:	1021883a 	mov	r16,r2
   4d024:	004f1100 	call	4f110 <__mulsi3>
   4d028:	a809883a 	mov	r4,r21
   4d02c:	b80b883a 	mov	r5,r23
   4d030:	1023883a 	mov	r17,r2
   4d034:	004f1080 	call	4f108 <__umodsi3>
   4d038:	1004943a 	slli	r2,r2,16
   4d03c:	e006d43a 	srli	r3,fp,16
   4d040:	10c4b03a 	or	r2,r2,r3
   4d044:	1440042e 	bgeu	r2,r17,4d058 <__udivdi3+0xf0>
   4d048:	14c5883a 	add	r2,r2,r19
   4d04c:	843fffc4 	addi	r16,r16,-1
   4d050:	14c00136 	bltu	r2,r19,4d058 <__udivdi3+0xf0>
   4d054:	14415c36 	bltu	r2,r17,4d5c8 <__udivdi3+0x660>
   4d058:	1463c83a 	sub	r17,r2,r17
   4d05c:	8809883a 	mov	r4,r17
   4d060:	b80b883a 	mov	r5,r23
   4d064:	004f1000 	call	4f100 <__udivsi3>
   4d068:	100b883a 	mov	r5,r2
   4d06c:	b009883a 	mov	r4,r22
   4d070:	102b883a 	mov	r21,r2
   4d074:	004f1100 	call	4f110 <__mulsi3>
   4d078:	8809883a 	mov	r4,r17
   4d07c:	b80b883a 	mov	r5,r23
   4d080:	1025883a 	mov	r18,r2
   4d084:	004f1080 	call	4f108 <__umodsi3>
   4d088:	1004943a 	slli	r2,r2,16
   4d08c:	e0ffffcc 	andi	r3,fp,65535
   4d090:	10c4b03a 	or	r2,r2,r3
   4d094:	1480042e 	bgeu	r2,r18,4d0a8 <__udivdi3+0x140>
   4d098:	9885883a 	add	r2,r19,r2
   4d09c:	ad7fffc4 	addi	r21,r21,-1
   4d0a0:	14c00136 	bltu	r2,r19,4d0a8 <__udivdi3+0x140>
   4d0a4:	14813c36 	bltu	r2,r18,4d598 <__udivdi3+0x630>
   4d0a8:	8004943a 	slli	r2,r16,16
   4d0ac:	a009883a 	mov	r4,r20
   4d0b0:	a884b03a 	or	r2,r21,r2
   4d0b4:	00001506 	br	4d10c <__udivdi3+0x1a4>
   4d0b8:	380d883a 	mov	r6,r7
   4d0bc:	29c06c36 	bltu	r5,r7,4d270 <__udivdi3+0x308>
   4d0c0:	00bfffd4 	movui	r2,65535
   4d0c4:	11c06436 	bltu	r2,r7,4d258 <__udivdi3+0x2f0>
   4d0c8:	00803fc4 	movi	r2,255
   4d0cc:	11c11836 	bltu	r2,r7,4d530 <__udivdi3+0x5c8>
   4d0d0:	000b883a 	mov	r5,zero
   4d0d4:	0005883a 	mov	r2,zero
   4d0d8:	3084d83a 	srl	r2,r6,r2
   4d0dc:	01000174 	movhi	r4,5
   4d0e0:	210af804 	addi	r4,r4,11232
   4d0e4:	01c00804 	movi	r7,32
   4d0e8:	1105883a 	add	r2,r2,r4
   4d0ec:	10c00003 	ldbu	r3,0(r2)
   4d0f0:	28c7883a 	add	r3,r5,r3
   4d0f4:	38edc83a 	sub	r22,r7,r3
   4d0f8:	b000731e 	bne	r22,zero,4d2c8 <__udivdi3+0x360>
   4d0fc:	35400136 	bltu	r6,r21,4d104 <__udivdi3+0x19c>
   4d100:	e4c05b36 	bltu	fp,r19,4d270 <__udivdi3+0x308>
   4d104:	00800044 	movi	r2,1
   4d108:	0009883a 	mov	r4,zero
   4d10c:	d8800315 	stw	r2,12(sp)
   4d110:	d9400317 	ldw	r5,12(sp)
   4d114:	2007883a 	mov	r3,r4
   4d118:	d9000415 	stw	r4,16(sp)
   4d11c:	2805883a 	mov	r2,r5
   4d120:	dfc00e17 	ldw	ra,56(sp)
   4d124:	df000d17 	ldw	fp,52(sp)
   4d128:	ddc00c17 	ldw	r23,48(sp)
   4d12c:	dd800b17 	ldw	r22,44(sp)
   4d130:	dd400a17 	ldw	r21,40(sp)
   4d134:	dd000917 	ldw	r20,36(sp)
   4d138:	dcc00817 	ldw	r19,32(sp)
   4d13c:	dc800717 	ldw	r18,28(sp)
   4d140:	dc400617 	ldw	r17,24(sp)
   4d144:	dc000517 	ldw	r16,20(sp)
   4d148:	dec00f04 	addi	sp,sp,60
   4d14c:	f800283a 	ret
   4d150:	00bfffd4 	movui	r2,65535
   4d154:	12005636 	bltu	r2,r8,4d2b0 <__udivdi3+0x348>
   4d158:	00803fc4 	movi	r2,255
   4d15c:	12010036 	bltu	r2,r8,4d560 <__udivdi3+0x5f8>
   4d160:	000b883a 	mov	r5,zero
   4d164:	0005883a 	mov	r2,zero
   4d168:	9884d83a 	srl	r2,r19,r2
   4d16c:	01000174 	movhi	r4,5
   4d170:	210af804 	addi	r4,r4,11232
   4d174:	01800804 	movi	r6,32
   4d178:	1105883a 	add	r2,r2,r4
   4d17c:	10c00003 	ldbu	r3,0(r2)
   4d180:	28c7883a 	add	r3,r5,r3
   4d184:	30cbc83a 	sub	r5,r6,r3
   4d188:	28000626 	beq	r5,zero,4d1a4 <__udivdi3+0x23c>
   4d18c:	3145c83a 	sub	r2,r6,r5
   4d190:	e084d83a 	srl	r2,fp,r2
   4d194:	a946983a 	sll	r3,r21,r5
   4d198:	e178983a 	sll	fp,fp,r5
   4d19c:	9966983a 	sll	r19,r19,r5
   4d1a0:	18aab03a 	or	r21,r3,r2
   4d1a4:	982ed43a 	srli	r23,r19,16
   4d1a8:	a809883a 	mov	r4,r21
   4d1ac:	9cbfffcc 	andi	r18,r19,65535
   4d1b0:	b80b883a 	mov	r5,r23
   4d1b4:	004f1000 	call	4f100 <__udivsi3>
   4d1b8:	100b883a 	mov	r5,r2
   4d1bc:	9009883a 	mov	r4,r18
   4d1c0:	1021883a 	mov	r16,r2
   4d1c4:	004f1100 	call	4f110 <__mulsi3>
   4d1c8:	a809883a 	mov	r4,r21
   4d1cc:	b80b883a 	mov	r5,r23
   4d1d0:	1023883a 	mov	r17,r2
   4d1d4:	004f1080 	call	4f108 <__umodsi3>
   4d1d8:	1004943a 	slli	r2,r2,16
   4d1dc:	e006d43a 	srli	r3,fp,16
   4d1e0:	10c4b03a 	or	r2,r2,r3
   4d1e4:	1440042e 	bgeu	r2,r17,4d1f8 <__udivdi3+0x290>
   4d1e8:	14c5883a 	add	r2,r2,r19
   4d1ec:	843fffc4 	addi	r16,r16,-1
   4d1f0:	14c00136 	bltu	r2,r19,4d1f8 <__udivdi3+0x290>
   4d1f4:	1440ea36 	bltu	r2,r17,4d5a0 <__udivdi3+0x638>
   4d1f8:	1463c83a 	sub	r17,r2,r17
   4d1fc:	8809883a 	mov	r4,r17
   4d200:	b80b883a 	mov	r5,r23
   4d204:	004f1000 	call	4f100 <__udivsi3>
   4d208:	100b883a 	mov	r5,r2
   4d20c:	9009883a 	mov	r4,r18
   4d210:	102b883a 	mov	r21,r2
   4d214:	004f1100 	call	4f110 <__mulsi3>
   4d218:	8809883a 	mov	r4,r17
   4d21c:	b80b883a 	mov	r5,r23
   4d220:	1025883a 	mov	r18,r2
   4d224:	004f1080 	call	4f108 <__umodsi3>
   4d228:	1004943a 	slli	r2,r2,16
   4d22c:	e0ffffcc 	andi	r3,fp,65535
   4d230:	10c4b03a 	or	r2,r2,r3
   4d234:	1480042e 	bgeu	r2,r18,4d248 <__udivdi3+0x2e0>
   4d238:	9885883a 	add	r2,r19,r2
   4d23c:	ad7fffc4 	addi	r21,r21,-1
   4d240:	14c00136 	bltu	r2,r19,4d248 <__udivdi3+0x2e0>
   4d244:	1480d936 	bltu	r2,r18,4d5ac <__udivdi3+0x644>
   4d248:	8004943a 	slli	r2,r16,16
   4d24c:	0009883a 	mov	r4,zero
   4d250:	a884b03a 	or	r2,r21,r2
   4d254:	003fad06 	br	4d10c <__udivdi3+0x1a4>
   4d258:	00804034 	movhi	r2,256
   4d25c:	10bfffc4 	addi	r2,r2,-1
   4d260:	11c0b636 	bltu	r2,r7,4d53c <__udivdi3+0x5d4>
   4d264:	01400404 	movi	r5,16
   4d268:	2805883a 	mov	r2,r5
   4d26c:	003f9a06 	br	4d0d8 <__udivdi3+0x170>
   4d270:	0005883a 	mov	r2,zero
   4d274:	0009883a 	mov	r4,zero
   4d278:	003fa406 	br	4d10c <__udivdi3+0x1a4>
   4d27c:	00804034 	movhi	r2,256
   4d280:	10bfffc4 	addi	r2,r2,-1
   4d284:	14c0b336 	bltu	r2,r19,4d554 <__udivdi3+0x5ec>
   4d288:	01400404 	movi	r5,16
   4d28c:	2805883a 	mov	r2,r5
   4d290:	003f5106 	br	4cfd8 <__udivdi3+0x70>
   4d294:	01000044 	movi	r4,1
   4d298:	000b883a 	mov	r5,zero
   4d29c:	004f1000 	call	4f100 <__udivsi3>
   4d2a0:	1027883a 	mov	r19,r2
   4d2a4:	00bfffd4 	movui	r2,65535
   4d2a8:	14fff436 	bltu	r2,r19,4d27c <__udivdi3+0x314>
   4d2ac:	003f4606 	br	4cfc8 <__udivdi3+0x60>
   4d2b0:	00804034 	movhi	r2,256
   4d2b4:	10bfffc4 	addi	r2,r2,-1
   4d2b8:	1200ac36 	bltu	r2,r8,4d56c <__udivdi3+0x604>
   4d2bc:	01400404 	movi	r5,16
   4d2c0:	2805883a 	mov	r2,r5
   4d2c4:	003fa806 	br	4d168 <__udivdi3+0x200>
   4d2c8:	3d85c83a 	sub	r2,r7,r22
   4d2cc:	3588983a 	sll	r4,r6,r22
   4d2d0:	9886d83a 	srl	r3,r19,r2
   4d2d4:	a8a2d83a 	srl	r17,r21,r2
   4d2d8:	e084d83a 	srl	r2,fp,r2
   4d2dc:	20eeb03a 	or	r23,r4,r3
   4d2e0:	b824d43a 	srli	r18,r23,16
   4d2e4:	ad86983a 	sll	r3,r21,r22
   4d2e8:	8809883a 	mov	r4,r17
   4d2ec:	900b883a 	mov	r5,r18
   4d2f0:	1886b03a 	or	r3,r3,r2
   4d2f4:	d8c00115 	stw	r3,4(sp)
   4d2f8:	bc3fffcc 	andi	r16,r23,65535
   4d2fc:	004f1000 	call	4f100 <__udivsi3>
   4d300:	100b883a 	mov	r5,r2
   4d304:	8009883a 	mov	r4,r16
   4d308:	1029883a 	mov	r20,r2
   4d30c:	004f1100 	call	4f110 <__mulsi3>
   4d310:	900b883a 	mov	r5,r18
   4d314:	8809883a 	mov	r4,r17
   4d318:	102b883a 	mov	r21,r2
   4d31c:	004f1080 	call	4f108 <__umodsi3>
   4d320:	d9400117 	ldw	r5,4(sp)
   4d324:	1004943a 	slli	r2,r2,16
   4d328:	9da6983a 	sll	r19,r19,r22
   4d32c:	2806d43a 	srli	r3,r5,16
   4d330:	10c4b03a 	or	r2,r2,r3
   4d334:	1540032e 	bgeu	r2,r21,4d344 <__udivdi3+0x3dc>
   4d338:	15c5883a 	add	r2,r2,r23
   4d33c:	a53fffc4 	addi	r20,r20,-1
   4d340:	15c0912e 	bgeu	r2,r23,4d588 <__udivdi3+0x620>
   4d344:	1563c83a 	sub	r17,r2,r21
   4d348:	8809883a 	mov	r4,r17
   4d34c:	900b883a 	mov	r5,r18
   4d350:	004f1000 	call	4f100 <__udivsi3>
   4d354:	100b883a 	mov	r5,r2
   4d358:	8009883a 	mov	r4,r16
   4d35c:	102b883a 	mov	r21,r2
   4d360:	004f1100 	call	4f110 <__mulsi3>
   4d364:	8809883a 	mov	r4,r17
   4d368:	900b883a 	mov	r5,r18
   4d36c:	1021883a 	mov	r16,r2
   4d370:	004f1080 	call	4f108 <__umodsi3>
   4d374:	da800117 	ldw	r10,4(sp)
   4d378:	1004943a 	slli	r2,r2,16
   4d37c:	50ffffcc 	andi	r3,r10,65535
   4d380:	10c6b03a 	or	r3,r2,r3
   4d384:	1c00032e 	bgeu	r3,r16,4d394 <__udivdi3+0x42c>
   4d388:	1dc7883a 	add	r3,r3,r23
   4d38c:	ad7fffc4 	addi	r21,r21,-1
   4d390:	1dc0792e 	bgeu	r3,r23,4d578 <__udivdi3+0x610>
   4d394:	a004943a 	slli	r2,r20,16
   4d398:	982ed43a 	srli	r23,r19,16
   4d39c:	9cffffcc 	andi	r19,r19,65535
   4d3a0:	a8a4b03a 	or	r18,r21,r2
   4d3a4:	947fffcc 	andi	r17,r18,65535
   4d3a8:	902ad43a 	srli	r21,r18,16
   4d3ac:	8809883a 	mov	r4,r17
   4d3b0:	980b883a 	mov	r5,r19
   4d3b4:	1c21c83a 	sub	r16,r3,r16
   4d3b8:	004f1100 	call	4f110 <__mulsi3>
   4d3bc:	8809883a 	mov	r4,r17
   4d3c0:	b80b883a 	mov	r5,r23
   4d3c4:	1029883a 	mov	r20,r2
   4d3c8:	004f1100 	call	4f110 <__mulsi3>
   4d3cc:	980b883a 	mov	r5,r19
   4d3d0:	a809883a 	mov	r4,r21
   4d3d4:	1023883a 	mov	r17,r2
   4d3d8:	004f1100 	call	4f110 <__mulsi3>
   4d3dc:	a809883a 	mov	r4,r21
   4d3e0:	b80b883a 	mov	r5,r23
   4d3e4:	1027883a 	mov	r19,r2
   4d3e8:	004f1100 	call	4f110 <__mulsi3>
   4d3ec:	1009883a 	mov	r4,r2
   4d3f0:	a004d43a 	srli	r2,r20,16
   4d3f4:	8ce3883a 	add	r17,r17,r19
   4d3f8:	1447883a 	add	r3,r2,r17
   4d3fc:	1cc0022e 	bgeu	r3,r19,4d408 <__udivdi3+0x4a0>
   4d400:	00800074 	movhi	r2,1
   4d404:	2089883a 	add	r4,r4,r2
   4d408:	1804d43a 	srli	r2,r3,16
   4d40c:	2085883a 	add	r2,r4,r2
   4d410:	80804436 	bltu	r16,r2,4d524 <__udivdi3+0x5bc>
   4d414:	80803e26 	beq	r16,r2,4d510 <__udivdi3+0x5a8>
   4d418:	9005883a 	mov	r2,r18
   4d41c:	0009883a 	mov	r4,zero
   4d420:	003f3a06 	br	4d10c <__udivdi3+0x1a4>
   4d424:	9d26983a 	sll	r19,r19,r20
   4d428:	3505c83a 	sub	r2,r6,r20
   4d42c:	a8a2d83a 	srl	r17,r21,r2
   4d430:	982ed43a 	srli	r23,r19,16
   4d434:	e084d83a 	srl	r2,fp,r2
   4d438:	ad06983a 	sll	r3,r21,r20
   4d43c:	8809883a 	mov	r4,r17
   4d440:	b80b883a 	mov	r5,r23
   4d444:	1886b03a 	or	r3,r3,r2
   4d448:	d8c00015 	stw	r3,0(sp)
   4d44c:	9dbfffcc 	andi	r22,r19,65535
   4d450:	004f1000 	call	4f100 <__udivsi3>
   4d454:	100b883a 	mov	r5,r2
   4d458:	b009883a 	mov	r4,r22
   4d45c:	d8800215 	stw	r2,8(sp)
   4d460:	004f1100 	call	4f110 <__mulsi3>
   4d464:	8809883a 	mov	r4,r17
   4d468:	b80b883a 	mov	r5,r23
   4d46c:	102b883a 	mov	r21,r2
   4d470:	004f1080 	call	4f108 <__umodsi3>
   4d474:	d9000017 	ldw	r4,0(sp)
   4d478:	1004943a 	slli	r2,r2,16
   4d47c:	2006d43a 	srli	r3,r4,16
   4d480:	10c4b03a 	or	r2,r2,r3
   4d484:	1540052e 	bgeu	r2,r21,4d49c <__udivdi3+0x534>
   4d488:	d9400217 	ldw	r5,8(sp)
   4d48c:	14c5883a 	add	r2,r2,r19
   4d490:	297fffc4 	addi	r5,r5,-1
   4d494:	d9400215 	stw	r5,8(sp)
   4d498:	14c0462e 	bgeu	r2,r19,4d5b4 <__udivdi3+0x64c>
   4d49c:	1563c83a 	sub	r17,r2,r21
   4d4a0:	8809883a 	mov	r4,r17
   4d4a4:	b80b883a 	mov	r5,r23
   4d4a8:	004f1000 	call	4f100 <__udivsi3>
   4d4ac:	100b883a 	mov	r5,r2
   4d4b0:	b009883a 	mov	r4,r22
   4d4b4:	1025883a 	mov	r18,r2
   4d4b8:	004f1100 	call	4f110 <__mulsi3>
   4d4bc:	8809883a 	mov	r4,r17
   4d4c0:	b80b883a 	mov	r5,r23
   4d4c4:	1021883a 	mov	r16,r2
   4d4c8:	004f1080 	call	4f108 <__umodsi3>
   4d4cc:	da800017 	ldw	r10,0(sp)
   4d4d0:	1004943a 	slli	r2,r2,16
   4d4d4:	50ffffcc 	andi	r3,r10,65535
   4d4d8:	10c6b03a 	or	r3,r2,r3
   4d4dc:	1c00062e 	bgeu	r3,r16,4d4f8 <__udivdi3+0x590>
   4d4e0:	1cc7883a 	add	r3,r3,r19
   4d4e4:	94bfffc4 	addi	r18,r18,-1
   4d4e8:	1cc00336 	bltu	r3,r19,4d4f8 <__udivdi3+0x590>
   4d4ec:	1c00022e 	bgeu	r3,r16,4d4f8 <__udivdi3+0x590>
   4d4f0:	94bfffc4 	addi	r18,r18,-1
   4d4f4:	1cc7883a 	add	r3,r3,r19
   4d4f8:	d9000217 	ldw	r4,8(sp)
   4d4fc:	e538983a 	sll	fp,fp,r20
   4d500:	1c2bc83a 	sub	r21,r3,r16
   4d504:	2004943a 	slli	r2,r4,16
   4d508:	90a8b03a 	or	r20,r18,r2
   4d50c:	003ebf06 	br	4d00c <__udivdi3+0xa4>
   4d510:	1804943a 	slli	r2,r3,16
   4d514:	e588983a 	sll	r4,fp,r22
   4d518:	a0ffffcc 	andi	r3,r20,65535
   4d51c:	10c5883a 	add	r2,r2,r3
   4d520:	20bfbd2e 	bgeu	r4,r2,4d418 <__udivdi3+0x4b0>
   4d524:	90bfffc4 	addi	r2,r18,-1
   4d528:	0009883a 	mov	r4,zero
   4d52c:	003ef706 	br	4d10c <__udivdi3+0x1a4>
   4d530:	01400204 	movi	r5,8
   4d534:	2805883a 	mov	r2,r5
   4d538:	003ee706 	br	4d0d8 <__udivdi3+0x170>
   4d53c:	01400604 	movi	r5,24
   4d540:	2805883a 	mov	r2,r5
   4d544:	003ee406 	br	4d0d8 <__udivdi3+0x170>
   4d548:	01400204 	movi	r5,8
   4d54c:	2805883a 	mov	r2,r5
   4d550:	003ea106 	br	4cfd8 <__udivdi3+0x70>
   4d554:	01400604 	movi	r5,24
   4d558:	2805883a 	mov	r2,r5
   4d55c:	003e9e06 	br	4cfd8 <__udivdi3+0x70>
   4d560:	01400204 	movi	r5,8
   4d564:	2805883a 	mov	r2,r5
   4d568:	003eff06 	br	4d168 <__udivdi3+0x200>
   4d56c:	01400604 	movi	r5,24
   4d570:	2805883a 	mov	r2,r5
   4d574:	003efc06 	br	4d168 <__udivdi3+0x200>
   4d578:	1c3f862e 	bgeu	r3,r16,4d394 <__udivdi3+0x42c>
   4d57c:	1dc7883a 	add	r3,r3,r23
   4d580:	ad7fffc4 	addi	r21,r21,-1
   4d584:	003f8306 	br	4d394 <__udivdi3+0x42c>
   4d588:	157f6e2e 	bgeu	r2,r21,4d344 <__udivdi3+0x3dc>
   4d58c:	a53fffc4 	addi	r20,r20,-1
   4d590:	15c5883a 	add	r2,r2,r23
   4d594:	003f6b06 	br	4d344 <__udivdi3+0x3dc>
   4d598:	ad7fffc4 	addi	r21,r21,-1
   4d59c:	003ec206 	br	4d0a8 <__udivdi3+0x140>
   4d5a0:	843fffc4 	addi	r16,r16,-1
   4d5a4:	14c5883a 	add	r2,r2,r19
   4d5a8:	003f1306 	br	4d1f8 <__udivdi3+0x290>
   4d5ac:	ad7fffc4 	addi	r21,r21,-1
   4d5b0:	003f2506 	br	4d248 <__udivdi3+0x2e0>
   4d5b4:	157fb92e 	bgeu	r2,r21,4d49c <__udivdi3+0x534>
   4d5b8:	297fffc4 	addi	r5,r5,-1
   4d5bc:	14c5883a 	add	r2,r2,r19
   4d5c0:	d9400215 	stw	r5,8(sp)
   4d5c4:	003fb506 	br	4d49c <__udivdi3+0x534>
   4d5c8:	843fffc4 	addi	r16,r16,-1
   4d5cc:	14c5883a 	add	r2,r2,r19
   4d5d0:	003ea106 	br	4d058 <__udivdi3+0xf0>

0004d5d4 <__umoddi3>:
   4d5d4:	defff004 	addi	sp,sp,-64
   4d5d8:	3011883a 	mov	r8,r6
   4d5dc:	000d883a 	mov	r6,zero
   4d5e0:	dd400b15 	stw	r21,44(sp)
   4d5e4:	dcc00915 	stw	r19,36(sp)
   4d5e8:	dc000615 	stw	r16,24(sp)
   4d5ec:	dfc00f15 	stw	ra,60(sp)
   4d5f0:	df000e15 	stw	fp,56(sp)
   4d5f4:	ddc00d15 	stw	r23,52(sp)
   4d5f8:	dd800c15 	stw	r22,48(sp)
   4d5fc:	dd000a15 	stw	r20,40(sp)
   4d600:	dc800815 	stw	r18,32(sp)
   4d604:	dc400715 	stw	r17,28(sp)
   4d608:	2817883a 	mov	r11,r5
   4d60c:	d9800415 	stw	r6,16(sp)
   4d610:	4027883a 	mov	r19,r8
   4d614:	d9800515 	stw	r6,20(sp)
   4d618:	2021883a 	mov	r16,r4
   4d61c:	282b883a 	mov	r21,r5
   4d620:	38002c1e 	bne	r7,zero,4d6d4 <__umoddi3+0x100>
   4d624:	2a005636 	bltu	r5,r8,4d780 <__umoddi3+0x1ac>
   4d628:	40009a26 	beq	r8,zero,4d894 <__umoddi3+0x2c0>
   4d62c:	00bfffd4 	movui	r2,65535
   4d630:	14c09236 	bltu	r2,r19,4d87c <__umoddi3+0x2a8>
   4d634:	00803fc4 	movi	r2,255
   4d638:	14c15c36 	bltu	r2,r19,4dbac <__umoddi3+0x5d8>
   4d63c:	000b883a 	mov	r5,zero
   4d640:	0005883a 	mov	r2,zero
   4d644:	9884d83a 	srl	r2,r19,r2
   4d648:	01000174 	movhi	r4,5
   4d64c:	210af804 	addi	r4,r4,11232
   4d650:	01800804 	movi	r6,32
   4d654:	1105883a 	add	r2,r2,r4
   4d658:	10c00003 	ldbu	r3,0(r2)
   4d65c:	28c7883a 	add	r3,r5,r3
   4d660:	30e5c83a 	sub	r18,r6,r3
   4d664:	9000a41e 	bne	r18,zero,4d8f8 <__umoddi3+0x324>
   4d668:	982ed43a 	srli	r23,r19,16
   4d66c:	acebc83a 	sub	r21,r21,r19
   4d670:	9d3fffcc 	andi	r20,r19,65535
   4d674:	002d883a 	mov	r22,zero
   4d678:	a809883a 	mov	r4,r21
   4d67c:	b80b883a 	mov	r5,r23
   4d680:	004f1000 	call	4f100 <__udivsi3>
   4d684:	100b883a 	mov	r5,r2
   4d688:	a009883a 	mov	r4,r20
   4d68c:	004f1100 	call	4f110 <__mulsi3>
   4d690:	a809883a 	mov	r4,r21
   4d694:	b80b883a 	mov	r5,r23
   4d698:	1023883a 	mov	r17,r2
   4d69c:	004f1080 	call	4f108 <__umodsi3>
   4d6a0:	1004943a 	slli	r2,r2,16
   4d6a4:	8006d43a 	srli	r3,r16,16
   4d6a8:	10c4b03a 	or	r2,r2,r3
   4d6ac:	1440032e 	bgeu	r2,r17,4d6bc <__umoddi3+0xe8>
   4d6b0:	14c5883a 	add	r2,r2,r19
   4d6b4:	14c00136 	bltu	r2,r19,4d6bc <__umoddi3+0xe8>
   4d6b8:	14415836 	bltu	r2,r17,4dc1c <__umoddi3+0x648>
   4d6bc:	1463c83a 	sub	r17,r2,r17
   4d6c0:	8809883a 	mov	r4,r17
   4d6c4:	b80b883a 	mov	r5,r23
   4d6c8:	004f1000 	call	4f100 <__udivsi3>
   4d6cc:	a009883a 	mov	r4,r20
   4d6d0:	00005306 	br	4d820 <__umoddi3+0x24c>
   4d6d4:	380d883a 	mov	r6,r7
   4d6d8:	29c0132e 	bgeu	r5,r7,4d728 <__umoddi3+0x154>
   4d6dc:	d9000415 	stw	r4,16(sp)
   4d6e0:	d9400515 	stw	r5,20(sp)
   4d6e4:	d9400417 	ldw	r5,16(sp)
   4d6e8:	5813883a 	mov	r9,r11
   4d6ec:	2811883a 	mov	r8,r5
   4d6f0:	4005883a 	mov	r2,r8
   4d6f4:	4807883a 	mov	r3,r9
   4d6f8:	dfc00f17 	ldw	ra,60(sp)
   4d6fc:	df000e17 	ldw	fp,56(sp)
   4d700:	ddc00d17 	ldw	r23,52(sp)
   4d704:	dd800c17 	ldw	r22,48(sp)
   4d708:	dd400b17 	ldw	r21,44(sp)
   4d70c:	dd000a17 	ldw	r20,40(sp)
   4d710:	dcc00917 	ldw	r19,36(sp)
   4d714:	dc800817 	ldw	r18,32(sp)
   4d718:	dc400717 	ldw	r17,28(sp)
   4d71c:	dc000617 	ldw	r16,24(sp)
   4d720:	dec01004 	addi	sp,sp,64
   4d724:	f800283a 	ret
   4d728:	00bfffd4 	movui	r2,65535
   4d72c:	11c06636 	bltu	r2,r7,4d8c8 <__umoddi3+0x2f4>
   4d730:	00803fc4 	movi	r2,255
   4d734:	11c12036 	bltu	r2,r7,4dbb8 <__umoddi3+0x5e4>
   4d738:	000b883a 	mov	r5,zero
   4d73c:	0005883a 	mov	r2,zero
   4d740:	3084d83a 	srl	r2,r6,r2
   4d744:	01000174 	movhi	r4,5
   4d748:	210af804 	addi	r4,r4,11232
   4d74c:	01c00804 	movi	r7,32
   4d750:	1105883a 	add	r2,r2,r4
   4d754:	10c00003 	ldbu	r3,0(r2)
   4d758:	28c7883a 	add	r3,r5,r3
   4d75c:	38e5c83a 	sub	r18,r7,r3
   4d760:	9000941e 	bne	r18,zero,4d9b4 <__umoddi3+0x3e0>
   4d764:	35405e36 	bltu	r6,r21,4d8e0 <__umoddi3+0x30c>
   4d768:	84c05d2e 	bgeu	r16,r19,4d8e0 <__umoddi3+0x30c>
   4d76c:	8011883a 	mov	r8,r16
   4d770:	a813883a 	mov	r9,r21
   4d774:	dc000415 	stw	r16,16(sp)
   4d778:	dd400515 	stw	r21,20(sp)
   4d77c:	003fdc06 	br	4d6f0 <__umoddi3+0x11c>
   4d780:	00bfffd4 	movui	r2,65535
   4d784:	12004a36 	bltu	r2,r8,4d8b0 <__umoddi3+0x2dc>
   4d788:	00803fc4 	movi	r2,255
   4d78c:	12010d36 	bltu	r2,r8,4dbc4 <__umoddi3+0x5f0>
   4d790:	000b883a 	mov	r5,zero
   4d794:	0005883a 	mov	r2,zero
   4d798:	9884d83a 	srl	r2,r19,r2
   4d79c:	01000174 	movhi	r4,5
   4d7a0:	210af804 	addi	r4,r4,11232
   4d7a4:	01800804 	movi	r6,32
   4d7a8:	1105883a 	add	r2,r2,r4
   4d7ac:	10c00003 	ldbu	r3,0(r2)
   4d7b0:	28c7883a 	add	r3,r5,r3
   4d7b4:	30c7c83a 	sub	r3,r6,r3
   4d7b8:	1800dc1e 	bne	r3,zero,4db2c <__umoddi3+0x558>
   4d7bc:	002d883a 	mov	r22,zero
   4d7c0:	982ed43a 	srli	r23,r19,16
   4d7c4:	a809883a 	mov	r4,r21
   4d7c8:	9cbfffcc 	andi	r18,r19,65535
   4d7cc:	b80b883a 	mov	r5,r23
   4d7d0:	004f1000 	call	4f100 <__udivsi3>
   4d7d4:	100b883a 	mov	r5,r2
   4d7d8:	9009883a 	mov	r4,r18
   4d7dc:	004f1100 	call	4f110 <__mulsi3>
   4d7e0:	a809883a 	mov	r4,r21
   4d7e4:	b80b883a 	mov	r5,r23
   4d7e8:	1023883a 	mov	r17,r2
   4d7ec:	004f1080 	call	4f108 <__umodsi3>
   4d7f0:	1004943a 	slli	r2,r2,16
   4d7f4:	8006d43a 	srli	r3,r16,16
   4d7f8:	10c4b03a 	or	r2,r2,r3
   4d7fc:	1440032e 	bgeu	r2,r17,4d80c <__umoddi3+0x238>
   4d800:	14c5883a 	add	r2,r2,r19
   4d804:	14c00136 	bltu	r2,r19,4d80c <__umoddi3+0x238>
   4d808:	14410236 	bltu	r2,r17,4dc14 <__umoddi3+0x640>
   4d80c:	1463c83a 	sub	r17,r2,r17
   4d810:	8809883a 	mov	r4,r17
   4d814:	b80b883a 	mov	r5,r23
   4d818:	004f1000 	call	4f100 <__udivsi3>
   4d81c:	9009883a 	mov	r4,r18
   4d820:	100b883a 	mov	r5,r2
   4d824:	004f1100 	call	4f110 <__mulsi3>
   4d828:	8809883a 	mov	r4,r17
   4d82c:	b80b883a 	mov	r5,r23
   4d830:	102b883a 	mov	r21,r2
   4d834:	004f1080 	call	4f108 <__umodsi3>
   4d838:	1004943a 	slli	r2,r2,16
   4d83c:	80ffffcc 	andi	r3,r16,65535
   4d840:	10c4b03a 	or	r2,r2,r3
   4d844:	1540042e 	bgeu	r2,r21,4d858 <__umoddi3+0x284>
   4d848:	14c5883a 	add	r2,r2,r19
   4d84c:	14c00236 	bltu	r2,r19,4d858 <__umoddi3+0x284>
   4d850:	1540012e 	bgeu	r2,r21,4d858 <__umoddi3+0x284>
   4d854:	14c5883a 	add	r2,r2,r19
   4d858:	1545c83a 	sub	r2,r2,r21
   4d85c:	1584d83a 	srl	r2,r2,r22
   4d860:	0013883a 	mov	r9,zero
   4d864:	d8800415 	stw	r2,16(sp)
   4d868:	d8c00417 	ldw	r3,16(sp)
   4d86c:	0005883a 	mov	r2,zero
   4d870:	d8800515 	stw	r2,20(sp)
   4d874:	1811883a 	mov	r8,r3
   4d878:	003f9d06 	br	4d6f0 <__umoddi3+0x11c>
   4d87c:	00804034 	movhi	r2,256
   4d880:	10bfffc4 	addi	r2,r2,-1
   4d884:	14c0c636 	bltu	r2,r19,4dba0 <__umoddi3+0x5cc>
   4d888:	01400404 	movi	r5,16
   4d88c:	2805883a 	mov	r2,r5
   4d890:	003f6c06 	br	4d644 <__umoddi3+0x70>
   4d894:	01000044 	movi	r4,1
   4d898:	000b883a 	mov	r5,zero
   4d89c:	004f1000 	call	4f100 <__udivsi3>
   4d8a0:	1027883a 	mov	r19,r2
   4d8a4:	00bfffd4 	movui	r2,65535
   4d8a8:	14fff436 	bltu	r2,r19,4d87c <__umoddi3+0x2a8>
   4d8ac:	003f6106 	br	4d634 <__umoddi3+0x60>
   4d8b0:	00804034 	movhi	r2,256
   4d8b4:	10bfffc4 	addi	r2,r2,-1
   4d8b8:	1200c536 	bltu	r2,r8,4dbd0 <__umoddi3+0x5fc>
   4d8bc:	01400404 	movi	r5,16
   4d8c0:	2805883a 	mov	r2,r5
   4d8c4:	003fb406 	br	4d798 <__umoddi3+0x1c4>
   4d8c8:	00804034 	movhi	r2,256
   4d8cc:	10bfffc4 	addi	r2,r2,-1
   4d8d0:	11c0c236 	bltu	r2,r7,4dbdc <__umoddi3+0x608>
   4d8d4:	01400404 	movi	r5,16
   4d8d8:	2805883a 	mov	r2,r5
   4d8dc:	003f9806 	br	4d740 <__umoddi3+0x16c>
   4d8e0:	84c9c83a 	sub	r4,r16,r19
   4d8e4:	8105803a 	cmpltu	r2,r16,r4
   4d8e8:	a987c83a 	sub	r3,r21,r6
   4d8ec:	18abc83a 	sub	r21,r3,r2
   4d8f0:	2021883a 	mov	r16,r4
   4d8f4:	003f9d06 	br	4d76c <__umoddi3+0x198>
   4d8f8:	9ca6983a 	sll	r19,r19,r18
   4d8fc:	3485c83a 	sub	r2,r6,r18
   4d900:	a8a2d83a 	srl	r17,r21,r2
   4d904:	982ed43a 	srli	r23,r19,16
   4d908:	ac86983a 	sll	r3,r21,r18
   4d90c:	8084d83a 	srl	r2,r16,r2
   4d910:	8809883a 	mov	r4,r17
   4d914:	b80b883a 	mov	r5,r23
   4d918:	18b8b03a 	or	fp,r3,r2
   4d91c:	9d3fffcc 	andi	r20,r19,65535
   4d920:	004f1000 	call	4f100 <__udivsi3>
   4d924:	100b883a 	mov	r5,r2
   4d928:	a009883a 	mov	r4,r20
   4d92c:	004f1100 	call	4f110 <__mulsi3>
   4d930:	8809883a 	mov	r4,r17
   4d934:	b80b883a 	mov	r5,r23
   4d938:	102b883a 	mov	r21,r2
   4d93c:	004f1080 	call	4f108 <__umodsi3>
   4d940:	1004943a 	slli	r2,r2,16
   4d944:	e006d43a 	srli	r3,fp,16
   4d948:	902d883a 	mov	r22,r18
   4d94c:	10c4b03a 	or	r2,r2,r3
   4d950:	1540022e 	bgeu	r2,r21,4d95c <__umoddi3+0x388>
   4d954:	14c5883a 	add	r2,r2,r19
   4d958:	14c0ab2e 	bgeu	r2,r19,4dc08 <__umoddi3+0x634>
   4d95c:	1563c83a 	sub	r17,r2,r21
   4d960:	8809883a 	mov	r4,r17
   4d964:	b80b883a 	mov	r5,r23
   4d968:	004f1000 	call	4f100 <__udivsi3>
   4d96c:	100b883a 	mov	r5,r2
   4d970:	a009883a 	mov	r4,r20
   4d974:	004f1100 	call	4f110 <__mulsi3>
   4d978:	8809883a 	mov	r4,r17
   4d97c:	b80b883a 	mov	r5,r23
   4d980:	102b883a 	mov	r21,r2
   4d984:	004f1080 	call	4f108 <__umodsi3>
   4d988:	1004943a 	slli	r2,r2,16
   4d98c:	e0ffffcc 	andi	r3,fp,65535
   4d990:	10c4b03a 	or	r2,r2,r3
   4d994:	1540042e 	bgeu	r2,r21,4d9a8 <__umoddi3+0x3d4>
   4d998:	14c5883a 	add	r2,r2,r19
   4d99c:	14c00236 	bltu	r2,r19,4d9a8 <__umoddi3+0x3d4>
   4d9a0:	1540012e 	bgeu	r2,r21,4d9a8 <__umoddi3+0x3d4>
   4d9a4:	14c5883a 	add	r2,r2,r19
   4d9a8:	84a0983a 	sll	r16,r16,r18
   4d9ac:	156bc83a 	sub	r21,r2,r21
   4d9b0:	003f3106 	br	4d678 <__umoddi3+0xa4>
   4d9b4:	3c8fc83a 	sub	r7,r7,r18
   4d9b8:	3486983a 	sll	r3,r6,r18
   4d9bc:	99c4d83a 	srl	r2,r19,r7
   4d9c0:	a9e2d83a 	srl	r17,r21,r7
   4d9c4:	ac8c983a 	sll	r6,r21,r18
   4d9c8:	18acb03a 	or	r22,r3,r2
   4d9cc:	b02ed43a 	srli	r23,r22,16
   4d9d0:	81c4d83a 	srl	r2,r16,r7
   4d9d4:	8809883a 	mov	r4,r17
   4d9d8:	b80b883a 	mov	r5,r23
   4d9dc:	308cb03a 	or	r6,r6,r2
   4d9e0:	d9c00315 	stw	r7,12(sp)
   4d9e4:	d9800215 	stw	r6,8(sp)
   4d9e8:	b53fffcc 	andi	r20,r22,65535
   4d9ec:	004f1000 	call	4f100 <__udivsi3>
   4d9f0:	100b883a 	mov	r5,r2
   4d9f4:	a009883a 	mov	r4,r20
   4d9f8:	1039883a 	mov	fp,r2
   4d9fc:	004f1100 	call	4f110 <__mulsi3>
   4da00:	8809883a 	mov	r4,r17
   4da04:	b80b883a 	mov	r5,r23
   4da08:	102b883a 	mov	r21,r2
   4da0c:	004f1080 	call	4f108 <__umodsi3>
   4da10:	d9000217 	ldw	r4,8(sp)
   4da14:	1004943a 	slli	r2,r2,16
   4da18:	9ca6983a 	sll	r19,r19,r18
   4da1c:	2006d43a 	srli	r3,r4,16
   4da20:	84a0983a 	sll	r16,r16,r18
   4da24:	dcc00015 	stw	r19,0(sp)
   4da28:	10c4b03a 	or	r2,r2,r3
   4da2c:	dc000115 	stw	r16,4(sp)
   4da30:	1540032e 	bgeu	r2,r21,4da40 <__umoddi3+0x46c>
   4da34:	1585883a 	add	r2,r2,r22
   4da38:	e73fffc4 	addi	fp,fp,-1
   4da3c:	15806e2e 	bgeu	r2,r22,4dbf8 <__umoddi3+0x624>
   4da40:	1563c83a 	sub	r17,r2,r21
   4da44:	8809883a 	mov	r4,r17
   4da48:	b80b883a 	mov	r5,r23
   4da4c:	004f1000 	call	4f100 <__udivsi3>
   4da50:	100b883a 	mov	r5,r2
   4da54:	a009883a 	mov	r4,r20
   4da58:	1021883a 	mov	r16,r2
   4da5c:	004f1100 	call	4f110 <__mulsi3>
   4da60:	b80b883a 	mov	r5,r23
   4da64:	8809883a 	mov	r4,r17
   4da68:	1029883a 	mov	r20,r2
   4da6c:	004f1080 	call	4f108 <__umodsi3>
   4da70:	d9400217 	ldw	r5,8(sp)
   4da74:	1004943a 	slli	r2,r2,16
   4da78:	28ffffcc 	andi	r3,r5,65535
   4da7c:	10c4b03a 	or	r2,r2,r3
   4da80:	1500032e 	bgeu	r2,r20,4da90 <__umoddi3+0x4bc>
   4da84:	1585883a 	add	r2,r2,r22
   4da88:	843fffc4 	addi	r16,r16,-1
   4da8c:	1580562e 	bgeu	r2,r22,4dbe8 <__umoddi3+0x614>
   4da90:	d9800017 	ldw	r6,0(sp)
   4da94:	e022943a 	slli	r17,fp,16
   4da98:	302ed43a 	srli	r23,r6,16
   4da9c:	8462b03a 	or	r17,r16,r17
   4daa0:	34ffffcc 	andi	r19,r6,65535
   4daa4:	882ad43a 	srli	r21,r17,16
   4daa8:	8c7fffcc 	andi	r17,r17,65535
   4daac:	8809883a 	mov	r4,r17
   4dab0:	980b883a 	mov	r5,r19
   4dab4:	1521c83a 	sub	r16,r2,r20
   4dab8:	004f1100 	call	4f110 <__mulsi3>
   4dabc:	8809883a 	mov	r4,r17
   4dac0:	b80b883a 	mov	r5,r23
   4dac4:	1029883a 	mov	r20,r2
   4dac8:	004f1100 	call	4f110 <__mulsi3>
   4dacc:	980b883a 	mov	r5,r19
   4dad0:	a809883a 	mov	r4,r21
   4dad4:	1023883a 	mov	r17,r2
   4dad8:	004f1100 	call	4f110 <__mulsi3>
   4dadc:	a809883a 	mov	r4,r21
   4dae0:	b80b883a 	mov	r5,r23
   4dae4:	1027883a 	mov	r19,r2
   4dae8:	004f1100 	call	4f110 <__mulsi3>
   4daec:	100b883a 	mov	r5,r2
   4daf0:	a004d43a 	srli	r2,r20,16
   4daf4:	8ce3883a 	add	r17,r17,r19
   4daf8:	1449883a 	add	r4,r2,r17
   4dafc:	24c0022e 	bgeu	r4,r19,4db08 <__umoddi3+0x534>
   4db00:	00800074 	movhi	r2,1
   4db04:	288b883a 	add	r5,r5,r2
   4db08:	2004d43a 	srli	r2,r4,16
   4db0c:	2008943a 	slli	r4,r4,16
   4db10:	a0ffffcc 	andi	r3,r20,65535
   4db14:	288d883a 	add	r6,r5,r2
   4db18:	20c9883a 	add	r4,r4,r3
   4db1c:	81800b36 	bltu	r16,r6,4db4c <__umoddi3+0x578>
   4db20:	81804026 	beq	r16,r6,4dc24 <__umoddi3+0x650>
   4db24:	818dc83a 	sub	r6,r16,r6
   4db28:	00000f06 	br	4db68 <__umoddi3+0x594>
   4db2c:	30c5c83a 	sub	r2,r6,r3
   4db30:	182d883a 	mov	r22,r3
   4db34:	8084d83a 	srl	r2,r16,r2
   4db38:	a8c6983a 	sll	r3,r21,r3
   4db3c:	9da6983a 	sll	r19,r19,r22
   4db40:	85a0983a 	sll	r16,r16,r22
   4db44:	18aab03a 	or	r21,r3,r2
   4db48:	003f1d06 	br	4d7c0 <__umoddi3+0x1ec>
   4db4c:	d8c00017 	ldw	r3,0(sp)
   4db50:	20c5c83a 	sub	r2,r4,r3
   4db54:	2089803a 	cmpltu	r4,r4,r2
   4db58:	3587c83a 	sub	r3,r6,r22
   4db5c:	1907c83a 	sub	r3,r3,r4
   4db60:	80cdc83a 	sub	r6,r16,r3
   4db64:	1009883a 	mov	r4,r2
   4db68:	d9400117 	ldw	r5,4(sp)
   4db6c:	2905c83a 	sub	r2,r5,r4
   4db70:	2887803a 	cmpltu	r3,r5,r2
   4db74:	30c7c83a 	sub	r3,r6,r3
   4db78:	d9800317 	ldw	r6,12(sp)
   4db7c:	1484d83a 	srl	r2,r2,r18
   4db80:	1988983a 	sll	r4,r3,r6
   4db84:	1c86d83a 	srl	r3,r3,r18
   4db88:	2088b03a 	or	r4,r4,r2
   4db8c:	2011883a 	mov	r8,r4
   4db90:	1813883a 	mov	r9,r3
   4db94:	d9000415 	stw	r4,16(sp)
   4db98:	d8c00515 	stw	r3,20(sp)
   4db9c:	003ed406 	br	4d6f0 <__umoddi3+0x11c>
   4dba0:	01400604 	movi	r5,24
   4dba4:	2805883a 	mov	r2,r5
   4dba8:	003ea606 	br	4d644 <__umoddi3+0x70>
   4dbac:	01400204 	movi	r5,8
   4dbb0:	2805883a 	mov	r2,r5
   4dbb4:	003ea306 	br	4d644 <__umoddi3+0x70>
   4dbb8:	01400204 	movi	r5,8
   4dbbc:	2805883a 	mov	r2,r5
   4dbc0:	003edf06 	br	4d740 <__umoddi3+0x16c>
   4dbc4:	01400204 	movi	r5,8
   4dbc8:	2805883a 	mov	r2,r5
   4dbcc:	003ef206 	br	4d798 <__umoddi3+0x1c4>
   4dbd0:	01400604 	movi	r5,24
   4dbd4:	2805883a 	mov	r2,r5
   4dbd8:	003eef06 	br	4d798 <__umoddi3+0x1c4>
   4dbdc:	01400604 	movi	r5,24
   4dbe0:	2805883a 	mov	r2,r5
   4dbe4:	003ed606 	br	4d740 <__umoddi3+0x16c>
   4dbe8:	153fa92e 	bgeu	r2,r20,4da90 <__umoddi3+0x4bc>
   4dbec:	843fffc4 	addi	r16,r16,-1
   4dbf0:	1585883a 	add	r2,r2,r22
   4dbf4:	003fa606 	br	4da90 <__umoddi3+0x4bc>
   4dbf8:	157f912e 	bgeu	r2,r21,4da40 <__umoddi3+0x46c>
   4dbfc:	e73fffc4 	addi	fp,fp,-1
   4dc00:	1585883a 	add	r2,r2,r22
   4dc04:	003f8e06 	br	4da40 <__umoddi3+0x46c>
   4dc08:	157f542e 	bgeu	r2,r21,4d95c <__umoddi3+0x388>
   4dc0c:	14c5883a 	add	r2,r2,r19
   4dc10:	003f5206 	br	4d95c <__umoddi3+0x388>
   4dc14:	14c5883a 	add	r2,r2,r19
   4dc18:	003efc06 	br	4d80c <__umoddi3+0x238>
   4dc1c:	14c5883a 	add	r2,r2,r19
   4dc20:	003ea606 	br	4d6bc <__umoddi3+0xe8>
   4dc24:	d8800117 	ldw	r2,4(sp)
   4dc28:	113fc836 	bltu	r2,r4,4db4c <__umoddi3+0x578>
   4dc2c:	000d883a 	mov	r6,zero
   4dc30:	003fcd06 	br	4db68 <__umoddi3+0x594>

0004dc34 <__nesf2>:
   4dc34:	defff304 	addi	sp,sp,-52
   4dc38:	dc400b15 	stw	r17,44(sp)
   4dc3c:	dc400204 	addi	r17,sp,8
   4dc40:	dc000a15 	stw	r16,40(sp)
   4dc44:	d9000015 	stw	r4,0(sp)
   4dc48:	d9400115 	stw	r5,4(sp)
   4dc4c:	d809883a 	mov	r4,sp
   4dc50:	880b883a 	mov	r5,r17
   4dc54:	dc000604 	addi	r16,sp,24
   4dc58:	dfc00c15 	stw	ra,48(sp)
   4dc5c:	004f1c80 	call	4f1c8 <__unpack_f>
   4dc60:	d9000104 	addi	r4,sp,4
   4dc64:	800b883a 	mov	r5,r16
   4dc68:	004f1c80 	call	4f1c8 <__unpack_f>
   4dc6c:	d8800217 	ldw	r2,8(sp)
   4dc70:	00c00044 	movi	r3,1
   4dc74:	180d883a 	mov	r6,r3
   4dc78:	1880062e 	bgeu	r3,r2,4dc94 <__nesf2+0x60>
   4dc7c:	d8800617 	ldw	r2,24(sp)
   4dc80:	8809883a 	mov	r4,r17
   4dc84:	800b883a 	mov	r5,r16
   4dc88:	1880022e 	bgeu	r3,r2,4dc94 <__nesf2+0x60>
   4dc8c:	004f2900 	call	4f290 <__fpcmp_parts_f>
   4dc90:	100d883a 	mov	r6,r2
   4dc94:	3005883a 	mov	r2,r6
   4dc98:	dfc00c17 	ldw	ra,48(sp)
   4dc9c:	dc400b17 	ldw	r17,44(sp)
   4dca0:	dc000a17 	ldw	r16,40(sp)
   4dca4:	dec00d04 	addi	sp,sp,52
   4dca8:	f800283a 	ret

0004dcac <__gtsf2>:
   4dcac:	defff304 	addi	sp,sp,-52
   4dcb0:	dc400b15 	stw	r17,44(sp)
   4dcb4:	dc400204 	addi	r17,sp,8
   4dcb8:	dc000a15 	stw	r16,40(sp)
   4dcbc:	d9000015 	stw	r4,0(sp)
   4dcc0:	d9400115 	stw	r5,4(sp)
   4dcc4:	d809883a 	mov	r4,sp
   4dcc8:	880b883a 	mov	r5,r17
   4dccc:	dc000604 	addi	r16,sp,24
   4dcd0:	dfc00c15 	stw	ra,48(sp)
   4dcd4:	004f1c80 	call	4f1c8 <__unpack_f>
   4dcd8:	d9000104 	addi	r4,sp,4
   4dcdc:	800b883a 	mov	r5,r16
   4dce0:	004f1c80 	call	4f1c8 <__unpack_f>
   4dce4:	d8800217 	ldw	r2,8(sp)
   4dce8:	00c00044 	movi	r3,1
   4dcec:	01bfffc4 	movi	r6,-1
   4dcf0:	1880062e 	bgeu	r3,r2,4dd0c <__gtsf2+0x60>
   4dcf4:	d8800617 	ldw	r2,24(sp)
   4dcf8:	8809883a 	mov	r4,r17
   4dcfc:	800b883a 	mov	r5,r16
   4dd00:	1880022e 	bgeu	r3,r2,4dd0c <__gtsf2+0x60>
   4dd04:	004f2900 	call	4f290 <__fpcmp_parts_f>
   4dd08:	100d883a 	mov	r6,r2
   4dd0c:	3005883a 	mov	r2,r6
   4dd10:	dfc00c17 	ldw	ra,48(sp)
   4dd14:	dc400b17 	ldw	r17,44(sp)
   4dd18:	dc000a17 	ldw	r16,40(sp)
   4dd1c:	dec00d04 	addi	sp,sp,52
   4dd20:	f800283a 	ret

0004dd24 <__ltsf2>:
   4dd24:	defff304 	addi	sp,sp,-52
   4dd28:	dc400b15 	stw	r17,44(sp)
   4dd2c:	dc400204 	addi	r17,sp,8
   4dd30:	dc000a15 	stw	r16,40(sp)
   4dd34:	d9000015 	stw	r4,0(sp)
   4dd38:	d9400115 	stw	r5,4(sp)
   4dd3c:	d809883a 	mov	r4,sp
   4dd40:	880b883a 	mov	r5,r17
   4dd44:	dc000604 	addi	r16,sp,24
   4dd48:	dfc00c15 	stw	ra,48(sp)
   4dd4c:	004f1c80 	call	4f1c8 <__unpack_f>
   4dd50:	d9000104 	addi	r4,sp,4
   4dd54:	800b883a 	mov	r5,r16
   4dd58:	004f1c80 	call	4f1c8 <__unpack_f>
   4dd5c:	d8800217 	ldw	r2,8(sp)
   4dd60:	00c00044 	movi	r3,1
   4dd64:	180d883a 	mov	r6,r3
   4dd68:	1880062e 	bgeu	r3,r2,4dd84 <__ltsf2+0x60>
   4dd6c:	d8800617 	ldw	r2,24(sp)
   4dd70:	8809883a 	mov	r4,r17
   4dd74:	800b883a 	mov	r5,r16
   4dd78:	1880022e 	bgeu	r3,r2,4dd84 <__ltsf2+0x60>
   4dd7c:	004f2900 	call	4f290 <__fpcmp_parts_f>
   4dd80:	100d883a 	mov	r6,r2
   4dd84:	3005883a 	mov	r2,r6
   4dd88:	dfc00c17 	ldw	ra,48(sp)
   4dd8c:	dc400b17 	ldw	r17,44(sp)
   4dd90:	dc000a17 	ldw	r16,40(sp)
   4dd94:	dec00d04 	addi	sp,sp,52
   4dd98:	f800283a 	ret

0004dd9c <_fpadd_parts>:
   4dd9c:	defff804 	addi	sp,sp,-32
   4dda0:	dcc00315 	stw	r19,12(sp)
   4dda4:	2027883a 	mov	r19,r4
   4dda8:	21000017 	ldw	r4,0(r4)
   4ddac:	00c00044 	movi	r3,1
   4ddb0:	dd400515 	stw	r21,20(sp)
   4ddb4:	dd000415 	stw	r20,16(sp)
   4ddb8:	ddc00715 	stw	r23,28(sp)
   4ddbc:	dd800615 	stw	r22,24(sp)
   4ddc0:	dc800215 	stw	r18,8(sp)
   4ddc4:	dc400115 	stw	r17,4(sp)
   4ddc8:	dc000015 	stw	r16,0(sp)
   4ddcc:	282b883a 	mov	r21,r5
   4ddd0:	3029883a 	mov	r20,r6
   4ddd4:	1900632e 	bgeu	r3,r4,4df64 <_fpadd_parts+0x1c8>
   4ddd8:	28800017 	ldw	r2,0(r5)
   4dddc:	1880812e 	bgeu	r3,r2,4dfe4 <_fpadd_parts+0x248>
   4dde0:	00c00104 	movi	r3,4
   4dde4:	20c0dc26 	beq	r4,r3,4e158 <_fpadd_parts+0x3bc>
   4dde8:	10c07e26 	beq	r2,r3,4dfe4 <_fpadd_parts+0x248>
   4ddec:	00c00084 	movi	r3,2
   4ddf0:	10c06726 	beq	r2,r3,4df90 <_fpadd_parts+0x1f4>
   4ddf4:	20c07b26 	beq	r4,r3,4dfe4 <_fpadd_parts+0x248>
   4ddf8:	9dc00217 	ldw	r23,8(r19)
   4ddfc:	28c00217 	ldw	r3,8(r5)
   4de00:	9c400317 	ldw	r17,12(r19)
   4de04:	2bc00317 	ldw	r15,12(r5)
   4de08:	b8cdc83a 	sub	r6,r23,r3
   4de0c:	9c800417 	ldw	r18,16(r19)
   4de10:	2c000417 	ldw	r16,16(r5)
   4de14:	3009883a 	mov	r4,r6
   4de18:	30009716 	blt	r6,zero,4e078 <_fpadd_parts+0x2dc>
   4de1c:	00800fc4 	movi	r2,63
   4de20:	11806b16 	blt	r2,r6,4dfd0 <_fpadd_parts+0x234>
   4de24:	0100a40e 	bge	zero,r4,4e0b8 <_fpadd_parts+0x31c>
   4de28:	35bff804 	addi	r22,r6,-32
   4de2c:	b000bc16 	blt	r22,zero,4e120 <_fpadd_parts+0x384>
   4de30:	8596d83a 	srl	r11,r16,r22
   4de34:	0019883a 	mov	r12,zero
   4de38:	0013883a 	mov	r9,zero
   4de3c:	01000044 	movi	r4,1
   4de40:	0015883a 	mov	r10,zero
   4de44:	b000be16 	blt	r22,zero,4e140 <_fpadd_parts+0x3a4>
   4de48:	2590983a 	sll	r8,r4,r22
   4de4c:	000f883a 	mov	r7,zero
   4de50:	00bfffc4 	movi	r2,-1
   4de54:	3889883a 	add	r4,r7,r2
   4de58:	408b883a 	add	r5,r8,r2
   4de5c:	21cd803a 	cmpltu	r6,r4,r7
   4de60:	314b883a 	add	r5,r6,r5
   4de64:	7904703a 	and	r2,r15,r4
   4de68:	8146703a 	and	r3,r16,r5
   4de6c:	10c4b03a 	or	r2,r2,r3
   4de70:	10000226 	beq	r2,zero,4de7c <_fpadd_parts+0xe0>
   4de74:	02400044 	movi	r9,1
   4de78:	0015883a 	mov	r10,zero
   4de7c:	5a5eb03a 	or	r15,r11,r9
   4de80:	62a0b03a 	or	r16,r12,r10
   4de84:	99400117 	ldw	r5,4(r19)
   4de88:	a8800117 	ldw	r2,4(r21)
   4de8c:	28806e26 	beq	r5,r2,4e048 <_fpadd_parts+0x2ac>
   4de90:	28006626 	beq	r5,zero,4e02c <_fpadd_parts+0x290>
   4de94:	7c45c83a 	sub	r2,r15,r17
   4de98:	7889803a 	cmpltu	r4,r15,r2
   4de9c:	8487c83a 	sub	r3,r16,r18
   4dea0:	1909c83a 	sub	r4,r3,r4
   4dea4:	100d883a 	mov	r6,r2
   4dea8:	200f883a 	mov	r7,r4
   4deac:	38007716 	blt	r7,zero,4e08c <_fpadd_parts+0x2f0>
   4deb0:	a5c00215 	stw	r23,8(r20)
   4deb4:	a1c00415 	stw	r7,16(r20)
   4deb8:	a0000115 	stw	zero,4(r20)
   4debc:	a1800315 	stw	r6,12(r20)
   4dec0:	a2000317 	ldw	r8,12(r20)
   4dec4:	a2400417 	ldw	r9,16(r20)
   4dec8:	00bfffc4 	movi	r2,-1
   4decc:	408b883a 	add	r5,r8,r2
   4ded0:	2a09803a 	cmpltu	r4,r5,r8
   4ded4:	488d883a 	add	r6,r9,r2
   4ded8:	01c40034 	movhi	r7,4096
   4dedc:	39ffffc4 	addi	r7,r7,-1
   4dee0:	218d883a 	add	r6,r4,r6
   4dee4:	39801736 	bltu	r7,r6,4df44 <_fpadd_parts+0x1a8>
   4dee8:	31c06526 	beq	r6,r7,4e080 <_fpadd_parts+0x2e4>
   4deec:	a3000217 	ldw	r12,8(r20)
   4def0:	4209883a 	add	r4,r8,r8
   4def4:	00bfffc4 	movi	r2,-1
   4def8:	220f803a 	cmpltu	r7,r4,r8
   4defc:	4a4b883a 	add	r5,r9,r9
   4df00:	394f883a 	add	r7,r7,r5
   4df04:	2095883a 	add	r10,r4,r2
   4df08:	3897883a 	add	r11,r7,r2
   4df0c:	510d803a 	cmpltu	r6,r10,r4
   4df10:	6099883a 	add	r12,r12,r2
   4df14:	32d7883a 	add	r11,r6,r11
   4df18:	00840034 	movhi	r2,4096
   4df1c:	10bfffc4 	addi	r2,r2,-1
   4df20:	2011883a 	mov	r8,r4
   4df24:	3813883a 	mov	r9,r7
   4df28:	a1000315 	stw	r4,12(r20)
   4df2c:	a1c00415 	stw	r7,16(r20)
   4df30:	a3000215 	stw	r12,8(r20)
   4df34:	12c00336 	bltu	r2,r11,4df44 <_fpadd_parts+0x1a8>
   4df38:	58bfed1e 	bne	r11,r2,4def0 <_fpadd_parts+0x154>
   4df3c:	00bfff84 	movi	r2,-2
   4df40:	12bfeb2e 	bgeu	r2,r10,4def0 <_fpadd_parts+0x154>
   4df44:	a2800417 	ldw	r10,16(r20)
   4df48:	008000c4 	movi	r2,3
   4df4c:	00c80034 	movhi	r3,8192
   4df50:	18ffffc4 	addi	r3,r3,-1
   4df54:	a2400317 	ldw	r9,12(r20)
   4df58:	a0800015 	stw	r2,0(r20)
   4df5c:	1a802336 	bltu	r3,r10,4dfec <_fpadd_parts+0x250>
   4df60:	a027883a 	mov	r19,r20
   4df64:	9805883a 	mov	r2,r19
   4df68:	ddc00717 	ldw	r23,28(sp)
   4df6c:	dd800617 	ldw	r22,24(sp)
   4df70:	dd400517 	ldw	r21,20(sp)
   4df74:	dd000417 	ldw	r20,16(sp)
   4df78:	dcc00317 	ldw	r19,12(sp)
   4df7c:	dc800217 	ldw	r18,8(sp)
   4df80:	dc400117 	ldw	r17,4(sp)
   4df84:	dc000017 	ldw	r16,0(sp)
   4df88:	dec00804 	addi	sp,sp,32
   4df8c:	f800283a 	ret
   4df90:	20fff41e 	bne	r4,r3,4df64 <_fpadd_parts+0x1c8>
   4df94:	31000015 	stw	r4,0(r6)
   4df98:	98800117 	ldw	r2,4(r19)
   4df9c:	30800115 	stw	r2,4(r6)
   4dfa0:	98c00217 	ldw	r3,8(r19)
   4dfa4:	30c00215 	stw	r3,8(r6)
   4dfa8:	98800317 	ldw	r2,12(r19)
   4dfac:	30800315 	stw	r2,12(r6)
   4dfb0:	98c00417 	ldw	r3,16(r19)
   4dfb4:	30c00415 	stw	r3,16(r6)
   4dfb8:	98800117 	ldw	r2,4(r19)
   4dfbc:	28c00117 	ldw	r3,4(r5)
   4dfc0:	3027883a 	mov	r19,r6
   4dfc4:	10c4703a 	and	r2,r2,r3
   4dfc8:	30800115 	stw	r2,4(r6)
   4dfcc:	003fe506 	br	4df64 <_fpadd_parts+0x1c8>
   4dfd0:	1dc02616 	blt	r3,r23,4e06c <_fpadd_parts+0x2d0>
   4dfd4:	0023883a 	mov	r17,zero
   4dfd8:	182f883a 	mov	r23,r3
   4dfdc:	0025883a 	mov	r18,zero
   4dfe0:	003fa806 	br	4de84 <_fpadd_parts+0xe8>
   4dfe4:	a827883a 	mov	r19,r21
   4dfe8:	003fde06 	br	4df64 <_fpadd_parts+0x1c8>
   4dfec:	01800044 	movi	r6,1
   4dff0:	500497fa 	slli	r2,r10,31
   4dff4:	4808d07a 	srli	r4,r9,1
   4dff8:	518ad83a 	srl	r5,r10,r6
   4dffc:	a2000217 	ldw	r8,8(r20)
   4e000:	1108b03a 	or	r4,r2,r4
   4e004:	0007883a 	mov	r3,zero
   4e008:	4984703a 	and	r2,r9,r6
   4e00c:	208cb03a 	or	r6,r4,r2
   4e010:	28ceb03a 	or	r7,r5,r3
   4e014:	42000044 	addi	r8,r8,1
   4e018:	a027883a 	mov	r19,r20
   4e01c:	a1c00415 	stw	r7,16(r20)
   4e020:	a2000215 	stw	r8,8(r20)
   4e024:	a1800315 	stw	r6,12(r20)
   4e028:	003fce06 	br	4df64 <_fpadd_parts+0x1c8>
   4e02c:	8bc5c83a 	sub	r2,r17,r15
   4e030:	8889803a 	cmpltu	r4,r17,r2
   4e034:	9407c83a 	sub	r3,r18,r16
   4e038:	1909c83a 	sub	r4,r3,r4
   4e03c:	100d883a 	mov	r6,r2
   4e040:	200f883a 	mov	r7,r4
   4e044:	003f9906 	br	4deac <_fpadd_parts+0x110>
   4e048:	7c45883a 	add	r2,r15,r17
   4e04c:	13c9803a 	cmpltu	r4,r2,r15
   4e050:	8487883a 	add	r3,r16,r18
   4e054:	20c9883a 	add	r4,r4,r3
   4e058:	a1400115 	stw	r5,4(r20)
   4e05c:	a5c00215 	stw	r23,8(r20)
   4e060:	a0800315 	stw	r2,12(r20)
   4e064:	a1000415 	stw	r4,16(r20)
   4e068:	003fb606 	br	4df44 <_fpadd_parts+0x1a8>
   4e06c:	001f883a 	mov	r15,zero
   4e070:	0021883a 	mov	r16,zero
   4e074:	003f8306 	br	4de84 <_fpadd_parts+0xe8>
   4e078:	018dc83a 	sub	r6,zero,r6
   4e07c:	003f6706 	br	4de1c <_fpadd_parts+0x80>
   4e080:	00bfff84 	movi	r2,-2
   4e084:	117faf36 	bltu	r2,r5,4df44 <_fpadd_parts+0x1a8>
   4e088:	003f9806 	br	4deec <_fpadd_parts+0x150>
   4e08c:	0005883a 	mov	r2,zero
   4e090:	1189c83a 	sub	r4,r2,r6
   4e094:	1105803a 	cmpltu	r2,r2,r4
   4e098:	01cbc83a 	sub	r5,zero,r7
   4e09c:	2885c83a 	sub	r2,r5,r2
   4e0a0:	01800044 	movi	r6,1
   4e0a4:	a1800115 	stw	r6,4(r20)
   4e0a8:	a5c00215 	stw	r23,8(r20)
   4e0ac:	a1000315 	stw	r4,12(r20)
   4e0b0:	a0800415 	stw	r2,16(r20)
   4e0b4:	003f8206 	br	4dec0 <_fpadd_parts+0x124>
   4e0b8:	203f7226 	beq	r4,zero,4de84 <_fpadd_parts+0xe8>
   4e0bc:	35bff804 	addi	r22,r6,-32
   4e0c0:	b9af883a 	add	r23,r23,r6
   4e0c4:	b0003116 	blt	r22,zero,4e18c <_fpadd_parts+0x3f0>
   4e0c8:	959ad83a 	srl	r13,r18,r22
   4e0cc:	001d883a 	mov	r14,zero
   4e0d0:	000f883a 	mov	r7,zero
   4e0d4:	01000044 	movi	r4,1
   4e0d8:	0011883a 	mov	r8,zero
   4e0dc:	b0002516 	blt	r22,zero,4e174 <_fpadd_parts+0x3d8>
   4e0e0:	2594983a 	sll	r10,r4,r22
   4e0e4:	0013883a 	mov	r9,zero
   4e0e8:	00bfffc4 	movi	r2,-1
   4e0ec:	4889883a 	add	r4,r9,r2
   4e0f0:	508b883a 	add	r5,r10,r2
   4e0f4:	224d803a 	cmpltu	r6,r4,r9
   4e0f8:	314b883a 	add	r5,r6,r5
   4e0fc:	8904703a 	and	r2,r17,r4
   4e100:	9146703a 	and	r3,r18,r5
   4e104:	10c4b03a 	or	r2,r2,r3
   4e108:	10000226 	beq	r2,zero,4e114 <_fpadd_parts+0x378>
   4e10c:	01c00044 	movi	r7,1
   4e110:	0011883a 	mov	r8,zero
   4e114:	69e2b03a 	or	r17,r13,r7
   4e118:	7224b03a 	or	r18,r14,r8
   4e11c:	003f5906 	br	4de84 <_fpadd_parts+0xe8>
   4e120:	8407883a 	add	r3,r16,r16
   4e124:	008007c4 	movi	r2,31
   4e128:	1185c83a 	sub	r2,r2,r6
   4e12c:	1886983a 	sll	r3,r3,r2
   4e130:	7996d83a 	srl	r11,r15,r6
   4e134:	8198d83a 	srl	r12,r16,r6
   4e138:	1ad6b03a 	or	r11,r3,r11
   4e13c:	003f3e06 	br	4de38 <_fpadd_parts+0x9c>
   4e140:	2006d07a 	srli	r3,r4,1
   4e144:	008007c4 	movi	r2,31
   4e148:	1185c83a 	sub	r2,r2,r6
   4e14c:	1890d83a 	srl	r8,r3,r2
   4e150:	218e983a 	sll	r7,r4,r6
   4e154:	003f3e06 	br	4de50 <_fpadd_parts+0xb4>
   4e158:	113f821e 	bne	r2,r4,4df64 <_fpadd_parts+0x1c8>
   4e15c:	28c00117 	ldw	r3,4(r5)
   4e160:	98800117 	ldw	r2,4(r19)
   4e164:	10ff7f26 	beq	r2,r3,4df64 <_fpadd_parts+0x1c8>
   4e168:	04c00174 	movhi	r19,5
   4e16c:	9ccaf304 	addi	r19,r19,11212
   4e170:	003f7c06 	br	4df64 <_fpadd_parts+0x1c8>
   4e174:	2006d07a 	srli	r3,r4,1
   4e178:	008007c4 	movi	r2,31
   4e17c:	1185c83a 	sub	r2,r2,r6
   4e180:	1894d83a 	srl	r10,r3,r2
   4e184:	2192983a 	sll	r9,r4,r6
   4e188:	003fd706 	br	4e0e8 <_fpadd_parts+0x34c>
   4e18c:	9487883a 	add	r3,r18,r18
   4e190:	008007c4 	movi	r2,31
   4e194:	1185c83a 	sub	r2,r2,r6
   4e198:	1886983a 	sll	r3,r3,r2
   4e19c:	899ad83a 	srl	r13,r17,r6
   4e1a0:	919cd83a 	srl	r14,r18,r6
   4e1a4:	1b5ab03a 	or	r13,r3,r13
   4e1a8:	003fc906 	br	4e0d0 <_fpadd_parts+0x334>

0004e1ac <__subdf3>:
   4e1ac:	deffea04 	addi	sp,sp,-88
   4e1b0:	dcc01415 	stw	r19,80(sp)
   4e1b4:	dcc00404 	addi	r19,sp,16
   4e1b8:	2011883a 	mov	r8,r4
   4e1bc:	2813883a 	mov	r9,r5
   4e1c0:	dc401315 	stw	r17,76(sp)
   4e1c4:	d809883a 	mov	r4,sp
   4e1c8:	980b883a 	mov	r5,r19
   4e1cc:	dc400904 	addi	r17,sp,36
   4e1d0:	dfc01515 	stw	ra,84(sp)
   4e1d4:	da400115 	stw	r9,4(sp)
   4e1d8:	d9c00315 	stw	r7,12(sp)
   4e1dc:	da000015 	stw	r8,0(sp)
   4e1e0:	d9800215 	stw	r6,8(sp)
   4e1e4:	004f6780 	call	4f678 <__unpack_d>
   4e1e8:	d9000204 	addi	r4,sp,8
   4e1ec:	880b883a 	mov	r5,r17
   4e1f0:	004f6780 	call	4f678 <__unpack_d>
   4e1f4:	d8800a17 	ldw	r2,40(sp)
   4e1f8:	880b883a 	mov	r5,r17
   4e1fc:	9809883a 	mov	r4,r19
   4e200:	d9800e04 	addi	r6,sp,56
   4e204:	1080005c 	xori	r2,r2,1
   4e208:	d8800a15 	stw	r2,40(sp)
   4e20c:	004dd9c0 	call	4dd9c <_fpadd_parts>
   4e210:	1009883a 	mov	r4,r2
   4e214:	004f3640 	call	4f364 <__pack_d>
   4e218:	dfc01517 	ldw	ra,84(sp)
   4e21c:	dcc01417 	ldw	r19,80(sp)
   4e220:	dc401317 	ldw	r17,76(sp)
   4e224:	dec01604 	addi	sp,sp,88
   4e228:	f800283a 	ret

0004e22c <__adddf3>:
   4e22c:	deffea04 	addi	sp,sp,-88
   4e230:	dcc01415 	stw	r19,80(sp)
   4e234:	dcc00404 	addi	r19,sp,16
   4e238:	2011883a 	mov	r8,r4
   4e23c:	2813883a 	mov	r9,r5
   4e240:	dc401315 	stw	r17,76(sp)
   4e244:	d809883a 	mov	r4,sp
   4e248:	980b883a 	mov	r5,r19
   4e24c:	dc400904 	addi	r17,sp,36
   4e250:	dfc01515 	stw	ra,84(sp)
   4e254:	da400115 	stw	r9,4(sp)
   4e258:	d9c00315 	stw	r7,12(sp)
   4e25c:	da000015 	stw	r8,0(sp)
   4e260:	d9800215 	stw	r6,8(sp)
   4e264:	004f6780 	call	4f678 <__unpack_d>
   4e268:	d9000204 	addi	r4,sp,8
   4e26c:	880b883a 	mov	r5,r17
   4e270:	004f6780 	call	4f678 <__unpack_d>
   4e274:	d9800e04 	addi	r6,sp,56
   4e278:	9809883a 	mov	r4,r19
   4e27c:	880b883a 	mov	r5,r17
   4e280:	004dd9c0 	call	4dd9c <_fpadd_parts>
   4e284:	1009883a 	mov	r4,r2
   4e288:	004f3640 	call	4f364 <__pack_d>
   4e28c:	dfc01517 	ldw	ra,84(sp)
   4e290:	dcc01417 	ldw	r19,80(sp)
   4e294:	dc401317 	ldw	r17,76(sp)
   4e298:	dec01604 	addi	sp,sp,88
   4e29c:	f800283a 	ret

0004e2a0 <__muldf3>:
   4e2a0:	deffe004 	addi	sp,sp,-128
   4e2a4:	dc401815 	stw	r17,96(sp)
   4e2a8:	dc400404 	addi	r17,sp,16
   4e2ac:	2011883a 	mov	r8,r4
   4e2b0:	2813883a 	mov	r9,r5
   4e2b4:	dc001715 	stw	r16,92(sp)
   4e2b8:	d809883a 	mov	r4,sp
   4e2bc:	880b883a 	mov	r5,r17
   4e2c0:	dc000904 	addi	r16,sp,36
   4e2c4:	dfc01f15 	stw	ra,124(sp)
   4e2c8:	da400115 	stw	r9,4(sp)
   4e2cc:	d9c00315 	stw	r7,12(sp)
   4e2d0:	da000015 	stw	r8,0(sp)
   4e2d4:	d9800215 	stw	r6,8(sp)
   4e2d8:	ddc01e15 	stw	r23,120(sp)
   4e2dc:	dd801d15 	stw	r22,116(sp)
   4e2e0:	dd401c15 	stw	r21,112(sp)
   4e2e4:	dd001b15 	stw	r20,108(sp)
   4e2e8:	dcc01a15 	stw	r19,104(sp)
   4e2ec:	dc801915 	stw	r18,100(sp)
   4e2f0:	004f6780 	call	4f678 <__unpack_d>
   4e2f4:	d9000204 	addi	r4,sp,8
   4e2f8:	800b883a 	mov	r5,r16
   4e2fc:	004f6780 	call	4f678 <__unpack_d>
   4e300:	d9000417 	ldw	r4,16(sp)
   4e304:	00800044 	movi	r2,1
   4e308:	1100102e 	bgeu	r2,r4,4e34c <__muldf3+0xac>
   4e30c:	d8c00917 	ldw	r3,36(sp)
   4e310:	10c0062e 	bgeu	r2,r3,4e32c <__muldf3+0x8c>
   4e314:	00800104 	movi	r2,4
   4e318:	20800a26 	beq	r4,r2,4e344 <__muldf3+0xa4>
   4e31c:	1880cc26 	beq	r3,r2,4e650 <__muldf3+0x3b0>
   4e320:	00800084 	movi	r2,2
   4e324:	20800926 	beq	r4,r2,4e34c <__muldf3+0xac>
   4e328:	1880191e 	bne	r3,r2,4e390 <__muldf3+0xf0>
   4e32c:	d8c00a17 	ldw	r3,40(sp)
   4e330:	d8800517 	ldw	r2,20(sp)
   4e334:	8009883a 	mov	r4,r16
   4e338:	10c4c03a 	cmpne	r2,r2,r3
   4e33c:	d8800a15 	stw	r2,40(sp)
   4e340:	00000706 	br	4e360 <__muldf3+0xc0>
   4e344:	00800084 	movi	r2,2
   4e348:	1880c326 	beq	r3,r2,4e658 <__muldf3+0x3b8>
   4e34c:	d8800517 	ldw	r2,20(sp)
   4e350:	d8c00a17 	ldw	r3,40(sp)
   4e354:	8809883a 	mov	r4,r17
   4e358:	10c4c03a 	cmpne	r2,r2,r3
   4e35c:	d8800515 	stw	r2,20(sp)
   4e360:	004f3640 	call	4f364 <__pack_d>
   4e364:	dfc01f17 	ldw	ra,124(sp)
   4e368:	ddc01e17 	ldw	r23,120(sp)
   4e36c:	dd801d17 	ldw	r22,116(sp)
   4e370:	dd401c17 	ldw	r21,112(sp)
   4e374:	dd001b17 	ldw	r20,108(sp)
   4e378:	dcc01a17 	ldw	r19,104(sp)
   4e37c:	dc801917 	ldw	r18,100(sp)
   4e380:	dc401817 	ldw	r17,96(sp)
   4e384:	dc001717 	ldw	r16,92(sp)
   4e388:	dec02004 	addi	sp,sp,128
   4e38c:	f800283a 	ret
   4e390:	dd800717 	ldw	r22,28(sp)
   4e394:	dc800c17 	ldw	r18,48(sp)
   4e398:	002b883a 	mov	r21,zero
   4e39c:	0023883a 	mov	r17,zero
   4e3a0:	a80b883a 	mov	r5,r21
   4e3a4:	b00d883a 	mov	r6,r22
   4e3a8:	880f883a 	mov	r7,r17
   4e3ac:	ddc00817 	ldw	r23,32(sp)
   4e3b0:	dcc00d17 	ldw	r19,52(sp)
   4e3b4:	9009883a 	mov	r4,r18
   4e3b8:	004cda00 	call	4cda0 <__muldi3>
   4e3bc:	001b883a 	mov	r13,zero
   4e3c0:	680f883a 	mov	r7,r13
   4e3c4:	b009883a 	mov	r4,r22
   4e3c8:	000b883a 	mov	r5,zero
   4e3cc:	980d883a 	mov	r6,r19
   4e3d0:	b82d883a 	mov	r22,r23
   4e3d4:	002f883a 	mov	r23,zero
   4e3d8:	db401615 	stw	r13,88(sp)
   4e3dc:	d8801315 	stw	r2,76(sp)
   4e3e0:	d8c01415 	stw	r3,80(sp)
   4e3e4:	dcc01515 	stw	r19,84(sp)
   4e3e8:	004cda00 	call	4cda0 <__muldi3>
   4e3ec:	b00d883a 	mov	r6,r22
   4e3f0:	000b883a 	mov	r5,zero
   4e3f4:	9009883a 	mov	r4,r18
   4e3f8:	b80f883a 	mov	r7,r23
   4e3fc:	1021883a 	mov	r16,r2
   4e400:	1823883a 	mov	r17,r3
   4e404:	004cda00 	call	4cda0 <__muldi3>
   4e408:	8085883a 	add	r2,r16,r2
   4e40c:	140d803a 	cmpltu	r6,r2,r16
   4e410:	88c7883a 	add	r3,r17,r3
   4e414:	30cd883a 	add	r6,r6,r3
   4e418:	1029883a 	mov	r20,r2
   4e41c:	302b883a 	mov	r21,r6
   4e420:	da801317 	ldw	r10,76(sp)
   4e424:	dac01417 	ldw	r11,80(sp)
   4e428:	db001517 	ldw	r12,84(sp)
   4e42c:	db401617 	ldw	r13,88(sp)
   4e430:	3440612e 	bgeu	r6,r17,4e5b8 <__muldf3+0x318>
   4e434:	0009883a 	mov	r4,zero
   4e438:	5105883a 	add	r2,r10,r4
   4e43c:	128d803a 	cmpltu	r6,r2,r10
   4e440:	5d07883a 	add	r3,r11,r20
   4e444:	30cd883a 	add	r6,r6,r3
   4e448:	0021883a 	mov	r16,zero
   4e44c:	04400044 	movi	r17,1
   4e450:	1025883a 	mov	r18,r2
   4e454:	3027883a 	mov	r19,r6
   4e458:	32c06236 	bltu	r6,r11,4e5e4 <__muldf3+0x344>
   4e45c:	59807a26 	beq	r11,r6,4e648 <__muldf3+0x3a8>
   4e460:	680b883a 	mov	r5,r13
   4e464:	b80f883a 	mov	r7,r23
   4e468:	6009883a 	mov	r4,r12
   4e46c:	b00d883a 	mov	r6,r22
   4e470:	004cda00 	call	4cda0 <__muldi3>
   4e474:	1009883a 	mov	r4,r2
   4e478:	000f883a 	mov	r7,zero
   4e47c:	1545883a 	add	r2,r2,r21
   4e480:	1111803a 	cmpltu	r8,r2,r4
   4e484:	19c7883a 	add	r3,r3,r7
   4e488:	40c7883a 	add	r3,r8,r3
   4e48c:	88cb883a 	add	r5,r17,r3
   4e490:	d8c00617 	ldw	r3,24(sp)
   4e494:	8089883a 	add	r4,r16,r2
   4e498:	d8800b17 	ldw	r2,44(sp)
   4e49c:	18c00104 	addi	r3,r3,4
   4e4a0:	240d803a 	cmpltu	r6,r4,r16
   4e4a4:	10c7883a 	add	r3,r2,r3
   4e4a8:	2013883a 	mov	r9,r4
   4e4ac:	d8800a17 	ldw	r2,40(sp)
   4e4b0:	d9000517 	ldw	r4,20(sp)
   4e4b4:	314d883a 	add	r6,r6,r5
   4e4b8:	3015883a 	mov	r10,r6
   4e4bc:	2088c03a 	cmpne	r4,r4,r2
   4e4c0:	00880034 	movhi	r2,8192
   4e4c4:	10bfffc4 	addi	r2,r2,-1
   4e4c8:	d9000f15 	stw	r4,60(sp)
   4e4cc:	d8c01015 	stw	r3,64(sp)
   4e4d0:	1180162e 	bgeu	r2,r6,4e52c <__muldf3+0x28c>
   4e4d4:	1811883a 	mov	r8,r3
   4e4d8:	101f883a 	mov	r15,r2
   4e4dc:	980497fa 	slli	r2,r19,31
   4e4e0:	9016d07a 	srli	r11,r18,1
   4e4e4:	500697fa 	slli	r3,r10,31
   4e4e8:	480cd07a 	srli	r6,r9,1
   4e4ec:	500ed07a 	srli	r7,r10,1
   4e4f0:	12d6b03a 	or	r11,r2,r11
   4e4f4:	00800044 	movi	r2,1
   4e4f8:	198cb03a 	or	r6,r3,r6
   4e4fc:	4888703a 	and	r4,r9,r2
   4e500:	9818d07a 	srli	r12,r19,1
   4e504:	001b883a 	mov	r13,zero
   4e508:	03a00034 	movhi	r14,32768
   4e50c:	3013883a 	mov	r9,r6
   4e510:	3815883a 	mov	r10,r7
   4e514:	4091883a 	add	r8,r8,r2
   4e518:	20000226 	beq	r4,zero,4e524 <__muldf3+0x284>
   4e51c:	5b64b03a 	or	r18,r11,r13
   4e520:	63a6b03a 	or	r19,r12,r14
   4e524:	7abfed36 	bltu	r15,r10,4e4dc <__muldf3+0x23c>
   4e528:	da001015 	stw	r8,64(sp)
   4e52c:	00840034 	movhi	r2,4096
   4e530:	10bfffc4 	addi	r2,r2,-1
   4e534:	12801436 	bltu	r2,r10,4e588 <__muldf3+0x2e8>
   4e538:	da001017 	ldw	r8,64(sp)
   4e53c:	101f883a 	mov	r15,r2
   4e540:	4a45883a 	add	r2,r9,r9
   4e544:	124d803a 	cmpltu	r6,r2,r9
   4e548:	5287883a 	add	r3,r10,r10
   4e54c:	9497883a 	add	r11,r18,r18
   4e550:	5c8f803a 	cmpltu	r7,r11,r18
   4e554:	9cd9883a 	add	r12,r19,r19
   4e558:	01000044 	movi	r4,1
   4e55c:	30cd883a 	add	r6,r6,r3
   4e560:	3b0f883a 	add	r7,r7,r12
   4e564:	423fffc4 	addi	r8,r8,-1
   4e568:	1013883a 	mov	r9,r2
   4e56c:	3015883a 	mov	r10,r6
   4e570:	111ab03a 	or	r13,r2,r4
   4e574:	98003016 	blt	r19,zero,4e638 <__muldf3+0x398>
   4e578:	5825883a 	mov	r18,r11
   4e57c:	3827883a 	mov	r19,r7
   4e580:	7abfef2e 	bgeu	r15,r10,4e540 <__muldf3+0x2a0>
   4e584:	da001015 	stw	r8,64(sp)
   4e588:	00803fc4 	movi	r2,255
   4e58c:	488e703a 	and	r7,r9,r2
   4e590:	00802004 	movi	r2,128
   4e594:	0007883a 	mov	r3,zero
   4e598:	0011883a 	mov	r8,zero
   4e59c:	38801826 	beq	r7,r2,4e600 <__muldf3+0x360>
   4e5a0:	008000c4 	movi	r2,3
   4e5a4:	d9000e04 	addi	r4,sp,56
   4e5a8:	da801215 	stw	r10,72(sp)
   4e5ac:	d8800e15 	stw	r2,56(sp)
   4e5b0:	da401115 	stw	r9,68(sp)
   4e5b4:	003f6a06 	br	4e360 <__muldf3+0xc0>
   4e5b8:	89802126 	beq	r17,r6,4e640 <__muldf3+0x3a0>
   4e5bc:	0009883a 	mov	r4,zero
   4e5c0:	5105883a 	add	r2,r10,r4
   4e5c4:	128d803a 	cmpltu	r6,r2,r10
   4e5c8:	5d07883a 	add	r3,r11,r20
   4e5cc:	30cd883a 	add	r6,r6,r3
   4e5d0:	0021883a 	mov	r16,zero
   4e5d4:	0023883a 	mov	r17,zero
   4e5d8:	1025883a 	mov	r18,r2
   4e5dc:	3027883a 	mov	r19,r6
   4e5e0:	32ff9e2e 	bgeu	r6,r11,4e45c <__muldf3+0x1bc>
   4e5e4:	00800044 	movi	r2,1
   4e5e8:	8089883a 	add	r4,r16,r2
   4e5ec:	240d803a 	cmpltu	r6,r4,r16
   4e5f0:	344d883a 	add	r6,r6,r17
   4e5f4:	2021883a 	mov	r16,r4
   4e5f8:	3023883a 	mov	r17,r6
   4e5fc:	003f9806 	br	4e460 <__muldf3+0x1c0>
   4e600:	403fe71e 	bne	r8,zero,4e5a0 <__muldf3+0x300>
   4e604:	01004004 	movi	r4,256
   4e608:	4904703a 	and	r2,r9,r4
   4e60c:	10c4b03a 	or	r2,r2,r3
   4e610:	103fe31e 	bne	r2,zero,4e5a0 <__muldf3+0x300>
   4e614:	94c4b03a 	or	r2,r18,r19
   4e618:	103fe126 	beq	r2,zero,4e5a0 <__muldf3+0x300>
   4e61c:	49c5883a 	add	r2,r9,r7
   4e620:	1251803a 	cmpltu	r8,r2,r9
   4e624:	4291883a 	add	r8,r8,r10
   4e628:	013fc004 	movi	r4,-256
   4e62c:	1112703a 	and	r9,r2,r4
   4e630:	4015883a 	mov	r10,r8
   4e634:	003fda06 	br	4e5a0 <__muldf3+0x300>
   4e638:	6813883a 	mov	r9,r13
   4e63c:	003fce06 	br	4e578 <__muldf3+0x2d8>
   4e640:	143f7c36 	bltu	r2,r16,4e434 <__muldf3+0x194>
   4e644:	003fdd06 	br	4e5bc <__muldf3+0x31c>
   4e648:	12bf852e 	bgeu	r2,r10,4e460 <__muldf3+0x1c0>
   4e64c:	003fe506 	br	4e5e4 <__muldf3+0x344>
   4e650:	00800084 	movi	r2,2
   4e654:	20bf351e 	bne	r4,r2,4e32c <__muldf3+0x8c>
   4e658:	01000174 	movhi	r4,5
   4e65c:	210af304 	addi	r4,r4,11212
   4e660:	003f3f06 	br	4e360 <__muldf3+0xc0>

0004e664 <__divdf3>:
   4e664:	deffed04 	addi	sp,sp,-76
   4e668:	dcc01115 	stw	r19,68(sp)
   4e66c:	dcc00404 	addi	r19,sp,16
   4e670:	2011883a 	mov	r8,r4
   4e674:	2813883a 	mov	r9,r5
   4e678:	dc000e15 	stw	r16,56(sp)
   4e67c:	d809883a 	mov	r4,sp
   4e680:	980b883a 	mov	r5,r19
   4e684:	dc000904 	addi	r16,sp,36
   4e688:	dfc01215 	stw	ra,72(sp)
   4e68c:	da400115 	stw	r9,4(sp)
   4e690:	d9c00315 	stw	r7,12(sp)
   4e694:	da000015 	stw	r8,0(sp)
   4e698:	d9800215 	stw	r6,8(sp)
   4e69c:	dc801015 	stw	r18,64(sp)
   4e6a0:	dc400f15 	stw	r17,60(sp)
   4e6a4:	004f6780 	call	4f678 <__unpack_d>
   4e6a8:	d9000204 	addi	r4,sp,8
   4e6ac:	800b883a 	mov	r5,r16
   4e6b0:	004f6780 	call	4f678 <__unpack_d>
   4e6b4:	d9000417 	ldw	r4,16(sp)
   4e6b8:	00800044 	movi	r2,1
   4e6bc:	11000b2e 	bgeu	r2,r4,4e6ec <__divdf3+0x88>
   4e6c0:	d9400917 	ldw	r5,36(sp)
   4e6c4:	1140762e 	bgeu	r2,r5,4e8a0 <__divdf3+0x23c>
   4e6c8:	d8800517 	ldw	r2,20(sp)
   4e6cc:	d8c00a17 	ldw	r3,40(sp)
   4e6d0:	01800104 	movi	r6,4
   4e6d4:	10c4f03a 	xor	r2,r2,r3
   4e6d8:	d8800515 	stw	r2,20(sp)
   4e6dc:	21800226 	beq	r4,r6,4e6e8 <__divdf3+0x84>
   4e6e0:	00800084 	movi	r2,2
   4e6e4:	2080141e 	bne	r4,r2,4e738 <__divdf3+0xd4>
   4e6e8:	29000926 	beq	r5,r4,4e710 <__divdf3+0xac>
   4e6ec:	9809883a 	mov	r4,r19
   4e6f0:	004f3640 	call	4f364 <__pack_d>
   4e6f4:	dfc01217 	ldw	ra,72(sp)
   4e6f8:	dcc01117 	ldw	r19,68(sp)
   4e6fc:	dc801017 	ldw	r18,64(sp)
   4e700:	dc400f17 	ldw	r17,60(sp)
   4e704:	dc000e17 	ldw	r16,56(sp)
   4e708:	dec01304 	addi	sp,sp,76
   4e70c:	f800283a 	ret
   4e710:	01000174 	movhi	r4,5
   4e714:	210af304 	addi	r4,r4,11212
   4e718:	004f3640 	call	4f364 <__pack_d>
   4e71c:	dfc01217 	ldw	ra,72(sp)
   4e720:	dcc01117 	ldw	r19,68(sp)
   4e724:	dc801017 	ldw	r18,64(sp)
   4e728:	dc400f17 	ldw	r17,60(sp)
   4e72c:	dc000e17 	ldw	r16,56(sp)
   4e730:	dec01304 	addi	sp,sp,76
   4e734:	f800283a 	ret
   4e738:	29805b26 	beq	r5,r6,4e8a8 <__divdf3+0x244>
   4e73c:	28802d26 	beq	r5,r2,4e7f4 <__divdf3+0x190>
   4e740:	d8c00617 	ldw	r3,24(sp)
   4e744:	d8800b17 	ldw	r2,44(sp)
   4e748:	d9c00817 	ldw	r7,32(sp)
   4e74c:	dc400d17 	ldw	r17,52(sp)
   4e750:	188bc83a 	sub	r5,r3,r2
   4e754:	d9800717 	ldw	r6,28(sp)
   4e758:	dc000c17 	ldw	r16,48(sp)
   4e75c:	d9400615 	stw	r5,24(sp)
   4e760:	3c403836 	bltu	r7,r17,4e844 <__divdf3+0x1e0>
   4e764:	89c03626 	beq	r17,r7,4e840 <__divdf3+0x1dc>
   4e768:	0015883a 	mov	r10,zero
   4e76c:	001d883a 	mov	r14,zero
   4e770:	02c40034 	movhi	r11,4096
   4e774:	001f883a 	mov	r15,zero
   4e778:	003f883a 	mov	ra,zero
   4e77c:	04800f44 	movi	r18,61
   4e780:	00000f06 	br	4e7c0 <__divdf3+0x15c>
   4e784:	601d883a 	mov	r14,r12
   4e788:	681f883a 	mov	r15,r13
   4e78c:	400d883a 	mov	r6,r8
   4e790:	100f883a 	mov	r7,r2
   4e794:	3191883a 	add	r8,r6,r6
   4e798:	5808d07a 	srli	r4,r11,1
   4e79c:	4185803a 	cmpltu	r2,r8,r6
   4e7a0:	39d3883a 	add	r9,r7,r7
   4e7a4:	28c6b03a 	or	r3,r5,r3
   4e7a8:	1245883a 	add	r2,r2,r9
   4e7ac:	1815883a 	mov	r10,r3
   4e7b0:	2017883a 	mov	r11,r4
   4e7b4:	400d883a 	mov	r6,r8
   4e7b8:	100f883a 	mov	r7,r2
   4e7bc:	fc801726 	beq	ra,r18,4e81c <__divdf3+0x1b8>
   4e7c0:	580a97fa 	slli	r5,r11,31
   4e7c4:	5006d07a 	srli	r3,r10,1
   4e7c8:	ffc00044 	addi	ra,ra,1
   4e7cc:	3c7ff136 	bltu	r7,r17,4e794 <__divdf3+0x130>
   4e7d0:	3411c83a 	sub	r8,r6,r16
   4e7d4:	3205803a 	cmpltu	r2,r6,r8
   4e7d8:	3c53c83a 	sub	r9,r7,r17
   4e7dc:	7298b03a 	or	r12,r14,r10
   4e7e0:	7adab03a 	or	r13,r15,r11
   4e7e4:	4885c83a 	sub	r2,r9,r2
   4e7e8:	89ffe61e 	bne	r17,r7,4e784 <__divdf3+0x120>
   4e7ec:	343fe936 	bltu	r6,r16,4e794 <__divdf3+0x130>
   4e7f0:	003fe406 	br	4e784 <__divdf3+0x120>
   4e7f4:	9809883a 	mov	r4,r19
   4e7f8:	d9800415 	stw	r6,16(sp)
   4e7fc:	004f3640 	call	4f364 <__pack_d>
   4e800:	dfc01217 	ldw	ra,72(sp)
   4e804:	dcc01117 	ldw	r19,68(sp)
   4e808:	dc801017 	ldw	r18,64(sp)
   4e80c:	dc400f17 	ldw	r17,60(sp)
   4e810:	dc000e17 	ldw	r16,56(sp)
   4e814:	dec01304 	addi	sp,sp,76
   4e818:	f800283a 	ret
   4e81c:	00803fc4 	movi	r2,255
   4e820:	7090703a 	and	r8,r14,r2
   4e824:	00802004 	movi	r2,128
   4e828:	0007883a 	mov	r3,zero
   4e82c:	0013883a 	mov	r9,zero
   4e830:	40800d26 	beq	r8,r2,4e868 <__divdf3+0x204>
   4e834:	dbc00815 	stw	r15,32(sp)
   4e838:	db800715 	stw	r14,28(sp)
   4e83c:	003fab06 	br	4e6ec <__divdf3+0x88>
   4e840:	343fc92e 	bgeu	r6,r16,4e768 <__divdf3+0x104>
   4e844:	3185883a 	add	r2,r6,r6
   4e848:	1189803a 	cmpltu	r4,r2,r6
   4e84c:	39c7883a 	add	r3,r7,r7
   4e850:	20c9883a 	add	r4,r4,r3
   4e854:	297fffc4 	addi	r5,r5,-1
   4e858:	100d883a 	mov	r6,r2
   4e85c:	200f883a 	mov	r7,r4
   4e860:	d9400615 	stw	r5,24(sp)
   4e864:	003fc006 	br	4e768 <__divdf3+0x104>
   4e868:	483ff21e 	bne	r9,zero,4e834 <__divdf3+0x1d0>
   4e86c:	01004004 	movi	r4,256
   4e870:	7104703a 	and	r2,r14,r4
   4e874:	10c4b03a 	or	r2,r2,r3
   4e878:	103fee1e 	bne	r2,zero,4e834 <__divdf3+0x1d0>
   4e87c:	31c4b03a 	or	r2,r6,r7
   4e880:	103fec26 	beq	r2,zero,4e834 <__divdf3+0x1d0>
   4e884:	7205883a 	add	r2,r14,r8
   4e888:	1391803a 	cmpltu	r8,r2,r14
   4e88c:	43d1883a 	add	r8,r8,r15
   4e890:	013fc004 	movi	r4,-256
   4e894:	111c703a 	and	r14,r2,r4
   4e898:	401f883a 	mov	r15,r8
   4e89c:	003fe506 	br	4e834 <__divdf3+0x1d0>
   4e8a0:	8009883a 	mov	r4,r16
   4e8a4:	003f9206 	br	4e6f0 <__divdf3+0x8c>
   4e8a8:	9809883a 	mov	r4,r19
   4e8ac:	d8000715 	stw	zero,28(sp)
   4e8b0:	d8000815 	stw	zero,32(sp)
   4e8b4:	d8000615 	stw	zero,24(sp)
   4e8b8:	003f8d06 	br	4e6f0 <__divdf3+0x8c>

0004e8bc <__eqdf2>:
   4e8bc:	deffef04 	addi	sp,sp,-68
   4e8c0:	dc400f15 	stw	r17,60(sp)
   4e8c4:	dc400404 	addi	r17,sp,16
   4e8c8:	2005883a 	mov	r2,r4
   4e8cc:	2807883a 	mov	r3,r5
   4e8d0:	dc000e15 	stw	r16,56(sp)
   4e8d4:	d809883a 	mov	r4,sp
   4e8d8:	880b883a 	mov	r5,r17
   4e8dc:	dc000904 	addi	r16,sp,36
   4e8e0:	d8c00115 	stw	r3,4(sp)
   4e8e4:	d8800015 	stw	r2,0(sp)
   4e8e8:	d9800215 	stw	r6,8(sp)
   4e8ec:	dfc01015 	stw	ra,64(sp)
   4e8f0:	d9c00315 	stw	r7,12(sp)
   4e8f4:	004f6780 	call	4f678 <__unpack_d>
   4e8f8:	d9000204 	addi	r4,sp,8
   4e8fc:	800b883a 	mov	r5,r16
   4e900:	004f6780 	call	4f678 <__unpack_d>
   4e904:	d8800417 	ldw	r2,16(sp)
   4e908:	00c00044 	movi	r3,1
   4e90c:	180d883a 	mov	r6,r3
   4e910:	1880062e 	bgeu	r3,r2,4e92c <__eqdf2+0x70>
   4e914:	d8800917 	ldw	r2,36(sp)
   4e918:	8809883a 	mov	r4,r17
   4e91c:	800b883a 	mov	r5,r16
   4e920:	1880022e 	bgeu	r3,r2,4e92c <__eqdf2+0x70>
   4e924:	004f7b00 	call	4f7b0 <__fpcmp_parts_d>
   4e928:	100d883a 	mov	r6,r2
   4e92c:	3005883a 	mov	r2,r6
   4e930:	dfc01017 	ldw	ra,64(sp)
   4e934:	dc400f17 	ldw	r17,60(sp)
   4e938:	dc000e17 	ldw	r16,56(sp)
   4e93c:	dec01104 	addi	sp,sp,68
   4e940:	f800283a 	ret

0004e944 <__nedf2>:
   4e944:	deffef04 	addi	sp,sp,-68
   4e948:	dc400f15 	stw	r17,60(sp)
   4e94c:	dc400404 	addi	r17,sp,16
   4e950:	2005883a 	mov	r2,r4
   4e954:	2807883a 	mov	r3,r5
   4e958:	dc000e15 	stw	r16,56(sp)
   4e95c:	d809883a 	mov	r4,sp
   4e960:	880b883a 	mov	r5,r17
   4e964:	dc000904 	addi	r16,sp,36
   4e968:	d8c00115 	stw	r3,4(sp)
   4e96c:	d8800015 	stw	r2,0(sp)
   4e970:	d9800215 	stw	r6,8(sp)
   4e974:	dfc01015 	stw	ra,64(sp)
   4e978:	d9c00315 	stw	r7,12(sp)
   4e97c:	004f6780 	call	4f678 <__unpack_d>
   4e980:	d9000204 	addi	r4,sp,8
   4e984:	800b883a 	mov	r5,r16
   4e988:	004f6780 	call	4f678 <__unpack_d>
   4e98c:	d8800417 	ldw	r2,16(sp)
   4e990:	00c00044 	movi	r3,1
   4e994:	180d883a 	mov	r6,r3
   4e998:	1880062e 	bgeu	r3,r2,4e9b4 <__nedf2+0x70>
   4e99c:	d8800917 	ldw	r2,36(sp)
   4e9a0:	8809883a 	mov	r4,r17
   4e9a4:	800b883a 	mov	r5,r16
   4e9a8:	1880022e 	bgeu	r3,r2,4e9b4 <__nedf2+0x70>
   4e9ac:	004f7b00 	call	4f7b0 <__fpcmp_parts_d>
   4e9b0:	100d883a 	mov	r6,r2
   4e9b4:	3005883a 	mov	r2,r6
   4e9b8:	dfc01017 	ldw	ra,64(sp)
   4e9bc:	dc400f17 	ldw	r17,60(sp)
   4e9c0:	dc000e17 	ldw	r16,56(sp)
   4e9c4:	dec01104 	addi	sp,sp,68
   4e9c8:	f800283a 	ret

0004e9cc <__gtdf2>:
   4e9cc:	deffef04 	addi	sp,sp,-68
   4e9d0:	dc400f15 	stw	r17,60(sp)
   4e9d4:	dc400404 	addi	r17,sp,16
   4e9d8:	2005883a 	mov	r2,r4
   4e9dc:	2807883a 	mov	r3,r5
   4e9e0:	dc000e15 	stw	r16,56(sp)
   4e9e4:	d809883a 	mov	r4,sp
   4e9e8:	880b883a 	mov	r5,r17
   4e9ec:	dc000904 	addi	r16,sp,36
   4e9f0:	d8c00115 	stw	r3,4(sp)
   4e9f4:	d8800015 	stw	r2,0(sp)
   4e9f8:	d9800215 	stw	r6,8(sp)
   4e9fc:	dfc01015 	stw	ra,64(sp)
   4ea00:	d9c00315 	stw	r7,12(sp)
   4ea04:	004f6780 	call	4f678 <__unpack_d>
   4ea08:	d9000204 	addi	r4,sp,8
   4ea0c:	800b883a 	mov	r5,r16
   4ea10:	004f6780 	call	4f678 <__unpack_d>
   4ea14:	d8800417 	ldw	r2,16(sp)
   4ea18:	00c00044 	movi	r3,1
   4ea1c:	01bfffc4 	movi	r6,-1
   4ea20:	1880062e 	bgeu	r3,r2,4ea3c <__gtdf2+0x70>
   4ea24:	d8800917 	ldw	r2,36(sp)
   4ea28:	8809883a 	mov	r4,r17
   4ea2c:	800b883a 	mov	r5,r16
   4ea30:	1880022e 	bgeu	r3,r2,4ea3c <__gtdf2+0x70>
   4ea34:	004f7b00 	call	4f7b0 <__fpcmp_parts_d>
   4ea38:	100d883a 	mov	r6,r2
   4ea3c:	3005883a 	mov	r2,r6
   4ea40:	dfc01017 	ldw	ra,64(sp)
   4ea44:	dc400f17 	ldw	r17,60(sp)
   4ea48:	dc000e17 	ldw	r16,56(sp)
   4ea4c:	dec01104 	addi	sp,sp,68
   4ea50:	f800283a 	ret

0004ea54 <__gedf2>:
   4ea54:	deffef04 	addi	sp,sp,-68
   4ea58:	dc400f15 	stw	r17,60(sp)
   4ea5c:	dc400404 	addi	r17,sp,16
   4ea60:	2005883a 	mov	r2,r4
   4ea64:	2807883a 	mov	r3,r5
   4ea68:	dc000e15 	stw	r16,56(sp)
   4ea6c:	d809883a 	mov	r4,sp
   4ea70:	880b883a 	mov	r5,r17
   4ea74:	dc000904 	addi	r16,sp,36
   4ea78:	d8c00115 	stw	r3,4(sp)
   4ea7c:	d8800015 	stw	r2,0(sp)
   4ea80:	d9800215 	stw	r6,8(sp)
   4ea84:	dfc01015 	stw	ra,64(sp)
   4ea88:	d9c00315 	stw	r7,12(sp)
   4ea8c:	004f6780 	call	4f678 <__unpack_d>
   4ea90:	d9000204 	addi	r4,sp,8
   4ea94:	800b883a 	mov	r5,r16
   4ea98:	004f6780 	call	4f678 <__unpack_d>
   4ea9c:	d8800417 	ldw	r2,16(sp)
   4eaa0:	00c00044 	movi	r3,1
   4eaa4:	01bfffc4 	movi	r6,-1
   4eaa8:	1880062e 	bgeu	r3,r2,4eac4 <__gedf2+0x70>
   4eaac:	d8800917 	ldw	r2,36(sp)
   4eab0:	8809883a 	mov	r4,r17
   4eab4:	800b883a 	mov	r5,r16
   4eab8:	1880022e 	bgeu	r3,r2,4eac4 <__gedf2+0x70>
   4eabc:	004f7b00 	call	4f7b0 <__fpcmp_parts_d>
   4eac0:	100d883a 	mov	r6,r2
   4eac4:	3005883a 	mov	r2,r6
   4eac8:	dfc01017 	ldw	ra,64(sp)
   4eacc:	dc400f17 	ldw	r17,60(sp)
   4ead0:	dc000e17 	ldw	r16,56(sp)
   4ead4:	dec01104 	addi	sp,sp,68
   4ead8:	f800283a 	ret

0004eadc <__ltdf2>:
   4eadc:	deffef04 	addi	sp,sp,-68
   4eae0:	dc400f15 	stw	r17,60(sp)
   4eae4:	dc400404 	addi	r17,sp,16
   4eae8:	2005883a 	mov	r2,r4
   4eaec:	2807883a 	mov	r3,r5
   4eaf0:	dc000e15 	stw	r16,56(sp)
   4eaf4:	d809883a 	mov	r4,sp
   4eaf8:	880b883a 	mov	r5,r17
   4eafc:	dc000904 	addi	r16,sp,36
   4eb00:	d8c00115 	stw	r3,4(sp)
   4eb04:	d8800015 	stw	r2,0(sp)
   4eb08:	d9800215 	stw	r6,8(sp)
   4eb0c:	dfc01015 	stw	ra,64(sp)
   4eb10:	d9c00315 	stw	r7,12(sp)
   4eb14:	004f6780 	call	4f678 <__unpack_d>
   4eb18:	d9000204 	addi	r4,sp,8
   4eb1c:	800b883a 	mov	r5,r16
   4eb20:	004f6780 	call	4f678 <__unpack_d>
   4eb24:	d8800417 	ldw	r2,16(sp)
   4eb28:	00c00044 	movi	r3,1
   4eb2c:	180d883a 	mov	r6,r3
   4eb30:	1880062e 	bgeu	r3,r2,4eb4c <__ltdf2+0x70>
   4eb34:	d8800917 	ldw	r2,36(sp)
   4eb38:	8809883a 	mov	r4,r17
   4eb3c:	800b883a 	mov	r5,r16
   4eb40:	1880022e 	bgeu	r3,r2,4eb4c <__ltdf2+0x70>
   4eb44:	004f7b00 	call	4f7b0 <__fpcmp_parts_d>
   4eb48:	100d883a 	mov	r6,r2
   4eb4c:	3005883a 	mov	r2,r6
   4eb50:	dfc01017 	ldw	ra,64(sp)
   4eb54:	dc400f17 	ldw	r17,60(sp)
   4eb58:	dc000e17 	ldw	r16,56(sp)
   4eb5c:	dec01104 	addi	sp,sp,68
   4eb60:	f800283a 	ret

0004eb64 <__ledf2>:
   4eb64:	deffef04 	addi	sp,sp,-68
   4eb68:	dc400f15 	stw	r17,60(sp)
   4eb6c:	dc400404 	addi	r17,sp,16
   4eb70:	2005883a 	mov	r2,r4
   4eb74:	2807883a 	mov	r3,r5
   4eb78:	dc000e15 	stw	r16,56(sp)
   4eb7c:	d809883a 	mov	r4,sp
   4eb80:	880b883a 	mov	r5,r17
   4eb84:	dc000904 	addi	r16,sp,36
   4eb88:	d8c00115 	stw	r3,4(sp)
   4eb8c:	d8800015 	stw	r2,0(sp)
   4eb90:	d9800215 	stw	r6,8(sp)
   4eb94:	dfc01015 	stw	ra,64(sp)
   4eb98:	d9c00315 	stw	r7,12(sp)
   4eb9c:	004f6780 	call	4f678 <__unpack_d>
   4eba0:	d9000204 	addi	r4,sp,8
   4eba4:	800b883a 	mov	r5,r16
   4eba8:	004f6780 	call	4f678 <__unpack_d>
   4ebac:	d8800417 	ldw	r2,16(sp)
   4ebb0:	00c00044 	movi	r3,1
   4ebb4:	180d883a 	mov	r6,r3
   4ebb8:	1880062e 	bgeu	r3,r2,4ebd4 <__ledf2+0x70>
   4ebbc:	d8800917 	ldw	r2,36(sp)
   4ebc0:	8809883a 	mov	r4,r17
   4ebc4:	800b883a 	mov	r5,r16
   4ebc8:	1880022e 	bgeu	r3,r2,4ebd4 <__ledf2+0x70>
   4ebcc:	004f7b00 	call	4f7b0 <__fpcmp_parts_d>
   4ebd0:	100d883a 	mov	r6,r2
   4ebd4:	3005883a 	mov	r2,r6
   4ebd8:	dfc01017 	ldw	ra,64(sp)
   4ebdc:	dc400f17 	ldw	r17,60(sp)
   4ebe0:	dc000e17 	ldw	r16,56(sp)
   4ebe4:	dec01104 	addi	sp,sp,68
   4ebe8:	f800283a 	ret

0004ebec <__floatsidf>:
   4ebec:	2006d7fa 	srli	r3,r4,31
   4ebf0:	defff604 	addi	sp,sp,-40
   4ebf4:	008000c4 	movi	r2,3
   4ebf8:	dfc00915 	stw	ra,36(sp)
   4ebfc:	dcc00815 	stw	r19,32(sp)
   4ec00:	dc800715 	stw	r18,28(sp)
   4ec04:	dc400615 	stw	r17,24(sp)
   4ec08:	dc000515 	stw	r16,20(sp)
   4ec0c:	d8800015 	stw	r2,0(sp)
   4ec10:	d8c00115 	stw	r3,4(sp)
   4ec14:	20000f1e 	bne	r4,zero,4ec54 <__floatsidf+0x68>
   4ec18:	00800084 	movi	r2,2
   4ec1c:	d8800015 	stw	r2,0(sp)
   4ec20:	d809883a 	mov	r4,sp
   4ec24:	004f3640 	call	4f364 <__pack_d>
   4ec28:	1009883a 	mov	r4,r2
   4ec2c:	180b883a 	mov	r5,r3
   4ec30:	2005883a 	mov	r2,r4
   4ec34:	2807883a 	mov	r3,r5
   4ec38:	dfc00917 	ldw	ra,36(sp)
   4ec3c:	dcc00817 	ldw	r19,32(sp)
   4ec40:	dc800717 	ldw	r18,28(sp)
   4ec44:	dc400617 	ldw	r17,24(sp)
   4ec48:	dc000517 	ldw	r16,20(sp)
   4ec4c:	dec00a04 	addi	sp,sp,40
   4ec50:	f800283a 	ret
   4ec54:	00800f04 	movi	r2,60
   4ec58:	1807003a 	cmpeq	r3,r3,zero
   4ec5c:	d8800215 	stw	r2,8(sp)
   4ec60:	18001126 	beq	r3,zero,4eca8 <__floatsidf+0xbc>
   4ec64:	0027883a 	mov	r19,zero
   4ec68:	2025883a 	mov	r18,r4
   4ec6c:	d9000315 	stw	r4,12(sp)
   4ec70:	dcc00415 	stw	r19,16(sp)
   4ec74:	004f1480 	call	4f148 <__clzsi2>
   4ec78:	11000744 	addi	r4,r2,29
   4ec7c:	013fe80e 	bge	zero,r4,4ec20 <__floatsidf+0x34>
   4ec80:	10bfff44 	addi	r2,r2,-3
   4ec84:	10000c16 	blt	r2,zero,4ecb8 <__floatsidf+0xcc>
   4ec88:	90a2983a 	sll	r17,r18,r2
   4ec8c:	0021883a 	mov	r16,zero
   4ec90:	d8800217 	ldw	r2,8(sp)
   4ec94:	dc400415 	stw	r17,16(sp)
   4ec98:	dc000315 	stw	r16,12(sp)
   4ec9c:	1105c83a 	sub	r2,r2,r4
   4eca0:	d8800215 	stw	r2,8(sp)
   4eca4:	003fde06 	br	4ec20 <__floatsidf+0x34>
   4eca8:	00a00034 	movhi	r2,32768
   4ecac:	20800a26 	beq	r4,r2,4ecd8 <__floatsidf+0xec>
   4ecb0:	0109c83a 	sub	r4,zero,r4
   4ecb4:	003feb06 	br	4ec64 <__floatsidf+0x78>
   4ecb8:	9006d07a 	srli	r3,r18,1
   4ecbc:	008007c4 	movi	r2,31
   4ecc0:	1105c83a 	sub	r2,r2,r4
   4ecc4:	1886d83a 	srl	r3,r3,r2
   4ecc8:	9922983a 	sll	r17,r19,r4
   4eccc:	9120983a 	sll	r16,r18,r4
   4ecd0:	1c62b03a 	or	r17,r3,r17
   4ecd4:	003fee06 	br	4ec90 <__floatsidf+0xa4>
   4ecd8:	0009883a 	mov	r4,zero
   4ecdc:	01707834 	movhi	r5,49632
   4ece0:	003fd306 	br	4ec30 <__floatsidf+0x44>

0004ece4 <__fixdfsi>:
   4ece4:	defff804 	addi	sp,sp,-32
   4ece8:	2005883a 	mov	r2,r4
   4ecec:	2807883a 	mov	r3,r5
   4ecf0:	d809883a 	mov	r4,sp
   4ecf4:	d9400204 	addi	r5,sp,8
   4ecf8:	d8c00115 	stw	r3,4(sp)
   4ecfc:	d8800015 	stw	r2,0(sp)
   4ed00:	dfc00715 	stw	ra,28(sp)
   4ed04:	004f6780 	call	4f678 <__unpack_d>
   4ed08:	d8c00217 	ldw	r3,8(sp)
   4ed0c:	00800084 	movi	r2,2
   4ed10:	1880051e 	bne	r3,r2,4ed28 <__fixdfsi+0x44>
   4ed14:	0007883a 	mov	r3,zero
   4ed18:	1805883a 	mov	r2,r3
   4ed1c:	dfc00717 	ldw	ra,28(sp)
   4ed20:	dec00804 	addi	sp,sp,32
   4ed24:	f800283a 	ret
   4ed28:	00800044 	movi	r2,1
   4ed2c:	10fff92e 	bgeu	r2,r3,4ed14 <__fixdfsi+0x30>
   4ed30:	00800104 	movi	r2,4
   4ed34:	18800426 	beq	r3,r2,4ed48 <__fixdfsi+0x64>
   4ed38:	d8c00417 	ldw	r3,16(sp)
   4ed3c:	183ff516 	blt	r3,zero,4ed14 <__fixdfsi+0x30>
   4ed40:	00800784 	movi	r2,30
   4ed44:	10c0080e 	bge	r2,r3,4ed68 <__fixdfsi+0x84>
   4ed48:	d8800317 	ldw	r2,12(sp)
   4ed4c:	1000121e 	bne	r2,zero,4ed98 <__fixdfsi+0xb4>
   4ed50:	00e00034 	movhi	r3,32768
   4ed54:	18ffffc4 	addi	r3,r3,-1
   4ed58:	1805883a 	mov	r2,r3
   4ed5c:	dfc00717 	ldw	ra,28(sp)
   4ed60:	dec00804 	addi	sp,sp,32
   4ed64:	f800283a 	ret
   4ed68:	00800f04 	movi	r2,60
   4ed6c:	10d1c83a 	sub	r8,r2,r3
   4ed70:	40bff804 	addi	r2,r8,-32
   4ed74:	d9800517 	ldw	r6,20(sp)
   4ed78:	d9c00617 	ldw	r7,24(sp)
   4ed7c:	10000816 	blt	r2,zero,4eda0 <__fixdfsi+0xbc>
   4ed80:	3888d83a 	srl	r4,r7,r2
   4ed84:	d8800317 	ldw	r2,12(sp)
   4ed88:	2007883a 	mov	r3,r4
   4ed8c:	103fe226 	beq	r2,zero,4ed18 <__fixdfsi+0x34>
   4ed90:	0107c83a 	sub	r3,zero,r4
   4ed94:	003fe006 	br	4ed18 <__fixdfsi+0x34>
   4ed98:	00e00034 	movhi	r3,32768
   4ed9c:	003fde06 	br	4ed18 <__fixdfsi+0x34>
   4eda0:	39c7883a 	add	r3,r7,r7
   4eda4:	008007c4 	movi	r2,31
   4eda8:	1205c83a 	sub	r2,r2,r8
   4edac:	1886983a 	sll	r3,r3,r2
   4edb0:	3208d83a 	srl	r4,r6,r8
   4edb4:	1908b03a 	or	r4,r3,r4
   4edb8:	003ff206 	br	4ed84 <__fixdfsi+0xa0>

0004edbc <__truncdfsf2>:
   4edbc:	defff804 	addi	sp,sp,-32
   4edc0:	2005883a 	mov	r2,r4
   4edc4:	2807883a 	mov	r3,r5
   4edc8:	d809883a 	mov	r4,sp
   4edcc:	d9400204 	addi	r5,sp,8
   4edd0:	d8c00115 	stw	r3,4(sp)
   4edd4:	d8800015 	stw	r2,0(sp)
   4edd8:	dfc00715 	stw	ra,28(sp)
   4eddc:	004f6780 	call	4f678 <__unpack_d>
   4ede0:	d9c00517 	ldw	r7,20(sp)
   4ede4:	da000617 	ldw	r8,24(sp)
   4ede8:	02d00034 	movhi	r11,16384
   4edec:	5affffc4 	addi	r11,r11,-1
   4edf0:	3812d7ba 	srli	r9,r7,30
   4edf4:	401a90ba 	slli	r13,r8,2
   4edf8:	3ac4703a 	and	r2,r7,r11
   4edfc:	0007883a 	mov	r3,zero
   4ee00:	6a52b03a 	or	r9,r13,r9
   4ee04:	10c4b03a 	or	r2,r2,r3
   4ee08:	d9000217 	ldw	r4,8(sp)
   4ee0c:	d9400317 	ldw	r5,12(sp)
   4ee10:	d9800417 	ldw	r6,16(sp)
   4ee14:	480f883a 	mov	r7,r9
   4ee18:	10000126 	beq	r2,zero,4ee20 <__truncdfsf2+0x64>
   4ee1c:	49c00054 	ori	r7,r9,1
   4ee20:	004f3380 	call	4f338 <__make_fp>
   4ee24:	dfc00717 	ldw	ra,28(sp)
   4ee28:	dec00804 	addi	sp,sp,32
   4ee2c:	f800283a 	ret

0004ee30 <__floatunsidf>:
   4ee30:	defff204 	addi	sp,sp,-56
   4ee34:	dfc00d15 	stw	ra,52(sp)
   4ee38:	ddc00c15 	stw	r23,48(sp)
   4ee3c:	dd800b15 	stw	r22,44(sp)
   4ee40:	dd400a15 	stw	r21,40(sp)
   4ee44:	dd000915 	stw	r20,36(sp)
   4ee48:	dcc00815 	stw	r19,32(sp)
   4ee4c:	dc800715 	stw	r18,28(sp)
   4ee50:	dc400615 	stw	r17,24(sp)
   4ee54:	dc000515 	stw	r16,20(sp)
   4ee58:	d8000115 	stw	zero,4(sp)
   4ee5c:	20000f1e 	bne	r4,zero,4ee9c <__floatunsidf+0x6c>
   4ee60:	00800084 	movi	r2,2
   4ee64:	d8800015 	stw	r2,0(sp)
   4ee68:	d809883a 	mov	r4,sp
   4ee6c:	004f3640 	call	4f364 <__pack_d>
   4ee70:	dfc00d17 	ldw	ra,52(sp)
   4ee74:	ddc00c17 	ldw	r23,48(sp)
   4ee78:	dd800b17 	ldw	r22,44(sp)
   4ee7c:	dd400a17 	ldw	r21,40(sp)
   4ee80:	dd000917 	ldw	r20,36(sp)
   4ee84:	dcc00817 	ldw	r19,32(sp)
   4ee88:	dc800717 	ldw	r18,28(sp)
   4ee8c:	dc400617 	ldw	r17,24(sp)
   4ee90:	dc000517 	ldw	r16,20(sp)
   4ee94:	dec00e04 	addi	sp,sp,56
   4ee98:	f800283a 	ret
   4ee9c:	008000c4 	movi	r2,3
   4eea0:	00c00f04 	movi	r3,60
   4eea4:	002f883a 	mov	r23,zero
   4eea8:	202d883a 	mov	r22,r4
   4eeac:	d8800015 	stw	r2,0(sp)
   4eeb0:	d8c00215 	stw	r3,8(sp)
   4eeb4:	d9000315 	stw	r4,12(sp)
   4eeb8:	ddc00415 	stw	r23,16(sp)
   4eebc:	004f1480 	call	4f148 <__clzsi2>
   4eec0:	12400744 	addi	r9,r2,29
   4eec4:	48000b16 	blt	r9,zero,4eef4 <__floatunsidf+0xc4>
   4eec8:	483fe726 	beq	r9,zero,4ee68 <__floatunsidf+0x38>
   4eecc:	10bfff44 	addi	r2,r2,-3
   4eed0:	10002e16 	blt	r2,zero,4ef8c <__floatunsidf+0x15c>
   4eed4:	b0a2983a 	sll	r17,r22,r2
   4eed8:	0021883a 	mov	r16,zero
   4eedc:	d8800217 	ldw	r2,8(sp)
   4eee0:	dc400415 	stw	r17,16(sp)
   4eee4:	dc000315 	stw	r16,12(sp)
   4eee8:	1245c83a 	sub	r2,r2,r9
   4eeec:	d8800215 	stw	r2,8(sp)
   4eef0:	003fdd06 	br	4ee68 <__floatunsidf+0x38>
   4eef4:	0255c83a 	sub	r10,zero,r9
   4eef8:	51bff804 	addi	r6,r10,-32
   4eefc:	30001b16 	blt	r6,zero,4ef6c <__floatunsidf+0x13c>
   4ef00:	b9a8d83a 	srl	r20,r23,r6
   4ef04:	002b883a 	mov	r21,zero
   4ef08:	000f883a 	mov	r7,zero
   4ef0c:	01000044 	movi	r4,1
   4ef10:	0011883a 	mov	r8,zero
   4ef14:	30002516 	blt	r6,zero,4efac <__floatunsidf+0x17c>
   4ef18:	21a6983a 	sll	r19,r4,r6
   4ef1c:	0025883a 	mov	r18,zero
   4ef20:	00bfffc4 	movi	r2,-1
   4ef24:	9089883a 	add	r4,r18,r2
   4ef28:	988b883a 	add	r5,r19,r2
   4ef2c:	248d803a 	cmpltu	r6,r4,r18
   4ef30:	314b883a 	add	r5,r6,r5
   4ef34:	b104703a 	and	r2,r22,r4
   4ef38:	b946703a 	and	r3,r23,r5
   4ef3c:	10c4b03a 	or	r2,r2,r3
   4ef40:	10000226 	beq	r2,zero,4ef4c <__floatunsidf+0x11c>
   4ef44:	01c00044 	movi	r7,1
   4ef48:	0011883a 	mov	r8,zero
   4ef4c:	d9000217 	ldw	r4,8(sp)
   4ef50:	a1c4b03a 	or	r2,r20,r7
   4ef54:	aa06b03a 	or	r3,r21,r8
   4ef58:	2249c83a 	sub	r4,r4,r9
   4ef5c:	d8c00415 	stw	r3,16(sp)
   4ef60:	d9000215 	stw	r4,8(sp)
   4ef64:	d8800315 	stw	r2,12(sp)
   4ef68:	003fbf06 	br	4ee68 <__floatunsidf+0x38>
   4ef6c:	bdc7883a 	add	r3,r23,r23
   4ef70:	008007c4 	movi	r2,31
   4ef74:	1285c83a 	sub	r2,r2,r10
   4ef78:	1886983a 	sll	r3,r3,r2
   4ef7c:	b2a8d83a 	srl	r20,r22,r10
   4ef80:	baaad83a 	srl	r21,r23,r10
   4ef84:	1d28b03a 	or	r20,r3,r20
   4ef88:	003fdf06 	br	4ef08 <__floatunsidf+0xd8>
   4ef8c:	b006d07a 	srli	r3,r22,1
   4ef90:	008007c4 	movi	r2,31
   4ef94:	1245c83a 	sub	r2,r2,r9
   4ef98:	1886d83a 	srl	r3,r3,r2
   4ef9c:	ba62983a 	sll	r17,r23,r9
   4efa0:	b260983a 	sll	r16,r22,r9
   4efa4:	1c62b03a 	or	r17,r3,r17
   4efa8:	003fcc06 	br	4eedc <__floatunsidf+0xac>
   4efac:	2006d07a 	srli	r3,r4,1
   4efb0:	008007c4 	movi	r2,31
   4efb4:	1285c83a 	sub	r2,r2,r10
   4efb8:	18a6d83a 	srl	r19,r3,r2
   4efbc:	22a4983a 	sll	r18,r4,r10
   4efc0:	003fd706 	br	4ef20 <__floatunsidf+0xf0>

0004efc4 <udivmodsi4>:
   4efc4:	29001b2e 	bgeu	r5,r4,4f034 <udivmodsi4+0x70>
   4efc8:	28001a16 	blt	r5,zero,4f034 <udivmodsi4+0x70>
   4efcc:	00800044 	movi	r2,1
   4efd0:	0007883a 	mov	r3,zero
   4efd4:	01c007c4 	movi	r7,31
   4efd8:	00000306 	br	4efe8 <udivmodsi4+0x24>
   4efdc:	19c01326 	beq	r3,r7,4f02c <udivmodsi4+0x68>
   4efe0:	18c00044 	addi	r3,r3,1
   4efe4:	28000416 	blt	r5,zero,4eff8 <udivmodsi4+0x34>
   4efe8:	294b883a 	add	r5,r5,r5
   4efec:	1085883a 	add	r2,r2,r2
   4eff0:	293ffa36 	bltu	r5,r4,4efdc <udivmodsi4+0x18>
   4eff4:	10000d26 	beq	r2,zero,4f02c <udivmodsi4+0x68>
   4eff8:	0007883a 	mov	r3,zero
   4effc:	21400236 	bltu	r4,r5,4f008 <udivmodsi4+0x44>
   4f000:	2149c83a 	sub	r4,r4,r5
   4f004:	1886b03a 	or	r3,r3,r2
   4f008:	1004d07a 	srli	r2,r2,1
   4f00c:	280ad07a 	srli	r5,r5,1
   4f010:	103ffa1e 	bne	r2,zero,4effc <udivmodsi4+0x38>
   4f014:	30000226 	beq	r6,zero,4f020 <udivmodsi4+0x5c>
   4f018:	2005883a 	mov	r2,r4
   4f01c:	f800283a 	ret
   4f020:	1809883a 	mov	r4,r3
   4f024:	2005883a 	mov	r2,r4
   4f028:	f800283a 	ret
   4f02c:	0007883a 	mov	r3,zero
   4f030:	003ff806 	br	4f014 <udivmodsi4+0x50>
   4f034:	00800044 	movi	r2,1
   4f038:	0007883a 	mov	r3,zero
   4f03c:	003fef06 	br	4effc <udivmodsi4+0x38>

0004f040 <__divsi3>:
   4f040:	defffe04 	addi	sp,sp,-8
   4f044:	dc000015 	stw	r16,0(sp)
   4f048:	dfc00115 	stw	ra,4(sp)
   4f04c:	0021883a 	mov	r16,zero
   4f050:	20000c16 	blt	r4,zero,4f084 <__divsi3+0x44>
   4f054:	000d883a 	mov	r6,zero
   4f058:	28000e16 	blt	r5,zero,4f094 <__divsi3+0x54>
   4f05c:	004efc40 	call	4efc4 <udivmodsi4>
   4f060:	1007883a 	mov	r3,r2
   4f064:	8005003a 	cmpeq	r2,r16,zero
   4f068:	1000011e 	bne	r2,zero,4f070 <__divsi3+0x30>
   4f06c:	00c7c83a 	sub	r3,zero,r3
   4f070:	1805883a 	mov	r2,r3
   4f074:	dfc00117 	ldw	ra,4(sp)
   4f078:	dc000017 	ldw	r16,0(sp)
   4f07c:	dec00204 	addi	sp,sp,8
   4f080:	f800283a 	ret
   4f084:	0109c83a 	sub	r4,zero,r4
   4f088:	04000044 	movi	r16,1
   4f08c:	000d883a 	mov	r6,zero
   4f090:	283ff20e 	bge	r5,zero,4f05c <__divsi3+0x1c>
   4f094:	014bc83a 	sub	r5,zero,r5
   4f098:	8021003a 	cmpeq	r16,r16,zero
   4f09c:	003fef06 	br	4f05c <__divsi3+0x1c>

0004f0a0 <__modsi3>:
   4f0a0:	deffff04 	addi	sp,sp,-4
   4f0a4:	dfc00015 	stw	ra,0(sp)
   4f0a8:	01800044 	movi	r6,1
   4f0ac:	2807883a 	mov	r3,r5
   4f0b0:	20000416 	blt	r4,zero,4f0c4 <__modsi3+0x24>
   4f0b4:	28000c16 	blt	r5,zero,4f0e8 <__modsi3+0x48>
   4f0b8:	dfc00017 	ldw	ra,0(sp)
   4f0bc:	dec00104 	addi	sp,sp,4
   4f0c0:	004efc41 	jmpi	4efc4 <udivmodsi4>
   4f0c4:	0109c83a 	sub	r4,zero,r4
   4f0c8:	28000b16 	blt	r5,zero,4f0f8 <__modsi3+0x58>
   4f0cc:	180b883a 	mov	r5,r3
   4f0d0:	01800044 	movi	r6,1
   4f0d4:	004efc40 	call	4efc4 <udivmodsi4>
   4f0d8:	0085c83a 	sub	r2,zero,r2
   4f0dc:	dfc00017 	ldw	ra,0(sp)
   4f0e0:	dec00104 	addi	sp,sp,4
   4f0e4:	f800283a 	ret
   4f0e8:	014bc83a 	sub	r5,zero,r5
   4f0ec:	dfc00017 	ldw	ra,0(sp)
   4f0f0:	dec00104 	addi	sp,sp,4
   4f0f4:	004efc41 	jmpi	4efc4 <udivmodsi4>
   4f0f8:	0147c83a 	sub	r3,zero,r5
   4f0fc:	003ff306 	br	4f0cc <__modsi3+0x2c>

0004f100 <__udivsi3>:
   4f100:	000d883a 	mov	r6,zero
   4f104:	004efc41 	jmpi	4efc4 <udivmodsi4>

0004f108 <__umodsi3>:
   4f108:	01800044 	movi	r6,1
   4f10c:	004efc41 	jmpi	4efc4 <udivmodsi4>

0004f110 <__mulsi3>:
   4f110:	20000a26 	beq	r4,zero,4f13c <__mulsi3+0x2c>
   4f114:	0007883a 	mov	r3,zero
   4f118:	2080004c 	andi	r2,r4,1
   4f11c:	1005003a 	cmpeq	r2,r2,zero
   4f120:	2008d07a 	srli	r4,r4,1
   4f124:	1000011e 	bne	r2,zero,4f12c <__mulsi3+0x1c>
   4f128:	1947883a 	add	r3,r3,r5
   4f12c:	294b883a 	add	r5,r5,r5
   4f130:	203ff91e 	bne	r4,zero,4f118 <__mulsi3+0x8>
   4f134:	1805883a 	mov	r2,r3
   4f138:	f800283a 	ret
   4f13c:	0007883a 	mov	r3,zero
   4f140:	1805883a 	mov	r2,r3
   4f144:	f800283a 	ret

0004f148 <__clzsi2>:
   4f148:	00bfffd4 	movui	r2,65535
   4f14c:	11000e36 	bltu	r2,r4,4f188 <__clzsi2+0x40>
   4f150:	00803fc4 	movi	r2,255
   4f154:	01400204 	movi	r5,8
   4f158:	0007883a 	mov	r3,zero
   4f15c:	11001036 	bltu	r2,r4,4f1a0 <__clzsi2+0x58>
   4f160:	000b883a 	mov	r5,zero
   4f164:	20c6d83a 	srl	r3,r4,r3
   4f168:	00800174 	movhi	r2,5
   4f16c:	108af804 	addi	r2,r2,11232
   4f170:	1887883a 	add	r3,r3,r2
   4f174:	18800003 	ldbu	r2,0(r3)
   4f178:	00c00804 	movi	r3,32
   4f17c:	2885883a 	add	r2,r5,r2
   4f180:	1885c83a 	sub	r2,r3,r2
   4f184:	f800283a 	ret
   4f188:	01400404 	movi	r5,16
   4f18c:	00804034 	movhi	r2,256
   4f190:	10bfffc4 	addi	r2,r2,-1
   4f194:	2807883a 	mov	r3,r5
   4f198:	113ff22e 	bgeu	r2,r4,4f164 <__clzsi2+0x1c>
   4f19c:	01400604 	movi	r5,24
   4f1a0:	2807883a 	mov	r3,r5
   4f1a4:	20c6d83a 	srl	r3,r4,r3
   4f1a8:	00800174 	movhi	r2,5
   4f1ac:	108af804 	addi	r2,r2,11232
   4f1b0:	1887883a 	add	r3,r3,r2
   4f1b4:	18800003 	ldbu	r2,0(r3)
   4f1b8:	00c00804 	movi	r3,32
   4f1bc:	2885883a 	add	r2,r5,r2
   4f1c0:	1885c83a 	sub	r2,r3,r2
   4f1c4:	f800283a 	ret

0004f1c8 <__unpack_f>:
   4f1c8:	21800017 	ldw	r6,0(r4)
   4f1cc:	00c02034 	movhi	r3,128
   4f1d0:	18ffffc4 	addi	r3,r3,-1
   4f1d4:	3004d5fa 	srli	r2,r6,23
   4f1d8:	3008d7fa 	srli	r4,r6,31
   4f1dc:	30ce703a 	and	r7,r6,r3
   4f1e0:	10c03fcc 	andi	r3,r2,255
   4f1e4:	29000115 	stw	r4,4(r5)
   4f1e8:	1800131e 	bne	r3,zero,4f238 <__unpack_f+0x70>
   4f1ec:	38000f26 	beq	r7,zero,4f22c <__unpack_f+0x64>
   4f1f0:	380691fa 	slli	r3,r7,7
   4f1f4:	01bfe084 	movi	r6,-126
   4f1f8:	008000c4 	movi	r2,3
   4f1fc:	01100034 	movhi	r4,16384
   4f200:	213fffc4 	addi	r4,r4,-1
   4f204:	28800015 	stw	r2,0(r5)
   4f208:	29800215 	stw	r6,8(r5)
   4f20c:	20c00536 	bltu	r4,r3,4f224 <__unpack_f+0x5c>
   4f210:	3005883a 	mov	r2,r6
   4f214:	18c7883a 	add	r3,r3,r3
   4f218:	10bfffc4 	addi	r2,r2,-1
   4f21c:	20fffd2e 	bgeu	r4,r3,4f214 <__unpack_f+0x4c>
   4f220:	28800215 	stw	r2,8(r5)
   4f224:	28c00315 	stw	r3,12(r5)
   4f228:	f800283a 	ret
   4f22c:	00800084 	movi	r2,2
   4f230:	28800015 	stw	r2,0(r5)
   4f234:	f800283a 	ret
   4f238:	00803fc4 	movi	r2,255
   4f23c:	18800826 	beq	r3,r2,4f260 <__unpack_f+0x98>
   4f240:	380491fa 	slli	r2,r7,7
   4f244:	18ffe044 	addi	r3,r3,-127
   4f248:	28c00215 	stw	r3,8(r5)
   4f24c:	10900034 	orhi	r2,r2,16384
   4f250:	28800315 	stw	r2,12(r5)
   4f254:	008000c4 	movi	r2,3
   4f258:	28800015 	stw	r2,0(r5)
   4f25c:	f800283a 	ret
   4f260:	3800031e 	bne	r7,zero,4f270 <__unpack_f+0xa8>
   4f264:	00800104 	movi	r2,4
   4f268:	28800015 	stw	r2,0(r5)
   4f26c:	f800283a 	ret
   4f270:	3080042c 	andhi	r2,r6,16
   4f274:	10000426 	beq	r2,zero,4f288 <__unpack_f+0xc0>
   4f278:	00800044 	movi	r2,1
   4f27c:	28800015 	stw	r2,0(r5)
   4f280:	29c00315 	stw	r7,12(r5)
   4f284:	f800283a 	ret
   4f288:	28000015 	stw	zero,0(r5)
   4f28c:	003ffc06 	br	4f280 <__unpack_f+0xb8>

0004f290 <__fpcmp_parts_f>:
   4f290:	21800017 	ldw	r6,0(r4)
   4f294:	00c00044 	movi	r3,1
   4f298:	19800a2e 	bgeu	r3,r6,4f2c4 <__fpcmp_parts_f+0x34>
   4f29c:	28800017 	ldw	r2,0(r5)
   4f2a0:	1880082e 	bgeu	r3,r2,4f2c4 <__fpcmp_parts_f+0x34>
   4f2a4:	00c00104 	movi	r3,4
   4f2a8:	30c01e26 	beq	r6,r3,4f324 <__fpcmp_parts_f+0x94>
   4f2ac:	10c01a26 	beq	r2,r3,4f318 <__fpcmp_parts_f+0x88>
   4f2b0:	00c00084 	movi	r3,2
   4f2b4:	30c00526 	beq	r6,r3,4f2cc <__fpcmp_parts_f+0x3c>
   4f2b8:	10c0071e 	bne	r2,r3,4f2d8 <__fpcmp_parts_f+0x48>
   4f2bc:	20800117 	ldw	r2,4(r4)
   4f2c0:	1000091e 	bne	r2,zero,4f2e8 <__fpcmp_parts_f+0x58>
   4f2c4:	00800044 	movi	r2,1
   4f2c8:	f800283a 	ret
   4f2cc:	10c0121e 	bne	r2,r3,4f318 <__fpcmp_parts_f+0x88>
   4f2d0:	0005883a 	mov	r2,zero
   4f2d4:	f800283a 	ret
   4f2d8:	20c00117 	ldw	r3,4(r4)
   4f2dc:	28800117 	ldw	r2,4(r5)
   4f2e0:	18800326 	beq	r3,r2,4f2f0 <__fpcmp_parts_f+0x60>
   4f2e4:	183ff726 	beq	r3,zero,4f2c4 <__fpcmp_parts_f+0x34>
   4f2e8:	00bfffc4 	movi	r2,-1
   4f2ec:	f800283a 	ret
   4f2f0:	21800217 	ldw	r6,8(r4)
   4f2f4:	28800217 	ldw	r2,8(r5)
   4f2f8:	11bffa16 	blt	r2,r6,4f2e4 <__fpcmp_parts_f+0x54>
   4f2fc:	30800416 	blt	r6,r2,4f310 <__fpcmp_parts_f+0x80>
   4f300:	21000317 	ldw	r4,12(r4)
   4f304:	29400317 	ldw	r5,12(r5)
   4f308:	293ff636 	bltu	r5,r4,4f2e4 <__fpcmp_parts_f+0x54>
   4f30c:	217ff02e 	bgeu	r4,r5,4f2d0 <__fpcmp_parts_f+0x40>
   4f310:	183fec1e 	bne	r3,zero,4f2c4 <__fpcmp_parts_f+0x34>
   4f314:	003ff406 	br	4f2e8 <__fpcmp_parts_f+0x58>
   4f318:	28800117 	ldw	r2,4(r5)
   4f31c:	103fe91e 	bne	r2,zero,4f2c4 <__fpcmp_parts_f+0x34>
   4f320:	003ff106 	br	4f2e8 <__fpcmp_parts_f+0x58>
   4f324:	11bfe51e 	bne	r2,r6,4f2bc <__fpcmp_parts_f+0x2c>
   4f328:	28c00117 	ldw	r3,4(r5)
   4f32c:	20800117 	ldw	r2,4(r4)
   4f330:	1885c83a 	sub	r2,r3,r2
   4f334:	f800283a 	ret

0004f338 <__make_fp>:
   4f338:	defffb04 	addi	sp,sp,-20
   4f33c:	d9000015 	stw	r4,0(sp)
   4f340:	d809883a 	mov	r4,sp
   4f344:	dfc00415 	stw	ra,16(sp)
   4f348:	d9400115 	stw	r5,4(sp)
   4f34c:	d9800215 	stw	r6,8(sp)
   4f350:	d9c00315 	stw	r7,12(sp)
   4f354:	004f8780 	call	4f878 <__pack_f>
   4f358:	dfc00417 	ldw	ra,16(sp)
   4f35c:	dec00504 	addi	sp,sp,20
   4f360:	f800283a 	ret

0004f364 <__pack_d>:
   4f364:	20c00017 	ldw	r3,0(r4)
   4f368:	defffd04 	addi	sp,sp,-12
   4f36c:	dc000015 	stw	r16,0(sp)
   4f370:	dc800215 	stw	r18,8(sp)
   4f374:	dc400115 	stw	r17,4(sp)
   4f378:	00800044 	movi	r2,1
   4f37c:	22000317 	ldw	r8,12(r4)
   4f380:	001f883a 	mov	r15,zero
   4f384:	22400417 	ldw	r9,16(r4)
   4f388:	24000117 	ldw	r16,4(r4)
   4f38c:	10c0552e 	bgeu	r2,r3,4f4e4 <__pack_d+0x180>
   4f390:	00800104 	movi	r2,4
   4f394:	18804f26 	beq	r3,r2,4f4d4 <__pack_d+0x170>
   4f398:	00800084 	movi	r2,2
   4f39c:	18800226 	beq	r3,r2,4f3a8 <__pack_d+0x44>
   4f3a0:	4244b03a 	or	r2,r8,r9
   4f3a4:	10001a1e 	bne	r2,zero,4f410 <__pack_d+0xac>
   4f3a8:	000d883a 	mov	r6,zero
   4f3ac:	000f883a 	mov	r7,zero
   4f3b0:	0011883a 	mov	r8,zero
   4f3b4:	00800434 	movhi	r2,16
   4f3b8:	10bfffc4 	addi	r2,r2,-1
   4f3bc:	301d883a 	mov	r14,r6
   4f3c0:	3884703a 	and	r2,r7,r2
   4f3c4:	400a953a 	slli	r5,r8,20
   4f3c8:	79bffc2c 	andhi	r6,r15,65520
   4f3cc:	308cb03a 	or	r6,r6,r2
   4f3d0:	00e00434 	movhi	r3,32784
   4f3d4:	18ffffc4 	addi	r3,r3,-1
   4f3d8:	800497fa 	slli	r2,r16,31
   4f3dc:	30c6703a 	and	r3,r6,r3
   4f3e0:	1946b03a 	or	r3,r3,r5
   4f3e4:	01600034 	movhi	r5,32768
   4f3e8:	297fffc4 	addi	r5,r5,-1
   4f3ec:	194a703a 	and	r5,r3,r5
   4f3f0:	288ab03a 	or	r5,r5,r2
   4f3f4:	2807883a 	mov	r3,r5
   4f3f8:	7005883a 	mov	r2,r14
   4f3fc:	dc800217 	ldw	r18,8(sp)
   4f400:	dc400117 	ldw	r17,4(sp)
   4f404:	dc000017 	ldw	r16,0(sp)
   4f408:	dec00304 	addi	sp,sp,12
   4f40c:	f800283a 	ret
   4f410:	21000217 	ldw	r4,8(r4)
   4f414:	00bf0084 	movi	r2,-1022
   4f418:	20803f16 	blt	r4,r2,4f518 <__pack_d+0x1b4>
   4f41c:	0080ffc4 	movi	r2,1023
   4f420:	11002c16 	blt	r2,r4,4f4d4 <__pack_d+0x170>
   4f424:	00803fc4 	movi	r2,255
   4f428:	408c703a 	and	r6,r8,r2
   4f42c:	00802004 	movi	r2,128
   4f430:	0007883a 	mov	r3,zero
   4f434:	000f883a 	mov	r7,zero
   4f438:	2280ffc4 	addi	r10,r4,1023
   4f43c:	30801e26 	beq	r6,r2,4f4b8 <__pack_d+0x154>
   4f440:	00801fc4 	movi	r2,127
   4f444:	4089883a 	add	r4,r8,r2
   4f448:	220d803a 	cmpltu	r6,r4,r8
   4f44c:	324d883a 	add	r6,r6,r9
   4f450:	2011883a 	mov	r8,r4
   4f454:	3013883a 	mov	r9,r6
   4f458:	00880034 	movhi	r2,8192
   4f45c:	10bfffc4 	addi	r2,r2,-1
   4f460:	12400d36 	bltu	r2,r9,4f498 <__pack_d+0x134>
   4f464:	4804963a 	slli	r2,r9,24
   4f468:	400cd23a 	srli	r6,r8,8
   4f46c:	480ed23a 	srli	r7,r9,8
   4f470:	013fffc4 	movi	r4,-1
   4f474:	118cb03a 	or	r6,r2,r6
   4f478:	01400434 	movhi	r5,16
   4f47c:	297fffc4 	addi	r5,r5,-1
   4f480:	3104703a 	and	r2,r6,r4
   4f484:	3946703a 	and	r3,r7,r5
   4f488:	5201ffcc 	andi	r8,r10,2047
   4f48c:	100d883a 	mov	r6,r2
   4f490:	180f883a 	mov	r7,r3
   4f494:	003fc706 	br	4f3b4 <__pack_d+0x50>
   4f498:	480897fa 	slli	r4,r9,31
   4f49c:	4004d07a 	srli	r2,r8,1
   4f4a0:	4806d07a 	srli	r3,r9,1
   4f4a4:	52800044 	addi	r10,r10,1
   4f4a8:	2084b03a 	or	r2,r4,r2
   4f4ac:	1011883a 	mov	r8,r2
   4f4b0:	1813883a 	mov	r9,r3
   4f4b4:	003feb06 	br	4f464 <__pack_d+0x100>
   4f4b8:	383fe11e 	bne	r7,zero,4f440 <__pack_d+0xdc>
   4f4bc:	01004004 	movi	r4,256
   4f4c0:	4104703a 	and	r2,r8,r4
   4f4c4:	10c4b03a 	or	r2,r2,r3
   4f4c8:	103fe326 	beq	r2,zero,4f458 <__pack_d+0xf4>
   4f4cc:	3005883a 	mov	r2,r6
   4f4d0:	003fdc06 	br	4f444 <__pack_d+0xe0>
   4f4d4:	000d883a 	mov	r6,zero
   4f4d8:	000f883a 	mov	r7,zero
   4f4dc:	0201ffc4 	movi	r8,2047
   4f4e0:	003fb406 	br	4f3b4 <__pack_d+0x50>
   4f4e4:	0005883a 	mov	r2,zero
   4f4e8:	00c00234 	movhi	r3,8
   4f4ec:	408cb03a 	or	r6,r8,r2
   4f4f0:	48ceb03a 	or	r7,r9,r3
   4f4f4:	013fffc4 	movi	r4,-1
   4f4f8:	01400434 	movhi	r5,16
   4f4fc:	297fffc4 	addi	r5,r5,-1
   4f500:	3104703a 	and	r2,r6,r4
   4f504:	3946703a 	and	r3,r7,r5
   4f508:	100d883a 	mov	r6,r2
   4f50c:	180f883a 	mov	r7,r3
   4f510:	0201ffc4 	movi	r8,2047
   4f514:	003fa706 	br	4f3b4 <__pack_d+0x50>
   4f518:	1109c83a 	sub	r4,r2,r4
   4f51c:	00800e04 	movi	r2,56
   4f520:	11004316 	blt	r2,r4,4f630 <__pack_d+0x2cc>
   4f524:	21fff804 	addi	r7,r4,-32
   4f528:	38004516 	blt	r7,zero,4f640 <__pack_d+0x2dc>
   4f52c:	49d8d83a 	srl	r12,r9,r7
   4f530:	001b883a 	mov	r13,zero
   4f534:	0023883a 	mov	r17,zero
   4f538:	01400044 	movi	r5,1
   4f53c:	0025883a 	mov	r18,zero
   4f540:	38004716 	blt	r7,zero,4f660 <__pack_d+0x2fc>
   4f544:	29d6983a 	sll	r11,r5,r7
   4f548:	0015883a 	mov	r10,zero
   4f54c:	00bfffc4 	movi	r2,-1
   4f550:	5089883a 	add	r4,r10,r2
   4f554:	588b883a 	add	r5,r11,r2
   4f558:	228d803a 	cmpltu	r6,r4,r10
   4f55c:	314b883a 	add	r5,r6,r5
   4f560:	4104703a 	and	r2,r8,r4
   4f564:	4946703a 	and	r3,r9,r5
   4f568:	10c4b03a 	or	r2,r2,r3
   4f56c:	10000226 	beq	r2,zero,4f578 <__pack_d+0x214>
   4f570:	04400044 	movi	r17,1
   4f574:	0025883a 	mov	r18,zero
   4f578:	00803fc4 	movi	r2,255
   4f57c:	644eb03a 	or	r7,r12,r17
   4f580:	3892703a 	and	r9,r7,r2
   4f584:	00802004 	movi	r2,128
   4f588:	6c90b03a 	or	r8,r13,r18
   4f58c:	0015883a 	mov	r10,zero
   4f590:	48801626 	beq	r9,r2,4f5ec <__pack_d+0x288>
   4f594:	01001fc4 	movi	r4,127
   4f598:	3905883a 	add	r2,r7,r4
   4f59c:	11cd803a 	cmpltu	r6,r2,r7
   4f5a0:	320d883a 	add	r6,r6,r8
   4f5a4:	100f883a 	mov	r7,r2
   4f5a8:	00840034 	movhi	r2,4096
   4f5ac:	10bfffc4 	addi	r2,r2,-1
   4f5b0:	3011883a 	mov	r8,r6
   4f5b4:	0007883a 	mov	r3,zero
   4f5b8:	11801b36 	bltu	r2,r6,4f628 <__pack_d+0x2c4>
   4f5bc:	4004963a 	slli	r2,r8,24
   4f5c0:	3808d23a 	srli	r4,r7,8
   4f5c4:	400ad23a 	srli	r5,r8,8
   4f5c8:	1813883a 	mov	r9,r3
   4f5cc:	1108b03a 	or	r4,r2,r4
   4f5d0:	00bfffc4 	movi	r2,-1
   4f5d4:	00c00434 	movhi	r3,16
   4f5d8:	18ffffc4 	addi	r3,r3,-1
   4f5dc:	208c703a 	and	r6,r4,r2
   4f5e0:	28ce703a 	and	r7,r5,r3
   4f5e4:	4a01ffcc 	andi	r8,r9,2047
   4f5e8:	003f7206 	br	4f3b4 <__pack_d+0x50>
   4f5ec:	503fe91e 	bne	r10,zero,4f594 <__pack_d+0x230>
   4f5f0:	01004004 	movi	r4,256
   4f5f4:	3904703a 	and	r2,r7,r4
   4f5f8:	0007883a 	mov	r3,zero
   4f5fc:	10c4b03a 	or	r2,r2,r3
   4f600:	10000626 	beq	r2,zero,4f61c <__pack_d+0x2b8>
   4f604:	3a45883a 	add	r2,r7,r9
   4f608:	11cd803a 	cmpltu	r6,r2,r7
   4f60c:	320d883a 	add	r6,r6,r8
   4f610:	100f883a 	mov	r7,r2
   4f614:	3011883a 	mov	r8,r6
   4f618:	0007883a 	mov	r3,zero
   4f61c:	00840034 	movhi	r2,4096
   4f620:	10bfffc4 	addi	r2,r2,-1
   4f624:	123fe52e 	bgeu	r2,r8,4f5bc <__pack_d+0x258>
   4f628:	00c00044 	movi	r3,1
   4f62c:	003fe306 	br	4f5bc <__pack_d+0x258>
   4f630:	0009883a 	mov	r4,zero
   4f634:	0013883a 	mov	r9,zero
   4f638:	000b883a 	mov	r5,zero
   4f63c:	003fe406 	br	4f5d0 <__pack_d+0x26c>
   4f640:	4a47883a 	add	r3,r9,r9
   4f644:	008007c4 	movi	r2,31
   4f648:	1105c83a 	sub	r2,r2,r4
   4f64c:	1886983a 	sll	r3,r3,r2
   4f650:	4118d83a 	srl	r12,r8,r4
   4f654:	491ad83a 	srl	r13,r9,r4
   4f658:	1b18b03a 	or	r12,r3,r12
   4f65c:	003fb506 	br	4f534 <__pack_d+0x1d0>
   4f660:	2806d07a 	srli	r3,r5,1
   4f664:	008007c4 	movi	r2,31
   4f668:	1105c83a 	sub	r2,r2,r4
   4f66c:	1896d83a 	srl	r11,r3,r2
   4f670:	2914983a 	sll	r10,r5,r4
   4f674:	003fb506 	br	4f54c <__pack_d+0x1e8>

0004f678 <__unpack_d>:
   4f678:	20c00117 	ldw	r3,4(r4)
   4f67c:	22400017 	ldw	r9,0(r4)
   4f680:	00800434 	movhi	r2,16
   4f684:	10bfffc4 	addi	r2,r2,-1
   4f688:	1808d53a 	srli	r4,r3,20
   4f68c:	180cd7fa 	srli	r6,r3,31
   4f690:	1894703a 	and	r10,r3,r2
   4f694:	2201ffcc 	andi	r8,r4,2047
   4f698:	281b883a 	mov	r13,r5
   4f69c:	4817883a 	mov	r11,r9
   4f6a0:	29800115 	stw	r6,4(r5)
   4f6a4:	5019883a 	mov	r12,r10
   4f6a8:	40001e1e 	bne	r8,zero,4f724 <__unpack_d+0xac>
   4f6ac:	4a84b03a 	or	r2,r9,r10
   4f6b0:	10001926 	beq	r2,zero,4f718 <__unpack_d+0xa0>
   4f6b4:	4804d63a 	srli	r2,r9,24
   4f6b8:	500c923a 	slli	r6,r10,8
   4f6bc:	013f0084 	movi	r4,-1022
   4f6c0:	00c40034 	movhi	r3,4096
   4f6c4:	18ffffc4 	addi	r3,r3,-1
   4f6c8:	118cb03a 	or	r6,r2,r6
   4f6cc:	008000c4 	movi	r2,3
   4f6d0:	480a923a 	slli	r5,r9,8
   4f6d4:	68800015 	stw	r2,0(r13)
   4f6d8:	69000215 	stw	r4,8(r13)
   4f6dc:	19800b36 	bltu	r3,r6,4f70c <__unpack_d+0x94>
   4f6e0:	200f883a 	mov	r7,r4
   4f6e4:	1811883a 	mov	r8,r3
   4f6e8:	2945883a 	add	r2,r5,r5
   4f6ec:	1149803a 	cmpltu	r4,r2,r5
   4f6f0:	3187883a 	add	r3,r6,r6
   4f6f4:	20c9883a 	add	r4,r4,r3
   4f6f8:	100b883a 	mov	r5,r2
   4f6fc:	200d883a 	mov	r6,r4
   4f700:	39ffffc4 	addi	r7,r7,-1
   4f704:	413ff82e 	bgeu	r8,r4,4f6e8 <__unpack_d+0x70>
   4f708:	69c00215 	stw	r7,8(r13)
   4f70c:	69800415 	stw	r6,16(r13)
   4f710:	69400315 	stw	r5,12(r13)
   4f714:	f800283a 	ret
   4f718:	00800084 	movi	r2,2
   4f71c:	28800015 	stw	r2,0(r5)
   4f720:	f800283a 	ret
   4f724:	0081ffc4 	movi	r2,2047
   4f728:	40800f26 	beq	r8,r2,4f768 <__unpack_d+0xf0>
   4f72c:	480cd63a 	srli	r6,r9,24
   4f730:	5006923a 	slli	r3,r10,8
   4f734:	4804923a 	slli	r2,r9,8
   4f738:	0009883a 	mov	r4,zero
   4f73c:	30c6b03a 	or	r3,r6,r3
   4f740:	01440034 	movhi	r5,4096
   4f744:	110cb03a 	or	r6,r2,r4
   4f748:	423f0044 	addi	r8,r8,-1023
   4f74c:	194eb03a 	or	r7,r3,r5
   4f750:	008000c4 	movi	r2,3
   4f754:	69c00415 	stw	r7,16(r13)
   4f758:	6a000215 	stw	r8,8(r13)
   4f75c:	68800015 	stw	r2,0(r13)
   4f760:	69800315 	stw	r6,12(r13)
   4f764:	f800283a 	ret
   4f768:	4a84b03a 	or	r2,r9,r10
   4f76c:	1000031e 	bne	r2,zero,4f77c <__unpack_d+0x104>
   4f770:	00800104 	movi	r2,4
   4f774:	28800015 	stw	r2,0(r5)
   4f778:	f800283a 	ret
   4f77c:	0009883a 	mov	r4,zero
   4f780:	01400234 	movhi	r5,8
   4f784:	4904703a 	and	r2,r9,r4
   4f788:	5146703a 	and	r3,r10,r5
   4f78c:	10c4b03a 	or	r2,r2,r3
   4f790:	10000526 	beq	r2,zero,4f7a8 <__unpack_d+0x130>
   4f794:	00800044 	movi	r2,1
   4f798:	68800015 	stw	r2,0(r13)
   4f79c:	6b000415 	stw	r12,16(r13)
   4f7a0:	6ac00315 	stw	r11,12(r13)
   4f7a4:	f800283a 	ret
   4f7a8:	68000015 	stw	zero,0(r13)
   4f7ac:	003ffb06 	br	4f79c <__unpack_d+0x124>

0004f7b0 <__fpcmp_parts_d>:
   4f7b0:	21800017 	ldw	r6,0(r4)
   4f7b4:	00c00044 	movi	r3,1
   4f7b8:	19800a2e 	bgeu	r3,r6,4f7e4 <__fpcmp_parts_d+0x34>
   4f7bc:	28800017 	ldw	r2,0(r5)
   4f7c0:	1880082e 	bgeu	r3,r2,4f7e4 <__fpcmp_parts_d+0x34>
   4f7c4:	00c00104 	movi	r3,4
   4f7c8:	30c02626 	beq	r6,r3,4f864 <__fpcmp_parts_d+0xb4>
   4f7cc:	10c02226 	beq	r2,r3,4f858 <__fpcmp_parts_d+0xa8>
   4f7d0:	00c00084 	movi	r3,2
   4f7d4:	30c00526 	beq	r6,r3,4f7ec <__fpcmp_parts_d+0x3c>
   4f7d8:	10c0071e 	bne	r2,r3,4f7f8 <__fpcmp_parts_d+0x48>
   4f7dc:	20800117 	ldw	r2,4(r4)
   4f7e0:	1000091e 	bne	r2,zero,4f808 <__fpcmp_parts_d+0x58>
   4f7e4:	00800044 	movi	r2,1
   4f7e8:	f800283a 	ret
   4f7ec:	10c01a1e 	bne	r2,r3,4f858 <__fpcmp_parts_d+0xa8>
   4f7f0:	0005883a 	mov	r2,zero
   4f7f4:	f800283a 	ret
   4f7f8:	22000117 	ldw	r8,4(r4)
   4f7fc:	28800117 	ldw	r2,4(r5)
   4f800:	40800326 	beq	r8,r2,4f810 <__fpcmp_parts_d+0x60>
   4f804:	403ff726 	beq	r8,zero,4f7e4 <__fpcmp_parts_d+0x34>
   4f808:	00bfffc4 	movi	r2,-1
   4f80c:	f800283a 	ret
   4f810:	20c00217 	ldw	r3,8(r4)
   4f814:	28800217 	ldw	r2,8(r5)
   4f818:	10fffa16 	blt	r2,r3,4f804 <__fpcmp_parts_d+0x54>
   4f81c:	18800916 	blt	r3,r2,4f844 <__fpcmp_parts_d+0x94>
   4f820:	21c00417 	ldw	r7,16(r4)
   4f824:	28c00417 	ldw	r3,16(r5)
   4f828:	21800317 	ldw	r6,12(r4)
   4f82c:	28800317 	ldw	r2,12(r5)
   4f830:	19fff436 	bltu	r3,r7,4f804 <__fpcmp_parts_d+0x54>
   4f834:	38c00526 	beq	r7,r3,4f84c <__fpcmp_parts_d+0x9c>
   4f838:	38c00236 	bltu	r7,r3,4f844 <__fpcmp_parts_d+0x94>
   4f83c:	19ffec1e 	bne	r3,r7,4f7f0 <__fpcmp_parts_d+0x40>
   4f840:	30bfeb2e 	bgeu	r6,r2,4f7f0 <__fpcmp_parts_d+0x40>
   4f844:	403fe71e 	bne	r8,zero,4f7e4 <__fpcmp_parts_d+0x34>
   4f848:	003fef06 	br	4f808 <__fpcmp_parts_d+0x58>
   4f84c:	11bffa2e 	bgeu	r2,r6,4f838 <__fpcmp_parts_d+0x88>
   4f850:	403fe426 	beq	r8,zero,4f7e4 <__fpcmp_parts_d+0x34>
   4f854:	003fec06 	br	4f808 <__fpcmp_parts_d+0x58>
   4f858:	28800117 	ldw	r2,4(r5)
   4f85c:	103fe11e 	bne	r2,zero,4f7e4 <__fpcmp_parts_d+0x34>
   4f860:	003fe906 	br	4f808 <__fpcmp_parts_d+0x58>
   4f864:	11bfdd1e 	bne	r2,r6,4f7dc <__fpcmp_parts_d+0x2c>
   4f868:	28c00117 	ldw	r3,4(r5)
   4f86c:	20800117 	ldw	r2,4(r4)
   4f870:	1885c83a 	sub	r2,r3,r2
   4f874:	f800283a 	ret

0004f878 <__pack_f>:
   4f878:	20c00017 	ldw	r3,0(r4)
   4f87c:	01c00044 	movi	r7,1
   4f880:	21800317 	ldw	r6,12(r4)
   4f884:	21400117 	ldw	r5,4(r4)
   4f888:	38c02d2e 	bgeu	r7,r3,4f940 <__pack_f+0xc8>
   4f88c:	00800104 	movi	r2,4
   4f890:	18802826 	beq	r3,r2,4f934 <__pack_f+0xbc>
   4f894:	00800084 	movi	r2,2
   4f898:	18800126 	beq	r3,r2,4f8a0 <__pack_f+0x28>
   4f89c:	3000101e 	bne	r6,zero,4f8e0 <__pack_f+0x68>
   4f8a0:	000d883a 	mov	r6,zero
   4f8a4:	0007883a 	mov	r3,zero
   4f8a8:	19003fcc 	andi	r4,r3,255
   4f8ac:	200895fa 	slli	r4,r4,23
   4f8b0:	00c02034 	movhi	r3,128
   4f8b4:	18ffffc4 	addi	r3,r3,-1
   4f8b8:	30c6703a 	and	r3,r6,r3
   4f8bc:	10a0002c 	andhi	r2,r2,32768
   4f8c0:	10c4b03a 	or	r2,r2,r3
   4f8c4:	280a97fa 	slli	r5,r5,31
   4f8c8:	1104b03a 	or	r2,r2,r4
   4f8cc:	00e00034 	movhi	r3,32768
   4f8d0:	18ffffc4 	addi	r3,r3,-1
   4f8d4:	10c4703a 	and	r2,r2,r3
   4f8d8:	1144b03a 	or	r2,r2,r5
   4f8dc:	f800283a 	ret
   4f8e0:	21000217 	ldw	r4,8(r4)
   4f8e4:	00bfe084 	movi	r2,-126
   4f8e8:	20801b16 	blt	r4,r2,4f958 <__pack_f+0xe0>
   4f8ec:	00801fc4 	movi	r2,127
   4f8f0:	11001016 	blt	r2,r4,4f934 <__pack_f+0xbc>
   4f8f4:	308e703a 	and	r7,r6,r2
   4f8f8:	2087883a 	add	r3,r4,r2
   4f8fc:	00801004 	movi	r2,64
   4f900:	38800526 	beq	r7,r2,4f918 <__pack_f+0xa0>
   4f904:	31800fc4 	addi	r6,r6,63
   4f908:	30000716 	blt	r6,zero,4f928 <__pack_f+0xb0>
   4f90c:	300490ba 	slli	r2,r6,2
   4f910:	100cd27a 	srli	r6,r2,9
   4f914:	003fe406 	br	4f8a8 <__pack_f+0x30>
   4f918:	3080200c 	andi	r2,r6,128
   4f91c:	103ffa26 	beq	r2,zero,4f908 <__pack_f+0x90>
   4f920:	31cd883a 	add	r6,r6,r7
   4f924:	003ff806 	br	4f908 <__pack_f+0x90>
   4f928:	300cd07a 	srli	r6,r6,1
   4f92c:	18c00044 	addi	r3,r3,1
   4f930:	003ff606 	br	4f90c <__pack_f+0x94>
   4f934:	000d883a 	mov	r6,zero
   4f938:	00ffffc4 	movi	r3,-1
   4f93c:	003fda06 	br	4f8a8 <__pack_f+0x30>
   4f940:	31800434 	orhi	r6,r6,16
   4f944:	00802034 	movhi	r2,128
   4f948:	10bfffc4 	addi	r2,r2,-1
   4f94c:	308c703a 	and	r6,r6,r2
   4f950:	00ffffc4 	movi	r3,-1
   4f954:	003fd406 	br	4f8a8 <__pack_f+0x30>
   4f958:	1109c83a 	sub	r4,r2,r4
   4f95c:	00800644 	movi	r2,25
   4f960:	11001216 	blt	r2,r4,4f9ac <__pack_f+0x134>
   4f964:	3904983a 	sll	r2,r7,r4
   4f968:	3106d83a 	srl	r3,r6,r4
   4f96c:	10bfffc4 	addi	r2,r2,-1
   4f970:	3084703a 	and	r2,r6,r2
   4f974:	1004c03a 	cmpne	r2,r2,zero
   4f978:	1886b03a 	or	r3,r3,r2
   4f97c:	19001fcc 	andi	r4,r3,127
   4f980:	00801004 	movi	r2,64
   4f984:	20800c26 	beq	r4,r2,4f9b8 <__pack_f+0x140>
   4f988:	18c00fc4 	addi	r3,r3,63
   4f98c:	00900034 	movhi	r2,16384
   4f990:	10bfffc4 	addi	r2,r2,-1
   4f994:	180cd1fa 	srli	r6,r3,7
   4f998:	10c7803a 	cmpltu	r3,r2,r3
   4f99c:	00802034 	movhi	r2,128
   4f9a0:	10bfffc4 	addi	r2,r2,-1
   4f9a4:	308c703a 	and	r6,r6,r2
   4f9a8:	003fbf06 	br	4f8a8 <__pack_f+0x30>
   4f9ac:	0007883a 	mov	r3,zero
   4f9b0:	000d883a 	mov	r6,zero
   4f9b4:	003ff906 	br	4f99c <__pack_f+0x124>
   4f9b8:	1880200c 	andi	r2,r3,128
   4f9bc:	10000126 	beq	r2,zero,4f9c4 <__pack_f+0x14c>
   4f9c0:	1907883a 	add	r3,r3,r4
   4f9c4:	180cd1fa 	srli	r6,r3,7
   4f9c8:	00900034 	movhi	r2,16384
   4f9cc:	10bfffc4 	addi	r2,r2,-1
   4f9d0:	10c7803a 	cmpltu	r3,r2,r3
   4f9d4:	003ff106 	br	4f99c <__pack_f+0x124>

0004f9d8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4f9d8:	defff804 	addi	sp,sp,-32
   4f9dc:	dfc00715 	stw	ra,28(sp)
   4f9e0:	df000615 	stw	fp,24(sp)
   4f9e4:	df000604 	addi	fp,sp,24
   4f9e8:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4f9ec:	e0bffc17 	ldw	r2,-16(fp)
   4f9f0:	1004803a 	cmplt	r2,r2,zero
   4f9f4:	1000091e 	bne	r2,zero,4fa1c <close+0x44>
   4f9f8:	e13ffc17 	ldw	r4,-16(fp)
   4f9fc:	01400304 	movi	r5,12
   4fa00:	004f1100 	call	4f110 <__mulsi3>
   4fa04:	1007883a 	mov	r3,r2
   4fa08:	00800174 	movhi	r2,5
   4fa0c:	108d5e04 	addi	r2,r2,13688
   4fa10:	1887883a 	add	r3,r3,r2
   4fa14:	e0ffff15 	stw	r3,-4(fp)
   4fa18:	00000106 	br	4fa20 <close+0x48>
   4fa1c:	e03fff15 	stw	zero,-4(fp)
   4fa20:	e0bfff17 	ldw	r2,-4(fp)
   4fa24:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   4fa28:	e0bffb17 	ldw	r2,-20(fp)
   4fa2c:	1005003a 	cmpeq	r2,r2,zero
   4fa30:	10001d1e 	bne	r2,zero,4faa8 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4fa34:	e0bffb17 	ldw	r2,-20(fp)
   4fa38:	10800017 	ldw	r2,0(r2)
   4fa3c:	10800417 	ldw	r2,16(r2)
   4fa40:	1005003a 	cmpeq	r2,r2,zero
   4fa44:	1000071e 	bne	r2,zero,4fa64 <close+0x8c>
   4fa48:	e0bffb17 	ldw	r2,-20(fp)
   4fa4c:	10800017 	ldw	r2,0(r2)
   4fa50:	10800417 	ldw	r2,16(r2)
   4fa54:	e13ffb17 	ldw	r4,-20(fp)
   4fa58:	103ee83a 	callr	r2
   4fa5c:	e0bffe15 	stw	r2,-8(fp)
   4fa60:	00000106 	br	4fa68 <close+0x90>
   4fa64:	e03ffe15 	stw	zero,-8(fp)
   4fa68:	e0bffe17 	ldw	r2,-8(fp)
   4fa6c:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4fa70:	e13ffc17 	ldw	r4,-16(fp)
   4fa74:	00502300 	call	50230 <alt_release_fd>
    if (rval < 0)
   4fa78:	e0bffa17 	ldw	r2,-24(fp)
   4fa7c:	1004403a 	cmpge	r2,r2,zero
   4fa80:	1000071e 	bne	r2,zero,4faa0 <close+0xc8>
    {
      ALT_ERRNO = -rval;
   4fa84:	004fad80 	call	4fad8 <alt_get_errno>
   4fa88:	e0fffa17 	ldw	r3,-24(fp)
   4fa8c:	00c7c83a 	sub	r3,zero,r3
   4fa90:	10c00015 	stw	r3,0(r2)
      return -1;
   4fa94:	00bfffc4 	movi	r2,-1
   4fa98:	e0bffd15 	stw	r2,-12(fp)
   4fa9c:	00000806 	br	4fac0 <close+0xe8>
    }
    return 0;
   4faa0:	e03ffd15 	stw	zero,-12(fp)
   4faa4:	00000606 	br	4fac0 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4faa8:	004fad80 	call	4fad8 <alt_get_errno>
   4faac:	1007883a 	mov	r3,r2
   4fab0:	00801444 	movi	r2,81
   4fab4:	18800015 	stw	r2,0(r3)
    return -1;
   4fab8:	00bfffc4 	movi	r2,-1
   4fabc:	e0bffd15 	stw	r2,-12(fp)
   4fac0:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   4fac4:	e037883a 	mov	sp,fp
   4fac8:	dfc00117 	ldw	ra,4(sp)
   4facc:	df000017 	ldw	fp,0(sp)
   4fad0:	dec00204 	addi	sp,sp,8
   4fad4:	f800283a 	ret

0004fad8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fad8:	defffd04 	addi	sp,sp,-12
   4fadc:	dfc00215 	stw	ra,8(sp)
   4fae0:	df000115 	stw	fp,4(sp)
   4fae4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4fae8:	00800174 	movhi	r2,5
   4faec:	1091e204 	addi	r2,r2,18312
   4faf0:	10800017 	ldw	r2,0(r2)
   4faf4:	1005003a 	cmpeq	r2,r2,zero
   4faf8:	1000061e 	bne	r2,zero,4fb14 <alt_get_errno+0x3c>
   4fafc:	00800174 	movhi	r2,5
   4fb00:	1091e204 	addi	r2,r2,18312
   4fb04:	10800017 	ldw	r2,0(r2)
   4fb08:	103ee83a 	callr	r2
   4fb0c:	e0bfff15 	stw	r2,-4(fp)
   4fb10:	00000306 	br	4fb20 <alt_get_errno+0x48>
   4fb14:	00800174 	movhi	r2,5
   4fb18:	10988f04 	addi	r2,r2,25148
   4fb1c:	e0bfff15 	stw	r2,-4(fp)
   4fb20:	e0bfff17 	ldw	r2,-4(fp)
}
   4fb24:	e037883a 	mov	sp,fp
   4fb28:	dfc00117 	ldw	ra,4(sp)
   4fb2c:	df000017 	ldw	fp,0(sp)
   4fb30:	dec00204 	addi	sp,sp,8
   4fb34:	f800283a 	ret

0004fb38 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4fb38:	defffc04 	addi	sp,sp,-16
   4fb3c:	df000315 	stw	fp,12(sp)
   4fb40:	df000304 	addi	fp,sp,12
   4fb44:	e13ffd15 	stw	r4,-12(fp)
   4fb48:	e17ffe15 	stw	r5,-8(fp)
   4fb4c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4fb50:	e0bfff17 	ldw	r2,-4(fp)
}
   4fb54:	e037883a 	mov	sp,fp
   4fb58:	df000017 	ldw	fp,0(sp)
   4fb5c:	dec00104 	addi	sp,sp,4
   4fb60:	f800283a 	ret

0004fb64 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4fb64:	defff904 	addi	sp,sp,-28
   4fb68:	dfc00615 	stw	ra,24(sp)
   4fb6c:	df000515 	stw	fp,20(sp)
   4fb70:	df000504 	addi	fp,sp,20
   4fb74:	e13ffc15 	stw	r4,-16(fp)
   4fb78:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4fb7c:	e0bffc17 	ldw	r2,-16(fp)
   4fb80:	1004803a 	cmplt	r2,r2,zero
   4fb84:	1000091e 	bne	r2,zero,4fbac <fstat+0x48>
   4fb88:	e13ffc17 	ldw	r4,-16(fp)
   4fb8c:	01400304 	movi	r5,12
   4fb90:	004f1100 	call	4f110 <__mulsi3>
   4fb94:	1007883a 	mov	r3,r2
   4fb98:	00800174 	movhi	r2,5
   4fb9c:	108d5e04 	addi	r2,r2,13688
   4fba0:	1887883a 	add	r3,r3,r2
   4fba4:	e0ffff15 	stw	r3,-4(fp)
   4fba8:	00000106 	br	4fbb0 <fstat+0x4c>
   4fbac:	e03fff15 	stw	zero,-4(fp)
   4fbb0:	e0bfff17 	ldw	r2,-4(fp)
   4fbb4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4fbb8:	e0bffb17 	ldw	r2,-20(fp)
   4fbbc:	1005003a 	cmpeq	r2,r2,zero
   4fbc0:	1000121e 	bne	r2,zero,4fc0c <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4fbc4:	e0bffb17 	ldw	r2,-20(fp)
   4fbc8:	10800017 	ldw	r2,0(r2)
   4fbcc:	10800817 	ldw	r2,32(r2)
   4fbd0:	1005003a 	cmpeq	r2,r2,zero
   4fbd4:	1000081e 	bne	r2,zero,4fbf8 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
   4fbd8:	e0bffb17 	ldw	r2,-20(fp)
   4fbdc:	10800017 	ldw	r2,0(r2)
   4fbe0:	10800817 	ldw	r2,32(r2)
   4fbe4:	e13ffb17 	ldw	r4,-20(fp)
   4fbe8:	e17ffd17 	ldw	r5,-12(fp)
   4fbec:	103ee83a 	callr	r2
   4fbf0:	e0bffe15 	stw	r2,-8(fp)
   4fbf4:	00000b06 	br	4fc24 <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4fbf8:	e0fffd17 	ldw	r3,-12(fp)
   4fbfc:	00880004 	movi	r2,8192
   4fc00:	18800115 	stw	r2,4(r3)
      return 0;
   4fc04:	e03ffe15 	stw	zero,-8(fp)
   4fc08:	00000606 	br	4fc24 <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4fc0c:	004fc3c0 	call	4fc3c <alt_get_errno>
   4fc10:	1007883a 	mov	r3,r2
   4fc14:	00801444 	movi	r2,81
   4fc18:	18800015 	stw	r2,0(r3)
    return -1;
   4fc1c:	00bfffc4 	movi	r2,-1
   4fc20:	e0bffe15 	stw	r2,-8(fp)
   4fc24:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   4fc28:	e037883a 	mov	sp,fp
   4fc2c:	dfc00117 	ldw	ra,4(sp)
   4fc30:	df000017 	ldw	fp,0(sp)
   4fc34:	dec00204 	addi	sp,sp,8
   4fc38:	f800283a 	ret

0004fc3c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fc3c:	defffd04 	addi	sp,sp,-12
   4fc40:	dfc00215 	stw	ra,8(sp)
   4fc44:	df000115 	stw	fp,4(sp)
   4fc48:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4fc4c:	00800174 	movhi	r2,5
   4fc50:	1091e204 	addi	r2,r2,18312
   4fc54:	10800017 	ldw	r2,0(r2)
   4fc58:	1005003a 	cmpeq	r2,r2,zero
   4fc5c:	1000061e 	bne	r2,zero,4fc78 <alt_get_errno+0x3c>
   4fc60:	00800174 	movhi	r2,5
   4fc64:	1091e204 	addi	r2,r2,18312
   4fc68:	10800017 	ldw	r2,0(r2)
   4fc6c:	103ee83a 	callr	r2
   4fc70:	e0bfff15 	stw	r2,-4(fp)
   4fc74:	00000306 	br	4fc84 <alt_get_errno+0x48>
   4fc78:	00800174 	movhi	r2,5
   4fc7c:	10988f04 	addi	r2,r2,25148
   4fc80:	e0bfff15 	stw	r2,-4(fp)
   4fc84:	e0bfff17 	ldw	r2,-4(fp)
}
   4fc88:	e037883a 	mov	sp,fp
   4fc8c:	dfc00117 	ldw	ra,4(sp)
   4fc90:	df000017 	ldw	fp,0(sp)
   4fc94:	dec00204 	addi	sp,sp,8
   4fc98:	f800283a 	ret

0004fc9c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4fc9c:	deffeb04 	addi	sp,sp,-84
   4fca0:	dfc01415 	stw	ra,80(sp)
   4fca4:	df001315 	stw	fp,76(sp)
   4fca8:	df001304 	addi	fp,sp,76
   4fcac:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4fcb0:	e0bffd17 	ldw	r2,-12(fp)
   4fcb4:	1004803a 	cmplt	r2,r2,zero
   4fcb8:	1000091e 	bne	r2,zero,4fce0 <isatty+0x44>
   4fcbc:	e13ffd17 	ldw	r4,-12(fp)
   4fcc0:	01400304 	movi	r5,12
   4fcc4:	004f1100 	call	4f110 <__mulsi3>
   4fcc8:	1007883a 	mov	r3,r2
   4fccc:	00800174 	movhi	r2,5
   4fcd0:	108d5e04 	addi	r2,r2,13688
   4fcd4:	1887883a 	add	r3,r3,r2
   4fcd8:	e0ffff15 	stw	r3,-4(fp)
   4fcdc:	00000106 	br	4fce4 <isatty+0x48>
   4fce0:	e03fff15 	stw	zero,-4(fp)
   4fce4:	e0bfff17 	ldw	r2,-4(fp)
   4fce8:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   4fcec:	e0bfed17 	ldw	r2,-76(fp)
   4fcf0:	1005003a 	cmpeq	r2,r2,zero
   4fcf4:	10000f1e 	bne	r2,zero,4fd34 <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4fcf8:	e0bfed17 	ldw	r2,-76(fp)
   4fcfc:	10800017 	ldw	r2,0(r2)
   4fd00:	10800817 	ldw	r2,32(r2)
   4fd04:	1004c03a 	cmpne	r2,r2,zero
   4fd08:	1000031e 	bne	r2,zero,4fd18 <isatty+0x7c>
    {
      return 1;
   4fd0c:	00800044 	movi	r2,1
   4fd10:	e0bffe15 	stw	r2,-8(fp)
   4fd14:	00000c06 	br	4fd48 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4fd18:	e17fee04 	addi	r5,fp,-72
   4fd1c:	e13ffd17 	ldw	r4,-12(fp)
   4fd20:	004fb640 	call	4fb64 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4fd24:	e0bfef17 	ldw	r2,-68(fp)
   4fd28:	10880020 	cmpeqi	r2,r2,8192
   4fd2c:	e0bffe15 	stw	r2,-8(fp)
   4fd30:	00000506 	br	4fd48 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4fd34:	004fd600 	call	4fd60 <alt_get_errno>
   4fd38:	1007883a 	mov	r3,r2
   4fd3c:	00801444 	movi	r2,81
   4fd40:	18800015 	stw	r2,0(r3)
    return 0;
   4fd44:	e03ffe15 	stw	zero,-8(fp)
   4fd48:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   4fd4c:	e037883a 	mov	sp,fp
   4fd50:	dfc00117 	ldw	ra,4(sp)
   4fd54:	df000017 	ldw	fp,0(sp)
   4fd58:	dec00204 	addi	sp,sp,8
   4fd5c:	f800283a 	ret

0004fd60 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fd60:	defffd04 	addi	sp,sp,-12
   4fd64:	dfc00215 	stw	ra,8(sp)
   4fd68:	df000115 	stw	fp,4(sp)
   4fd6c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4fd70:	00800174 	movhi	r2,5
   4fd74:	1091e204 	addi	r2,r2,18312
   4fd78:	10800017 	ldw	r2,0(r2)
   4fd7c:	1005003a 	cmpeq	r2,r2,zero
   4fd80:	1000061e 	bne	r2,zero,4fd9c <alt_get_errno+0x3c>
   4fd84:	00800174 	movhi	r2,5
   4fd88:	1091e204 	addi	r2,r2,18312
   4fd8c:	10800017 	ldw	r2,0(r2)
   4fd90:	103ee83a 	callr	r2
   4fd94:	e0bfff15 	stw	r2,-4(fp)
   4fd98:	00000306 	br	4fda8 <alt_get_errno+0x48>
   4fd9c:	00800174 	movhi	r2,5
   4fda0:	10988f04 	addi	r2,r2,25148
   4fda4:	e0bfff15 	stw	r2,-4(fp)
   4fda8:	e0bfff17 	ldw	r2,-4(fp)
}
   4fdac:	e037883a 	mov	sp,fp
   4fdb0:	dfc00117 	ldw	ra,4(sp)
   4fdb4:	df000017 	ldw	fp,0(sp)
   4fdb8:	dec00204 	addi	sp,sp,8
   4fdbc:	f800283a 	ret

0004fdc0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4fdc0:	defffe04 	addi	sp,sp,-8
   4fdc4:	dfc00115 	stw	ra,4(sp)
   4fdc8:	df000015 	stw	fp,0(sp)
   4fdcc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4fdd0:	01000174 	movhi	r4,5
   4fdd4:	2111e704 	addi	r4,r4,18332
   4fdd8:	01400174 	movhi	r5,5
   4fddc:	294b4504 	addi	r5,r5,11540
   4fde0:	01800174 	movhi	r6,5
   4fde4:	3191e704 	addi	r6,r6,18332
   4fde8:	004fe400 	call	4fe40 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4fdec:	01000134 	movhi	r4,4
   4fdf0:	21000804 	addi	r4,r4,32
   4fdf4:	01400134 	movhi	r5,4
   4fdf8:	29400804 	addi	r5,r5,32
   4fdfc:	01800134 	movhi	r6,4
   4fe00:	31806d04 	addi	r6,r6,436
   4fe04:	004fe400 	call	4fe40 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4fe08:	01000174 	movhi	r4,5
   4fe0c:	21099204 	addi	r4,r4,9800
   4fe10:	01400174 	movhi	r5,5
   4fe14:	29499204 	addi	r5,r5,9800
   4fe18:	01800174 	movhi	r6,5
   4fe1c:	318b4504 	addi	r6,r6,11540
   4fe20:	004fe400 	call	4fe40 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4fe24:	005143c0 	call	5143c <alt_dcache_flush_all>
  alt_icache_flush_all();
   4fe28:	00516340 	call	51634 <alt_icache_flush_all>
}
   4fe2c:	e037883a 	mov	sp,fp
   4fe30:	dfc00117 	ldw	ra,4(sp)
   4fe34:	df000017 	ldw	fp,0(sp)
   4fe38:	dec00204 	addi	sp,sp,8
   4fe3c:	f800283a 	ret

0004fe40 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4fe40:	defffc04 	addi	sp,sp,-16
   4fe44:	df000315 	stw	fp,12(sp)
   4fe48:	df000304 	addi	fp,sp,12
   4fe4c:	e13ffd15 	stw	r4,-12(fp)
   4fe50:	e17ffe15 	stw	r5,-8(fp)
   4fe54:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4fe58:	e0fffe17 	ldw	r3,-8(fp)
   4fe5c:	e0bffd17 	ldw	r2,-12(fp)
   4fe60:	18800e26 	beq	r3,r2,4fe9c <alt_load_section+0x5c>
  {
    while( to != end )
   4fe64:	00000a06 	br	4fe90 <alt_load_section+0x50>
    {
      *to++ = *from++;
   4fe68:	e0bffd17 	ldw	r2,-12(fp)
   4fe6c:	10c00017 	ldw	r3,0(r2)
   4fe70:	e0bffe17 	ldw	r2,-8(fp)
   4fe74:	10c00015 	stw	r3,0(r2)
   4fe78:	e0bffe17 	ldw	r2,-8(fp)
   4fe7c:	10800104 	addi	r2,r2,4
   4fe80:	e0bffe15 	stw	r2,-8(fp)
   4fe84:	e0bffd17 	ldw	r2,-12(fp)
   4fe88:	10800104 	addi	r2,r2,4
   4fe8c:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4fe90:	e0fffe17 	ldw	r3,-8(fp)
   4fe94:	e0bfff17 	ldw	r2,-4(fp)
   4fe98:	18bff31e 	bne	r3,r2,4fe68 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   4fe9c:	e037883a 	mov	sp,fp
   4fea0:	df000017 	ldw	fp,0(sp)
   4fea4:	dec00104 	addi	sp,sp,4
   4fea8:	f800283a 	ret

0004feac <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4feac:	defff804 	addi	sp,sp,-32
   4feb0:	dfc00715 	stw	ra,28(sp)
   4feb4:	df000615 	stw	fp,24(sp)
   4feb8:	df000604 	addi	fp,sp,24
   4febc:	e13ffc15 	stw	r4,-16(fp)
   4fec0:	e17ffd15 	stw	r5,-12(fp)
   4fec4:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4fec8:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4fecc:	e0bffc17 	ldw	r2,-16(fp)
   4fed0:	1004803a 	cmplt	r2,r2,zero
   4fed4:	1000091e 	bne	r2,zero,4fefc <lseek+0x50>
   4fed8:	e13ffc17 	ldw	r4,-16(fp)
   4fedc:	01400304 	movi	r5,12
   4fee0:	004f1100 	call	4f110 <__mulsi3>
   4fee4:	1007883a 	mov	r3,r2
   4fee8:	00800174 	movhi	r2,5
   4feec:	108d5e04 	addi	r2,r2,13688
   4fef0:	1887883a 	add	r3,r3,r2
   4fef4:	e0ffff15 	stw	r3,-4(fp)
   4fef8:	00000106 	br	4ff00 <lseek+0x54>
   4fefc:	e03fff15 	stw	zero,-4(fp)
   4ff00:	e0bfff17 	ldw	r2,-4(fp)
   4ff04:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   4ff08:	e0bffb17 	ldw	r2,-20(fp)
   4ff0c:	1005003a 	cmpeq	r2,r2,zero
   4ff10:	1000111e 	bne	r2,zero,4ff58 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4ff14:	e0bffb17 	ldw	r2,-20(fp)
   4ff18:	10800017 	ldw	r2,0(r2)
   4ff1c:	10800717 	ldw	r2,28(r2)
   4ff20:	1005003a 	cmpeq	r2,r2,zero
   4ff24:	1000091e 	bne	r2,zero,4ff4c <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4ff28:	e0bffb17 	ldw	r2,-20(fp)
   4ff2c:	10800017 	ldw	r2,0(r2)
   4ff30:	10800717 	ldw	r2,28(r2)
   4ff34:	e13ffb17 	ldw	r4,-20(fp)
   4ff38:	e17ffd17 	ldw	r5,-12(fp)
   4ff3c:	e1bffe17 	ldw	r6,-8(fp)
   4ff40:	103ee83a 	callr	r2
   4ff44:	e0bffa15 	stw	r2,-24(fp)
   4ff48:	00000506 	br	4ff60 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4ff4c:	00bfde84 	movi	r2,-134
   4ff50:	e0bffa15 	stw	r2,-24(fp)
   4ff54:	00000206 	br	4ff60 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
   4ff58:	00bfebc4 	movi	r2,-81
   4ff5c:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   4ff60:	e0bffa17 	ldw	r2,-24(fp)
   4ff64:	1004403a 	cmpge	r2,r2,zero
   4ff68:	1000071e 	bne	r2,zero,4ff88 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
   4ff6c:	004ffa00 	call	4ffa0 <alt_get_errno>
   4ff70:	1007883a 	mov	r3,r2
   4ff74:	e0bffa17 	ldw	r2,-24(fp)
   4ff78:	0085c83a 	sub	r2,zero,r2
   4ff7c:	18800015 	stw	r2,0(r3)
    rc = -1;
   4ff80:	00bfffc4 	movi	r2,-1
   4ff84:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   4ff88:	e0bffa17 	ldw	r2,-24(fp)
}
   4ff8c:	e037883a 	mov	sp,fp
   4ff90:	dfc00117 	ldw	ra,4(sp)
   4ff94:	df000017 	ldw	fp,0(sp)
   4ff98:	dec00204 	addi	sp,sp,8
   4ff9c:	f800283a 	ret

0004ffa0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ffa0:	defffd04 	addi	sp,sp,-12
   4ffa4:	dfc00215 	stw	ra,8(sp)
   4ffa8:	df000115 	stw	fp,4(sp)
   4ffac:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4ffb0:	00800174 	movhi	r2,5
   4ffb4:	1091e204 	addi	r2,r2,18312
   4ffb8:	10800017 	ldw	r2,0(r2)
   4ffbc:	1005003a 	cmpeq	r2,r2,zero
   4ffc0:	1000061e 	bne	r2,zero,4ffdc <alt_get_errno+0x3c>
   4ffc4:	00800174 	movhi	r2,5
   4ffc8:	1091e204 	addi	r2,r2,18312
   4ffcc:	10800017 	ldw	r2,0(r2)
   4ffd0:	103ee83a 	callr	r2
   4ffd4:	e0bfff15 	stw	r2,-4(fp)
   4ffd8:	00000306 	br	4ffe8 <alt_get_errno+0x48>
   4ffdc:	00800174 	movhi	r2,5
   4ffe0:	10988f04 	addi	r2,r2,25148
   4ffe4:	e0bfff15 	stw	r2,-4(fp)
   4ffe8:	e0bfff17 	ldw	r2,-4(fp)
}
   4ffec:	e037883a 	mov	sp,fp
   4fff0:	dfc00117 	ldw	ra,4(sp)
   4fff4:	df000017 	ldw	fp,0(sp)
   4fff8:	dec00204 	addi	sp,sp,8
   4fffc:	f800283a 	ret

00050000 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   50000:	defffd04 	addi	sp,sp,-12
   50004:	dfc00215 	stw	ra,8(sp)
   50008:	df000115 	stw	fp,4(sp)
   5000c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   50010:	0009883a 	mov	r4,zero
   50014:	00505180 	call	50518 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   50018:	005054c0 	call	5054c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   5001c:	01000174 	movhi	r4,5
   50020:	210b3b04 	addi	r4,r4,11500
   50024:	01400174 	movhi	r5,5
   50028:	294b3b04 	addi	r5,r5,11500
   5002c:	01800174 	movhi	r6,5
   50030:	318b3b04 	addi	r6,r6,11500
   50034:	0051a080 	call	51a08 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   50038:	005156c0 	call	5156c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   5003c:	01000174 	movhi	r4,5
   50040:	21057404 	addi	r4,r4,5584
   50044:	005223c0 	call	5223c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   50048:	d126ba17 	ldw	r4,-25880(gp)
   5004c:	d166bb17 	ldw	r5,-25876(gp)
   50050:	d1a6bc17 	ldw	r6,-25872(gp)
   50054:	004044c0 	call	4044c <main>
   50058:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   5005c:	01000044 	movi	r4,1
   50060:	004f9d80 	call	4f9d8 <close>
  exit (result);
   50064:	e13fff17 	ldw	r4,-4(fp)
   50068:	00522500 	call	52250 <exit>

0005006c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   5006c:	defffe04 	addi	sp,sp,-8
   50070:	df000115 	stw	fp,4(sp)
   50074:	df000104 	addi	fp,sp,4
   50078:	e13fff15 	stw	r4,-4(fp)
}
   5007c:	e037883a 	mov	sp,fp
   50080:	df000017 	ldw	fp,0(sp)
   50084:	dec00104 	addi	sp,sp,4
   50088:	f800283a 	ret

0005008c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   5008c:	defffe04 	addi	sp,sp,-8
   50090:	df000115 	stw	fp,4(sp)
   50094:	df000104 	addi	fp,sp,4
   50098:	e13fff15 	stw	r4,-4(fp)
}
   5009c:	e037883a 	mov	sp,fp
   500a0:	df000017 	ldw	fp,0(sp)
   500a4:	dec00104 	addi	sp,sp,4
   500a8:	f800283a 	ret

000500ac <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   500ac:	defff704 	addi	sp,sp,-36
   500b0:	dfc00815 	stw	ra,32(sp)
   500b4:	df000715 	stw	fp,28(sp)
   500b8:	df000704 	addi	fp,sp,28
   500bc:	e13ffb15 	stw	r4,-20(fp)
   500c0:	e17ffc15 	stw	r5,-16(fp)
   500c4:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   500c8:	e0bffb17 	ldw	r2,-20(fp)
   500cc:	1004803a 	cmplt	r2,r2,zero
   500d0:	1000091e 	bne	r2,zero,500f8 <read+0x4c>
   500d4:	e13ffb17 	ldw	r4,-20(fp)
   500d8:	01400304 	movi	r5,12
   500dc:	004f1100 	call	4f110 <__mulsi3>
   500e0:	1007883a 	mov	r3,r2
   500e4:	00800174 	movhi	r2,5
   500e8:	108d5e04 	addi	r2,r2,13688
   500ec:	1887883a 	add	r3,r3,r2
   500f0:	e0ffff15 	stw	r3,-4(fp)
   500f4:	00000106 	br	500fc <read+0x50>
   500f8:	e03fff15 	stw	zero,-4(fp)
   500fc:	e0bfff17 	ldw	r2,-4(fp)
   50100:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   50104:	e0bffa17 	ldw	r2,-24(fp)
   50108:	1005003a 	cmpeq	r2,r2,zero
   5010c:	1000241e 	bne	r2,zero,501a0 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   50110:	e0bffa17 	ldw	r2,-24(fp)
   50114:	10800217 	ldw	r2,8(r2)
   50118:	108000cc 	andi	r2,r2,3
   5011c:	10800060 	cmpeqi	r2,r2,1
   50120:	10001a1e 	bne	r2,zero,5018c <read+0xe0>
   50124:	e0bffa17 	ldw	r2,-24(fp)
   50128:	10800017 	ldw	r2,0(r2)
   5012c:	10800517 	ldw	r2,20(r2)
   50130:	1005003a 	cmpeq	r2,r2,zero
   50134:	1000151e 	bne	r2,zero,5018c <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   50138:	e0bffa17 	ldw	r2,-24(fp)
   5013c:	10800017 	ldw	r2,0(r2)
   50140:	10800517 	ldw	r2,20(r2)
   50144:	e17ffc17 	ldw	r5,-16(fp)
   50148:	e1bffd17 	ldw	r6,-12(fp)
   5014c:	e13ffa17 	ldw	r4,-24(fp)
   50150:	103ee83a 	callr	r2
   50154:	e0bff915 	stw	r2,-28(fp)
   50158:	e0bff917 	ldw	r2,-28(fp)
   5015c:	1004403a 	cmpge	r2,r2,zero
   50160:	1000071e 	bne	r2,zero,50180 <read+0xd4>
        {
          ALT_ERRNO = -rval;
   50164:	00501d00 	call	501d0 <alt_get_errno>
   50168:	e0fff917 	ldw	r3,-28(fp)
   5016c:	00c7c83a 	sub	r3,zero,r3
   50170:	10c00015 	stw	r3,0(r2)
          return -1;
   50174:	00bfffc4 	movi	r2,-1
   50178:	e0bffe15 	stw	r2,-8(fp)
   5017c:	00000e06 	br	501b8 <read+0x10c>
        }
        return rval;
   50180:	e0bff917 	ldw	r2,-28(fp)
   50184:	e0bffe15 	stw	r2,-8(fp)
   50188:	00000b06 	br	501b8 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
   5018c:	00501d00 	call	501d0 <alt_get_errno>
   50190:	1007883a 	mov	r3,r2
   50194:	00800344 	movi	r2,13
   50198:	18800015 	stw	r2,0(r3)
   5019c:	00000406 	br	501b0 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   501a0:	00501d00 	call	501d0 <alt_get_errno>
   501a4:	1007883a 	mov	r3,r2
   501a8:	00801444 	movi	r2,81
   501ac:	18800015 	stw	r2,0(r3)
  }
  return -1;
   501b0:	00bfffc4 	movi	r2,-1
   501b4:	e0bffe15 	stw	r2,-8(fp)
   501b8:	e0bffe17 	ldw	r2,-8(fp)
}
   501bc:	e037883a 	mov	sp,fp
   501c0:	dfc00117 	ldw	ra,4(sp)
   501c4:	df000017 	ldw	fp,0(sp)
   501c8:	dec00204 	addi	sp,sp,8
   501cc:	f800283a 	ret

000501d0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   501d0:	defffd04 	addi	sp,sp,-12
   501d4:	dfc00215 	stw	ra,8(sp)
   501d8:	df000115 	stw	fp,4(sp)
   501dc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   501e0:	00800174 	movhi	r2,5
   501e4:	1091e204 	addi	r2,r2,18312
   501e8:	10800017 	ldw	r2,0(r2)
   501ec:	1005003a 	cmpeq	r2,r2,zero
   501f0:	1000061e 	bne	r2,zero,5020c <alt_get_errno+0x3c>
   501f4:	00800174 	movhi	r2,5
   501f8:	1091e204 	addi	r2,r2,18312
   501fc:	10800017 	ldw	r2,0(r2)
   50200:	103ee83a 	callr	r2
   50204:	e0bfff15 	stw	r2,-4(fp)
   50208:	00000306 	br	50218 <alt_get_errno+0x48>
   5020c:	00800174 	movhi	r2,5
   50210:	10988f04 	addi	r2,r2,25148
   50214:	e0bfff15 	stw	r2,-4(fp)
   50218:	e0bfff17 	ldw	r2,-4(fp)
}
   5021c:	e037883a 	mov	sp,fp
   50220:	dfc00117 	ldw	ra,4(sp)
   50224:	df000017 	ldw	fp,0(sp)
   50228:	dec00204 	addi	sp,sp,8
   5022c:	f800283a 	ret

00050230 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   50230:	defffc04 	addi	sp,sp,-16
   50234:	dfc00315 	stw	ra,12(sp)
   50238:	df000215 	stw	fp,8(sp)
   5023c:	dc000115 	stw	r16,4(sp)
   50240:	df000104 	addi	fp,sp,4
   50244:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   50248:	e0bfff17 	ldw	r2,-4(fp)
   5024c:	108000d0 	cmplti	r2,r2,3
   50250:	10000f1e 	bne	r2,zero,50290 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
   50254:	e13fff17 	ldw	r4,-4(fp)
   50258:	04000174 	movhi	r16,5
   5025c:	840d5e04 	addi	r16,r16,13688
   50260:	01400304 	movi	r5,12
   50264:	004f1100 	call	4f110 <__mulsi3>
   50268:	1405883a 	add	r2,r2,r16
   5026c:	10800204 	addi	r2,r2,8
   50270:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   50274:	e13fff17 	ldw	r4,-4(fp)
   50278:	04000174 	movhi	r16,5
   5027c:	840d5e04 	addi	r16,r16,13688
   50280:	01400304 	movi	r5,12
   50284:	004f1100 	call	4f110 <__mulsi3>
   50288:	1405883a 	add	r2,r2,r16
   5028c:	10000015 	stw	zero,0(r2)
  }
}
   50290:	e037883a 	mov	sp,fp
   50294:	dfc00217 	ldw	ra,8(sp)
   50298:	df000117 	ldw	fp,4(sp)
   5029c:	dc000017 	ldw	r16,0(sp)
   502a0:	dec00304 	addi	sp,sp,12
   502a4:	f800283a 	ret

000502a8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   502a8:	defff804 	addi	sp,sp,-32
   502ac:	df000715 	stw	fp,28(sp)
   502b0:	df000704 	addi	fp,sp,28
   502b4:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   502b8:	0005303a 	rdctl	r2,status
   502bc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   502c0:	e0fffb17 	ldw	r3,-20(fp)
   502c4:	00bfff84 	movi	r2,-2
   502c8:	1884703a 	and	r2,r3,r2
   502cc:	1001703a 	wrctl	status,r2
  
  return context;
   502d0:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   502d4:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   502d8:	d0a00d17 	ldw	r2,-32716(gp)
   502dc:	10c000c4 	addi	r3,r2,3
   502e0:	00bfff04 	movi	r2,-4
   502e4:	1884703a 	and	r2,r3,r2
   502e8:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   502ec:	d0e00d17 	ldw	r3,-32716(gp)
   502f0:	e0bffe17 	ldw	r2,-8(fp)
   502f4:	1887883a 	add	r3,r3,r2
   502f8:	00800234 	movhi	r2,8
   502fc:	10800004 	addi	r2,r2,0
   50300:	10c0072e 	bgeu	r2,r3,50320 <sbrk+0x78>
   50304:	e0bffd17 	ldw	r2,-12(fp)
   50308:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   5030c:	e0bffa17 	ldw	r2,-24(fp)
   50310:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   50314:	00bfffc4 	movi	r2,-1
   50318:	e0bfff15 	stw	r2,-4(fp)
   5031c:	00000c06 	br	50350 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   50320:	d0a00d17 	ldw	r2,-32716(gp)
   50324:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   50328:	d0e00d17 	ldw	r3,-32716(gp)
   5032c:	e0bffe17 	ldw	r2,-8(fp)
   50330:	1885883a 	add	r2,r3,r2
   50334:	d0a00d15 	stw	r2,-32716(gp)
   50338:	e0bffd17 	ldw	r2,-12(fp)
   5033c:	e0bff915 	stw	r2,-28(fp)
   50340:	e0bff917 	ldw	r2,-28(fp)
   50344:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   50348:	e0bffc17 	ldw	r2,-16(fp)
   5034c:	e0bfff15 	stw	r2,-4(fp)
   50350:	e0bfff17 	ldw	r2,-4(fp)
} 
   50354:	e037883a 	mov	sp,fp
   50358:	df000017 	ldw	fp,0(sp)
   5035c:	dec00104 	addi	sp,sp,4
   50360:	f800283a 	ret

00050364 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   50364:	defffd04 	addi	sp,sp,-12
   50368:	dfc00215 	stw	ra,8(sp)
   5036c:	df000115 	stw	fp,4(sp)
   50370:	df000104 	addi	fp,sp,4
   50374:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   50378:	e13fff17 	ldw	r4,-4(fp)
   5037c:	00512e00 	call	512e0 <alt_busy_sleep>
}
   50380:	e037883a 	mov	sp,fp
   50384:	dfc00117 	ldw	ra,4(sp)
   50388:	df000017 	ldw	fp,0(sp)
   5038c:	dec00204 	addi	sp,sp,8
   50390:	f800283a 	ret

00050394 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   50394:	defff704 	addi	sp,sp,-36
   50398:	dfc00815 	stw	ra,32(sp)
   5039c:	df000715 	stw	fp,28(sp)
   503a0:	df000704 	addi	fp,sp,28
   503a4:	e13ffb15 	stw	r4,-20(fp)
   503a8:	e17ffc15 	stw	r5,-16(fp)
   503ac:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   503b0:	e0bffb17 	ldw	r2,-20(fp)
   503b4:	1004803a 	cmplt	r2,r2,zero
   503b8:	1000091e 	bne	r2,zero,503e0 <write+0x4c>
   503bc:	e13ffb17 	ldw	r4,-20(fp)
   503c0:	01400304 	movi	r5,12
   503c4:	004f1100 	call	4f110 <__mulsi3>
   503c8:	1007883a 	mov	r3,r2
   503cc:	00800174 	movhi	r2,5
   503d0:	108d5e04 	addi	r2,r2,13688
   503d4:	1887883a 	add	r3,r3,r2
   503d8:	e0ffff15 	stw	r3,-4(fp)
   503dc:	00000106 	br	503e4 <write+0x50>
   503e0:	e03fff15 	stw	zero,-4(fp)
   503e4:	e0bfff17 	ldw	r2,-4(fp)
   503e8:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   503ec:	e0bffa17 	ldw	r2,-24(fp)
   503f0:	1005003a 	cmpeq	r2,r2,zero
   503f4:	1000241e 	bne	r2,zero,50488 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   503f8:	e0bffa17 	ldw	r2,-24(fp)
   503fc:	10800217 	ldw	r2,8(r2)
   50400:	108000cc 	andi	r2,r2,3
   50404:	1005003a 	cmpeq	r2,r2,zero
   50408:	10001a1e 	bne	r2,zero,50474 <write+0xe0>
   5040c:	e0bffa17 	ldw	r2,-24(fp)
   50410:	10800017 	ldw	r2,0(r2)
   50414:	10800617 	ldw	r2,24(r2)
   50418:	1005003a 	cmpeq	r2,r2,zero
   5041c:	1000151e 	bne	r2,zero,50474 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   50420:	e0bffa17 	ldw	r2,-24(fp)
   50424:	10800017 	ldw	r2,0(r2)
   50428:	10800617 	ldw	r2,24(r2)
   5042c:	e17ffc17 	ldw	r5,-16(fp)
   50430:	e1bffd17 	ldw	r6,-12(fp)
   50434:	e13ffa17 	ldw	r4,-24(fp)
   50438:	103ee83a 	callr	r2
   5043c:	e0bff915 	stw	r2,-28(fp)
   50440:	e0bff917 	ldw	r2,-28(fp)
   50444:	1004403a 	cmpge	r2,r2,zero
   50448:	1000071e 	bne	r2,zero,50468 <write+0xd4>
      {
        ALT_ERRNO = -rval;
   5044c:	00504b80 	call	504b8 <alt_get_errno>
   50450:	e0fff917 	ldw	r3,-28(fp)
   50454:	00c7c83a 	sub	r3,zero,r3
   50458:	10c00015 	stw	r3,0(r2)
        return -1;
   5045c:	00bfffc4 	movi	r2,-1
   50460:	e0bffe15 	stw	r2,-8(fp)
   50464:	00000e06 	br	504a0 <write+0x10c>
      }
      return rval;
   50468:	e0bff917 	ldw	r2,-28(fp)
   5046c:	e0bffe15 	stw	r2,-8(fp)
   50470:	00000b06 	br	504a0 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
   50474:	00504b80 	call	504b8 <alt_get_errno>
   50478:	1007883a 	mov	r3,r2
   5047c:	00800344 	movi	r2,13
   50480:	18800015 	stw	r2,0(r3)
   50484:	00000406 	br	50498 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   50488:	00504b80 	call	504b8 <alt_get_errno>
   5048c:	1007883a 	mov	r3,r2
   50490:	00801444 	movi	r2,81
   50494:	18800015 	stw	r2,0(r3)
  }
  return -1;
   50498:	00bfffc4 	movi	r2,-1
   5049c:	e0bffe15 	stw	r2,-8(fp)
   504a0:	e0bffe17 	ldw	r2,-8(fp)
}
   504a4:	e037883a 	mov	sp,fp
   504a8:	dfc00117 	ldw	ra,4(sp)
   504ac:	df000017 	ldw	fp,0(sp)
   504b0:	dec00204 	addi	sp,sp,8
   504b4:	f800283a 	ret

000504b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   504b8:	defffd04 	addi	sp,sp,-12
   504bc:	dfc00215 	stw	ra,8(sp)
   504c0:	df000115 	stw	fp,4(sp)
   504c4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   504c8:	00800174 	movhi	r2,5
   504cc:	1091e204 	addi	r2,r2,18312
   504d0:	10800017 	ldw	r2,0(r2)
   504d4:	1005003a 	cmpeq	r2,r2,zero
   504d8:	1000061e 	bne	r2,zero,504f4 <alt_get_errno+0x3c>
   504dc:	00800174 	movhi	r2,5
   504e0:	1091e204 	addi	r2,r2,18312
   504e4:	10800017 	ldw	r2,0(r2)
   504e8:	103ee83a 	callr	r2
   504ec:	e0bfff15 	stw	r2,-4(fp)
   504f0:	00000306 	br	50500 <alt_get_errno+0x48>
   504f4:	00800174 	movhi	r2,5
   504f8:	10988f04 	addi	r2,r2,25148
   504fc:	e0bfff15 	stw	r2,-4(fp)
   50500:	e0bfff17 	ldw	r2,-4(fp)
}
   50504:	e037883a 	mov	sp,fp
   50508:	dfc00117 	ldw	ra,4(sp)
   5050c:	df000017 	ldw	fp,0(sp)
   50510:	dec00204 	addi	sp,sp,8
   50514:	f800283a 	ret

00050518 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   50518:	defffd04 	addi	sp,sp,-12
   5051c:	dfc00215 	stw	ra,8(sp)
   50520:	df000115 	stw	fp,4(sp)
   50524:	df000104 	addi	fp,sp,4
   50528:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
   5052c:	0051f080 	call	51f08 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   50530:	00800044 	movi	r2,1
   50534:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   50538:	e037883a 	mov	sp,fp
   5053c:	dfc00117 	ldw	ra,4(sp)
   50540:	df000017 	ldw	fp,0(sp)
   50544:	dec00204 	addi	sp,sp,8
   50548:	f800283a 	ret

0005054c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   5054c:	defffe04 	addi	sp,sp,-8
   50550:	dfc00115 	stw	ra,4(sp)
   50554:	df000015 	stw	fp,0(sp)
   50558:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   5055c:	01000234 	movhi	r4,8
   50560:	21040004 	addi	r4,r4,4096
   50564:	000b883a 	mov	r5,zero
   50568:	01800044 	movi	r6,1
   5056c:	01c0fa04 	movi	r7,1000
   50570:	00510fc0 	call	510fc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   50574:	01000174 	movhi	r4,5
   50578:	210dc804 	addi	r4,r4,14112
   5057c:	000b883a 	mov	r5,zero
   50580:	01800404 	movi	r6,16
   50584:	00507280 	call	50728 <altera_avalon_jtag_uart_init>
   50588:	01000174 	movhi	r4,5
   5058c:	210dbe04 	addi	r4,r4,14072
   50590:	00505a80 	call	505a8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
}
   50594:	e037883a 	mov	sp,fp
   50598:	dfc00117 	ldw	ra,4(sp)
   5059c:	df000017 	ldw	fp,0(sp)
   505a0:	dec00204 	addi	sp,sp,8
   505a4:	f800283a 	ret

000505a8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   505a8:	defffd04 	addi	sp,sp,-12
   505ac:	dfc00215 	stw	ra,8(sp)
   505b0:	df000115 	stw	fp,4(sp)
   505b4:	df000104 	addi	fp,sp,4
   505b8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   505bc:	e13fff17 	ldw	r4,-4(fp)
   505c0:	01400174 	movhi	r5,5
   505c4:	2951df04 	addi	r5,r5,18300
   505c8:	00514580 	call	51458 <alt_dev_llist_insert>
}
   505cc:	e037883a 	mov	sp,fp
   505d0:	dfc00117 	ldw	ra,4(sp)
   505d4:	df000017 	ldw	fp,0(sp)
   505d8:	dec00204 	addi	sp,sp,8
   505dc:	f800283a 	ret

000505e0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   505e0:	defffa04 	addi	sp,sp,-24
   505e4:	dfc00515 	stw	ra,20(sp)
   505e8:	df000415 	stw	fp,16(sp)
   505ec:	df000404 	addi	fp,sp,16
   505f0:	e13ffd15 	stw	r4,-12(fp)
   505f4:	e17ffe15 	stw	r5,-8(fp)
   505f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   505fc:	e0bffd17 	ldw	r2,-12(fp)
   50600:	10800017 	ldw	r2,0(r2)
   50604:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   50608:	e0bffc17 	ldw	r2,-16(fp)
   5060c:	11000a04 	addi	r4,r2,40
   50610:	e0bffd17 	ldw	r2,-12(fp)
   50614:	11c00217 	ldw	r7,8(r2)
   50618:	e17ffe17 	ldw	r5,-8(fp)
   5061c:	e1bfff17 	ldw	r6,-4(fp)
   50620:	0050c280 	call	50c28 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   50624:	e037883a 	mov	sp,fp
   50628:	dfc00117 	ldw	ra,4(sp)
   5062c:	df000017 	ldw	fp,0(sp)
   50630:	dec00204 	addi	sp,sp,8
   50634:	f800283a 	ret

00050638 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   50638:	defffa04 	addi	sp,sp,-24
   5063c:	dfc00515 	stw	ra,20(sp)
   50640:	df000415 	stw	fp,16(sp)
   50644:	df000404 	addi	fp,sp,16
   50648:	e13ffd15 	stw	r4,-12(fp)
   5064c:	e17ffe15 	stw	r5,-8(fp)
   50650:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   50654:	e0bffd17 	ldw	r2,-12(fp)
   50658:	10800017 	ldw	r2,0(r2)
   5065c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   50660:	e0bffc17 	ldw	r2,-16(fp)
   50664:	11000a04 	addi	r4,r2,40
   50668:	e0bffd17 	ldw	r2,-12(fp)
   5066c:	11c00217 	ldw	r7,8(r2)
   50670:	e17ffe17 	ldw	r5,-8(fp)
   50674:	e1bfff17 	ldw	r6,-4(fp)
   50678:	0050e4c0 	call	50e4c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   5067c:	e037883a 	mov	sp,fp
   50680:	dfc00117 	ldw	ra,4(sp)
   50684:	df000017 	ldw	fp,0(sp)
   50688:	dec00204 	addi	sp,sp,8
   5068c:	f800283a 	ret

00050690 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   50690:	defffc04 	addi	sp,sp,-16
   50694:	dfc00315 	stw	ra,12(sp)
   50698:	df000215 	stw	fp,8(sp)
   5069c:	df000204 	addi	fp,sp,8
   506a0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   506a4:	e0bfff17 	ldw	r2,-4(fp)
   506a8:	10800017 	ldw	r2,0(r2)
   506ac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   506b0:	e0bffe17 	ldw	r2,-8(fp)
   506b4:	11000a04 	addi	r4,r2,40
   506b8:	e0bfff17 	ldw	r2,-4(fp)
   506bc:	11400217 	ldw	r5,8(r2)
   506c0:	0050ac00 	call	50ac0 <altera_avalon_jtag_uart_close>
}
   506c4:	e037883a 	mov	sp,fp
   506c8:	dfc00117 	ldw	ra,4(sp)
   506cc:	df000017 	ldw	fp,0(sp)
   506d0:	dec00204 	addi	sp,sp,8
   506d4:	f800283a 	ret

000506d8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   506d8:	defffa04 	addi	sp,sp,-24
   506dc:	dfc00515 	stw	ra,20(sp)
   506e0:	df000415 	stw	fp,16(sp)
   506e4:	df000404 	addi	fp,sp,16
   506e8:	e13ffd15 	stw	r4,-12(fp)
   506ec:	e17ffe15 	stw	r5,-8(fp)
   506f0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   506f4:	e0bffd17 	ldw	r2,-12(fp)
   506f8:	10800017 	ldw	r2,0(r2)
   506fc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   50700:	e0bffc17 	ldw	r2,-16(fp)
   50704:	11000a04 	addi	r4,r2,40
   50708:	e17ffe17 	ldw	r5,-8(fp)
   5070c:	e1bfff17 	ldw	r6,-4(fp)
   50710:	0050b340 	call	50b34 <altera_avalon_jtag_uart_ioctl>
}
   50714:	e037883a 	mov	sp,fp
   50718:	dfc00117 	ldw	ra,4(sp)
   5071c:	df000017 	ldw	fp,0(sp)
   50720:	dec00204 	addi	sp,sp,8
   50724:	f800283a 	ret

00050728 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   50728:	defffa04 	addi	sp,sp,-24
   5072c:	dfc00515 	stw	ra,20(sp)
   50730:	df000415 	stw	fp,16(sp)
   50734:	df000404 	addi	fp,sp,16
   50738:	e13ffd15 	stw	r4,-12(fp)
   5073c:	e17ffe15 	stw	r5,-8(fp)
   50740:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   50744:	e0fffd17 	ldw	r3,-12(fp)
   50748:	00800044 	movi	r2,1
   5074c:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   50750:	e0bffd17 	ldw	r2,-12(fp)
   50754:	10800017 	ldw	r2,0(r2)
   50758:	11000104 	addi	r4,r2,4
   5075c:	e0bffd17 	ldw	r2,-12(fp)
   50760:	10800817 	ldw	r2,32(r2)
   50764:	1007883a 	mov	r3,r2
   50768:	2005883a 	mov	r2,r4
   5076c:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   50770:	e13ffe17 	ldw	r4,-8(fp)
   50774:	e17fff17 	ldw	r5,-4(fp)
   50778:	d8000015 	stw	zero,0(sp)
   5077c:	01800174 	movhi	r6,5
   50780:	3181fa04 	addi	r6,r6,2024
   50784:	e1fffd17 	ldw	r7,-12(fp)
   50788:	00516640 	call	51664 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   5078c:	e0bffd17 	ldw	r2,-12(fp)
   50790:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   50794:	e0bffd17 	ldw	r2,-12(fp)
   50798:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   5079c:	00800174 	movhi	r2,5
   507a0:	10989404 	addi	r2,r2,25168
   507a4:	10800017 	ldw	r2,0(r2)
   507a8:	100b883a 	mov	r5,r2
   507ac:	01800174 	movhi	r6,5
   507b0:	31828404 	addi	r6,r6,2576
   507b4:	e1fffd17 	ldw	r7,-12(fp)
   507b8:	005118c0 	call	5118c <alt_alarm_start>
   507bc:	1004403a 	cmpge	r2,r2,zero
   507c0:	1000041e 	bne	r2,zero,507d4 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   507c4:	e0fffd17 	ldw	r3,-12(fp)
   507c8:	00a00034 	movhi	r2,32768
   507cc:	10bfffc4 	addi	r2,r2,-1
   507d0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   507d4:	e037883a 	mov	sp,fp
   507d8:	dfc00117 	ldw	ra,4(sp)
   507dc:	df000017 	ldw	fp,0(sp)
   507e0:	dec00204 	addi	sp,sp,8
   507e4:	f800283a 	ret

000507e8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   507e8:	defff804 	addi	sp,sp,-32
   507ec:	df000715 	stw	fp,28(sp)
   507f0:	df000704 	addi	fp,sp,28
   507f4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   507f8:	e0bfff17 	ldw	r2,-4(fp)
   507fc:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   50800:	e0bffe17 	ldw	r2,-8(fp)
   50804:	10800017 	ldw	r2,0(r2)
   50808:	e0bffd15 	stw	r2,-12(fp)
   5080c:	00000006 	br	50810 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   50810:	e0bffd17 	ldw	r2,-12(fp)
   50814:	10800104 	addi	r2,r2,4
   50818:	10800037 	ldwio	r2,0(r2)
   5081c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   50820:	e0bffc17 	ldw	r2,-16(fp)
   50824:	1080c00c 	andi	r2,r2,768
   50828:	1005003a 	cmpeq	r2,r2,zero
   5082c:	1000741e 	bne	r2,zero,50a00 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   50830:	e0bffc17 	ldw	r2,-16(fp)
   50834:	1080400c 	andi	r2,r2,256
   50838:	1005003a 	cmpeq	r2,r2,zero
   5083c:	1000351e 	bne	r2,zero,50914 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   50840:	00800074 	movhi	r2,1
   50844:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50848:	e0bffe17 	ldw	r2,-8(fp)
   5084c:	10800a17 	ldw	r2,40(r2)
   50850:	10800044 	addi	r2,r2,1
   50854:	1081ffcc 	andi	r2,r2,2047
   50858:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   5085c:	e0bffe17 	ldw	r2,-8(fp)
   50860:	10c00b17 	ldw	r3,44(r2)
   50864:	e0bffa17 	ldw	r2,-24(fp)
   50868:	18801626 	beq	r3,r2,508c4 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   5086c:	e0bffd17 	ldw	r2,-12(fp)
   50870:	10800037 	ldwio	r2,0(r2)
   50874:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   50878:	e0bffb17 	ldw	r2,-20(fp)
   5087c:	10a0000c 	andi	r2,r2,32768
   50880:	1005003a 	cmpeq	r2,r2,zero
   50884:	10000f1e 	bne	r2,zero,508c4 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   50888:	e0bffe17 	ldw	r2,-8(fp)
   5088c:	10c00a17 	ldw	r3,40(r2)
   50890:	e0bffb17 	ldw	r2,-20(fp)
   50894:	1009883a 	mov	r4,r2
   50898:	e0bffe17 	ldw	r2,-8(fp)
   5089c:	1885883a 	add	r2,r3,r2
   508a0:	10800e04 	addi	r2,r2,56
   508a4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   508a8:	e0bffe17 	ldw	r2,-8(fp)
   508ac:	10800a17 	ldw	r2,40(r2)
   508b0:	10800044 	addi	r2,r2,1
   508b4:	10c1ffcc 	andi	r3,r2,2047
   508b8:	e0bffe17 	ldw	r2,-8(fp)
   508bc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   508c0:	003fe106 	br	50848 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   508c4:	e0bffb17 	ldw	r2,-20(fp)
   508c8:	10bfffec 	andhi	r2,r2,65535
   508cc:	1005003a 	cmpeq	r2,r2,zero
   508d0:	1000101e 	bne	r2,zero,50914 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   508d4:	e0bffe17 	ldw	r2,-8(fp)
   508d8:	10c00817 	ldw	r3,32(r2)
   508dc:	00bfff84 	movi	r2,-2
   508e0:	1886703a 	and	r3,r3,r2
   508e4:	e0bffe17 	ldw	r2,-8(fp)
   508e8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   508ec:	e0bffd17 	ldw	r2,-12(fp)
   508f0:	11000104 	addi	r4,r2,4
   508f4:	e0bffe17 	ldw	r2,-8(fp)
   508f8:	10800817 	ldw	r2,32(r2)
   508fc:	1007883a 	mov	r3,r2
   50900:	2005883a 	mov	r2,r4
   50904:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   50908:	e0bffd17 	ldw	r2,-12(fp)
   5090c:	10800104 	addi	r2,r2,4
   50910:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   50914:	e0bffc17 	ldw	r2,-16(fp)
   50918:	1080800c 	andi	r2,r2,512
   5091c:	1005003a 	cmpeq	r2,r2,zero
   50920:	103fbb1e 	bne	r2,zero,50810 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   50924:	e0bffc17 	ldw	r2,-16(fp)
   50928:	10bfffec 	andhi	r2,r2,65535
   5092c:	1004d43a 	srli	r2,r2,16
   50930:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   50934:	00001506 	br	5098c <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   50938:	e13ffd17 	ldw	r4,-12(fp)
   5093c:	e0bffe17 	ldw	r2,-8(fp)
   50940:	10c00d17 	ldw	r3,52(r2)
   50944:	e0bffe17 	ldw	r2,-8(fp)
   50948:	1885883a 	add	r2,r3,r2
   5094c:	10820e04 	addi	r2,r2,2104
   50950:	10800003 	ldbu	r2,0(r2)
   50954:	10c03fcc 	andi	r3,r2,255
   50958:	18c0201c 	xori	r3,r3,128
   5095c:	18ffe004 	addi	r3,r3,-128
   50960:	2005883a 	mov	r2,r4
   50964:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50968:	e0bffe17 	ldw	r2,-8(fp)
   5096c:	10800d17 	ldw	r2,52(r2)
   50970:	10800044 	addi	r2,r2,1
   50974:	10c1ffcc 	andi	r3,r2,2047
   50978:	e0bffe17 	ldw	r2,-8(fp)
   5097c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   50980:	e0bff917 	ldw	r2,-28(fp)
   50984:	10bfffc4 	addi	r2,r2,-1
   50988:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   5098c:	e0bff917 	ldw	r2,-28(fp)
   50990:	1005003a 	cmpeq	r2,r2,zero
   50994:	1000051e 	bne	r2,zero,509ac <altera_avalon_jtag_uart_irq+0x1c4>
   50998:	e0bffe17 	ldw	r2,-8(fp)
   5099c:	10c00d17 	ldw	r3,52(r2)
   509a0:	e0bffe17 	ldw	r2,-8(fp)
   509a4:	10800c17 	ldw	r2,48(r2)
   509a8:	18bfe31e 	bne	r3,r2,50938 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   509ac:	e0bff917 	ldw	r2,-28(fp)
   509b0:	1005003a 	cmpeq	r2,r2,zero
   509b4:	103f961e 	bne	r2,zero,50810 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   509b8:	e0bffe17 	ldw	r2,-8(fp)
   509bc:	10c00817 	ldw	r3,32(r2)
   509c0:	00bfff44 	movi	r2,-3
   509c4:	1886703a 	and	r3,r3,r2
   509c8:	e0bffe17 	ldw	r2,-8(fp)
   509cc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   509d0:	e0bffe17 	ldw	r2,-8(fp)
   509d4:	10800017 	ldw	r2,0(r2)
   509d8:	11000104 	addi	r4,r2,4
   509dc:	e0bffe17 	ldw	r2,-8(fp)
   509e0:	10800817 	ldw	r2,32(r2)
   509e4:	1007883a 	mov	r3,r2
   509e8:	2005883a 	mov	r2,r4
   509ec:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   509f0:	e0bffd17 	ldw	r2,-12(fp)
   509f4:	10800104 	addi	r2,r2,4
   509f8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   509fc:	003f8406 	br	50810 <altera_avalon_jtag_uart_irq+0x28>
}
   50a00:	e037883a 	mov	sp,fp
   50a04:	df000017 	ldw	fp,0(sp)
   50a08:	dec00104 	addi	sp,sp,4
   50a0c:	f800283a 	ret

00050a10 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   50a10:	defffc04 	addi	sp,sp,-16
   50a14:	df000315 	stw	fp,12(sp)
   50a18:	df000304 	addi	fp,sp,12
   50a1c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   50a20:	e0bfff17 	ldw	r2,-4(fp)
   50a24:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   50a28:	e0bffe17 	ldw	r2,-8(fp)
   50a2c:	10800017 	ldw	r2,0(r2)
   50a30:	10800104 	addi	r2,r2,4
   50a34:	10800037 	ldwio	r2,0(r2)
   50a38:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   50a3c:	e0bffd17 	ldw	r2,-12(fp)
   50a40:	1081000c 	andi	r2,r2,1024
   50a44:	1005003a 	cmpeq	r2,r2,zero
   50a48:	10000c1e 	bne	r2,zero,50a7c <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   50a4c:	e0bffe17 	ldw	r2,-8(fp)
   50a50:	10800017 	ldw	r2,0(r2)
   50a54:	11000104 	addi	r4,r2,4
   50a58:	e0bffe17 	ldw	r2,-8(fp)
   50a5c:	10800817 	ldw	r2,32(r2)
   50a60:	10810014 	ori	r2,r2,1024
   50a64:	1007883a 	mov	r3,r2
   50a68:	2005883a 	mov	r2,r4
   50a6c:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   50a70:	e0bffe17 	ldw	r2,-8(fp)
   50a74:	10000915 	stw	zero,36(r2)
   50a78:	00000a06 	br	50aa4 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   50a7c:	e0bffe17 	ldw	r2,-8(fp)
   50a80:	10c00917 	ldw	r3,36(r2)
   50a84:	00a00034 	movhi	r2,32768
   50a88:	10bfff04 	addi	r2,r2,-4
   50a8c:	10c00536 	bltu	r2,r3,50aa4 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   50a90:	e0bffe17 	ldw	r2,-8(fp)
   50a94:	10800917 	ldw	r2,36(r2)
   50a98:	10c00044 	addi	r3,r2,1
   50a9c:	e0bffe17 	ldw	r2,-8(fp)
   50aa0:	10c00915 	stw	r3,36(r2)
   50aa4:	00800174 	movhi	r2,5
   50aa8:	10989404 	addi	r2,r2,25168
   50aac:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   50ab0:	e037883a 	mov	sp,fp
   50ab4:	df000017 	ldw	fp,0(sp)
   50ab8:	dec00104 	addi	sp,sp,4
   50abc:	f800283a 	ret

00050ac0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   50ac0:	defffc04 	addi	sp,sp,-16
   50ac4:	df000315 	stw	fp,12(sp)
   50ac8:	df000304 	addi	fp,sp,12
   50acc:	e13ffd15 	stw	r4,-12(fp)
   50ad0:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   50ad4:	00000706 	br	50af4 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   50ad8:	e0bffe17 	ldw	r2,-8(fp)
   50adc:	1090000c 	andi	r2,r2,16384
   50ae0:	1005003a 	cmpeq	r2,r2,zero
   50ae4:	1000031e 	bne	r2,zero,50af4 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   50ae8:	00bffd44 	movi	r2,-11
   50aec:	e0bfff15 	stw	r2,-4(fp)
   50af0:	00000b06 	br	50b20 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   50af4:	e0bffd17 	ldw	r2,-12(fp)
   50af8:	10c00d17 	ldw	r3,52(r2)
   50afc:	e0bffd17 	ldw	r2,-12(fp)
   50b00:	10800c17 	ldw	r2,48(r2)
   50b04:	18800526 	beq	r3,r2,50b1c <altera_avalon_jtag_uart_close+0x5c>
   50b08:	e0bffd17 	ldw	r2,-12(fp)
   50b0c:	10c00917 	ldw	r3,36(r2)
   50b10:	e0bffd17 	ldw	r2,-12(fp)
   50b14:	10800117 	ldw	r2,4(r2)
   50b18:	18bfef36 	bltu	r3,r2,50ad8 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   50b1c:	e03fff15 	stw	zero,-4(fp)
   50b20:	e0bfff17 	ldw	r2,-4(fp)
}
   50b24:	e037883a 	mov	sp,fp
   50b28:	df000017 	ldw	fp,0(sp)
   50b2c:	dec00104 	addi	sp,sp,4
   50b30:	f800283a 	ret

00050b34 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   50b34:	defff804 	addi	sp,sp,-32
   50b38:	df000715 	stw	fp,28(sp)
   50b3c:	df000704 	addi	fp,sp,28
   50b40:	e13ffb15 	stw	r4,-20(fp)
   50b44:	e17ffc15 	stw	r5,-16(fp)
   50b48:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   50b4c:	00bff9c4 	movi	r2,-25
   50b50:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   50b54:	e0bffc17 	ldw	r2,-16(fp)
   50b58:	e0bfff15 	stw	r2,-4(fp)
   50b5c:	e0ffff17 	ldw	r3,-4(fp)
   50b60:	189a8060 	cmpeqi	r2,r3,27137
   50b64:	1000041e 	bne	r2,zero,50b78 <altera_avalon_jtag_uart_ioctl+0x44>
   50b68:	e0ffff17 	ldw	r3,-4(fp)
   50b6c:	189a80a0 	cmpeqi	r2,r3,27138
   50b70:	10001b1e 	bne	r2,zero,50be0 <altera_avalon_jtag_uart_ioctl+0xac>
   50b74:	00002706 	br	50c14 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   50b78:	e0bffb17 	ldw	r2,-20(fp)
   50b7c:	10c00117 	ldw	r3,4(r2)
   50b80:	00a00034 	movhi	r2,32768
   50b84:	10bfffc4 	addi	r2,r2,-1
   50b88:	18802226 	beq	r3,r2,50c14 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   50b8c:	e0bffd17 	ldw	r2,-12(fp)
   50b90:	10800017 	ldw	r2,0(r2)
   50b94:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   50b98:	e0bff917 	ldw	r2,-28(fp)
   50b9c:	10800090 	cmplti	r2,r2,2
   50ba0:	1000071e 	bne	r2,zero,50bc0 <altera_avalon_jtag_uart_ioctl+0x8c>
   50ba4:	e0fff917 	ldw	r3,-28(fp)
   50ba8:	00a00034 	movhi	r2,32768
   50bac:	10bfffc4 	addi	r2,r2,-1
   50bb0:	18800326 	beq	r3,r2,50bc0 <altera_avalon_jtag_uart_ioctl+0x8c>
   50bb4:	e0bff917 	ldw	r2,-28(fp)
   50bb8:	e0bffe15 	stw	r2,-8(fp)
   50bbc:	00000306 	br	50bcc <altera_avalon_jtag_uart_ioctl+0x98>
   50bc0:	00e00034 	movhi	r3,32768
   50bc4:	18ffff84 	addi	r3,r3,-2
   50bc8:	e0fffe15 	stw	r3,-8(fp)
   50bcc:	e0bffb17 	ldw	r2,-20(fp)
   50bd0:	e0fffe17 	ldw	r3,-8(fp)
   50bd4:	10c00115 	stw	r3,4(r2)
      rc = 0;
   50bd8:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   50bdc:	00000d06 	br	50c14 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   50be0:	e0bffb17 	ldw	r2,-20(fp)
   50be4:	10c00117 	ldw	r3,4(r2)
   50be8:	00a00034 	movhi	r2,32768
   50bec:	10bfffc4 	addi	r2,r2,-1
   50bf0:	18800826 	beq	r3,r2,50c14 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   50bf4:	e13ffd17 	ldw	r4,-12(fp)
   50bf8:	e0bffb17 	ldw	r2,-20(fp)
   50bfc:	10c00917 	ldw	r3,36(r2)
   50c00:	e0bffb17 	ldw	r2,-20(fp)
   50c04:	10800117 	ldw	r2,4(r2)
   50c08:	1885803a 	cmpltu	r2,r3,r2
   50c0c:	20800015 	stw	r2,0(r4)
      rc = 0;
   50c10:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   50c14:	e0bffa17 	ldw	r2,-24(fp)
}
   50c18:	e037883a 	mov	sp,fp
   50c1c:	df000017 	ldw	fp,0(sp)
   50c20:	dec00104 	addi	sp,sp,4
   50c24:	f800283a 	ret

00050c28 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   50c28:	defff204 	addi	sp,sp,-56
   50c2c:	dfc00d15 	stw	ra,52(sp)
   50c30:	df000c15 	stw	fp,48(sp)
   50c34:	df000c04 	addi	fp,sp,48
   50c38:	e13ffb15 	stw	r4,-20(fp)
   50c3c:	e17ffc15 	stw	r5,-16(fp)
   50c40:	e1bffd15 	stw	r6,-12(fp)
   50c44:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   50c48:	e0bffc17 	ldw	r2,-16(fp)
   50c4c:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   50c50:	00004806 	br	50d74 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   50c54:	e0bffb17 	ldw	r2,-20(fp)
   50c58:	10800a17 	ldw	r2,40(r2)
   50c5c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   50c60:	e0bffb17 	ldw	r2,-20(fp)
   50c64:	10800b17 	ldw	r2,44(r2)
   50c68:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   50c6c:	e0fff717 	ldw	r3,-36(fp)
   50c70:	e0bff617 	ldw	r2,-40(fp)
   50c74:	18800536 	bltu	r3,r2,50c8c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   50c78:	e0bff717 	ldw	r2,-36(fp)
   50c7c:	e0fff617 	ldw	r3,-40(fp)
   50c80:	10c5c83a 	sub	r2,r2,r3
   50c84:	e0bff815 	stw	r2,-32(fp)
   50c88:	00000406 	br	50c9c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   50c8c:	00820004 	movi	r2,2048
   50c90:	e0fff617 	ldw	r3,-40(fp)
   50c94:	10c5c83a 	sub	r2,r2,r3
   50c98:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   50c9c:	e0bff817 	ldw	r2,-32(fp)
   50ca0:	1005003a 	cmpeq	r2,r2,zero
   50ca4:	10001f1e 	bne	r2,zero,50d24 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   50ca8:	e0fffd17 	ldw	r3,-12(fp)
   50cac:	e0bff817 	ldw	r2,-32(fp)
   50cb0:	1880022e 	bgeu	r3,r2,50cbc <altera_avalon_jtag_uart_read+0x94>
        n = space;
   50cb4:	e0bffd17 	ldw	r2,-12(fp)
   50cb8:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   50cbc:	e0bffb17 	ldw	r2,-20(fp)
   50cc0:	10c00e04 	addi	r3,r2,56
   50cc4:	e0bff617 	ldw	r2,-40(fp)
   50cc8:	1887883a 	add	r3,r3,r2
   50ccc:	e0bffa17 	ldw	r2,-24(fp)
   50cd0:	1009883a 	mov	r4,r2
   50cd4:	180b883a 	mov	r5,r3
   50cd8:	e1bff817 	ldw	r6,-32(fp)
   50cdc:	00476300 	call	47630 <memcpy>
      ptr   += n;
   50ce0:	e0fff817 	ldw	r3,-32(fp)
   50ce4:	e0bffa17 	ldw	r2,-24(fp)
   50ce8:	10c5883a 	add	r2,r2,r3
   50cec:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   50cf0:	e0fffd17 	ldw	r3,-12(fp)
   50cf4:	e0bff817 	ldw	r2,-32(fp)
   50cf8:	1885c83a 	sub	r2,r3,r2
   50cfc:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50d00:	e0fff617 	ldw	r3,-40(fp)
   50d04:	e0bff817 	ldw	r2,-32(fp)
   50d08:	1885883a 	add	r2,r3,r2
   50d0c:	10c1ffcc 	andi	r3,r2,2047
   50d10:	e0bffb17 	ldw	r2,-20(fp)
   50d14:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   50d18:	e0bffd17 	ldw	r2,-12(fp)
   50d1c:	10800048 	cmpgei	r2,r2,1
   50d20:	103fcc1e 	bne	r2,zero,50c54 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   50d24:	e0fffa17 	ldw	r3,-24(fp)
   50d28:	e0bffc17 	ldw	r2,-16(fp)
   50d2c:	1880141e 	bne	r3,r2,50d80 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   50d30:	e0bffe17 	ldw	r2,-8(fp)
   50d34:	1090000c 	andi	r2,r2,16384
   50d38:	1004c03a 	cmpne	r2,r2,zero
   50d3c:	1000101e 	bne	r2,zero,50d80 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   50d40:	e0bffb17 	ldw	r2,-20(fp)
   50d44:	10c00a17 	ldw	r3,40(r2)
   50d48:	e0bff717 	ldw	r2,-36(fp)
   50d4c:	1880051e 	bne	r3,r2,50d64 <altera_avalon_jtag_uart_read+0x13c>
   50d50:	e0bffb17 	ldw	r2,-20(fp)
   50d54:	10c00917 	ldw	r3,36(r2)
   50d58:	e0bffb17 	ldw	r2,-20(fp)
   50d5c:	10800117 	ldw	r2,4(r2)
   50d60:	18bff736 	bltu	r3,r2,50d40 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   50d64:	e0bffb17 	ldw	r2,-20(fp)
   50d68:	10c00a17 	ldw	r3,40(r2)
   50d6c:	e0bff717 	ldw	r2,-36(fp)
   50d70:	18800326 	beq	r3,r2,50d80 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   50d74:	e0bffd17 	ldw	r2,-12(fp)
   50d78:	10800048 	cmpgei	r2,r2,1
   50d7c:	103fb51e 	bne	r2,zero,50c54 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   50d80:	e0fffa17 	ldw	r3,-24(fp)
   50d84:	e0bffc17 	ldw	r2,-16(fp)
   50d88:	18801926 	beq	r3,r2,50df0 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50d8c:	0005303a 	rdctl	r2,status
   50d90:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50d94:	e0fff517 	ldw	r3,-44(fp)
   50d98:	00bfff84 	movi	r2,-2
   50d9c:	1884703a 	and	r2,r3,r2
   50da0:	1001703a 	wrctl	status,r2
  
  return context;
   50da4:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   50da8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   50dac:	e0bffb17 	ldw	r2,-20(fp)
   50db0:	10800817 	ldw	r2,32(r2)
   50db4:	10c00054 	ori	r3,r2,1
   50db8:	e0bffb17 	ldw	r2,-20(fp)
   50dbc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   50dc0:	e0bffb17 	ldw	r2,-20(fp)
   50dc4:	10800017 	ldw	r2,0(r2)
   50dc8:	11000104 	addi	r4,r2,4
   50dcc:	e0bffb17 	ldw	r2,-20(fp)
   50dd0:	10800817 	ldw	r2,32(r2)
   50dd4:	1007883a 	mov	r3,r2
   50dd8:	2005883a 	mov	r2,r4
   50ddc:	10c00035 	stwio	r3,0(r2)
   50de0:	e0bff917 	ldw	r2,-28(fp)
   50de4:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50de8:	e0bff417 	ldw	r2,-48(fp)
   50dec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   50df0:	e0fffa17 	ldw	r3,-24(fp)
   50df4:	e0bffc17 	ldw	r2,-16(fp)
   50df8:	18800526 	beq	r3,r2,50e10 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   50dfc:	e0fffa17 	ldw	r3,-24(fp)
   50e00:	e0bffc17 	ldw	r2,-16(fp)
   50e04:	1887c83a 	sub	r3,r3,r2
   50e08:	e0ffff15 	stw	r3,-4(fp)
   50e0c:	00000906 	br	50e34 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   50e10:	e0bffe17 	ldw	r2,-8(fp)
   50e14:	1090000c 	andi	r2,r2,16384
   50e18:	1005003a 	cmpeq	r2,r2,zero
   50e1c:	1000031e 	bne	r2,zero,50e2c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   50e20:	00bffd44 	movi	r2,-11
   50e24:	e0bfff15 	stw	r2,-4(fp)
   50e28:	00000206 	br	50e34 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   50e2c:	00bffec4 	movi	r2,-5
   50e30:	e0bfff15 	stw	r2,-4(fp)
   50e34:	e0bfff17 	ldw	r2,-4(fp)
}
   50e38:	e037883a 	mov	sp,fp
   50e3c:	dfc00117 	ldw	ra,4(sp)
   50e40:	df000017 	ldw	fp,0(sp)
   50e44:	dec00204 	addi	sp,sp,8
   50e48:	f800283a 	ret

00050e4c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   50e4c:	defff204 	addi	sp,sp,-56
   50e50:	dfc00d15 	stw	ra,52(sp)
   50e54:	df000c15 	stw	fp,48(sp)
   50e58:	df000c04 	addi	fp,sp,48
   50e5c:	e13ffb15 	stw	r4,-20(fp)
   50e60:	e17ffc15 	stw	r5,-16(fp)
   50e64:	e1bffd15 	stw	r6,-12(fp)
   50e68:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   50e6c:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   50e70:	e0bffc17 	ldw	r2,-16(fp)
   50e74:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   50e78:	00003a06 	br	50f64 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   50e7c:	e0bffb17 	ldw	r2,-20(fp)
   50e80:	10800c17 	ldw	r2,48(r2)
   50e84:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   50e88:	e0bffb17 	ldw	r2,-20(fp)
   50e8c:	10800d17 	ldw	r2,52(r2)
   50e90:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   50e94:	e0fffa17 	ldw	r3,-24(fp)
   50e98:	e0bff917 	ldw	r2,-28(fp)
   50e9c:	1880062e 	bgeu	r3,r2,50eb8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   50ea0:	e0fff917 	ldw	r3,-28(fp)
   50ea4:	e0bffa17 	ldw	r2,-24(fp)
   50ea8:	1885c83a 	sub	r2,r3,r2
   50eac:	10bfffc4 	addi	r2,r2,-1
   50eb0:	e0bff815 	stw	r2,-32(fp)
   50eb4:	00000c06 	br	50ee8 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   50eb8:	e0bff917 	ldw	r2,-28(fp)
   50ebc:	1005003a 	cmpeq	r2,r2,zero
   50ec0:	1000051e 	bne	r2,zero,50ed8 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   50ec4:	00820004 	movi	r2,2048
   50ec8:	e0fffa17 	ldw	r3,-24(fp)
   50ecc:	10c5c83a 	sub	r2,r2,r3
   50ed0:	e0bff815 	stw	r2,-32(fp)
   50ed4:	00000406 	br	50ee8 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   50ed8:	0081ffc4 	movi	r2,2047
   50edc:	e0fffa17 	ldw	r3,-24(fp)
   50ee0:	10c5c83a 	sub	r2,r2,r3
   50ee4:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   50ee8:	e0bff817 	ldw	r2,-32(fp)
   50eec:	1005003a 	cmpeq	r2,r2,zero
   50ef0:	10001f1e 	bne	r2,zero,50f70 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   50ef4:	e0fffd17 	ldw	r3,-12(fp)
   50ef8:	e0bff817 	ldw	r2,-32(fp)
   50efc:	1880022e 	bgeu	r3,r2,50f08 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   50f00:	e0bffd17 	ldw	r2,-12(fp)
   50f04:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   50f08:	e0bffb17 	ldw	r2,-20(fp)
   50f0c:	10c20e04 	addi	r3,r2,2104
   50f10:	e0bffa17 	ldw	r2,-24(fp)
   50f14:	1885883a 	add	r2,r3,r2
   50f18:	e0fffc17 	ldw	r3,-16(fp)
   50f1c:	1009883a 	mov	r4,r2
   50f20:	180b883a 	mov	r5,r3
   50f24:	e1bff817 	ldw	r6,-32(fp)
   50f28:	00476300 	call	47630 <memcpy>
      ptr   += n;
   50f2c:	e0fff817 	ldw	r3,-32(fp)
   50f30:	e0bffc17 	ldw	r2,-16(fp)
   50f34:	10c5883a 	add	r2,r2,r3
   50f38:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   50f3c:	e0fffd17 	ldw	r3,-12(fp)
   50f40:	e0bff817 	ldw	r2,-32(fp)
   50f44:	1885c83a 	sub	r2,r3,r2
   50f48:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50f4c:	e0fffa17 	ldw	r3,-24(fp)
   50f50:	e0bff817 	ldw	r2,-32(fp)
   50f54:	1885883a 	add	r2,r3,r2
   50f58:	10c1ffcc 	andi	r3,r2,2047
   50f5c:	e0bffb17 	ldw	r2,-20(fp)
   50f60:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   50f64:	e0bffd17 	ldw	r2,-12(fp)
   50f68:	10800048 	cmpgei	r2,r2,1
   50f6c:	103fc31e 	bne	r2,zero,50e7c <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50f70:	0005303a 	rdctl	r2,status
   50f74:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50f78:	e0fff517 	ldw	r3,-44(fp)
   50f7c:	00bfff84 	movi	r2,-2
   50f80:	1884703a 	and	r2,r3,r2
   50f84:	1001703a 	wrctl	status,r2
  
  return context;
   50f88:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   50f8c:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   50f90:	e0bffb17 	ldw	r2,-20(fp)
   50f94:	10800817 	ldw	r2,32(r2)
   50f98:	10c00094 	ori	r3,r2,2
   50f9c:	e0bffb17 	ldw	r2,-20(fp)
   50fa0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   50fa4:	e0bffb17 	ldw	r2,-20(fp)
   50fa8:	10800017 	ldw	r2,0(r2)
   50fac:	11000104 	addi	r4,r2,4
   50fb0:	e0bffb17 	ldw	r2,-20(fp)
   50fb4:	10800817 	ldw	r2,32(r2)
   50fb8:	1007883a 	mov	r3,r2
   50fbc:	2005883a 	mov	r2,r4
   50fc0:	10c00035 	stwio	r3,0(r2)
   50fc4:	e0bff717 	ldw	r2,-36(fp)
   50fc8:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50fcc:	e0bff417 	ldw	r2,-48(fp)
   50fd0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   50fd4:	e0bffd17 	ldw	r2,-12(fp)
   50fd8:	10800050 	cmplti	r2,r2,1
   50fdc:	1000111e 	bne	r2,zero,51024 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   50fe0:	e0bffe17 	ldw	r2,-8(fp)
   50fe4:	1090000c 	andi	r2,r2,16384
   50fe8:	1004c03a 	cmpne	r2,r2,zero
   50fec:	1000101e 	bne	r2,zero,51030 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   50ff0:	e0bffb17 	ldw	r2,-20(fp)
   50ff4:	10c00d17 	ldw	r3,52(r2)
   50ff8:	e0bff917 	ldw	r2,-28(fp)
   50ffc:	1880051e 	bne	r3,r2,51014 <altera_avalon_jtag_uart_write+0x1c8>
   51000:	e0bffb17 	ldw	r2,-20(fp)
   51004:	10c00917 	ldw	r3,36(r2)
   51008:	e0bffb17 	ldw	r2,-20(fp)
   5100c:	10800117 	ldw	r2,4(r2)
   51010:	18bff736 	bltu	r3,r2,50ff0 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   51014:	e0bffb17 	ldw	r2,-20(fp)
   51018:	10c00d17 	ldw	r3,52(r2)
   5101c:	e0bff917 	ldw	r2,-28(fp)
   51020:	18800326 	beq	r3,r2,51030 <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
   51024:	e0bffd17 	ldw	r2,-12(fp)
   51028:	10800048 	cmpgei	r2,r2,1
   5102c:	103fcd1e 	bne	r2,zero,50f64 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   51030:	e0fffc17 	ldw	r3,-16(fp)
   51034:	e0bff617 	ldw	r2,-40(fp)
   51038:	18800526 	beq	r3,r2,51050 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   5103c:	e0fffc17 	ldw	r3,-16(fp)
   51040:	e0bff617 	ldw	r2,-40(fp)
   51044:	1887c83a 	sub	r3,r3,r2
   51048:	e0ffff15 	stw	r3,-4(fp)
   5104c:	00000906 	br	51074 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   51050:	e0bffe17 	ldw	r2,-8(fp)
   51054:	1090000c 	andi	r2,r2,16384
   51058:	1005003a 	cmpeq	r2,r2,zero
   5105c:	1000031e 	bne	r2,zero,5106c <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   51060:	00bffd44 	movi	r2,-11
   51064:	e0bfff15 	stw	r2,-4(fp)
   51068:	00000206 	br	51074 <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
   5106c:	00bffec4 	movi	r2,-5
   51070:	e0bfff15 	stw	r2,-4(fp)
   51074:	e0bfff17 	ldw	r2,-4(fp)
}
   51078:	e037883a 	mov	sp,fp
   5107c:	dfc00117 	ldw	ra,4(sp)
   51080:	df000017 	ldw	fp,0(sp)
   51084:	dec00204 	addi	sp,sp,8
   51088:	f800283a 	ret

0005108c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   5108c:	defffa04 	addi	sp,sp,-24
   51090:	dfc00515 	stw	ra,20(sp)
   51094:	df000415 	stw	fp,16(sp)
   51098:	df000404 	addi	fp,sp,16
   5109c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   510a0:	e0bfff17 	ldw	r2,-4(fp)
   510a4:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   510a8:	e0bfff17 	ldw	r2,-4(fp)
   510ac:	10800104 	addi	r2,r2,4
   510b0:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   510b4:	0005303a 	rdctl	r2,status
   510b8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   510bc:	e0fffd17 	ldw	r3,-12(fp)
   510c0:	00bfff84 	movi	r2,-2
   510c4:	1884703a 	and	r2,r3,r2
   510c8:	1001703a 	wrctl	status,r2
  
  return context;
   510cc:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   510d0:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
   510d4:	0051dfc0 	call	51dfc <alt_tick>
   510d8:	e0bffe17 	ldw	r2,-8(fp)
   510dc:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   510e0:	e0bffc17 	ldw	r2,-16(fp)
   510e4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   510e8:	e037883a 	mov	sp,fp
   510ec:	dfc00117 	ldw	ra,4(sp)
   510f0:	df000017 	ldw	fp,0(sp)
   510f4:	dec00204 	addi	sp,sp,8
   510f8:	f800283a 	ret

000510fc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   510fc:	defff804 	addi	sp,sp,-32
   51100:	dfc00715 	stw	ra,28(sp)
   51104:	df000615 	stw	fp,24(sp)
   51108:	df000604 	addi	fp,sp,24
   5110c:	e13ffc15 	stw	r4,-16(fp)
   51110:	e17ffd15 	stw	r5,-12(fp)
   51114:	e1bffe15 	stw	r6,-8(fp)
   51118:	e1ffff15 	stw	r7,-4(fp)
   5111c:	e0bfff17 	ldw	r2,-4(fp)
   51120:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   51124:	00800174 	movhi	r2,5
   51128:	10989404 	addi	r2,r2,25168
   5112c:	10800017 	ldw	r2,0(r2)
   51130:	1004c03a 	cmpne	r2,r2,zero
   51134:	1000041e 	bne	r2,zero,51148 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
   51138:	00c00174 	movhi	r3,5
   5113c:	18d89404 	addi	r3,r3,25168
   51140:	e0bffb17 	ldw	r2,-20(fp)
   51144:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   51148:	e0bffc17 	ldw	r2,-16(fp)
   5114c:	10800104 	addi	r2,r2,4
   51150:	1007883a 	mov	r3,r2
   51154:	008001c4 	movi	r2,7
   51158:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   5115c:	d8000015 	stw	zero,0(sp)
   51160:	e13ffd17 	ldw	r4,-12(fp)
   51164:	e17ffe17 	ldw	r5,-8(fp)
   51168:	01800174 	movhi	r6,5
   5116c:	31842304 	addi	r6,r6,4236
   51170:	e1fffc17 	ldw	r7,-16(fp)
   51174:	00516640 	call	51664 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   51178:	e037883a 	mov	sp,fp
   5117c:	dfc00117 	ldw	ra,4(sp)
   51180:	df000017 	ldw	fp,0(sp)
   51184:	dec00204 	addi	sp,sp,8
   51188:	f800283a 	ret

0005118c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   5118c:	defff404 	addi	sp,sp,-48
   51190:	df000b15 	stw	fp,44(sp)
   51194:	df000b04 	addi	fp,sp,44
   51198:	e13ffb15 	stw	r4,-20(fp)
   5119c:	e17ffc15 	stw	r5,-16(fp)
   511a0:	e1bffd15 	stw	r6,-12(fp)
   511a4:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   511a8:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   511ac:	00800174 	movhi	r2,5
   511b0:	10989404 	addi	r2,r2,25168
   511b4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   511b8:	1005003a 	cmpeq	r2,r2,zero
   511bc:	1000411e 	bne	r2,zero,512c4 <alt_alarm_start+0x138>
  {
    if (alarm)
   511c0:	e0bffb17 	ldw	r2,-20(fp)
   511c4:	1005003a 	cmpeq	r2,r2,zero
   511c8:	10003b1e 	bne	r2,zero,512b8 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   511cc:	e0fffb17 	ldw	r3,-20(fp)
   511d0:	e0bffd17 	ldw	r2,-12(fp)
   511d4:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   511d8:	e0fffb17 	ldw	r3,-20(fp)
   511dc:	e0bffe17 	ldw	r2,-8(fp)
   511e0:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   511e4:	0005303a 	rdctl	r2,status
   511e8:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   511ec:	e0fff817 	ldw	r3,-32(fp)
   511f0:	00bfff84 	movi	r2,-2
   511f4:	1884703a 	and	r2,r3,r2
   511f8:	1001703a 	wrctl	status,r2
  
  return context;
   511fc:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   51200:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   51204:	00800174 	movhi	r2,5
   51208:	10989504 	addi	r2,r2,25172
   5120c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   51210:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   51214:	e0fffc17 	ldw	r3,-16(fp)
   51218:	e0bff917 	ldw	r2,-28(fp)
   5121c:	1885883a 	add	r2,r3,r2
   51220:	10c00044 	addi	r3,r2,1
   51224:	e0bffb17 	ldw	r2,-20(fp)
   51228:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   5122c:	e0bffb17 	ldw	r2,-20(fp)
   51230:	10c00217 	ldw	r3,8(r2)
   51234:	e0bff917 	ldw	r2,-28(fp)
   51238:	1880042e 	bgeu	r3,r2,5124c <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   5123c:	e0fffb17 	ldw	r3,-20(fp)
   51240:	00800044 	movi	r2,1
   51244:	18800405 	stb	r2,16(r3)
   51248:	00000206 	br	51254 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   5124c:	e0bffb17 	ldw	r2,-20(fp)
   51250:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   51254:	e0fffb17 	ldw	r3,-20(fp)
   51258:	00800174 	movhi	r2,5
   5125c:	1091e504 	addi	r2,r2,18324
   51260:	e0bff615 	stw	r2,-40(fp)
   51264:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   51268:	e0fff717 	ldw	r3,-36(fp)
   5126c:	e0bff617 	ldw	r2,-40(fp)
   51270:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   51274:	e0bff617 	ldw	r2,-40(fp)
   51278:	10c00017 	ldw	r3,0(r2)
   5127c:	e0bff717 	ldw	r2,-36(fp)
   51280:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   51284:	e0bff617 	ldw	r2,-40(fp)
   51288:	10c00017 	ldw	r3,0(r2)
   5128c:	e0bff717 	ldw	r2,-36(fp)
   51290:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   51294:	e0fff617 	ldw	r3,-40(fp)
   51298:	e0bff717 	ldw	r2,-36(fp)
   5129c:	18800015 	stw	r2,0(r3)
   512a0:	e0bffa17 	ldw	r2,-24(fp)
   512a4:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   512a8:	e0bff517 	ldw	r2,-44(fp)
   512ac:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   512b0:	e03fff15 	stw	zero,-4(fp)
   512b4:	00000506 	br	512cc <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   512b8:	00bffa84 	movi	r2,-22
   512bc:	e0bfff15 	stw	r2,-4(fp)
   512c0:	00000206 	br	512cc <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   512c4:	00bfde84 	movi	r2,-134
   512c8:	e0bfff15 	stw	r2,-4(fp)
   512cc:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   512d0:	e037883a 	mov	sp,fp
   512d4:	df000017 	ldw	fp,0(sp)
   512d8:	dec00104 	addi	sp,sp,4
   512dc:	f800283a 	ret

000512e0 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   512e0:	defffa04 	addi	sp,sp,-24
   512e4:	dfc00515 	stw	ra,20(sp)
   512e8:	df000415 	stw	fp,16(sp)
   512ec:	df000404 	addi	fp,sp,16
   512f0:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   512f4:	008000c4 	movi	r2,3
   512f8:	e0bffc15 	stw	r2,-16(fp)
  }
  

  big_loops = us / (INT_MAX/
   512fc:	e13ffc17 	ldw	r4,-16(fp)
   51300:	014003f4 	movhi	r5,15
   51304:	29509004 	addi	r5,r5,16960
   51308:	004f1100 	call	4f110 <__mulsi3>
   5130c:	100b883a 	mov	r5,r2
   51310:	0100bef4 	movhi	r4,763
   51314:	213c2004 	addi	r4,r4,-3968
   51318:	004f1000 	call	4f100 <__udivsi3>
   5131c:	100b883a 	mov	r5,r2
   51320:	01200034 	movhi	r4,32768
   51324:	213fffc4 	addi	r4,r4,-1
   51328:	004f1000 	call	4f100 <__udivsi3>
   5132c:	100b883a 	mov	r5,r2
   51330:	e13fff17 	ldw	r4,-4(fp)
   51334:	004f1000 	call	4f100 <__udivsi3>
   51338:	e0bffd15 	stw	r2,-12(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   5133c:	e0bffd17 	ldw	r2,-12(fp)
   51340:	1005003a 	cmpeq	r2,r2,zero
   51344:	10002a1e 	bne	r2,zero,513f0 <alt_busy_sleep+0x110>
  {
    for(i=0;i<big_loops;i++)
   51348:	e03ffe15 	stw	zero,-8(fp)
   5134c:	00001706 	br	513ac <alt_busy_sleep+0xcc>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   51350:	00a00034 	movhi	r2,32768
   51354:	10bfffc4 	addi	r2,r2,-1
   51358:	10bfffc4 	addi	r2,r2,-1
   5135c:	103ffe1e 	bne	r2,zero,51358 <alt_busy_sleep+0x78>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   51360:	e13ffc17 	ldw	r4,-16(fp)
   51364:	014003f4 	movhi	r5,15
   51368:	29509004 	addi	r5,r5,16960
   5136c:	004f1100 	call	4f110 <__mulsi3>
   51370:	100b883a 	mov	r5,r2
   51374:	0100bef4 	movhi	r4,763
   51378:	213c2004 	addi	r4,r4,-3968
   5137c:	004f1000 	call	4f100 <__udivsi3>
   51380:	100b883a 	mov	r5,r2
   51384:	01200034 	movhi	r4,32768
   51388:	213fffc4 	addi	r4,r4,-1
   5138c:	004f1000 	call	4f100 <__udivsi3>
   51390:	1007883a 	mov	r3,r2
   51394:	e0bfff17 	ldw	r2,-4(fp)
   51398:	10c5c83a 	sub	r2,r2,r3
   5139c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   513a0:	e0bffe17 	ldw	r2,-8(fp)
   513a4:	10800044 	addi	r2,r2,1
   513a8:	e0bffe15 	stw	r2,-8(fp)
   513ac:	e0fffe17 	ldw	r3,-8(fp)
   513b0:	e0bffd17 	ldw	r2,-12(fp)
   513b4:	18bfe616 	blt	r3,r2,51350 <alt_busy_sleep+0x70>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   513b8:	e13ffc17 	ldw	r4,-16(fp)
   513bc:	014003f4 	movhi	r5,15
   513c0:	29509004 	addi	r5,r5,16960
   513c4:	004f1100 	call	4f110 <__mulsi3>
   513c8:	100b883a 	mov	r5,r2
   513cc:	0100bef4 	movhi	r4,763
   513d0:	213c2004 	addi	r4,r4,-3968
   513d4:	004f1000 	call	4f100 <__udivsi3>
   513d8:	1009883a 	mov	r4,r2
   513dc:	e17fff17 	ldw	r5,-4(fp)
   513e0:	004f1100 	call	4f110 <__mulsi3>
   513e4:	10bfffc4 	addi	r2,r2,-1
   513e8:	103ffe1e 	bne	r2,zero,513e4 <alt_busy_sleep+0x104>
   513ec:	00000d06 	br	51424 <alt_busy_sleep+0x144>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   513f0:	e13ffc17 	ldw	r4,-16(fp)
   513f4:	014003f4 	movhi	r5,15
   513f8:	29509004 	addi	r5,r5,16960
   513fc:	004f1100 	call	4f110 <__mulsi3>
   51400:	100b883a 	mov	r5,r2
   51404:	0100bef4 	movhi	r4,763
   51408:	213c2004 	addi	r4,r4,-3968
   5140c:	004f1000 	call	4f100 <__udivsi3>
   51410:	1009883a 	mov	r4,r2
   51414:	e17fff17 	ldw	r5,-4(fp)
   51418:	004f1100 	call	4f110 <__mulsi3>
   5141c:	10bfffc4 	addi	r2,r2,-1
   51420:	00bffe16 	blt	zero,r2,5141c <alt_busy_sleep+0x13c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   51424:	0005883a 	mov	r2,zero
}
   51428:	e037883a 	mov	sp,fp
   5142c:	dfc00117 	ldw	ra,4(sp)
   51430:	df000017 	ldw	fp,0(sp)
   51434:	dec00204 	addi	sp,sp,8
   51438:	f800283a 	ret

0005143c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   5143c:	deffff04 	addi	sp,sp,-4
   51440:	df000015 	stw	fp,0(sp)
   51444:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   51448:	e037883a 	mov	sp,fp
   5144c:	df000017 	ldw	fp,0(sp)
   51450:	dec00104 	addi	sp,sp,4
   51454:	f800283a 	ret

00051458 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   51458:	defff904 	addi	sp,sp,-28
   5145c:	dfc00615 	stw	ra,24(sp)
   51460:	df000515 	stw	fp,20(sp)
   51464:	df000504 	addi	fp,sp,20
   51468:	e13ffd15 	stw	r4,-12(fp)
   5146c:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   51470:	e0bffd17 	ldw	r2,-12(fp)
   51474:	1005003a 	cmpeq	r2,r2,zero
   51478:	1000041e 	bne	r2,zero,5148c <alt_dev_llist_insert+0x34>
   5147c:	e0bffd17 	ldw	r2,-12(fp)
   51480:	10800217 	ldw	r2,8(r2)
   51484:	1004c03a 	cmpne	r2,r2,zero
   51488:	1000071e 	bne	r2,zero,514a8 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   5148c:	005150c0 	call	5150c <alt_get_errno>
   51490:	1007883a 	mov	r3,r2
   51494:	00800584 	movi	r2,22
   51498:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   5149c:	00bffa84 	movi	r2,-22
   514a0:	e0bfff15 	stw	r2,-4(fp)
   514a4:	00001306 	br	514f4 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   514a8:	e0fffd17 	ldw	r3,-12(fp)
   514ac:	e0bffe17 	ldw	r2,-8(fp)
   514b0:	e0bffb15 	stw	r2,-20(fp)
   514b4:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   514b8:	e0fffc17 	ldw	r3,-16(fp)
   514bc:	e0bffb17 	ldw	r2,-20(fp)
   514c0:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   514c4:	e0bffb17 	ldw	r2,-20(fp)
   514c8:	10c00017 	ldw	r3,0(r2)
   514cc:	e0bffc17 	ldw	r2,-16(fp)
   514d0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   514d4:	e0bffb17 	ldw	r2,-20(fp)
   514d8:	10c00017 	ldw	r3,0(r2)
   514dc:	e0bffc17 	ldw	r2,-16(fp)
   514e0:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   514e4:	e0fffb17 	ldw	r3,-20(fp)
   514e8:	e0bffc17 	ldw	r2,-16(fp)
   514ec:	18800015 	stw	r2,0(r3)

  return 0;  
   514f0:	e03fff15 	stw	zero,-4(fp)
   514f4:	e0bfff17 	ldw	r2,-4(fp)
}
   514f8:	e037883a 	mov	sp,fp
   514fc:	dfc00117 	ldw	ra,4(sp)
   51500:	df000017 	ldw	fp,0(sp)
   51504:	dec00204 	addi	sp,sp,8
   51508:	f800283a 	ret

0005150c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   5150c:	defffd04 	addi	sp,sp,-12
   51510:	dfc00215 	stw	ra,8(sp)
   51514:	df000115 	stw	fp,4(sp)
   51518:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   5151c:	00800174 	movhi	r2,5
   51520:	1091e204 	addi	r2,r2,18312
   51524:	10800017 	ldw	r2,0(r2)
   51528:	1005003a 	cmpeq	r2,r2,zero
   5152c:	1000061e 	bne	r2,zero,51548 <alt_get_errno+0x3c>
   51530:	00800174 	movhi	r2,5
   51534:	1091e204 	addi	r2,r2,18312
   51538:	10800017 	ldw	r2,0(r2)
   5153c:	103ee83a 	callr	r2
   51540:	e0bfff15 	stw	r2,-4(fp)
   51544:	00000306 	br	51554 <alt_get_errno+0x48>
   51548:	00800174 	movhi	r2,5
   5154c:	10988f04 	addi	r2,r2,25148
   51550:	e0bfff15 	stw	r2,-4(fp)
   51554:	e0bfff17 	ldw	r2,-4(fp)
}
   51558:	e037883a 	mov	sp,fp
   5155c:	dfc00117 	ldw	ra,4(sp)
   51560:	df000017 	ldw	fp,0(sp)
   51564:	dec00204 	addi	sp,sp,8
   51568:	f800283a 	ret

0005156c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   5156c:	defffd04 	addi	sp,sp,-12
   51570:	dfc00215 	stw	ra,8(sp)
   51574:	df000115 	stw	fp,4(sp)
   51578:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   5157c:	00bfff04 	movi	r2,-4
   51580:	00c00174 	movhi	r3,5
   51584:	18c99204 	addi	r3,r3,9800
   51588:	1885883a 	add	r2,r3,r2
   5158c:	e0bfff15 	stw	r2,-4(fp)
   51590:	00000606 	br	515ac <_do_ctors+0x40>
        (*ctor) (); 
   51594:	e0bfff17 	ldw	r2,-4(fp)
   51598:	10800017 	ldw	r2,0(r2)
   5159c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   515a0:	e0bfff17 	ldw	r2,-4(fp)
   515a4:	10bfff04 	addi	r2,r2,-4
   515a8:	e0bfff15 	stw	r2,-4(fp)
   515ac:	e0ffff17 	ldw	r3,-4(fp)
   515b0:	00800174 	movhi	r2,5
   515b4:	10899104 	addi	r2,r2,9796
   515b8:	18bff62e 	bgeu	r3,r2,51594 <_do_ctors+0x28>
        (*ctor) (); 
}
   515bc:	e037883a 	mov	sp,fp
   515c0:	dfc00117 	ldw	ra,4(sp)
   515c4:	df000017 	ldw	fp,0(sp)
   515c8:	dec00204 	addi	sp,sp,8
   515cc:	f800283a 	ret

000515d0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   515d0:	defffd04 	addi	sp,sp,-12
   515d4:	dfc00215 	stw	ra,8(sp)
   515d8:	df000115 	stw	fp,4(sp)
   515dc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   515e0:	00bfff04 	movi	r2,-4
   515e4:	00c00174 	movhi	r3,5
   515e8:	18c99204 	addi	r3,r3,9800
   515ec:	1885883a 	add	r2,r3,r2
   515f0:	e0bfff15 	stw	r2,-4(fp)
   515f4:	00000606 	br	51610 <_do_dtors+0x40>
        (*dtor) (); 
   515f8:	e0bfff17 	ldw	r2,-4(fp)
   515fc:	10800017 	ldw	r2,0(r2)
   51600:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   51604:	e0bfff17 	ldw	r2,-4(fp)
   51608:	10bfff04 	addi	r2,r2,-4
   5160c:	e0bfff15 	stw	r2,-4(fp)
   51610:	e0ffff17 	ldw	r3,-4(fp)
   51614:	00800174 	movhi	r2,5
   51618:	10899204 	addi	r2,r2,9800
   5161c:	18bff62e 	bgeu	r3,r2,515f8 <_do_dtors+0x28>
        (*dtor) (); 
}
   51620:	e037883a 	mov	sp,fp
   51624:	dfc00117 	ldw	ra,4(sp)
   51628:	df000017 	ldw	fp,0(sp)
   5162c:	dec00204 	addi	sp,sp,8
   51630:	f800283a 	ret

00051634 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   51634:	defffe04 	addi	sp,sp,-8
   51638:	dfc00115 	stw	ra,4(sp)
   5163c:	df000015 	stw	fp,0(sp)
   51640:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   51644:	0009883a 	mov	r4,zero
   51648:	01440004 	movi	r5,4096
   5164c:	00521ac0 	call	521ac <alt_icache_flush>
#endif
}
   51650:	e037883a 	mov	sp,fp
   51654:	dfc00117 	ldw	ra,4(sp)
   51658:	df000017 	ldw	fp,0(sp)
   5165c:	dec00204 	addi	sp,sp,8
   51660:	f800283a 	ret

00051664 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   51664:	defff904 	addi	sp,sp,-28
   51668:	dfc00615 	stw	ra,24(sp)
   5166c:	df000515 	stw	fp,20(sp)
   51670:	df000504 	addi	fp,sp,20
   51674:	e13ffc15 	stw	r4,-16(fp)
   51678:	e17ffd15 	stw	r5,-12(fp)
   5167c:	e1bffe15 	stw	r6,-8(fp)
   51680:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   51684:	e0800217 	ldw	r2,8(fp)
   51688:	d8800015 	stw	r2,0(sp)
   5168c:	e13ffc17 	ldw	r4,-16(fp)
   51690:	e17ffd17 	ldw	r5,-12(fp)
   51694:	e1bffe17 	ldw	r6,-8(fp)
   51698:	e1ffff17 	ldw	r7,-4(fp)
   5169c:	00518380 	call	51838 <alt_iic_isr_register>
}  
   516a0:	e037883a 	mov	sp,fp
   516a4:	dfc00117 	ldw	ra,4(sp)
   516a8:	df000017 	ldw	fp,0(sp)
   516ac:	dec00204 	addi	sp,sp,8
   516b0:	f800283a 	ret

000516b4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   516b4:	defff904 	addi	sp,sp,-28
   516b8:	df000615 	stw	fp,24(sp)
   516bc:	df000604 	addi	fp,sp,24
   516c0:	e13ffe15 	stw	r4,-8(fp)
   516c4:	e17fff15 	stw	r5,-4(fp)
   516c8:	e0bfff17 	ldw	r2,-4(fp)
   516cc:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   516d0:	0005303a 	rdctl	r2,status
   516d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   516d8:	e0fffb17 	ldw	r3,-20(fp)
   516dc:	00bfff84 	movi	r2,-2
   516e0:	1884703a 	and	r2,r3,r2
   516e4:	1001703a 	wrctl	status,r2
  
  return context;
   516e8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   516ec:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   516f0:	e0fffc17 	ldw	r3,-16(fp)
   516f4:	00800044 	movi	r2,1
   516f8:	10c4983a 	sll	r2,r2,r3
   516fc:	1007883a 	mov	r3,r2
   51700:	00800174 	movhi	r2,5
   51704:	10989304 	addi	r2,r2,25164
   51708:	10800017 	ldw	r2,0(r2)
   5170c:	1886b03a 	or	r3,r3,r2
   51710:	00800174 	movhi	r2,5
   51714:	10989304 	addi	r2,r2,25164
   51718:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   5171c:	00800174 	movhi	r2,5
   51720:	10989304 	addi	r2,r2,25164
   51724:	10800017 	ldw	r2,0(r2)
   51728:	100170fa 	wrctl	ienable,r2
   5172c:	e0bffd17 	ldw	r2,-12(fp)
   51730:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51734:	e0bffa17 	ldw	r2,-24(fp)
   51738:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   5173c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   51740:	e037883a 	mov	sp,fp
   51744:	df000017 	ldw	fp,0(sp)
   51748:	dec00104 	addi	sp,sp,4
   5174c:	f800283a 	ret

00051750 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   51750:	defff904 	addi	sp,sp,-28
   51754:	df000615 	stw	fp,24(sp)
   51758:	df000604 	addi	fp,sp,24
   5175c:	e13ffe15 	stw	r4,-8(fp)
   51760:	e17fff15 	stw	r5,-4(fp)
   51764:	e0bfff17 	ldw	r2,-4(fp)
   51768:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5176c:	0005303a 	rdctl	r2,status
   51770:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51774:	e0fffb17 	ldw	r3,-20(fp)
   51778:	00bfff84 	movi	r2,-2
   5177c:	1884703a 	and	r2,r3,r2
   51780:	1001703a 	wrctl	status,r2
  
  return context;
   51784:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   51788:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   5178c:	e0fffc17 	ldw	r3,-16(fp)
   51790:	00800044 	movi	r2,1
   51794:	10c4983a 	sll	r2,r2,r3
   51798:	0084303a 	nor	r2,zero,r2
   5179c:	1007883a 	mov	r3,r2
   517a0:	00800174 	movhi	r2,5
   517a4:	10989304 	addi	r2,r2,25164
   517a8:	10800017 	ldw	r2,0(r2)
   517ac:	1886703a 	and	r3,r3,r2
   517b0:	00800174 	movhi	r2,5
   517b4:	10989304 	addi	r2,r2,25164
   517b8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   517bc:	00800174 	movhi	r2,5
   517c0:	10989304 	addi	r2,r2,25164
   517c4:	10800017 	ldw	r2,0(r2)
   517c8:	100170fa 	wrctl	ienable,r2
   517cc:	e0bffd17 	ldw	r2,-12(fp)
   517d0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   517d4:	e0bffa17 	ldw	r2,-24(fp)
   517d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   517dc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   517e0:	e037883a 	mov	sp,fp
   517e4:	df000017 	ldw	fp,0(sp)
   517e8:	dec00104 	addi	sp,sp,4
   517ec:	f800283a 	ret

000517f0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   517f0:	defffc04 	addi	sp,sp,-16
   517f4:	df000315 	stw	fp,12(sp)
   517f8:	df000304 	addi	fp,sp,12
   517fc:	e13ffe15 	stw	r4,-8(fp)
   51800:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   51804:	000530fa 	rdctl	r2,ienable
   51808:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   5180c:	e0ffff17 	ldw	r3,-4(fp)
   51810:	00800044 	movi	r2,1
   51814:	10c4983a 	sll	r2,r2,r3
   51818:	1007883a 	mov	r3,r2
   5181c:	e0bffd17 	ldw	r2,-12(fp)
   51820:	1884703a 	and	r2,r3,r2
   51824:	1004c03a 	cmpne	r2,r2,zero
}
   51828:	e037883a 	mov	sp,fp
   5182c:	df000017 	ldw	fp,0(sp)
   51830:	dec00104 	addi	sp,sp,4
   51834:	f800283a 	ret

00051838 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   51838:	defff404 	addi	sp,sp,-48
   5183c:	dfc00b15 	stw	ra,44(sp)
   51840:	df000a15 	stw	fp,40(sp)
   51844:	df000a04 	addi	fp,sp,40
   51848:	e13ffb15 	stw	r4,-20(fp)
   5184c:	e17ffc15 	stw	r5,-16(fp)
   51850:	e1bffd15 	stw	r6,-12(fp)
   51854:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   51858:	00bffa84 	movi	r2,-22
   5185c:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   51860:	e0bffc17 	ldw	r2,-16(fp)
   51864:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   51868:	e0bff917 	ldw	r2,-28(fp)
   5186c:	10800808 	cmpgei	r2,r2,32
   51870:	1000291e 	bne	r2,zero,51918 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51874:	0005303a 	rdctl	r2,status
   51878:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5187c:	e0fff717 	ldw	r3,-36(fp)
   51880:	00bfff84 	movi	r2,-2
   51884:	1884703a 	and	r2,r3,r2
   51888:	1001703a 	wrctl	status,r2
  
  return context;
   5188c:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   51890:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   51894:	e0bff917 	ldw	r2,-28(fp)
   51898:	00c00174 	movhi	r3,5
   5189c:	18d8e004 	addi	r3,r3,25472
   518a0:	100490fa 	slli	r2,r2,3
   518a4:	10c7883a 	add	r3,r2,r3
   518a8:	e0bffd17 	ldw	r2,-12(fp)
   518ac:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   518b0:	e0bff917 	ldw	r2,-28(fp)
   518b4:	00c00174 	movhi	r3,5
   518b8:	18d8e004 	addi	r3,r3,25472
   518bc:	100490fa 	slli	r2,r2,3
   518c0:	10c5883a 	add	r2,r2,r3
   518c4:	10c00104 	addi	r3,r2,4
   518c8:	e0bffe17 	ldw	r2,-8(fp)
   518cc:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   518d0:	e0bffd17 	ldw	r2,-12(fp)
   518d4:	1005003a 	cmpeq	r2,r2,zero
   518d8:	1000051e 	bne	r2,zero,518f0 <alt_iic_isr_register+0xb8>
   518dc:	e17ff917 	ldw	r5,-28(fp)
   518e0:	e13ffb17 	ldw	r4,-20(fp)
   518e4:	00516b40 	call	516b4 <alt_ic_irq_enable>
   518e8:	e0bfff15 	stw	r2,-4(fp)
   518ec:	00000406 	br	51900 <alt_iic_isr_register+0xc8>
   518f0:	e17ff917 	ldw	r5,-28(fp)
   518f4:	e13ffb17 	ldw	r4,-20(fp)
   518f8:	00517500 	call	51750 <alt_ic_irq_disable>
   518fc:	e0bfff15 	stw	r2,-4(fp)
   51900:	e0bfff17 	ldw	r2,-4(fp)
   51904:	e0bffa15 	stw	r2,-24(fp)
   51908:	e0bff817 	ldw	r2,-32(fp)
   5190c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51910:	e0bff617 	ldw	r2,-40(fp)
   51914:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   51918:	e0bffa17 	ldw	r2,-24(fp)
}
   5191c:	e037883a 	mov	sp,fp
   51920:	dfc00117 	ldw	ra,4(sp)
   51924:	df000017 	ldw	fp,0(sp)
   51928:	dec00204 	addi	sp,sp,8
   5192c:	f800283a 	ret

00051930 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   51930:	defff804 	addi	sp,sp,-32
   51934:	dfc00715 	stw	ra,28(sp)
   51938:	df000615 	stw	fp,24(sp)
   5193c:	dc000515 	stw	r16,20(sp)
   51940:	df000504 	addi	fp,sp,20
   51944:	e13ffc15 	stw	r4,-16(fp)
   51948:	e17ffd15 	stw	r5,-12(fp)
   5194c:	e1bffe15 	stw	r6,-8(fp)
   51950:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   51954:	e13ffd17 	ldw	r4,-12(fp)
   51958:	e17ffe17 	ldw	r5,-8(fp)
   5195c:	e1bfff17 	ldw	r6,-4(fp)
   51960:	0051b780 	call	51b78 <open>
   51964:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   51968:	e0bffb17 	ldw	r2,-20(fp)
   5196c:	1004803a 	cmplt	r2,r2,zero
   51970:	10001f1e 	bne	r2,zero,519f0 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
   51974:	e13ffb17 	ldw	r4,-20(fp)
   51978:	04000174 	movhi	r16,5
   5197c:	840d5e04 	addi	r16,r16,13688
   51980:	01400304 	movi	r5,12
   51984:	004f1100 	call	4f110 <__mulsi3>
   51988:	1405883a 	add	r2,r2,r16
   5198c:	10c00017 	ldw	r3,0(r2)
   51990:	e0bffc17 	ldw	r2,-16(fp)
   51994:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   51998:	e13ffb17 	ldw	r4,-20(fp)
   5199c:	04000174 	movhi	r16,5
   519a0:	840d5e04 	addi	r16,r16,13688
   519a4:	01400304 	movi	r5,12
   519a8:	004f1100 	call	4f110 <__mulsi3>
   519ac:	1405883a 	add	r2,r2,r16
   519b0:	10800104 	addi	r2,r2,4
   519b4:	10c00017 	ldw	r3,0(r2)
   519b8:	e0bffc17 	ldw	r2,-16(fp)
   519bc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   519c0:	e13ffb17 	ldw	r4,-20(fp)
   519c4:	04000174 	movhi	r16,5
   519c8:	840d5e04 	addi	r16,r16,13688
   519cc:	01400304 	movi	r5,12
   519d0:	004f1100 	call	4f110 <__mulsi3>
   519d4:	1405883a 	add	r2,r2,r16
   519d8:	10800204 	addi	r2,r2,8
   519dc:	10c00017 	ldw	r3,0(r2)
   519e0:	e0bffc17 	ldw	r2,-16(fp)
   519e4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   519e8:	e13ffb17 	ldw	r4,-20(fp)
   519ec:	00502300 	call	50230 <alt_release_fd>
  }
} 
   519f0:	e037883a 	mov	sp,fp
   519f4:	dfc00217 	ldw	ra,8(sp)
   519f8:	df000117 	ldw	fp,4(sp)
   519fc:	dc000017 	ldw	r16,0(sp)
   51a00:	dec00304 	addi	sp,sp,12
   51a04:	f800283a 	ret

00051a08 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   51a08:	defffb04 	addi	sp,sp,-20
   51a0c:	dfc00415 	stw	ra,16(sp)
   51a10:	df000315 	stw	fp,12(sp)
   51a14:	df000304 	addi	fp,sp,12
   51a18:	e13ffd15 	stw	r4,-12(fp)
   51a1c:	e17ffe15 	stw	r5,-8(fp)
   51a20:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   51a24:	01000174 	movhi	r4,5
   51a28:	210d6104 	addi	r4,r4,13700
   51a2c:	e17ffd17 	ldw	r5,-12(fp)
   51a30:	01800044 	movi	r6,1
   51a34:	01c07fc4 	movi	r7,511
   51a38:	00519300 	call	51930 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   51a3c:	01000174 	movhi	r4,5
   51a40:	210d5e04 	addi	r4,r4,13688
   51a44:	e17ffe17 	ldw	r5,-8(fp)
   51a48:	000d883a 	mov	r6,zero
   51a4c:	01c07fc4 	movi	r7,511
   51a50:	00519300 	call	51930 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   51a54:	01000174 	movhi	r4,5
   51a58:	210d6404 	addi	r4,r4,13712
   51a5c:	e17fff17 	ldw	r5,-4(fp)
   51a60:	01800044 	movi	r6,1
   51a64:	01c07fc4 	movi	r7,511
   51a68:	00519300 	call	51930 <alt_open_fd>
}  
   51a6c:	e037883a 	mov	sp,fp
   51a70:	dfc00117 	ldw	ra,4(sp)
   51a74:	df000017 	ldw	fp,0(sp)
   51a78:	dec00204 	addi	sp,sp,8
   51a7c:	f800283a 	ret

00051a80 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   51a80:	defffa04 	addi	sp,sp,-24
   51a84:	dfc00515 	stw	ra,20(sp)
   51a88:	df000415 	stw	fp,16(sp)
   51a8c:	dc000315 	stw	r16,12(sp)
   51a90:	df000304 	addi	fp,sp,12
   51a94:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   51a98:	e0bffe17 	ldw	r2,-8(fp)
   51a9c:	10800217 	ldw	r2,8(r2)
   51aa0:	10d00034 	orhi	r3,r2,16384
   51aa4:	e0bffe17 	ldw	r2,-8(fp)
   51aa8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   51aac:	e03ffd15 	stw	zero,-12(fp)
   51ab0:	00002306 	br	51b40 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   51ab4:	e13ffd17 	ldw	r4,-12(fp)
   51ab8:	04000174 	movhi	r16,5
   51abc:	840d5e04 	addi	r16,r16,13688
   51ac0:	01400304 	movi	r5,12
   51ac4:	004f1100 	call	4f110 <__mulsi3>
   51ac8:	1405883a 	add	r2,r2,r16
   51acc:	10c00017 	ldw	r3,0(r2)
   51ad0:	e0bffe17 	ldw	r2,-8(fp)
   51ad4:	10800017 	ldw	r2,0(r2)
   51ad8:	1880161e 	bne	r3,r2,51b34 <alt_file_locked+0xb4>
   51adc:	e13ffd17 	ldw	r4,-12(fp)
   51ae0:	04000174 	movhi	r16,5
   51ae4:	840d5e04 	addi	r16,r16,13688
   51ae8:	01400304 	movi	r5,12
   51aec:	004f1100 	call	4f110 <__mulsi3>
   51af0:	1405883a 	add	r2,r2,r16
   51af4:	10800204 	addi	r2,r2,8
   51af8:	10800017 	ldw	r2,0(r2)
   51afc:	1004403a 	cmpge	r2,r2,zero
   51b00:	10000c1e 	bne	r2,zero,51b34 <alt_file_locked+0xb4>
   51b04:	e13ffd17 	ldw	r4,-12(fp)
   51b08:	01400304 	movi	r5,12
   51b0c:	004f1100 	call	4f110 <__mulsi3>
   51b10:	1007883a 	mov	r3,r2
   51b14:	00800174 	movhi	r2,5
   51b18:	108d5e04 	addi	r2,r2,13688
   51b1c:	1887883a 	add	r3,r3,r2
   51b20:	e0bffe17 	ldw	r2,-8(fp)
   51b24:	18800326 	beq	r3,r2,51b34 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   51b28:	00bffcc4 	movi	r2,-13
   51b2c:	e0bfff15 	stw	r2,-4(fp)
   51b30:	00000a06 	br	51b5c <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   51b34:	e0bffd17 	ldw	r2,-12(fp)
   51b38:	10800044 	addi	r2,r2,1
   51b3c:	e0bffd15 	stw	r2,-12(fp)
   51b40:	00800174 	movhi	r2,5
   51b44:	1091e104 	addi	r2,r2,18308
   51b48:	10800017 	ldw	r2,0(r2)
   51b4c:	1007883a 	mov	r3,r2
   51b50:	e0bffd17 	ldw	r2,-12(fp)
   51b54:	18bfd72e 	bgeu	r3,r2,51ab4 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   51b58:	e03fff15 	stw	zero,-4(fp)
   51b5c:	e0bfff17 	ldw	r2,-4(fp)
}
   51b60:	e037883a 	mov	sp,fp
   51b64:	dfc00217 	ldw	ra,8(sp)
   51b68:	df000117 	ldw	fp,4(sp)
   51b6c:	dc000017 	ldw	r16,0(sp)
   51b70:	dec00304 	addi	sp,sp,12
   51b74:	f800283a 	ret

00051b78 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   51b78:	defff404 	addi	sp,sp,-48
   51b7c:	dfc00b15 	stw	ra,44(sp)
   51b80:	df000a15 	stw	fp,40(sp)
   51b84:	df000a04 	addi	fp,sp,40
   51b88:	e13ffb15 	stw	r4,-20(fp)
   51b8c:	e17ffc15 	stw	r5,-16(fp)
   51b90:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   51b94:	00bfffc4 	movi	r2,-1
   51b98:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   51b9c:	00bffb44 	movi	r2,-19
   51ba0:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   51ba4:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   51ba8:	e13ffb17 	ldw	r4,-20(fp)
   51bac:	01400174 	movhi	r5,5
   51bb0:	2951df04 	addi	r5,r5,18300
   51bb4:	0051f280 	call	51f28 <alt_find_dev>
   51bb8:	e0bffa15 	stw	r2,-24(fp)
   51bbc:	e0bffa17 	ldw	r2,-24(fp)
   51bc0:	1004c03a 	cmpne	r2,r2,zero
   51bc4:	1000051e 	bne	r2,zero,51bdc <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   51bc8:	e13ffb17 	ldw	r4,-20(fp)
   51bcc:	0051fbc0 	call	51fbc <alt_find_file>
   51bd0:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   51bd4:	00800044 	movi	r2,1
   51bd8:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   51bdc:	e0bffa17 	ldw	r2,-24(fp)
   51be0:	1005003a 	cmpeq	r2,r2,zero
   51be4:	1000311e 	bne	r2,zero,51cac <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
   51be8:	e13ffa17 	ldw	r4,-24(fp)
   51bec:	00520dc0 	call	520dc <alt_get_fd>
   51bf0:	e0bff815 	stw	r2,-32(fp)
   51bf4:	e0bff817 	ldw	r2,-32(fp)
   51bf8:	1004403a 	cmpge	r2,r2,zero
   51bfc:	1000031e 	bne	r2,zero,51c0c <open+0x94>
    {
      status = index;
   51c00:	e0bff817 	ldw	r2,-32(fp)
   51c04:	e0bff715 	stw	r2,-36(fp)
   51c08:	00002a06 	br	51cb4 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
   51c0c:	e13ff817 	ldw	r4,-32(fp)
   51c10:	01400304 	movi	r5,12
   51c14:	004f1100 	call	4f110 <__mulsi3>
   51c18:	1007883a 	mov	r3,r2
   51c1c:	00800174 	movhi	r2,5
   51c20:	108d5e04 	addi	r2,r2,13688
   51c24:	1885883a 	add	r2,r3,r2
   51c28:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   51c2c:	e0fffc17 	ldw	r3,-16(fp)
   51c30:	00900034 	movhi	r2,16384
   51c34:	10bfffc4 	addi	r2,r2,-1
   51c38:	1886703a 	and	r3,r3,r2
   51c3c:	e0bff917 	ldw	r2,-28(fp)
   51c40:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   51c44:	e0bff617 	ldw	r2,-40(fp)
   51c48:	1004c03a 	cmpne	r2,r2,zero
   51c4c:	1000061e 	bne	r2,zero,51c68 <open+0xf0>
   51c50:	e13ff917 	ldw	r4,-28(fp)
   51c54:	0051a800 	call	51a80 <alt_file_locked>
   51c58:	e0bff715 	stw	r2,-36(fp)
   51c5c:	e0bff717 	ldw	r2,-36(fp)
   51c60:	1004803a 	cmplt	r2,r2,zero
   51c64:	1000131e 	bne	r2,zero,51cb4 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   51c68:	e0bffa17 	ldw	r2,-24(fp)
   51c6c:	10800317 	ldw	r2,12(r2)
   51c70:	1005003a 	cmpeq	r2,r2,zero
   51c74:	1000091e 	bne	r2,zero,51c9c <open+0x124>
   51c78:	e0bffa17 	ldw	r2,-24(fp)
   51c7c:	10800317 	ldw	r2,12(r2)
   51c80:	e13ff917 	ldw	r4,-28(fp)
   51c84:	e17ffb17 	ldw	r5,-20(fp)
   51c88:	e1bffc17 	ldw	r6,-16(fp)
   51c8c:	e1fffd17 	ldw	r7,-12(fp)
   51c90:	103ee83a 	callr	r2
   51c94:	e0bfff15 	stw	r2,-4(fp)
   51c98:	00000106 	br	51ca0 <open+0x128>
   51c9c:	e03fff15 	stw	zero,-4(fp)
   51ca0:	e0bfff17 	ldw	r2,-4(fp)
   51ca4:	e0bff715 	stw	r2,-36(fp)
   51ca8:	00000206 	br	51cb4 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   51cac:	00bffb44 	movi	r2,-19
   51cb0:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   51cb4:	e0bff717 	ldw	r2,-36(fp)
   51cb8:	1004403a 	cmpge	r2,r2,zero
   51cbc:	1000091e 	bne	r2,zero,51ce4 <open+0x16c>
  {
    alt_release_fd (index);  
   51cc0:	e13ff817 	ldw	r4,-32(fp)
   51cc4:	00502300 	call	50230 <alt_release_fd>
    ALT_ERRNO = -status;
   51cc8:	0051d040 	call	51d04 <alt_get_errno>
   51ccc:	e0fff717 	ldw	r3,-36(fp)
   51cd0:	00c7c83a 	sub	r3,zero,r3
   51cd4:	10c00015 	stw	r3,0(r2)
    return -1;
   51cd8:	00bfffc4 	movi	r2,-1
   51cdc:	e0bffe15 	stw	r2,-8(fp)
   51ce0:	00000206 	br	51cec <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
   51ce4:	e0bff817 	ldw	r2,-32(fp)
   51ce8:	e0bffe15 	stw	r2,-8(fp)
   51cec:	e0bffe17 	ldw	r2,-8(fp)
}
   51cf0:	e037883a 	mov	sp,fp
   51cf4:	dfc00117 	ldw	ra,4(sp)
   51cf8:	df000017 	ldw	fp,0(sp)
   51cfc:	dec00204 	addi	sp,sp,8
   51d00:	f800283a 	ret

00051d04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   51d04:	defffd04 	addi	sp,sp,-12
   51d08:	dfc00215 	stw	ra,8(sp)
   51d0c:	df000115 	stw	fp,4(sp)
   51d10:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   51d14:	00800174 	movhi	r2,5
   51d18:	1091e204 	addi	r2,r2,18312
   51d1c:	10800017 	ldw	r2,0(r2)
   51d20:	1005003a 	cmpeq	r2,r2,zero
   51d24:	1000061e 	bne	r2,zero,51d40 <alt_get_errno+0x3c>
   51d28:	00800174 	movhi	r2,5
   51d2c:	1091e204 	addi	r2,r2,18312
   51d30:	10800017 	ldw	r2,0(r2)
   51d34:	103ee83a 	callr	r2
   51d38:	e0bfff15 	stw	r2,-4(fp)
   51d3c:	00000306 	br	51d4c <alt_get_errno+0x48>
   51d40:	00800174 	movhi	r2,5
   51d44:	10988f04 	addi	r2,r2,25148
   51d48:	e0bfff15 	stw	r2,-4(fp)
   51d4c:	e0bfff17 	ldw	r2,-4(fp)
}
   51d50:	e037883a 	mov	sp,fp
   51d54:	dfc00117 	ldw	ra,4(sp)
   51d58:	df000017 	ldw	fp,0(sp)
   51d5c:	dec00204 	addi	sp,sp,8
   51d60:	f800283a 	ret

00051d64 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   51d64:	defffa04 	addi	sp,sp,-24
   51d68:	df000515 	stw	fp,20(sp)
   51d6c:	df000504 	addi	fp,sp,20
   51d70:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51d74:	0005303a 	rdctl	r2,status
   51d78:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51d7c:	e0fffd17 	ldw	r3,-12(fp)
   51d80:	00bfff84 	movi	r2,-2
   51d84:	1884703a 	and	r2,r3,r2
   51d88:	1001703a 	wrctl	status,r2
  
  return context;
   51d8c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   51d90:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   51d94:	e0bfff17 	ldw	r2,-4(fp)
   51d98:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   51d9c:	e0bffc17 	ldw	r2,-16(fp)
   51da0:	10c00017 	ldw	r3,0(r2)
   51da4:	e0bffc17 	ldw	r2,-16(fp)
   51da8:	10800117 	ldw	r2,4(r2)
   51dac:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   51db0:	e0bffc17 	ldw	r2,-16(fp)
   51db4:	10c00117 	ldw	r3,4(r2)
   51db8:	e0bffc17 	ldw	r2,-16(fp)
   51dbc:	10800017 	ldw	r2,0(r2)
   51dc0:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   51dc4:	e0fffc17 	ldw	r3,-16(fp)
   51dc8:	e0bffc17 	ldw	r2,-16(fp)
   51dcc:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   51dd0:	e0fffc17 	ldw	r3,-16(fp)
   51dd4:	e0bffc17 	ldw	r2,-16(fp)
   51dd8:	18800015 	stw	r2,0(r3)
   51ddc:	e0bffe17 	ldw	r2,-8(fp)
   51de0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51de4:	e0bffb17 	ldw	r2,-20(fp)
   51de8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   51dec:	e037883a 	mov	sp,fp
   51df0:	df000017 	ldw	fp,0(sp)
   51df4:	dec00104 	addi	sp,sp,4
   51df8:	f800283a 	ret

00051dfc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   51dfc:	defffb04 	addi	sp,sp,-20
   51e00:	dfc00415 	stw	ra,16(sp)
   51e04:	df000315 	stw	fp,12(sp)
   51e08:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   51e0c:	d0a00f17 	ldw	r2,-32708(gp)
   51e10:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   51e14:	d0a6bf17 	ldw	r2,-25860(gp)
   51e18:	10800044 	addi	r2,r2,1
   51e1c:	d0a6bf15 	stw	r2,-25860(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   51e20:	00003106 	br	51ee8 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   51e24:	e0bffe17 	ldw	r2,-8(fp)
   51e28:	10800017 	ldw	r2,0(r2)
   51e2c:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   51e30:	e0bffe17 	ldw	r2,-8(fp)
   51e34:	10800403 	ldbu	r2,16(r2)
   51e38:	10803fcc 	andi	r2,r2,255
   51e3c:	1005003a 	cmpeq	r2,r2,zero
   51e40:	1000051e 	bne	r2,zero,51e58 <alt_tick+0x5c>
   51e44:	d0a6bf17 	ldw	r2,-25860(gp)
   51e48:	1004c03a 	cmpne	r2,r2,zero
   51e4c:	1000021e 	bne	r2,zero,51e58 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   51e50:	e0bffe17 	ldw	r2,-8(fp)
   51e54:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   51e58:	e0bffe17 	ldw	r2,-8(fp)
   51e5c:	10c00217 	ldw	r3,8(r2)
   51e60:	d0a6bf17 	ldw	r2,-25860(gp)
   51e64:	10c01e36 	bltu	r2,r3,51ee0 <alt_tick+0xe4>
   51e68:	e0bffe17 	ldw	r2,-8(fp)
   51e6c:	10800403 	ldbu	r2,16(r2)
   51e70:	10803fcc 	andi	r2,r2,255
   51e74:	1004c03a 	cmpne	r2,r2,zero
   51e78:	1000191e 	bne	r2,zero,51ee0 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   51e7c:	e0bffe17 	ldw	r2,-8(fp)
   51e80:	10c00317 	ldw	r3,12(r2)
   51e84:	e0bffe17 	ldw	r2,-8(fp)
   51e88:	11000517 	ldw	r4,20(r2)
   51e8c:	183ee83a 	callr	r3
   51e90:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   51e94:	e0bffd17 	ldw	r2,-12(fp)
   51e98:	1004c03a 	cmpne	r2,r2,zero
   51e9c:	1000031e 	bne	r2,zero,51eac <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   51ea0:	e13ffe17 	ldw	r4,-8(fp)
   51ea4:	0051d640 	call	51d64 <alt_alarm_stop>
   51ea8:	00000d06 	br	51ee0 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   51eac:	e0bffe17 	ldw	r2,-8(fp)
   51eb0:	10c00217 	ldw	r3,8(r2)
   51eb4:	e0bffd17 	ldw	r2,-12(fp)
   51eb8:	1887883a 	add	r3,r3,r2
   51ebc:	e0bffe17 	ldw	r2,-8(fp)
   51ec0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   51ec4:	e0bffe17 	ldw	r2,-8(fp)
   51ec8:	10c00217 	ldw	r3,8(r2)
   51ecc:	d0a6bf17 	ldw	r2,-25860(gp)
   51ed0:	1880032e 	bgeu	r3,r2,51ee0 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   51ed4:	e0fffe17 	ldw	r3,-8(fp)
   51ed8:	00800044 	movi	r2,1
   51edc:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   51ee0:	e0bfff17 	ldw	r2,-4(fp)
   51ee4:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   51ee8:	d0e00f04 	addi	r3,gp,-32708
   51eec:	e0bffe17 	ldw	r2,-8(fp)
   51ef0:	10ffcc1e 	bne	r2,r3,51e24 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   51ef4:	e037883a 	mov	sp,fp
   51ef8:	dfc00117 	ldw	ra,4(sp)
   51efc:	df000017 	ldw	fp,0(sp)
   51f00:	dec00204 	addi	sp,sp,8
   51f04:	f800283a 	ret

00051f08 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   51f08:	deffff04 	addi	sp,sp,-4
   51f0c:	df000015 	stw	fp,0(sp)
   51f10:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   51f14:	000170fa 	wrctl	ienable,zero
}
   51f18:	e037883a 	mov	sp,fp
   51f1c:	df000017 	ldw	fp,0(sp)
   51f20:	dec00104 	addi	sp,sp,4
   51f24:	f800283a 	ret

00051f28 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   51f28:	defff904 	addi	sp,sp,-28
   51f2c:	dfc00615 	stw	ra,24(sp)
   51f30:	df000515 	stw	fp,20(sp)
   51f34:	df000504 	addi	fp,sp,20
   51f38:	e13ffd15 	stw	r4,-12(fp)
   51f3c:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   51f40:	e0bffe17 	ldw	r2,-8(fp)
   51f44:	10800017 	ldw	r2,0(r2)
   51f48:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   51f4c:	e13ffd17 	ldw	r4,-12(fp)
   51f50:	004084c0 	call	4084c <strlen>
   51f54:	10800044 	addi	r2,r2,1
   51f58:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   51f5c:	00000d06 	br	51f94 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   51f60:	e0bffc17 	ldw	r2,-16(fp)
   51f64:	11000217 	ldw	r4,8(r2)
   51f68:	e1bffb17 	ldw	r6,-20(fp)
   51f6c:	e17ffd17 	ldw	r5,-12(fp)
   51f70:	00522880 	call	52288 <memcmp>
   51f74:	1004c03a 	cmpne	r2,r2,zero
   51f78:	1000031e 	bne	r2,zero,51f88 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   51f7c:	e0bffc17 	ldw	r2,-16(fp)
   51f80:	e0bfff15 	stw	r2,-4(fp)
   51f84:	00000706 	br	51fa4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   51f88:	e0bffc17 	ldw	r2,-16(fp)
   51f8c:	10800017 	ldw	r2,0(r2)
   51f90:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   51f94:	e0fffe17 	ldw	r3,-8(fp)
   51f98:	e0bffc17 	ldw	r2,-16(fp)
   51f9c:	10fff01e 	bne	r2,r3,51f60 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   51fa0:	e03fff15 	stw	zero,-4(fp)
   51fa4:	e0bfff17 	ldw	r2,-4(fp)
}
   51fa8:	e037883a 	mov	sp,fp
   51fac:	dfc00117 	ldw	ra,4(sp)
   51fb0:	df000017 	ldw	fp,0(sp)
   51fb4:	dec00204 	addi	sp,sp,8
   51fb8:	f800283a 	ret

00051fbc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   51fbc:	defffa04 	addi	sp,sp,-24
   51fc0:	dfc00515 	stw	ra,20(sp)
   51fc4:	df000415 	stw	fp,16(sp)
   51fc8:	df000404 	addi	fp,sp,16
   51fcc:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   51fd0:	00800174 	movhi	r2,5
   51fd4:	1091dd04 	addi	r2,r2,18292
   51fd8:	10800017 	ldw	r2,0(r2)
   51fdc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   51fe0:	00003306 	br	520b0 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   51fe4:	e0bffd17 	ldw	r2,-12(fp)
   51fe8:	11000217 	ldw	r4,8(r2)
   51fec:	004084c0 	call	4084c <strlen>
   51ff0:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   51ff4:	e0bffd17 	ldw	r2,-12(fp)
   51ff8:	10c00217 	ldw	r3,8(r2)
   51ffc:	e0bffc17 	ldw	r2,-16(fp)
   52000:	1885883a 	add	r2,r3,r2
   52004:	10bfffc4 	addi	r2,r2,-1
   52008:	10800003 	ldbu	r2,0(r2)
   5200c:	10803fcc 	andi	r2,r2,255
   52010:	1080201c 	xori	r2,r2,128
   52014:	10bfe004 	addi	r2,r2,-128
   52018:	10800bd8 	cmpnei	r2,r2,47
   5201c:	1000031e 	bne	r2,zero,5202c <alt_find_file+0x70>
    {
      len -= 1;
   52020:	e0bffc17 	ldw	r2,-16(fp)
   52024:	10bfffc4 	addi	r2,r2,-1
   52028:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   5202c:	e0bffc17 	ldw	r2,-16(fp)
   52030:	1007883a 	mov	r3,r2
   52034:	e0bffe17 	ldw	r2,-8(fp)
   52038:	1885883a 	add	r2,r3,r2
   5203c:	10800003 	ldbu	r2,0(r2)
   52040:	10803fcc 	andi	r2,r2,255
   52044:	1080201c 	xori	r2,r2,128
   52048:	10bfe004 	addi	r2,r2,-128
   5204c:	10800be0 	cmpeqi	r2,r2,47
   52050:	10000a1e 	bne	r2,zero,5207c <alt_find_file+0xc0>
   52054:	e0bffc17 	ldw	r2,-16(fp)
   52058:	1007883a 	mov	r3,r2
   5205c:	e0bffe17 	ldw	r2,-8(fp)
   52060:	1885883a 	add	r2,r3,r2
   52064:	10800003 	ldbu	r2,0(r2)
   52068:	10803fcc 	andi	r2,r2,255
   5206c:	1080201c 	xori	r2,r2,128
   52070:	10bfe004 	addi	r2,r2,-128
   52074:	1004c03a 	cmpne	r2,r2,zero
   52078:	10000a1e 	bne	r2,zero,520a4 <alt_find_file+0xe8>
   5207c:	e0bffd17 	ldw	r2,-12(fp)
   52080:	11000217 	ldw	r4,8(r2)
   52084:	e1bffc17 	ldw	r6,-16(fp)
   52088:	e17ffe17 	ldw	r5,-8(fp)
   5208c:	00522880 	call	52288 <memcmp>
   52090:	1004c03a 	cmpne	r2,r2,zero
   52094:	1000031e 	bne	r2,zero,520a4 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   52098:	e0bffd17 	ldw	r2,-12(fp)
   5209c:	e0bfff15 	stw	r2,-4(fp)
   520a0:	00000806 	br	520c4 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   520a4:	e0bffd17 	ldw	r2,-12(fp)
   520a8:	10800017 	ldw	r2,0(r2)
   520ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   520b0:	00c00174 	movhi	r3,5
   520b4:	18d1dd04 	addi	r3,r3,18292
   520b8:	e0bffd17 	ldw	r2,-12(fp)
   520bc:	10ffc91e 	bne	r2,r3,51fe4 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   520c0:	e03fff15 	stw	zero,-4(fp)
   520c4:	e0bfff17 	ldw	r2,-4(fp)
}
   520c8:	e037883a 	mov	sp,fp
   520cc:	dfc00117 	ldw	ra,4(sp)
   520d0:	df000017 	ldw	fp,0(sp)
   520d4:	dec00204 	addi	sp,sp,8
   520d8:	f800283a 	ret

000520dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   520dc:	defffa04 	addi	sp,sp,-24
   520e0:	dfc00515 	stw	ra,20(sp)
   520e4:	df000415 	stw	fp,16(sp)
   520e8:	dc000315 	stw	r16,12(sp)
   520ec:	df000304 	addi	fp,sp,12
   520f0:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   520f4:	00bffa04 	movi	r2,-24
   520f8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   520fc:	e03ffe15 	stw	zero,-8(fp)
   52100:	00002006 	br	52184 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
   52104:	e13ffe17 	ldw	r4,-8(fp)
   52108:	04000174 	movhi	r16,5
   5210c:	840d5e04 	addi	r16,r16,13688
   52110:	01400304 	movi	r5,12
   52114:	004f1100 	call	4f110 <__mulsi3>
   52118:	1405883a 	add	r2,r2,r16
   5211c:	10800017 	ldw	r2,0(r2)
   52120:	1004c03a 	cmpne	r2,r2,zero
   52124:	1000141e 	bne	r2,zero,52178 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
   52128:	e13ffe17 	ldw	r4,-8(fp)
   5212c:	04000174 	movhi	r16,5
   52130:	840d5e04 	addi	r16,r16,13688
   52134:	01400304 	movi	r5,12
   52138:	004f1100 	call	4f110 <__mulsi3>
   5213c:	1407883a 	add	r3,r2,r16
   52140:	e0bfff17 	ldw	r2,-4(fp)
   52144:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   52148:	00800174 	movhi	r2,5
   5214c:	1091e104 	addi	r2,r2,18308
   52150:	10c00017 	ldw	r3,0(r2)
   52154:	e0bffe17 	ldw	r2,-8(fp)
   52158:	1880040e 	bge	r3,r2,5216c <alt_get_fd+0x90>
      {
        alt_max_fd = i;
   5215c:	00c00174 	movhi	r3,5
   52160:	18d1e104 	addi	r3,r3,18308
   52164:	e0bffe17 	ldw	r2,-8(fp)
   52168:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   5216c:	e0bffe17 	ldw	r2,-8(fp)
   52170:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   52174:	00000606 	br	52190 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   52178:	e0bffe17 	ldw	r2,-8(fp)
   5217c:	10800044 	addi	r2,r2,1
   52180:	e0bffe15 	stw	r2,-8(fp)
   52184:	e0bffe17 	ldw	r2,-8(fp)
   52188:	10800810 	cmplti	r2,r2,32
   5218c:	103fdd1e 	bne	r2,zero,52104 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   52190:	e0bffd17 	ldw	r2,-12(fp)
}
   52194:	e037883a 	mov	sp,fp
   52198:	dfc00217 	ldw	ra,8(sp)
   5219c:	df000117 	ldw	fp,4(sp)
   521a0:	dc000017 	ldw	r16,0(sp)
   521a4:	dec00304 	addi	sp,sp,12
   521a8:	f800283a 	ret

000521ac <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   521ac:	defffb04 	addi	sp,sp,-20
   521b0:	df000415 	stw	fp,16(sp)
   521b4:	df000404 	addi	fp,sp,16
   521b8:	e13ffe15 	stw	r4,-8(fp)
   521bc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   521c0:	e0bfff17 	ldw	r2,-4(fp)
   521c4:	10840070 	cmpltui	r2,r2,4097
   521c8:	1000021e 	bne	r2,zero,521d4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   521cc:	00840004 	movi	r2,4096
   521d0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   521d4:	e0fffe17 	ldw	r3,-8(fp)
   521d8:	e0bfff17 	ldw	r2,-4(fp)
   521dc:	1885883a 	add	r2,r3,r2
   521e0:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   521e4:	e0bffe17 	ldw	r2,-8(fp)
   521e8:	e0bffd15 	stw	r2,-12(fp)
   521ec:	00000506 	br	52204 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   521f0:	e0bffd17 	ldw	r2,-12(fp)
   521f4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   521f8:	e0bffd17 	ldw	r2,-12(fp)
   521fc:	10800804 	addi	r2,r2,32
   52200:	e0bffd15 	stw	r2,-12(fp)
   52204:	e0fffd17 	ldw	r3,-12(fp)
   52208:	e0bffc17 	ldw	r2,-16(fp)
   5220c:	18bff836 	bltu	r3,r2,521f0 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   52210:	e0bffe17 	ldw	r2,-8(fp)
   52214:	108007cc 	andi	r2,r2,31
   52218:	1005003a 	cmpeq	r2,r2,zero
   5221c:	1000021e 	bne	r2,zero,52228 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   52220:	e0bffd17 	ldw	r2,-12(fp)
   52224:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   52228:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   5222c:	e037883a 	mov	sp,fp
   52230:	df000017 	ldw	fp,0(sp)
   52234:	dec00104 	addi	sp,sp,4
   52238:	f800283a 	ret

0005223c <atexit>:
   5223c:	200b883a 	mov	r5,r4
   52240:	000d883a 	mov	r6,zero
   52244:	0009883a 	mov	r4,zero
   52248:	000f883a 	mov	r7,zero
   5224c:	00522fc1 	jmpi	522fc <__register_exitproc>

00052250 <exit>:
   52250:	defffe04 	addi	sp,sp,-8
   52254:	000b883a 	mov	r5,zero
   52258:	dc000015 	stw	r16,0(sp)
   5225c:	dfc00115 	stw	ra,4(sp)
   52260:	2021883a 	mov	r16,r4
   52264:	00524340 	call	52434 <__call_exitprocs>
   52268:	00800174 	movhi	r2,5
   5226c:	1091d704 	addi	r2,r2,18268
   52270:	11000017 	ldw	r4,0(r2)
   52274:	20800f17 	ldw	r2,60(r4)
   52278:	10000126 	beq	r2,zero,52280 <exit+0x30>
   5227c:	103ee83a 	callr	r2
   52280:	8009883a 	mov	r4,r16
   52284:	00526240 	call	52624 <_exit>

00052288 <memcmp>:
   52288:	00c000c4 	movi	r3,3
   5228c:	1980032e 	bgeu	r3,r6,5229c <memcmp+0x14>
   52290:	2144b03a 	or	r2,r4,r5
   52294:	10c4703a 	and	r2,r2,r3
   52298:	10000f26 	beq	r2,zero,522d8 <memcmp+0x50>
   5229c:	31ffffc4 	addi	r7,r6,-1
   522a0:	3000061e 	bne	r6,zero,522bc <memcmp+0x34>
   522a4:	00000a06 	br	522d0 <memcmp+0x48>
   522a8:	39ffffc4 	addi	r7,r7,-1
   522ac:	00bfffc4 	movi	r2,-1
   522b0:	21000044 	addi	r4,r4,1
   522b4:	29400044 	addi	r5,r5,1
   522b8:	38800526 	beq	r7,r2,522d0 <memcmp+0x48>
   522bc:	20c00003 	ldbu	r3,0(r4)
   522c0:	28800003 	ldbu	r2,0(r5)
   522c4:	18bff826 	beq	r3,r2,522a8 <memcmp+0x20>
   522c8:	1885c83a 	sub	r2,r3,r2
   522cc:	f800283a 	ret
   522d0:	0005883a 	mov	r2,zero
   522d4:	f800283a 	ret
   522d8:	180f883a 	mov	r7,r3
   522dc:	20c00017 	ldw	r3,0(r4)
   522e0:	28800017 	ldw	r2,0(r5)
   522e4:	18bfed1e 	bne	r3,r2,5229c <memcmp+0x14>
   522e8:	31bfff04 	addi	r6,r6,-4
   522ec:	21000104 	addi	r4,r4,4
   522f0:	29400104 	addi	r5,r5,4
   522f4:	39bff936 	bltu	r7,r6,522dc <memcmp+0x54>
   522f8:	003fe806 	br	5229c <memcmp+0x14>

000522fc <__register_exitproc>:
   522fc:	defffa04 	addi	sp,sp,-24
   52300:	00800174 	movhi	r2,5
   52304:	1091d704 	addi	r2,r2,18268
   52308:	dc000015 	stw	r16,0(sp)
   5230c:	14000017 	ldw	r16,0(r2)
   52310:	dd000415 	stw	r20,16(sp)
   52314:	2829883a 	mov	r20,r5
   52318:	81405217 	ldw	r5,328(r16)
   5231c:	dcc00315 	stw	r19,12(sp)
   52320:	dc800215 	stw	r18,8(sp)
   52324:	dc400115 	stw	r17,4(sp)
   52328:	dfc00515 	stw	ra,20(sp)
   5232c:	2023883a 	mov	r17,r4
   52330:	3027883a 	mov	r19,r6
   52334:	3825883a 	mov	r18,r7
   52338:	28002526 	beq	r5,zero,523d0 <__register_exitproc+0xd4>
   5233c:	29000117 	ldw	r4,4(r5)
   52340:	008007c4 	movi	r2,31
   52344:	11002716 	blt	r2,r4,523e4 <__register_exitproc+0xe8>
   52348:	8800101e 	bne	r17,zero,5238c <__register_exitproc+0x90>
   5234c:	2105883a 	add	r2,r4,r4
   52350:	1085883a 	add	r2,r2,r2
   52354:	20c00044 	addi	r3,r4,1
   52358:	1145883a 	add	r2,r2,r5
   5235c:	0009883a 	mov	r4,zero
   52360:	15000215 	stw	r20,8(r2)
   52364:	28c00115 	stw	r3,4(r5)
   52368:	2005883a 	mov	r2,r4
   5236c:	dfc00517 	ldw	ra,20(sp)
   52370:	dd000417 	ldw	r20,16(sp)
   52374:	dcc00317 	ldw	r19,12(sp)
   52378:	dc800217 	ldw	r18,8(sp)
   5237c:	dc400117 	ldw	r17,4(sp)
   52380:	dc000017 	ldw	r16,0(sp)
   52384:	dec00604 	addi	sp,sp,24
   52388:	f800283a 	ret
   5238c:	29802204 	addi	r6,r5,136
   52390:	00800044 	movi	r2,1
   52394:	110e983a 	sll	r7,r2,r4
   52398:	30c04017 	ldw	r3,256(r6)
   5239c:	2105883a 	add	r2,r4,r4
   523a0:	1085883a 	add	r2,r2,r2
   523a4:	1185883a 	add	r2,r2,r6
   523a8:	19c6b03a 	or	r3,r3,r7
   523ac:	14802015 	stw	r18,128(r2)
   523b0:	14c00015 	stw	r19,0(r2)
   523b4:	00800084 	movi	r2,2
   523b8:	30c04015 	stw	r3,256(r6)
   523bc:	88bfe31e 	bne	r17,r2,5234c <__register_exitproc+0x50>
   523c0:	30804117 	ldw	r2,260(r6)
   523c4:	11c4b03a 	or	r2,r2,r7
   523c8:	30804115 	stw	r2,260(r6)
   523cc:	003fdf06 	br	5234c <__register_exitproc+0x50>
   523d0:	00800174 	movhi	r2,5
   523d4:	10992004 	addi	r2,r2,25728
   523d8:	100b883a 	mov	r5,r2
   523dc:	80805215 	stw	r2,328(r16)
   523e0:	003fd606 	br	5233c <__register_exitproc+0x40>
   523e4:	00800034 	movhi	r2,0
   523e8:	10800004 	addi	r2,r2,0
   523ec:	1000021e 	bne	r2,zero,523f8 <__register_exitproc+0xfc>
   523f0:	013fffc4 	movi	r4,-1
   523f4:	003fdc06 	br	52368 <__register_exitproc+0x6c>
   523f8:	01006404 	movi	r4,400
   523fc:	103ee83a 	callr	r2
   52400:	1007883a 	mov	r3,r2
   52404:	103ffa26 	beq	r2,zero,523f0 <__register_exitproc+0xf4>
   52408:	80805217 	ldw	r2,328(r16)
   5240c:	180b883a 	mov	r5,r3
   52410:	18000115 	stw	zero,4(r3)
   52414:	18800015 	stw	r2,0(r3)
   52418:	80c05215 	stw	r3,328(r16)
   5241c:	18006215 	stw	zero,392(r3)
   52420:	18006315 	stw	zero,396(r3)
   52424:	0009883a 	mov	r4,zero
   52428:	883fc826 	beq	r17,zero,5234c <__register_exitproc+0x50>
   5242c:	003fd706 	br	5238c <__register_exitproc+0x90>

00052430 <register_fini>:
   52430:	f800283a 	ret

00052434 <__call_exitprocs>:
   52434:	00800174 	movhi	r2,5
   52438:	1091d704 	addi	r2,r2,18268
   5243c:	10800017 	ldw	r2,0(r2)
   52440:	defff304 	addi	sp,sp,-52
   52444:	df000b15 	stw	fp,44(sp)
   52448:	d8800115 	stw	r2,4(sp)
   5244c:	00800034 	movhi	r2,0
   52450:	10800004 	addi	r2,r2,0
   52454:	1005003a 	cmpeq	r2,r2,zero
   52458:	d8800215 	stw	r2,8(sp)
   5245c:	d8800117 	ldw	r2,4(sp)
   52460:	dd400815 	stw	r21,32(sp)
   52464:	dd000715 	stw	r20,28(sp)
   52468:	10805204 	addi	r2,r2,328
   5246c:	dfc00c15 	stw	ra,48(sp)
   52470:	ddc00a15 	stw	r23,40(sp)
   52474:	dd800915 	stw	r22,36(sp)
   52478:	dcc00615 	stw	r19,24(sp)
   5247c:	dc800515 	stw	r18,20(sp)
   52480:	dc400415 	stw	r17,16(sp)
   52484:	dc000315 	stw	r16,12(sp)
   52488:	282b883a 	mov	r21,r5
   5248c:	2039883a 	mov	fp,r4
   52490:	d8800015 	stw	r2,0(sp)
   52494:	2829003a 	cmpeq	r20,r5,zero
   52498:	d8800117 	ldw	r2,4(sp)
   5249c:	14405217 	ldw	r17,328(r2)
   524a0:	88001026 	beq	r17,zero,524e4 <__call_exitprocs+0xb0>
   524a4:	ddc00017 	ldw	r23,0(sp)
   524a8:	88800117 	ldw	r2,4(r17)
   524ac:	8c802204 	addi	r18,r17,136
   524b0:	143fffc4 	addi	r16,r2,-1
   524b4:	80000916 	blt	r16,zero,524dc <__call_exitprocs+0xa8>
   524b8:	05bfffc4 	movi	r22,-1
   524bc:	a000151e 	bne	r20,zero,52514 <__call_exitprocs+0xe0>
   524c0:	8409883a 	add	r4,r16,r16
   524c4:	2105883a 	add	r2,r4,r4
   524c8:	1485883a 	add	r2,r2,r18
   524cc:	10c02017 	ldw	r3,128(r2)
   524d0:	a8c01126 	beq	r21,r3,52518 <__call_exitprocs+0xe4>
   524d4:	843fffc4 	addi	r16,r16,-1
   524d8:	85bff81e 	bne	r16,r22,524bc <__call_exitprocs+0x88>
   524dc:	d8800217 	ldw	r2,8(sp)
   524e0:	10003126 	beq	r2,zero,525a8 <__call_exitprocs+0x174>
   524e4:	dfc00c17 	ldw	ra,48(sp)
   524e8:	df000b17 	ldw	fp,44(sp)
   524ec:	ddc00a17 	ldw	r23,40(sp)
   524f0:	dd800917 	ldw	r22,36(sp)
   524f4:	dd400817 	ldw	r21,32(sp)
   524f8:	dd000717 	ldw	r20,28(sp)
   524fc:	dcc00617 	ldw	r19,24(sp)
   52500:	dc800517 	ldw	r18,20(sp)
   52504:	dc400417 	ldw	r17,16(sp)
   52508:	dc000317 	ldw	r16,12(sp)
   5250c:	dec00d04 	addi	sp,sp,52
   52510:	f800283a 	ret
   52514:	8409883a 	add	r4,r16,r16
   52518:	88c00117 	ldw	r3,4(r17)
   5251c:	2105883a 	add	r2,r4,r4
   52520:	1445883a 	add	r2,r2,r17
   52524:	18ffffc4 	addi	r3,r3,-1
   52528:	11800217 	ldw	r6,8(r2)
   5252c:	1c001526 	beq	r3,r16,52584 <__call_exitprocs+0x150>
   52530:	10000215 	stw	zero,8(r2)
   52534:	303fe726 	beq	r6,zero,524d4 <__call_exitprocs+0xa0>
   52538:	00c00044 	movi	r3,1
   5253c:	1c06983a 	sll	r3,r3,r16
   52540:	90804017 	ldw	r2,256(r18)
   52544:	8cc00117 	ldw	r19,4(r17)
   52548:	1884703a 	and	r2,r3,r2
   5254c:	10001426 	beq	r2,zero,525a0 <__call_exitprocs+0x16c>
   52550:	90804117 	ldw	r2,260(r18)
   52554:	1884703a 	and	r2,r3,r2
   52558:	10000c1e 	bne	r2,zero,5258c <__call_exitprocs+0x158>
   5255c:	2105883a 	add	r2,r4,r4
   52560:	1485883a 	add	r2,r2,r18
   52564:	11400017 	ldw	r5,0(r2)
   52568:	e009883a 	mov	r4,fp
   5256c:	303ee83a 	callr	r6
   52570:	88800117 	ldw	r2,4(r17)
   52574:	98bfc81e 	bne	r19,r2,52498 <__call_exitprocs+0x64>
   52578:	b8800017 	ldw	r2,0(r23)
   5257c:	147fd526 	beq	r2,r17,524d4 <__call_exitprocs+0xa0>
   52580:	003fc506 	br	52498 <__call_exitprocs+0x64>
   52584:	8c000115 	stw	r16,4(r17)
   52588:	003fea06 	br	52534 <__call_exitprocs+0x100>
   5258c:	2105883a 	add	r2,r4,r4
   52590:	1485883a 	add	r2,r2,r18
   52594:	11000017 	ldw	r4,0(r2)
   52598:	303ee83a 	callr	r6
   5259c:	003ff406 	br	52570 <__call_exitprocs+0x13c>
   525a0:	303ee83a 	callr	r6
   525a4:	003ff206 	br	52570 <__call_exitprocs+0x13c>
   525a8:	88800117 	ldw	r2,4(r17)
   525ac:	1000081e 	bne	r2,zero,525d0 <__call_exitprocs+0x19c>
   525b0:	89000017 	ldw	r4,0(r17)
   525b4:	20000726 	beq	r4,zero,525d4 <__call_exitprocs+0x1a0>
   525b8:	b9000015 	stw	r4,0(r23)
   525bc:	8809883a 	mov	r4,r17
   525c0:	00000000 	call	0 <__alt_mem_onchip_mem-0x40000>
   525c4:	bc400017 	ldw	r17,0(r23)
   525c8:	883fb71e 	bne	r17,zero,524a8 <__call_exitprocs+0x74>
   525cc:	003fc506 	br	524e4 <__call_exitprocs+0xb0>
   525d0:	89000017 	ldw	r4,0(r17)
   525d4:	882f883a 	mov	r23,r17
   525d8:	2023883a 	mov	r17,r4
   525dc:	883fb21e 	bne	r17,zero,524a8 <__call_exitprocs+0x74>
   525e0:	003fc006 	br	524e4 <__call_exitprocs+0xb0>

000525e4 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   525e4:	defffd04 	addi	sp,sp,-12
   525e8:	df000215 	stw	fp,8(sp)
   525ec:	df000204 	addi	fp,sp,8
   525f0:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   525f4:	e0bfff17 	ldw	r2,-4(fp)
   525f8:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   525fc:	e0bffe17 	ldw	r2,-8(fp)
   52600:	1005003a 	cmpeq	r2,r2,zero
   52604:	1000021e 	bne	r2,zero,52610 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   52608:	002af070 	cmpltui	zero,zero,43969
   5260c:	00000106 	br	52614 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   52610:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   52614:	e037883a 	mov	sp,fp
   52618:	df000017 	ldw	fp,0(sp)
   5261c:	dec00104 	addi	sp,sp,4
   52620:	f800283a 	ret

00052624 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   52624:	defffd04 	addi	sp,sp,-12
   52628:	dfc00215 	stw	ra,8(sp)
   5262c:	df000115 	stw	fp,4(sp)
   52630:	df000104 	addi	fp,sp,4
   52634:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   52638:	e13fff17 	ldw	r4,-4(fp)
   5263c:	00525e40 	call	525e4 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   52640:	003fff06 	br	52640 <_exit+0x1c>
   52644:	00052430 	cmpltui	zero,zero,5264
