
Debugger.elf:     file format elf32-littlenios2
Debugger.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000401b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00012460 memsz 0x00012460 flags r-x
    LOAD off    0x00013480 vaddr 0x00052480 paddr 0x00053f08 align 2**12
         filesz 0x00001a88 memsz 0x00001a88 flags rw-
    LOAD off    0x00015990 vaddr 0x00055990 paddr 0x00055990 align 2**12
         filesz 0x00000000 memsz 0x000003f0 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011c6c  000401b4  000401b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000660  00051e20  00051e20  00012e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a88  00052480  00053f08  00013480  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003f0  00055990  00055990  00015990  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00014f08  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001038  00000000  00000000  00014f30  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000017d0  00000000  00000000  00015f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002e2e4  00000000  00000000  00017738  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a17a  00000000  00000000  00045a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00019e3e  00000000  00000000  0004fb96  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001f20  00000000  00000000  000699d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002b1f  00000000  00000000  0006b8f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001191d  00000000  00000000  0006e413  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000050  00000000  00000000  0007fd30  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  0007fd80  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0008402f  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00084032  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00084035  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00084036  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00084037  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0008403b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0008403f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  00084043  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0008404e  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  00084059  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  00084064  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000068  00000000  00000000  00084067  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00041d99  00000000  00000000  000840cf  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
000401b4 l    d  .text	00000000 .text
00051e20 l    d  .rodata	00000000 .rodata
00052480 l    d  .rwdata	00000000 .rwdata
00055990 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000401ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 counter.c
00055990 l     O .bss	00000001 count
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004035c l     F .text	00000058 __sprint_r
00051eae l     O .rodata	00000010 blanks.3452
00051e9e l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
00051ec6 l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
00051fe9 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
00043b60 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00045588 l     F .text	00000058 std
00045694 l     F .text	00000008 __fp_lock
0004569c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00052480 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
00053ed4 l     O .rwdata	00000004 charset
00052190 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000522d8 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
00048b28 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtod.c
0004903c l     F .text	00000048 match
00052ca8 l     O .rwdata	00000014 fpi.1950
000522f4 l     O .rodata	00000028 tinytens
00052c94 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0004b84c l     F .text	00000024 htinit
0004b8d8 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0004c184 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0004d574 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0004e79c l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0004f2b0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004f310 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004f414 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004f538 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004f618 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004f778 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004f9a8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00053ef8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004fc90 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00052e64 l     O .rwdata	00001060 jtag_uart_0
0004fd80 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004ffc0 l     F .text	00000228 altera_avalon_jtag_uart_irq
000501e8 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00050864 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00050ce4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00051108 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00051258 l     F .text	000000f8 alt_file_locked
000514dc l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00051c08 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
00051dbc l     F .text	00000040 alt_sim_halt
000476f0 g     F .text	00000094 _mprec_log10
000477dc g     F .text	00000088 __any_on
0004c418 g     F .text	00000070 _isatty_r
000522b0 g     O .rodata	00000028 __mprec_tinytens
0004f7d8 g     F .text	0000006c alt_main
00055af0 g     O .bss	00000100 alt_irq
0004c488 g     F .text	00000078 _lseek_r
00053f08 g       *ABS*	00000000 __flash_rwdata_start
0004e094 g     F .text	00000088 __eqdf2
00055d80 g       *ABS*	00000000 __alt_heap_start
00040268 g     F .text	00000044 printf
00048dc8 g     F .text	00000068 __sseek
000455f0 g     F .text	000000a4 __sinit
00046574 g     F .text	00000084 _setlocale_r
000456f0 g     F .text	0000009c __sfmoreglue
0004b4e8 g     F .text	0000001c ungetc
0004f864 g     F .text	00000020 __malloc_unlock
00049084 g     F .text	000015cc _strtod_r
0004716c g     F .text	000000e0 memmove
000456e0 g     F .text	00000010 _cleanup
00047864 g     F .text	000000bc _Balloc
0004e1a4 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004b7d8 g     F .text	00000074 _fstat_r
000559ac g     O .bss	00000004 errno
00043924 g     F .text	00000024 __svfscanf
0004eb10 g     F .text	0000002c __make_fp
000559b4 g     O .bss	00000004 alt_argv
0005bec4 g       *ABS*	00000000 _gp
0004fb3c g     F .text	00000030 usleep
00052ce4 g     O .rwdata	00000180 alt_fd_list
00051700 g     F .text	00000094 alt_find_dev
000470cc g     F .text	000000a0 memcpy
0004c1d0 g     F .text	00000248 __hexnan
000456d4 g     F .text	0000000c _cleanup_r
0004e3c4 g     F .text	000000f8 __floatsidf
000511e0 g     F .text	00000078 alt_io_redirect
0004e2b4 g     F .text	00000088 __ltdf2
00051e20 g       *ABS*	00000000 __DTOR_END__
00046f68 g     F .text	00000040 mbrtowc
00043948 g     F .text	00000068 _vfscanf_r
00047640 g     F .text	000000b0 __ratio
00050400 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
000402ac g     F .text	00000034 _printf_r
0004e8d8 g     F .text	00000008 __udivsi3
0004f474 g     F .text	000000c4 isatty
00046524 g     F .text	0000002c iswspace
000521c0 g     O .rodata	000000c8 __mprec_tens
00046550 g     F .text	00000008 __locale_charset
0004c69c g     F .text	000000a4 __fixunsdfsi
00051984 g     F .text	00000090 alt_icache_flush
000559a0 g     O .bss	00000004 __malloc_top_pad
0004af5c g     F .text	00000024 strtoul
00053ed0 g     O .rwdata	00000004 __mb_cur_max
00046558 g     F .text	0000000c _localeconv_r
0004af80 g     F .text	000002f0 _strtoull_r
00047fc8 g     F .text	0000003c __i2b
00045f08 g     F .text	0000049c __sfvwrite_r
00048bb4 g     F .text	00000070 _sbrk_r
0004c500 g     F .text	00000078 _read_r
00052880 g     O .rwdata	0000000c __lc_ctype
00053ef0 g     O .rwdata	00000004 alt_max_fd
0004ee50 g     F .text	00000138 __unpack_d
0004b6b4 g     F .text	00000110 _fclose_r
00045554 g     F .text	00000034 fflush
000559a4 g     O .bss	00000004 __malloc_max_sbrked_mem
0004da04 g     F .text	00000074 __adddf3
0004d40c g     F .text	00000078 __nesf2
00047520 g     F .text	00000120 __b2d
0004cdac g     F .text	00000660 __umoddi3
0004f684 g     F .text	000000f4 lseek
00053ecc g     O .rwdata	00000004 _global_impure_ptr
00048370 g     F .text	000005f4 _realloc_r
00055d80 g       *ABS*	00000000 __bss_end
00051010 g     F .text	000000f8 alt_iic_isr_register
000515d4 g     F .text	0000010c alt_tick
000559f0 g     O .bss	00000100 __hexdig
0004c740 g     F .text	0000066c __udivdi3
00052288 g     O .rodata	00000028 __mprec_bigtens
00048250 g     F .text	00000120 __s2b
0004e608 g     F .text	00000194 __floatunsidf
00047440 g     F .text	00000060 __mcmp
00053ec4 g     O .rwdata	00000004 __ctype_ptr
000456bc g     F .text	00000018 __fp_lock_all
00050fc8 g     F .text	00000048 alt_ic_irq_enabled
0005153c g     F .text	00000098 alt_alarm_stop
0004a9e0 g     F .text	00000024 strtol
000559bc g     O .bss	00000004 alt_irq_active
00040000 g       *ABS*	00000000 __alt_mem_onchip_mem
000400ec g     F .exceptions	000000c8 alt_irq_handler
00052cbc g     O .rwdata	00000028 alt_dev_null
0004e9a0 g     F .text	000000c8 __unpack_f
00050c14 g     F .text	0000001c alt_dcache_flush_all
0004730c g     F .text	00000070 __hi0bits
0004e4bc g     F .text	000000d8 __fixdfsi
0004a774 g     F .text	0000001c strtod
00053f08 g       *ABS*	00000000 __ram_rwdata_end
00053ee8 g     O .rwdata	00000008 alt_dev_list
0004fb6c g     F .text	00000124 write
0004d484 g     F .text	00000078 __gtsf2
00052480 g       *ABS*	00000000 __ram_rodata_end
0004f33c g     F .text	000000d8 fstat
0004e33c g     F .text	00000088 __ledf2
00048130 g     F .text	00000120 __pow5mult
00055994 g     O .bss	00000004 __nlocale_changed
0004e8e0 g     F .text	00000008 __umodsi3
000402e0 g     F .text	00000034 _scanf_r
00055d80 g       *ABS*	00000000 end
0004f050 g     F .text	00000160 __pack_f
0004ff00 g     F .text	000000c0 altera_avalon_jtag_uart_init
00051e1c g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
000508d4 g     F .text	00000090 alt_avalon_timer_sc_init
0004e920 g     F .text	00000080 __clzsi2
00050624 g     F .text	00000240 altera_avalon_jtag_uart_write
000455e0 g     F .text	00000004 __sfp_lock_acquire
00046fe8 g     F .text	000000e4 memchr
000403b4 g     F .text	00001ec4 ___vfprintf_internal_r
00048d60 g     F .text	00000060 _sprintf_r
00045bf4 g     F .text	00000314 _free_r
00051c0c g     F .text	000001b0 __call_exitprocs
00055998 g     O .bss	00000004 __mlocale_changed
00053edc g     O .rwdata	00000004 __malloc_sbrk_base
000401b4 g     F .text	0000003c _start
000559c0 g     O .bss	00000004 _alt_tick_rate
0004aa04 g     F .text	00000318 _strtoll_r
00047c28 g     F .text	0000014c __lshift
000559c4 g     O .bss	00000004 _alt_nticks
0004f884 g     F .text	00000124 read
0004fd24 g     F .text	0000005c alt_sys_init
00051ad4 g     F .text	00000134 __register_exitproc
00047d74 g     F .text	00000254 __multiply
00050298 g     F .text	00000074 altera_avalon_jtag_uart_close
0004e8e8 g     F .text	00000038 __mulsi3
00052480 g       *ABS*	00000000 __ram_rwdata_start
00051e20 g       *ABS*	00000000 __ram_rodata_start
000559c8 g     O .bss	00000028 __malloc_current_mallinfo
00047920 g     F .text	0000017c __d2b
0004fdb8 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0004ad1c g     F .text	00000240 _strtoul_r
000518b4 g     F .text	000000d0 alt_get_fd
00050ab8 g     F .text	0000015c alt_busy_sleep
0004ef88 g     F .text	000000c8 __fpcmp_parts_d
0004b644 g     F .text	00000070 _close_r
00051a60 g     F .text	00000074 memcmp
0004fe68 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00055d80 g       *ABS*	00000000 __alt_stack_base
0004feb0 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00043a24 g     F .text	0000013c __swsetup_r
0004de3c g     F .text	00000258 __divdf3
0004578c g     F .text	000000f0 __sfp
00047784 g     F .text	00000058 __copybits
0005288c g     O .rwdata	00000408 __malloc_av_
000455ec g     F .text	00000004 __sinit_lock_release
0004da78 g     F .text	000003c4 __muldf3
00048eac g     F .text	00000060 __sread
00045a88 g     F .text	00000040 fread
00051794 g     F .text	00000120 alt_find_file
00050c30 g     F .text	000000b4 alt_dev_llist_insert
0004f844 g     F .text	00000020 __malloc_lock
0004fa80 g     F .text	000000bc sbrk
00045358 g     F .text	000001fc _fflush_r
0004b57c g     F .text	000000c8 _calloc_r
00055990 g       *ABS*	00000000 __bss_start
0004724c g     F .text	00000098 memset
000401f0 g     F .text	00000078 main
000559b8 g     O .bss	00000004 alt_envp
000559a8 g     O .bss	00000004 __malloc_max_total_mem
0004fe10 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0004d4fc g     F .text	00000078 __ltsf2
0004587c g     F .text	0000020c _fread_r
00048dc0 g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
0004b7c4 g     F .text	00000014 fclose
0004a790 g     F .text	00000250 _strtol_r
0004e594 g     F .text	00000074 __truncdfsf2
00055bf0 g     O .bss	00000190 _atexit0
00043da4 g     F .text	000015b4 _dtoa_r
000467a8 g     F .text	00000740 _malloc_r
00053ef4 g     O .rwdata	00000004 alt_errno
0004b270 g     F .text	000000dc __submore
0004646c g     F .text	000000b8 _fwalk
00046fa8 g     F .text	00000040 _mbtowc_r
0004e818 g     F .text	00000060 __divsi3
00052338 g     O .rodata	00000014 __thenan_df
00045ac8 g     F .text	0000012c _malloc_trim_r
00051e20 g       *ABS*	00000000 __CTOR_END__
00048f0c g     F .text	000000bc strcmp
00051e20 g       *ABS*	00000000 __flash_rodata_start
00051e20 g       *ABS*	00000000 __DTOR_LIST__
0004e11c g     F .text	00000088 __nedf2
0004fcf0 g     F .text	00000034 alt_irq_init
0004fa08 g     F .text	00000078 alt_release_fd
00048cec g     F .text	00000074 sprintf
0005234c g     O .rodata	00000100 __clz_tab
0005599c g     O .bss	00000004 _PathLocale
0004a650 g     F .text	00000124 strtof
00051a14 g     F .text	00000014 atexit
0004b504 g     F .text	00000078 _write_r
000465f8 g     F .text	0000001c setlocale
00040314 g     F .text	00000048 scanf
00048ce4 g     F .text	00000008 nanf
00053ec8 g     O .rwdata	00000004 _impure_ptr
000559b0 g     O .bss	00000004 alt_argc
00046ee8 g     F .text	00000080 _mbrtowc_r
00050da8 g     F .text	00000064 _do_dtors
00048964 g     F .text	000001c4 __srefill_r
00040020 g       .exceptions	00000000 alt_irq_entry
000474a0 g     F .text	00000080 __ulp
00048b44 g     F .text	00000040 __isinfd
000456a4 g     F .text	00000018 __fp_unlock_all
00053ee0 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00046564 g     F .text	00000010 localeconv
00050e3c g     F .text	00000050 alt_ic_isr_register
0004b870 g     F .text	00000068 __hexdig_init
00053f08 g       *ABS*	00000000 _edata
00055d80 g       *ABS*	00000000 _end
000401b4 g       *ABS*	00000000 __ram_exceptions_end
000439b0 g     F .text	00000074 vfscanf
0005030c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00050f28 g     F .text	000000a0 alt_ic_irq_disable
00048e30 g     F .text	0000007c __swrite
00053ed8 g     O .rwdata	00000004 __malloc_trim_threshold
000516e0 g     F .text	00000020 altera_nios2_qsys_irq_init
00051a28 g     F .text	00000038 exit
000463a4 g     F .text	000000c8 _fwalk_reent
00047a9c g     F .text	0000018c __mdiff
0004e878 g     F .text	00000060 __modsi3
00080000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
000455e4 g     F .text	00000004 __sfp_lock_release
00048c24 g     F .text	000000c0 __sccl
00051ee8 g     O .rodata	00000101 _ctype_
0004ea68 g     F .text	000000a8 __fpcmp_parts_f
00051dfc g     F .text	00000020 _exit
00048b84 g     F .text	00000030 __isnand
00050964 g     F .text	00000154 alt_alarm_start
0004c578 g     F .text	00000124 __muldi3
00046614 g     F .text	00000194 __smakebuf_r
00048fc8 g     F .text	00000074 strlen
00051350 g     F .text	0000018c open
0004e22c g     F .text	00000088 __gedf2
0004b988 g     F .text	000007fc __gethex
00050e0c g     F .text	00000030 alt_icache_flush_all
00053efc g     O .rwdata	00000004 alt_priority_mask
00050e8c g     F .text	0000009c alt_ic_irq_enable
00042278 g     F .text	00000024 __vfprintf_internal
0004d984 g     F .text	00000080 __subdf3
0004737c g     F .text	000000c4 __lo0bits
0004229c g     F .text	00001688 __svfscanf_r
00053f00 g     O .rwdata	00000008 alt_alarm_list
0004b34c g     F .text	0000019c _ungetc_r
00050d44 g     F .text	00000064 _do_ctors
0004f1b0 g     F .text	00000100 close
0004f598 g     F .text	00000080 alt_load
0004eb3c g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
000455e8 g     F .text	00000004 __sinit_lock_acquire
00048004 g     F .text	0000012c __multadd
000472e4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08406d14 	ori	at,at,436
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_mem-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   40044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400ec0 	call	400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000306 	br	40098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   4008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   40094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   40098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   4009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400e8:	ef80083a 	eret

000400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400ec:	defff904 	addi	sp,sp,-28
   400f0:	dfc00615 	stw	ra,24(sp)
   400f4:	df000515 	stw	fp,20(sp)
   400f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   400fc:	0005313a 	rdctl	r2,ipending
   40100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   40108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   4010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40110:	00800044 	movi	r2,1
   40114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   40118:	e0ffff17 	ldw	r3,-4(fp)
   4011c:	e0bffe17 	ldw	r2,-8(fp)
   40120:	1884703a 	and	r2,r3,r2
   40124:	1005003a 	cmpeq	r2,r2,zero
   40128:	1000161e 	bne	r2,zero,40184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4012c:	e0bffd17 	ldw	r2,-12(fp)
   40130:	00c00174 	movhi	r3,5
   40134:	18d6bc04 	addi	r3,r3,23280
   40138:	100490fa 	slli	r2,r2,3
   4013c:	10c5883a 	add	r2,r2,r3
   40140:	11400017 	ldw	r5,0(r2)
   40144:	e0bffd17 	ldw	r2,-12(fp)
   40148:	00c00174 	movhi	r3,5
   4014c:	18d6bc04 	addi	r3,r3,23280
   40150:	100490fa 	slli	r2,r2,3
   40154:	10c5883a 	add	r2,r2,r3
   40158:	10800104 	addi	r2,r2,4
   4015c:	11000017 	ldw	r4,0(r2)
   40160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40164:	0005313a 	rdctl	r2,ipending
   40168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   4016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   40170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   40174:	e0bfff17 	ldw	r2,-4(fp)
   40178:	1004c03a 	cmpne	r2,r2,zero
   4017c:	103fe31e 	bne	r2,zero,4010c <alt_irq_handler+0x20>
   40180:	00000706 	br	401a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   40184:	e0bffe17 	ldw	r2,-8(fp)
   40188:	1085883a 	add	r2,r2,r2
   4018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   40190:	e0bffd17 	ldw	r2,-12(fp)
   40194:	10800044 	addi	r2,r2,1
   40198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   4019c:	003fde06 	br	40118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   401a0:	e037883a 	mov	sp,fp
   401a4:	dfc00117 	ldw	ra,4(sp)
   401a8:	df000017 	ldw	fp,0(sp)
   401ac:	dec00204 	addi	sp,sp,8
   401b0:	f800283a 	ret

Disassembly of section .text:

000401b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   401b4:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   401b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   401bc:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   401c0:	d6afb114 	ori	gp,gp,48836
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   401c4:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   401c8:	10966414 	ori	r2,r2,22928

    movhi r3, %hi(__bss_end)
   401cc:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   401d0:	18d76014 	ori	r3,r3,23936

    beq r2, r3, 1f
   401d4:	10c00326 	beq	r2,r3,401e4 <_start+0x30>

0:
    stw zero, (r2)
   401d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   401dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   401e0:	10fffd36 	bltu	r2,r3,401d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   401e4:	004f5980 	call	4f598 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   401e8:	004f7d80 	call	4f7d8 <alt_main>

000401ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   401ec:	003fff06 	br	401ec <alt_after_alt_main>

000401f0 <main>:
/* 8-bit "loop counter" variable. */
static uint8_t count;


int main(void)
{ 
   401f0:	defffd04 	addi	sp,sp,-12
   401f4:	dfc00215 	stw	ra,8(sp)
   401f8:	df000115 	stw	fp,4(sp)
   401fc:	df000104 	addi	fp,sp,4
    count = 0;
   40200:	d026b305 	stb	zero,-25908(gp)

    /* 0x00-0xFF counting loop. */
    IOWR_8DIRECT(CLK_SEL,OFFSET,1);
   40204:	00800234 	movhi	r2,8
   40208:	10840c04 	addi	r2,r2,4144
   4020c:	00c00044 	movi	r3,1
   40210:	10c00025 	stbio	r3,0(r2)
    IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
   40214:	00800234 	movhi	r2,8
   40218:	10840804 	addi	r2,r2,4128
   4021c:	10000025 	stbio	zero,0(r2)
    while( 1 ) 
    {
    	printf("Enter the register ADDR : ");
   40220:	01000174 	movhi	r4,5
   40224:	21078804 	addi	r4,r4,7712
   40228:	00402680 	call	40268 <printf>
    	int addr;

    	scanf("%d", &addr);
   4022c:	01000174 	movhi	r4,5
   40230:	21078f04 	addi	r4,r4,7740
   40234:	e17fff04 	addi	r5,fp,-4
   40238:	00403140 	call	40314 <scanf>
    	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,1);
   4023c:	00800234 	movhi	r2,8
   40240:	10840804 	addi	r2,r2,4128
   40244:	00c00044 	movi	r3,1
   40248:	10c00025 	stbio	r3,0(r2)
    	usleep(100000); // Wait for about 0.1 seconds
   4024c:	010000b4 	movhi	r4,2
   40250:	2121a804 	addi	r4,r4,-31072
   40254:	004fb3c0 	call	4fb3c <usleep>
    	IOWR_8DIRECT(NIOS_CLK_OUT,OFFSET,0);
   40258:	00800234 	movhi	r2,8
   4025c:	10840804 	addi	r2,r2,4128
   40260:	10000025 	stbio	zero,0(r2)
//
//        // getting data from the Register file
//        int data = IORD_32DIRECT(DATA_IN,OFFSET);
//
//        printf("Data: %d\n", data);
    }
   40264:	003fee06 	br	40220 <main+0x30>

00040268 <printf>:
   40268:	defffb04 	addi	sp,sp,-20
   4026c:	dfc00115 	stw	ra,4(sp)
   40270:	d9400215 	stw	r5,8(sp)
   40274:	d9800315 	stw	r6,12(sp)
   40278:	d9c00415 	stw	r7,16(sp)
   4027c:	00800174 	movhi	r2,5
   40280:	108fb204 	addi	r2,r2,16072
   40284:	10c00017 	ldw	r3,0(r2)
   40288:	200b883a 	mov	r5,r4
   4028c:	d8800204 	addi	r2,sp,8
   40290:	19000217 	ldw	r4,8(r3)
   40294:	100d883a 	mov	r6,r2
   40298:	d8800015 	stw	r2,0(sp)
   4029c:	00422780 	call	42278 <__vfprintf_internal>
   402a0:	dfc00117 	ldw	ra,4(sp)
   402a4:	dec00504 	addi	sp,sp,20
   402a8:	f800283a 	ret

000402ac <_printf_r>:
   402ac:	defffc04 	addi	sp,sp,-16
   402b0:	dfc00115 	stw	ra,4(sp)
   402b4:	d9800215 	stw	r6,8(sp)
   402b8:	d9c00315 	stw	r7,12(sp)
   402bc:	280d883a 	mov	r6,r5
   402c0:	21400217 	ldw	r5,8(r4)
   402c4:	d8c00204 	addi	r3,sp,8
   402c8:	180f883a 	mov	r7,r3
   402cc:	d8c00015 	stw	r3,0(sp)
   402d0:	00403b40 	call	403b4 <___vfprintf_internal_r>
   402d4:	dfc00117 	ldw	ra,4(sp)
   402d8:	dec00404 	addi	sp,sp,16
   402dc:	f800283a 	ret

000402e0 <_scanf_r>:
   402e0:	defffc04 	addi	sp,sp,-16
   402e4:	dfc00115 	stw	ra,4(sp)
   402e8:	d9800215 	stw	r6,8(sp)
   402ec:	d9c00315 	stw	r7,12(sp)
   402f0:	280d883a 	mov	r6,r5
   402f4:	21400117 	ldw	r5,4(r4)
   402f8:	d8c00204 	addi	r3,sp,8
   402fc:	180f883a 	mov	r7,r3
   40300:	d8c00015 	stw	r3,0(sp)
   40304:	004229c0 	call	4229c <__svfscanf_r>
   40308:	dfc00117 	ldw	ra,4(sp)
   4030c:	dec00404 	addi	sp,sp,16
   40310:	f800283a 	ret

00040314 <scanf>:
   40314:	defffb04 	addi	sp,sp,-20
   40318:	dfc00115 	stw	ra,4(sp)
   4031c:	d9400215 	stw	r5,8(sp)
   40320:	d9800315 	stw	r6,12(sp)
   40324:	d9c00415 	stw	r7,16(sp)
   40328:	00800174 	movhi	r2,5
   4032c:	108fb204 	addi	r2,r2,16072
   40330:	11400017 	ldw	r5,0(r2)
   40334:	200d883a 	mov	r6,r4
   40338:	d8800204 	addi	r2,sp,8
   4033c:	2809883a 	mov	r4,r5
   40340:	29400117 	ldw	r5,4(r5)
   40344:	100f883a 	mov	r7,r2
   40348:	d8800015 	stw	r2,0(sp)
   4034c:	004229c0 	call	4229c <__svfscanf_r>
   40350:	dfc00117 	ldw	ra,4(sp)
   40354:	dec00504 	addi	sp,sp,20
   40358:	f800283a 	ret

0004035c <__sprint_r>:
   4035c:	30800217 	ldw	r2,8(r6)
   40360:	defffe04 	addi	sp,sp,-8
   40364:	dc000015 	stw	r16,0(sp)
   40368:	dfc00115 	stw	ra,4(sp)
   4036c:	3021883a 	mov	r16,r6
   40370:	0007883a 	mov	r3,zero
   40374:	1000061e 	bne	r2,zero,40390 <__sprint_r+0x34>
   40378:	1805883a 	mov	r2,r3
   4037c:	30000115 	stw	zero,4(r6)
   40380:	dfc00117 	ldw	ra,4(sp)
   40384:	dc000017 	ldw	r16,0(sp)
   40388:	dec00204 	addi	sp,sp,8
   4038c:	f800283a 	ret
   40390:	0045f080 	call	45f08 <__sfvwrite_r>
   40394:	1007883a 	mov	r3,r2
   40398:	1805883a 	mov	r2,r3
   4039c:	80000115 	stw	zero,4(r16)
   403a0:	80000215 	stw	zero,8(r16)
   403a4:	dfc00117 	ldw	ra,4(sp)
   403a8:	dc000017 	ldw	r16,0(sp)
   403ac:	dec00204 	addi	sp,sp,8
   403b0:	f800283a 	ret

000403b4 <___vfprintf_internal_r>:
   403b4:	defea404 	addi	sp,sp,-1392
   403b8:	dd815815 	stw	r22,1376(sp)
   403bc:	dc015215 	stw	r16,1352(sp)
   403c0:	d9c15115 	stw	r7,1348(sp)
   403c4:	dfc15b15 	stw	ra,1388(sp)
   403c8:	df015a15 	stw	fp,1384(sp)
   403cc:	ddc15915 	stw	r23,1380(sp)
   403d0:	dd415715 	stw	r21,1372(sp)
   403d4:	dd015615 	stw	r20,1368(sp)
   403d8:	dcc15515 	stw	r19,1364(sp)
   403dc:	dc815415 	stw	r18,1360(sp)
   403e0:	dc415315 	stw	r17,1356(sp)
   403e4:	282d883a 	mov	r22,r5
   403e8:	3021883a 	mov	r16,r6
   403ec:	d9014f15 	stw	r4,1340(sp)
   403f0:	00465580 	call	46558 <_localeconv_r>
   403f4:	10800017 	ldw	r2,0(r2)
   403f8:	d9c15117 	ldw	r7,1348(sp)
   403fc:	d8814915 	stw	r2,1316(sp)
   40400:	d8814f17 	ldw	r2,1340(sp)
   40404:	10000226 	beq	r2,zero,40410 <___vfprintf_internal_r+0x5c>
   40408:	10800e17 	ldw	r2,56(r2)
   4040c:	10020d26 	beq	r2,zero,40c44 <___vfprintf_internal_r+0x890>
   40410:	b080030b 	ldhu	r2,12(r22)
   40414:	1080020c 	andi	r2,r2,8
   40418:	10020e26 	beq	r2,zero,40c54 <___vfprintf_internal_r+0x8a0>
   4041c:	b0800417 	ldw	r2,16(r22)
   40420:	10020c26 	beq	r2,zero,40c54 <___vfprintf_internal_r+0x8a0>
   40424:	b200030b 	ldhu	r8,12(r22)
   40428:	00800284 	movi	r2,10
   4042c:	40c0068c 	andi	r3,r8,26
   40430:	18802f1e 	bne	r3,r2,404f0 <___vfprintf_internal_r+0x13c>
   40434:	b080038f 	ldh	r2,14(r22)
   40438:	10002d16 	blt	r2,zero,404f0 <___vfprintf_internal_r+0x13c>
   4043c:	b240038b 	ldhu	r9,14(r22)
   40440:	b2800717 	ldw	r10,28(r22)
   40444:	b2c00917 	ldw	r11,36(r22)
   40448:	d9014f17 	ldw	r4,1340(sp)
   4044c:	dc402904 	addi	r17,sp,164
   40450:	d8804004 	addi	r2,sp,256
   40454:	00c10004 	movi	r3,1024
   40458:	423fff4c 	andi	r8,r8,65533
   4045c:	800d883a 	mov	r6,r16
   40460:	880b883a 	mov	r5,r17
   40464:	da002c0d 	sth	r8,176(sp)
   40468:	da402c8d 	sth	r9,178(sp)
   4046c:	da803015 	stw	r10,192(sp)
   40470:	dac03215 	stw	r11,200(sp)
   40474:	d8802d15 	stw	r2,180(sp)
   40478:	d8c02e15 	stw	r3,184(sp)
   4047c:	d8802915 	stw	r2,164(sp)
   40480:	d8c02b15 	stw	r3,172(sp)
   40484:	d8002f15 	stw	zero,188(sp)
   40488:	00403b40 	call	403b4 <___vfprintf_internal_r>
   4048c:	d8814b15 	stw	r2,1324(sp)
   40490:	10000416 	blt	r2,zero,404a4 <___vfprintf_internal_r+0xf0>
   40494:	d9014f17 	ldw	r4,1340(sp)
   40498:	880b883a 	mov	r5,r17
   4049c:	00453580 	call	45358 <_fflush_r>
   404a0:	1002321e 	bne	r2,zero,40d6c <___vfprintf_internal_r+0x9b8>
   404a4:	d8802c0b 	ldhu	r2,176(sp)
   404a8:	1080100c 	andi	r2,r2,64
   404ac:	10000326 	beq	r2,zero,404bc <___vfprintf_internal_r+0x108>
   404b0:	b080030b 	ldhu	r2,12(r22)
   404b4:	10801014 	ori	r2,r2,64
   404b8:	b080030d 	sth	r2,12(r22)
   404bc:	d8814b17 	ldw	r2,1324(sp)
   404c0:	dfc15b17 	ldw	ra,1388(sp)
   404c4:	df015a17 	ldw	fp,1384(sp)
   404c8:	ddc15917 	ldw	r23,1380(sp)
   404cc:	dd815817 	ldw	r22,1376(sp)
   404d0:	dd415717 	ldw	r21,1372(sp)
   404d4:	dd015617 	ldw	r20,1368(sp)
   404d8:	dcc15517 	ldw	r19,1364(sp)
   404dc:	dc815417 	ldw	r18,1360(sp)
   404e0:	dc415317 	ldw	r17,1356(sp)
   404e4:	dc015217 	ldw	r16,1352(sp)
   404e8:	dec15c04 	addi	sp,sp,1392
   404ec:	f800283a 	ret
   404f0:	0005883a 	mov	r2,zero
   404f4:	0007883a 	mov	r3,zero
   404f8:	dd401904 	addi	r21,sp,100
   404fc:	d8814215 	stw	r2,1288(sp)
   40500:	802f883a 	mov	r23,r16
   40504:	d8c14315 	stw	r3,1292(sp)
   40508:	d8014b15 	stw	zero,1324(sp)
   4050c:	d8014815 	stw	zero,1312(sp)
   40510:	d8014415 	stw	zero,1296(sp)
   40514:	d8014715 	stw	zero,1308(sp)
   40518:	dd400c15 	stw	r21,48(sp)
   4051c:	d8000e15 	stw	zero,56(sp)
   40520:	d8000d15 	stw	zero,52(sp)
   40524:	b8800007 	ldb	r2,0(r23)
   40528:	10001926 	beq	r2,zero,40590 <___vfprintf_internal_r+0x1dc>
   4052c:	00c00944 	movi	r3,37
   40530:	10c01726 	beq	r2,r3,40590 <___vfprintf_internal_r+0x1dc>
   40534:	b821883a 	mov	r16,r23
   40538:	00000106 	br	40540 <___vfprintf_internal_r+0x18c>
   4053c:	10c00326 	beq	r2,r3,4054c <___vfprintf_internal_r+0x198>
   40540:	84000044 	addi	r16,r16,1
   40544:	80800007 	ldb	r2,0(r16)
   40548:	103ffc1e 	bne	r2,zero,4053c <___vfprintf_internal_r+0x188>
   4054c:	85e7c83a 	sub	r19,r16,r23
   40550:	98000e26 	beq	r19,zero,4058c <___vfprintf_internal_r+0x1d8>
   40554:	dc800e17 	ldw	r18,56(sp)
   40558:	dc400d17 	ldw	r17,52(sp)
   4055c:	008001c4 	movi	r2,7
   40560:	94e5883a 	add	r18,r18,r19
   40564:	8c400044 	addi	r17,r17,1
   40568:	adc00015 	stw	r23,0(r21)
   4056c:	dc800e15 	stw	r18,56(sp)
   40570:	acc00115 	stw	r19,4(r21)
   40574:	dc400d15 	stw	r17,52(sp)
   40578:	14428b16 	blt	r2,r17,40fa8 <___vfprintf_internal_r+0xbf4>
   4057c:	ad400204 	addi	r21,r21,8
   40580:	d9014b17 	ldw	r4,1324(sp)
   40584:	24c9883a 	add	r4,r4,r19
   40588:	d9014b15 	stw	r4,1324(sp)
   4058c:	802f883a 	mov	r23,r16
   40590:	b8800007 	ldb	r2,0(r23)
   40594:	10013c26 	beq	r2,zero,40a88 <___vfprintf_internal_r+0x6d4>
   40598:	bdc00044 	addi	r23,r23,1
   4059c:	d8000405 	stb	zero,16(sp)
   405a0:	b8c00007 	ldb	r3,0(r23)
   405a4:	04ffffc4 	movi	r19,-1
   405a8:	d8014c15 	stw	zero,1328(sp)
   405ac:	d8014a15 	stw	zero,1320(sp)
   405b0:	d8c14d15 	stw	r3,1332(sp)
   405b4:	bdc00044 	addi	r23,r23,1
   405b8:	d9414d17 	ldw	r5,1332(sp)
   405bc:	00801604 	movi	r2,88
   405c0:	28fff804 	addi	r3,r5,-32
   405c4:	10c06036 	bltu	r2,r3,40748 <___vfprintf_internal_r+0x394>
   405c8:	18c5883a 	add	r2,r3,r3
   405cc:	1085883a 	add	r2,r2,r2
   405d0:	00c00134 	movhi	r3,4
   405d4:	18c17904 	addi	r3,r3,1508
   405d8:	10c5883a 	add	r2,r2,r3
   405dc:	11000017 	ldw	r4,0(r2)
   405e0:	2000683a 	jmp	r4
   405e4:	00041558 	cmpnei	zero,zero,4181
   405e8:	00040748 	cmpgei	zero,zero,4125
   405ec:	00040748 	cmpgei	zero,zero,4125
   405f0:	00041544 	movi	zero,4181
   405f4:	00040748 	cmpgei	zero,zero,4125
   405f8:	00040748 	cmpgei	zero,zero,4125
   405fc:	00040748 	cmpgei	zero,zero,4125
   40600:	00040748 	cmpgei	zero,zero,4125
   40604:	00040748 	cmpgei	zero,zero,4125
   40608:	00040748 	cmpgei	zero,zero,4125
   4060c:	00041324 	muli	zero,zero,4172
   40610:	00041534 	movhi	zero,4180
   40614:	00040748 	cmpgei	zero,zero,4125
   40618:	0004133c 	xorhi	zero,zero,4172
   4061c:	000415dc 	xori	zero,zero,4183
   40620:	00040748 	cmpgei	zero,zero,4125
   40624:	000415c8 	cmpgei	zero,zero,4183
   40628:	00041584 	movi	zero,4182
   4062c:	00041584 	movi	zero,4182
   40630:	00041584 	movi	zero,4182
   40634:	00041584 	movi	zero,4182
   40638:	00041584 	movi	zero,4182
   4063c:	00041584 	movi	zero,4182
   40640:	00041584 	movi	zero,4182
   40644:	00041584 	movi	zero,4182
   40648:	00041584 	movi	zero,4182
   4064c:	00040748 	cmpgei	zero,zero,4125
   40650:	00040748 	cmpgei	zero,zero,4125
   40654:	00040748 	cmpgei	zero,zero,4125
   40658:	00040748 	cmpgei	zero,zero,4125
   4065c:	00040748 	cmpgei	zero,zero,4125
   40660:	00040748 	cmpgei	zero,zero,4125
   40664:	00040748 	cmpgei	zero,zero,4125
   40668:	00040748 	cmpgei	zero,zero,4125
   4066c:	00040748 	cmpgei	zero,zero,4125
   40670:	00040748 	cmpgei	zero,zero,4125
   40674:	00040da0 	cmpeqi	zero,zero,4150
   40678:	0004140c 	andi	zero,zero,4176
   4067c:	00040748 	cmpgei	zero,zero,4125
   40680:	0004140c 	andi	zero,zero,4176
   40684:	00040748 	cmpgei	zero,zero,4125
   40688:	00040748 	cmpgei	zero,zero,4125
   4068c:	00040748 	cmpgei	zero,zero,4125
   40690:	00040748 	cmpgei	zero,zero,4125
   40694:	00041570 	cmpltui	zero,zero,4181
   40698:	00040748 	cmpgei	zero,zero,4125
   4069c:	00040748 	cmpgei	zero,zero,4125
   406a0:	00040e54 	movui	zero,4153
   406a4:	00040748 	cmpgei	zero,zero,4125
   406a8:	00040748 	cmpgei	zero,zero,4125
   406ac:	00040748 	cmpgei	zero,zero,4125
   406b0:	00040748 	cmpgei	zero,zero,4125
   406b4:	00040748 	cmpgei	zero,zero,4125
   406b8:	00040ea0 	cmpeqi	zero,zero,4154
   406bc:	00040748 	cmpgei	zero,zero,4125
   406c0:	00040748 	cmpgei	zero,zero,4125
   406c4:	000414c0 	call	414c <__alt_mem_onchip_mem-0x3beb4>
   406c8:	00040748 	cmpgei	zero,zero,4125
   406cc:	00040748 	cmpgei	zero,zero,4125
   406d0:	00040748 	cmpgei	zero,zero,4125
   406d4:	00040748 	cmpgei	zero,zero,4125
   406d8:	00040748 	cmpgei	zero,zero,4125
   406dc:	00040748 	cmpgei	zero,zero,4125
   406e0:	00040748 	cmpgei	zero,zero,4125
   406e4:	00040748 	cmpgei	zero,zero,4125
   406e8:	00040748 	cmpgei	zero,zero,4125
   406ec:	00040748 	cmpgei	zero,zero,4125
   406f0:	00041494 	movui	zero,4178
   406f4:	00040dac 	andhi	zero,zero,4150
   406f8:	0004140c 	andi	zero,zero,4176
   406fc:	0004140c 	andi	zero,zero,4176
   40700:	0004140c 	andi	zero,zero,4176
   40704:	000413f8 	rdprs	zero,zero,4175
   40708:	00040dac 	andhi	zero,zero,4150
   4070c:	00040748 	cmpgei	zero,zero,4125
   40710:	00040748 	cmpgei	zero,zero,4125
   40714:	00041380 	call	4138 <__alt_mem_onchip_mem-0x3bec8>
   40718:	00040748 	cmpgei	zero,zero,4125
   4071c:	00041350 	cmplti	zero,zero,4173
   40720:	00040e60 	cmpeqi	zero,zero,4153
   40724:	000413b0 	cmpltui	zero,zero,4174
   40728:	0004139c 	xori	zero,zero,4174
   4072c:	00040748 	cmpgei	zero,zero,4125
   40730:	00041644 	movi	zero,4185
   40734:	00040748 	cmpgei	zero,zero,4125
   40738:	00040eac 	andhi	zero,zero,4154
   4073c:	00040748 	cmpgei	zero,zero,4125
   40740:	00040748 	cmpgei	zero,zero,4125
   40744:	00041524 	muli	zero,zero,4180
   40748:	d9014d17 	ldw	r4,1332(sp)
   4074c:	2000ce26 	beq	r4,zero,40a88 <___vfprintf_internal_r+0x6d4>
   40750:	01400044 	movi	r5,1
   40754:	d9800f04 	addi	r6,sp,60
   40758:	d9c14015 	stw	r7,1280(sp)
   4075c:	d9414515 	stw	r5,1300(sp)
   40760:	d9814115 	stw	r6,1284(sp)
   40764:	280f883a 	mov	r7,r5
   40768:	d9000f05 	stb	r4,60(sp)
   4076c:	d8000405 	stb	zero,16(sp)
   40770:	d8014615 	stw	zero,1304(sp)
   40774:	d8c14c17 	ldw	r3,1328(sp)
   40778:	1880008c 	andi	r2,r3,2
   4077c:	1005003a 	cmpeq	r2,r2,zero
   40780:	d8815015 	stw	r2,1344(sp)
   40784:	1000031e 	bne	r2,zero,40794 <___vfprintf_internal_r+0x3e0>
   40788:	d9014517 	ldw	r4,1300(sp)
   4078c:	21000084 	addi	r4,r4,2
   40790:	d9014515 	stw	r4,1300(sp)
   40794:	d9414c17 	ldw	r5,1328(sp)
   40798:	2940210c 	andi	r5,r5,132
   4079c:	d9414e15 	stw	r5,1336(sp)
   407a0:	28002d1e 	bne	r5,zero,40858 <___vfprintf_internal_r+0x4a4>
   407a4:	d9814a17 	ldw	r6,1320(sp)
   407a8:	d8814517 	ldw	r2,1300(sp)
   407ac:	30a1c83a 	sub	r16,r6,r2
   407b0:	0400290e 	bge	zero,r16,40858 <___vfprintf_internal_r+0x4a4>
   407b4:	00800404 	movi	r2,16
   407b8:	14045e0e 	bge	r2,r16,41934 <___vfprintf_internal_r+0x1580>
   407bc:	dc800e17 	ldw	r18,56(sp)
   407c0:	dc400d17 	ldw	r17,52(sp)
   407c4:	1027883a 	mov	r19,r2
   407c8:	07000174 	movhi	fp,5
   407cc:	e707ab84 	addi	fp,fp,7854
   407d0:	050001c4 	movi	r20,7
   407d4:	00000306 	br	407e4 <___vfprintf_internal_r+0x430>
   407d8:	843ffc04 	addi	r16,r16,-16
   407dc:	ad400204 	addi	r21,r21,8
   407e0:	9c00130e 	bge	r19,r16,40830 <___vfprintf_internal_r+0x47c>
   407e4:	94800404 	addi	r18,r18,16
   407e8:	8c400044 	addi	r17,r17,1
   407ec:	af000015 	stw	fp,0(r21)
   407f0:	acc00115 	stw	r19,4(r21)
   407f4:	dc800e15 	stw	r18,56(sp)
   407f8:	dc400d15 	stw	r17,52(sp)
   407fc:	a47ff60e 	bge	r20,r17,407d8 <___vfprintf_internal_r+0x424>
   40800:	d9014f17 	ldw	r4,1340(sp)
   40804:	b00b883a 	mov	r5,r22
   40808:	d9800c04 	addi	r6,sp,48
   4080c:	d9c15115 	stw	r7,1348(sp)
   40810:	004035c0 	call	4035c <__sprint_r>
   40814:	d9c15117 	ldw	r7,1348(sp)
   40818:	10009e1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   4081c:	843ffc04 	addi	r16,r16,-16
   40820:	dc800e17 	ldw	r18,56(sp)
   40824:	dc400d17 	ldw	r17,52(sp)
   40828:	dd401904 	addi	r21,sp,100
   4082c:	9c3fed16 	blt	r19,r16,407e4 <___vfprintf_internal_r+0x430>
   40830:	9425883a 	add	r18,r18,r16
   40834:	8c400044 	addi	r17,r17,1
   40838:	008001c4 	movi	r2,7
   4083c:	af000015 	stw	fp,0(r21)
   40840:	ac000115 	stw	r16,4(r21)
   40844:	dc800e15 	stw	r18,56(sp)
   40848:	dc400d15 	stw	r17,52(sp)
   4084c:	1441f516 	blt	r2,r17,41024 <___vfprintf_internal_r+0xc70>
   40850:	ad400204 	addi	r21,r21,8
   40854:	00000206 	br	40860 <___vfprintf_internal_r+0x4ac>
   40858:	dc800e17 	ldw	r18,56(sp)
   4085c:	dc400d17 	ldw	r17,52(sp)
   40860:	d8800407 	ldb	r2,16(sp)
   40864:	10000b26 	beq	r2,zero,40894 <___vfprintf_internal_r+0x4e0>
   40868:	00800044 	movi	r2,1
   4086c:	94800044 	addi	r18,r18,1
   40870:	8c400044 	addi	r17,r17,1
   40874:	a8800115 	stw	r2,4(r21)
   40878:	d8c00404 	addi	r3,sp,16
   4087c:	008001c4 	movi	r2,7
   40880:	a8c00015 	stw	r3,0(r21)
   40884:	dc800e15 	stw	r18,56(sp)
   40888:	dc400d15 	stw	r17,52(sp)
   4088c:	1441da16 	blt	r2,r17,40ff8 <___vfprintf_internal_r+0xc44>
   40890:	ad400204 	addi	r21,r21,8
   40894:	d9015017 	ldw	r4,1344(sp)
   40898:	20000b1e 	bne	r4,zero,408c8 <___vfprintf_internal_r+0x514>
   4089c:	d8800444 	addi	r2,sp,17
   408a0:	94800084 	addi	r18,r18,2
   408a4:	8c400044 	addi	r17,r17,1
   408a8:	a8800015 	stw	r2,0(r21)
   408ac:	00c00084 	movi	r3,2
   408b0:	008001c4 	movi	r2,7
   408b4:	a8c00115 	stw	r3,4(r21)
   408b8:	dc800e15 	stw	r18,56(sp)
   408bc:	dc400d15 	stw	r17,52(sp)
   408c0:	1441c216 	blt	r2,r17,40fcc <___vfprintf_internal_r+0xc18>
   408c4:	ad400204 	addi	r21,r21,8
   408c8:	d9414e17 	ldw	r5,1336(sp)
   408cc:	00802004 	movi	r2,128
   408d0:	2880b126 	beq	r5,r2,40b98 <___vfprintf_internal_r+0x7e4>
   408d4:	d8c14617 	ldw	r3,1304(sp)
   408d8:	19e1c83a 	sub	r16,r3,r7
   408dc:	0400260e 	bge	zero,r16,40978 <___vfprintf_internal_r+0x5c4>
   408e0:	00800404 	movi	r2,16
   408e4:	1403cf0e 	bge	r2,r16,41824 <___vfprintf_internal_r+0x1470>
   408e8:	1027883a 	mov	r19,r2
   408ec:	07000174 	movhi	fp,5
   408f0:	e707a784 	addi	fp,fp,7838
   408f4:	050001c4 	movi	r20,7
   408f8:	00000306 	br	40908 <___vfprintf_internal_r+0x554>
   408fc:	843ffc04 	addi	r16,r16,-16
   40900:	ad400204 	addi	r21,r21,8
   40904:	9c00130e 	bge	r19,r16,40954 <___vfprintf_internal_r+0x5a0>
   40908:	94800404 	addi	r18,r18,16
   4090c:	8c400044 	addi	r17,r17,1
   40910:	af000015 	stw	fp,0(r21)
   40914:	acc00115 	stw	r19,4(r21)
   40918:	dc800e15 	stw	r18,56(sp)
   4091c:	dc400d15 	stw	r17,52(sp)
   40920:	a47ff60e 	bge	r20,r17,408fc <___vfprintf_internal_r+0x548>
   40924:	d9014f17 	ldw	r4,1340(sp)
   40928:	b00b883a 	mov	r5,r22
   4092c:	d9800c04 	addi	r6,sp,48
   40930:	d9c15115 	stw	r7,1348(sp)
   40934:	004035c0 	call	4035c <__sprint_r>
   40938:	d9c15117 	ldw	r7,1348(sp)
   4093c:	1000551e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40940:	843ffc04 	addi	r16,r16,-16
   40944:	dc800e17 	ldw	r18,56(sp)
   40948:	dc400d17 	ldw	r17,52(sp)
   4094c:	dd401904 	addi	r21,sp,100
   40950:	9c3fed16 	blt	r19,r16,40908 <___vfprintf_internal_r+0x554>
   40954:	9425883a 	add	r18,r18,r16
   40958:	8c400044 	addi	r17,r17,1
   4095c:	008001c4 	movi	r2,7
   40960:	af000015 	stw	fp,0(r21)
   40964:	ac000115 	stw	r16,4(r21)
   40968:	dc800e15 	stw	r18,56(sp)
   4096c:	dc400d15 	stw	r17,52(sp)
   40970:	14418216 	blt	r2,r17,40f7c <___vfprintf_internal_r+0xbc8>
   40974:	ad400204 	addi	r21,r21,8
   40978:	d9014c17 	ldw	r4,1328(sp)
   4097c:	2080400c 	andi	r2,r4,256
   40980:	10004a1e 	bne	r2,zero,40aac <___vfprintf_internal_r+0x6f8>
   40984:	d9414117 	ldw	r5,1284(sp)
   40988:	91e5883a 	add	r18,r18,r7
   4098c:	8c400044 	addi	r17,r17,1
   40990:	008001c4 	movi	r2,7
   40994:	a9400015 	stw	r5,0(r21)
   40998:	a9c00115 	stw	r7,4(r21)
   4099c:	dc800e15 	stw	r18,56(sp)
   409a0:	dc400d15 	stw	r17,52(sp)
   409a4:	14416716 	blt	r2,r17,40f44 <___vfprintf_internal_r+0xb90>
   409a8:	a8c00204 	addi	r3,r21,8
   409ac:	d9814c17 	ldw	r6,1328(sp)
   409b0:	3080010c 	andi	r2,r6,4
   409b4:	10002826 	beq	r2,zero,40a58 <___vfprintf_internal_r+0x6a4>
   409b8:	d8814a17 	ldw	r2,1320(sp)
   409bc:	d9014517 	ldw	r4,1300(sp)
   409c0:	1121c83a 	sub	r16,r2,r4
   409c4:	0400240e 	bge	zero,r16,40a58 <___vfprintf_internal_r+0x6a4>
   409c8:	00800404 	movi	r2,16
   409cc:	1404550e 	bge	r2,r16,41b24 <___vfprintf_internal_r+0x1770>
   409d0:	dc400d17 	ldw	r17,52(sp)
   409d4:	1027883a 	mov	r19,r2
   409d8:	07000174 	movhi	fp,5
   409dc:	e707ab84 	addi	fp,fp,7854
   409e0:	050001c4 	movi	r20,7
   409e4:	00000306 	br	409f4 <___vfprintf_internal_r+0x640>
   409e8:	843ffc04 	addi	r16,r16,-16
   409ec:	18c00204 	addi	r3,r3,8
   409f0:	9c00110e 	bge	r19,r16,40a38 <___vfprintf_internal_r+0x684>
   409f4:	94800404 	addi	r18,r18,16
   409f8:	8c400044 	addi	r17,r17,1
   409fc:	1f000015 	stw	fp,0(r3)
   40a00:	1cc00115 	stw	r19,4(r3)
   40a04:	dc800e15 	stw	r18,56(sp)
   40a08:	dc400d15 	stw	r17,52(sp)
   40a0c:	a47ff60e 	bge	r20,r17,409e8 <___vfprintf_internal_r+0x634>
   40a10:	d9014f17 	ldw	r4,1340(sp)
   40a14:	b00b883a 	mov	r5,r22
   40a18:	d9800c04 	addi	r6,sp,48
   40a1c:	004035c0 	call	4035c <__sprint_r>
   40a20:	10001c1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40a24:	843ffc04 	addi	r16,r16,-16
   40a28:	dc800e17 	ldw	r18,56(sp)
   40a2c:	dc400d17 	ldw	r17,52(sp)
   40a30:	d8c01904 	addi	r3,sp,100
   40a34:	9c3fef16 	blt	r19,r16,409f4 <___vfprintf_internal_r+0x640>
   40a38:	9425883a 	add	r18,r18,r16
   40a3c:	8c400044 	addi	r17,r17,1
   40a40:	008001c4 	movi	r2,7
   40a44:	1f000015 	stw	fp,0(r3)
   40a48:	1c000115 	stw	r16,4(r3)
   40a4c:	dc800e15 	stw	r18,56(sp)
   40a50:	dc400d15 	stw	r17,52(sp)
   40a54:	1440cb16 	blt	r2,r17,40d84 <___vfprintf_internal_r+0x9d0>
   40a58:	d8814a17 	ldw	r2,1320(sp)
   40a5c:	d9414517 	ldw	r5,1300(sp)
   40a60:	1140010e 	bge	r2,r5,40a68 <___vfprintf_internal_r+0x6b4>
   40a64:	2805883a 	mov	r2,r5
   40a68:	d9814b17 	ldw	r6,1324(sp)
   40a6c:	308d883a 	add	r6,r6,r2
   40a70:	d9814b15 	stw	r6,1324(sp)
   40a74:	90013b1e 	bne	r18,zero,40f64 <___vfprintf_internal_r+0xbb0>
   40a78:	d9c14017 	ldw	r7,1280(sp)
   40a7c:	dd401904 	addi	r21,sp,100
   40a80:	d8000d15 	stw	zero,52(sp)
   40a84:	003ea706 	br	40524 <___vfprintf_internal_r+0x170>
   40a88:	d8800e17 	ldw	r2,56(sp)
   40a8c:	1005451e 	bne	r2,zero,41fa4 <___vfprintf_internal_r+0x1bf0>
   40a90:	d8000d15 	stw	zero,52(sp)
   40a94:	b080030b 	ldhu	r2,12(r22)
   40a98:	1080100c 	andi	r2,r2,64
   40a9c:	103e8726 	beq	r2,zero,404bc <___vfprintf_internal_r+0x108>
   40aa0:	00bfffc4 	movi	r2,-1
   40aa4:	d8814b15 	stw	r2,1324(sp)
   40aa8:	003e8406 	br	404bc <___vfprintf_internal_r+0x108>
   40aac:	d9814d17 	ldw	r6,1332(sp)
   40ab0:	00801944 	movi	r2,101
   40ab4:	11806e16 	blt	r2,r6,40c70 <___vfprintf_internal_r+0x8bc>
   40ab8:	d9414717 	ldw	r5,1308(sp)
   40abc:	00c00044 	movi	r3,1
   40ac0:	1943490e 	bge	r3,r5,417e8 <___vfprintf_internal_r+0x1434>
   40ac4:	d8814117 	ldw	r2,1284(sp)
   40ac8:	94800044 	addi	r18,r18,1
   40acc:	8c400044 	addi	r17,r17,1
   40ad0:	a8800015 	stw	r2,0(r21)
   40ad4:	008001c4 	movi	r2,7
   40ad8:	a8c00115 	stw	r3,4(r21)
   40adc:	dc800e15 	stw	r18,56(sp)
   40ae0:	dc400d15 	stw	r17,52(sp)
   40ae4:	1441ca16 	blt	r2,r17,41210 <___vfprintf_internal_r+0xe5c>
   40ae8:	a8c00204 	addi	r3,r21,8
   40aec:	d9014917 	ldw	r4,1316(sp)
   40af0:	00800044 	movi	r2,1
   40af4:	94800044 	addi	r18,r18,1
   40af8:	8c400044 	addi	r17,r17,1
   40afc:	18800115 	stw	r2,4(r3)
   40b00:	008001c4 	movi	r2,7
   40b04:	19000015 	stw	r4,0(r3)
   40b08:	dc800e15 	stw	r18,56(sp)
   40b0c:	dc400d15 	stw	r17,52(sp)
   40b10:	1441b616 	blt	r2,r17,411ec <___vfprintf_internal_r+0xe38>
   40b14:	1cc00204 	addi	r19,r3,8
   40b18:	d9014217 	ldw	r4,1288(sp)
   40b1c:	d9414317 	ldw	r5,1292(sp)
   40b20:	000d883a 	mov	r6,zero
   40b24:	000f883a 	mov	r7,zero
   40b28:	004e11c0 	call	4e11c <__nedf2>
   40b2c:	10017426 	beq	r2,zero,41100 <___vfprintf_internal_r+0xd4c>
   40b30:	d9414717 	ldw	r5,1308(sp)
   40b34:	d9814117 	ldw	r6,1284(sp)
   40b38:	8c400044 	addi	r17,r17,1
   40b3c:	2c85883a 	add	r2,r5,r18
   40b40:	14bfffc4 	addi	r18,r2,-1
   40b44:	28bfffc4 	addi	r2,r5,-1
   40b48:	30c00044 	addi	r3,r6,1
   40b4c:	98800115 	stw	r2,4(r19)
   40b50:	008001c4 	movi	r2,7
   40b54:	98c00015 	stw	r3,0(r19)
   40b58:	dc800e15 	stw	r18,56(sp)
   40b5c:	dc400d15 	stw	r17,52(sp)
   40b60:	14418e16 	blt	r2,r17,4119c <___vfprintf_internal_r+0xde8>
   40b64:	9cc00204 	addi	r19,r19,8
   40b68:	d9414817 	ldw	r5,1312(sp)
   40b6c:	d8800804 	addi	r2,sp,32
   40b70:	8c400044 	addi	r17,r17,1
   40b74:	9165883a 	add	r18,r18,r5
   40b78:	98800015 	stw	r2,0(r19)
   40b7c:	008001c4 	movi	r2,7
   40b80:	99400115 	stw	r5,4(r19)
   40b84:	dc800e15 	stw	r18,56(sp)
   40b88:	dc400d15 	stw	r17,52(sp)
   40b8c:	1440ed16 	blt	r2,r17,40f44 <___vfprintf_internal_r+0xb90>
   40b90:	98c00204 	addi	r3,r19,8
   40b94:	003f8506 	br	409ac <___vfprintf_internal_r+0x5f8>
   40b98:	d9814a17 	ldw	r6,1320(sp)
   40b9c:	d8814517 	ldw	r2,1300(sp)
   40ba0:	30a1c83a 	sub	r16,r6,r2
   40ba4:	043f4b0e 	bge	zero,r16,408d4 <___vfprintf_internal_r+0x520>
   40ba8:	00800404 	movi	r2,16
   40bac:	14043a0e 	bge	r2,r16,41c98 <___vfprintf_internal_r+0x18e4>
   40bb0:	1027883a 	mov	r19,r2
   40bb4:	07000174 	movhi	fp,5
   40bb8:	e707a784 	addi	fp,fp,7838
   40bbc:	050001c4 	movi	r20,7
   40bc0:	00000306 	br	40bd0 <___vfprintf_internal_r+0x81c>
   40bc4:	843ffc04 	addi	r16,r16,-16
   40bc8:	ad400204 	addi	r21,r21,8
   40bcc:	9c00130e 	bge	r19,r16,40c1c <___vfprintf_internal_r+0x868>
   40bd0:	94800404 	addi	r18,r18,16
   40bd4:	8c400044 	addi	r17,r17,1
   40bd8:	af000015 	stw	fp,0(r21)
   40bdc:	acc00115 	stw	r19,4(r21)
   40be0:	dc800e15 	stw	r18,56(sp)
   40be4:	dc400d15 	stw	r17,52(sp)
   40be8:	a47ff60e 	bge	r20,r17,40bc4 <___vfprintf_internal_r+0x810>
   40bec:	d9014f17 	ldw	r4,1340(sp)
   40bf0:	b00b883a 	mov	r5,r22
   40bf4:	d9800c04 	addi	r6,sp,48
   40bf8:	d9c15115 	stw	r7,1348(sp)
   40bfc:	004035c0 	call	4035c <__sprint_r>
   40c00:	d9c15117 	ldw	r7,1348(sp)
   40c04:	103fa31e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40c08:	843ffc04 	addi	r16,r16,-16
   40c0c:	dc800e17 	ldw	r18,56(sp)
   40c10:	dc400d17 	ldw	r17,52(sp)
   40c14:	dd401904 	addi	r21,sp,100
   40c18:	9c3fed16 	blt	r19,r16,40bd0 <___vfprintf_internal_r+0x81c>
   40c1c:	9425883a 	add	r18,r18,r16
   40c20:	8c400044 	addi	r17,r17,1
   40c24:	008001c4 	movi	r2,7
   40c28:	af000015 	stw	fp,0(r21)
   40c2c:	ac000115 	stw	r16,4(r21)
   40c30:	dc800e15 	stw	r18,56(sp)
   40c34:	dc400d15 	stw	r17,52(sp)
   40c38:	14416116 	blt	r2,r17,411c0 <___vfprintf_internal_r+0xe0c>
   40c3c:	ad400204 	addi	r21,r21,8
   40c40:	003f2406 	br	408d4 <___vfprintf_internal_r+0x520>
   40c44:	d9014f17 	ldw	r4,1340(sp)
   40c48:	00455f00 	call	455f0 <__sinit>
   40c4c:	d9c15117 	ldw	r7,1348(sp)
   40c50:	003def06 	br	40410 <___vfprintf_internal_r+0x5c>
   40c54:	d9014f17 	ldw	r4,1340(sp)
   40c58:	b00b883a 	mov	r5,r22
   40c5c:	d9c15115 	stw	r7,1348(sp)
   40c60:	0043a240 	call	43a24 <__swsetup_r>
   40c64:	d9c15117 	ldw	r7,1348(sp)
   40c68:	103dee26 	beq	r2,zero,40424 <___vfprintf_internal_r+0x70>
   40c6c:	003f8c06 	br	40aa0 <___vfprintf_internal_r+0x6ec>
   40c70:	d9014217 	ldw	r4,1288(sp)
   40c74:	d9414317 	ldw	r5,1292(sp)
   40c78:	000d883a 	mov	r6,zero
   40c7c:	000f883a 	mov	r7,zero
   40c80:	004e0940 	call	4e094 <__eqdf2>
   40c84:	1000f21e 	bne	r2,zero,41050 <___vfprintf_internal_r+0xc9c>
   40c88:	00800174 	movhi	r2,5
   40c8c:	1087a704 	addi	r2,r2,7836
   40c90:	94800044 	addi	r18,r18,1
   40c94:	8c400044 	addi	r17,r17,1
   40c98:	a8800015 	stw	r2,0(r21)
   40c9c:	00c00044 	movi	r3,1
   40ca0:	008001c4 	movi	r2,7
   40ca4:	a8c00115 	stw	r3,4(r21)
   40ca8:	dc800e15 	stw	r18,56(sp)
   40cac:	dc400d15 	stw	r17,52(sp)
   40cb0:	14430016 	blt	r2,r17,418b4 <___vfprintf_internal_r+0x1500>
   40cb4:	a8c00204 	addi	r3,r21,8
   40cb8:	d8800517 	ldw	r2,20(sp)
   40cbc:	d9014717 	ldw	r4,1308(sp)
   40cc0:	11015c0e 	bge	r2,r4,41234 <___vfprintf_internal_r+0xe80>
   40cc4:	dc400d17 	ldw	r17,52(sp)
   40cc8:	d9814917 	ldw	r6,1316(sp)
   40ccc:	00800044 	movi	r2,1
   40cd0:	94800044 	addi	r18,r18,1
   40cd4:	8c400044 	addi	r17,r17,1
   40cd8:	18800115 	stw	r2,4(r3)
   40cdc:	008001c4 	movi	r2,7
   40ce0:	19800015 	stw	r6,0(r3)
   40ce4:	dc800e15 	stw	r18,56(sp)
   40ce8:	dc400d15 	stw	r17,52(sp)
   40cec:	14431616 	blt	r2,r17,41948 <___vfprintf_internal_r+0x1594>
   40cf0:	18c00204 	addi	r3,r3,8
   40cf4:	d8814717 	ldw	r2,1308(sp)
   40cf8:	143fffc4 	addi	r16,r2,-1
   40cfc:	043f2b0e 	bge	zero,r16,409ac <___vfprintf_internal_r+0x5f8>
   40d00:	00800404 	movi	r2,16
   40d04:	1402a80e 	bge	r2,r16,417a8 <___vfprintf_internal_r+0x13f4>
   40d08:	dc400d17 	ldw	r17,52(sp)
   40d0c:	1027883a 	mov	r19,r2
   40d10:	07000174 	movhi	fp,5
   40d14:	e707a784 	addi	fp,fp,7838
   40d18:	050001c4 	movi	r20,7
   40d1c:	00000306 	br	40d2c <___vfprintf_internal_r+0x978>
   40d20:	18c00204 	addi	r3,r3,8
   40d24:	843ffc04 	addi	r16,r16,-16
   40d28:	9c02a20e 	bge	r19,r16,417b4 <___vfprintf_internal_r+0x1400>
   40d2c:	94800404 	addi	r18,r18,16
   40d30:	8c400044 	addi	r17,r17,1
   40d34:	1f000015 	stw	fp,0(r3)
   40d38:	1cc00115 	stw	r19,4(r3)
   40d3c:	dc800e15 	stw	r18,56(sp)
   40d40:	dc400d15 	stw	r17,52(sp)
   40d44:	a47ff60e 	bge	r20,r17,40d20 <___vfprintf_internal_r+0x96c>
   40d48:	d9014f17 	ldw	r4,1340(sp)
   40d4c:	b00b883a 	mov	r5,r22
   40d50:	d9800c04 	addi	r6,sp,48
   40d54:	004035c0 	call	4035c <__sprint_r>
   40d58:	103f4e1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40d5c:	dc800e17 	ldw	r18,56(sp)
   40d60:	dc400d17 	ldw	r17,52(sp)
   40d64:	d8c01904 	addi	r3,sp,100
   40d68:	003fee06 	br	40d24 <___vfprintf_internal_r+0x970>
   40d6c:	d8802c0b 	ldhu	r2,176(sp)
   40d70:	00ffffc4 	movi	r3,-1
   40d74:	d8c14b15 	stw	r3,1324(sp)
   40d78:	1080100c 	andi	r2,r2,64
   40d7c:	103dcc1e 	bne	r2,zero,404b0 <___vfprintf_internal_r+0xfc>
   40d80:	003dce06 	br	404bc <___vfprintf_internal_r+0x108>
   40d84:	d9014f17 	ldw	r4,1340(sp)
   40d88:	b00b883a 	mov	r5,r22
   40d8c:	d9800c04 	addi	r6,sp,48
   40d90:	004035c0 	call	4035c <__sprint_r>
   40d94:	103f3f1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40d98:	dc800e17 	ldw	r18,56(sp)
   40d9c:	003f2e06 	br	40a58 <___vfprintf_internal_r+0x6a4>
   40da0:	d9414c17 	ldw	r5,1328(sp)
   40da4:	29400414 	ori	r5,r5,16
   40da8:	d9414c15 	stw	r5,1328(sp)
   40dac:	d9814c17 	ldw	r6,1328(sp)
   40db0:	3080080c 	andi	r2,r6,32
   40db4:	10014f1e 	bne	r2,zero,412f4 <___vfprintf_internal_r+0xf40>
   40db8:	d8c14c17 	ldw	r3,1328(sp)
   40dbc:	1880040c 	andi	r2,r3,16
   40dc0:	1002f01e 	bne	r2,zero,41984 <___vfprintf_internal_r+0x15d0>
   40dc4:	d9014c17 	ldw	r4,1328(sp)
   40dc8:	2080100c 	andi	r2,r4,64
   40dcc:	1002ed26 	beq	r2,zero,41984 <___vfprintf_internal_r+0x15d0>
   40dd0:	3880000f 	ldh	r2,0(r7)
   40dd4:	39c00104 	addi	r7,r7,4
   40dd8:	d9c14015 	stw	r7,1280(sp)
   40ddc:	1023d7fa 	srai	r17,r2,31
   40de0:	1021883a 	mov	r16,r2
   40de4:	88037816 	blt	r17,zero,41bc8 <___vfprintf_internal_r+0x1814>
   40de8:	01000044 	movi	r4,1
   40dec:	98000416 	blt	r19,zero,40e00 <___vfprintf_internal_r+0xa4c>
   40df0:	d8c14c17 	ldw	r3,1328(sp)
   40df4:	00bfdfc4 	movi	r2,-129
   40df8:	1886703a 	and	r3,r3,r2
   40dfc:	d8c14c15 	stw	r3,1328(sp)
   40e00:	8444b03a 	or	r2,r16,r17
   40e04:	10022c1e 	bne	r2,zero,416b8 <___vfprintf_internal_r+0x1304>
   40e08:	98022b1e 	bne	r19,zero,416b8 <___vfprintf_internal_r+0x1304>
   40e0c:	20803fcc 	andi	r2,r4,255
   40e10:	1002a126 	beq	r2,zero,41898 <___vfprintf_internal_r+0x14e4>
   40e14:	d8c01904 	addi	r3,sp,100
   40e18:	dd000f04 	addi	r20,sp,60
   40e1c:	d8c14115 	stw	r3,1284(sp)
   40e20:	d8c14117 	ldw	r3,1284(sp)
   40e24:	dcc14515 	stw	r19,1300(sp)
   40e28:	a0c5c83a 	sub	r2,r20,r3
   40e2c:	11c00a04 	addi	r7,r2,40
   40e30:	99c0010e 	bge	r19,r7,40e38 <___vfprintf_internal_r+0xa84>
   40e34:	d9c14515 	stw	r7,1300(sp)
   40e38:	dcc14615 	stw	r19,1304(sp)
   40e3c:	d8800407 	ldb	r2,16(sp)
   40e40:	103e4c26 	beq	r2,zero,40774 <___vfprintf_internal_r+0x3c0>
   40e44:	d8814517 	ldw	r2,1300(sp)
   40e48:	10800044 	addi	r2,r2,1
   40e4c:	d8814515 	stw	r2,1300(sp)
   40e50:	003e4806 	br	40774 <___vfprintf_internal_r+0x3c0>
   40e54:	d9814c17 	ldw	r6,1328(sp)
   40e58:	31800414 	ori	r6,r6,16
   40e5c:	d9814c15 	stw	r6,1328(sp)
   40e60:	d8c14c17 	ldw	r3,1328(sp)
   40e64:	1880080c 	andi	r2,r3,32
   40e68:	1001271e 	bne	r2,zero,41308 <___vfprintf_internal_r+0xf54>
   40e6c:	d9414c17 	ldw	r5,1328(sp)
   40e70:	2880040c 	andi	r2,r5,16
   40e74:	1002bc1e 	bne	r2,zero,41968 <___vfprintf_internal_r+0x15b4>
   40e78:	d9814c17 	ldw	r6,1328(sp)
   40e7c:	3080100c 	andi	r2,r6,64
   40e80:	1002b926 	beq	r2,zero,41968 <___vfprintf_internal_r+0x15b4>
   40e84:	3c00000b 	ldhu	r16,0(r7)
   40e88:	0009883a 	mov	r4,zero
   40e8c:	39c00104 	addi	r7,r7,4
   40e90:	0023883a 	mov	r17,zero
   40e94:	d9c14015 	stw	r7,1280(sp)
   40e98:	d8000405 	stb	zero,16(sp)
   40e9c:	003fd306 	br	40dec <___vfprintf_internal_r+0xa38>
   40ea0:	d9014c17 	ldw	r4,1328(sp)
   40ea4:	21000414 	ori	r4,r4,16
   40ea8:	d9014c15 	stw	r4,1328(sp)
   40eac:	d9414c17 	ldw	r5,1328(sp)
   40eb0:	2880080c 	andi	r2,r5,32
   40eb4:	1001081e 	bne	r2,zero,412d8 <___vfprintf_internal_r+0xf24>
   40eb8:	d8c14c17 	ldw	r3,1328(sp)
   40ebc:	1880040c 	andi	r2,r3,16
   40ec0:	1002b61e 	bne	r2,zero,4199c <___vfprintf_internal_r+0x15e8>
   40ec4:	d9014c17 	ldw	r4,1328(sp)
   40ec8:	2080100c 	andi	r2,r4,64
   40ecc:	1002b326 	beq	r2,zero,4199c <___vfprintf_internal_r+0x15e8>
   40ed0:	3c00000b 	ldhu	r16,0(r7)
   40ed4:	01000044 	movi	r4,1
   40ed8:	39c00104 	addi	r7,r7,4
   40edc:	0023883a 	mov	r17,zero
   40ee0:	d9c14015 	stw	r7,1280(sp)
   40ee4:	d8000405 	stb	zero,16(sp)
   40ee8:	003fc006 	br	40dec <___vfprintf_internal_r+0xa38>
   40eec:	d9014f17 	ldw	r4,1340(sp)
   40ef0:	b00b883a 	mov	r5,r22
   40ef4:	d9800c04 	addi	r6,sp,48
   40ef8:	004035c0 	call	4035c <__sprint_r>
   40efc:	103ee51e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40f00:	dc800e17 	ldw	r18,56(sp)
   40f04:	d8c01904 	addi	r3,sp,100
   40f08:	d9814c17 	ldw	r6,1328(sp)
   40f0c:	3080004c 	andi	r2,r6,1
   40f10:	1005003a 	cmpeq	r2,r2,zero
   40f14:	103ea51e 	bne	r2,zero,409ac <___vfprintf_internal_r+0x5f8>
   40f18:	00800044 	movi	r2,1
   40f1c:	dc400d17 	ldw	r17,52(sp)
   40f20:	18800115 	stw	r2,4(r3)
   40f24:	d8814917 	ldw	r2,1316(sp)
   40f28:	94800044 	addi	r18,r18,1
   40f2c:	8c400044 	addi	r17,r17,1
   40f30:	18800015 	stw	r2,0(r3)
   40f34:	008001c4 	movi	r2,7
   40f38:	dc800e15 	stw	r18,56(sp)
   40f3c:	dc400d15 	stw	r17,52(sp)
   40f40:	1442240e 	bge	r2,r17,417d4 <___vfprintf_internal_r+0x1420>
   40f44:	d9014f17 	ldw	r4,1340(sp)
   40f48:	b00b883a 	mov	r5,r22
   40f4c:	d9800c04 	addi	r6,sp,48
   40f50:	004035c0 	call	4035c <__sprint_r>
   40f54:	103ecf1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40f58:	dc800e17 	ldw	r18,56(sp)
   40f5c:	d8c01904 	addi	r3,sp,100
   40f60:	003e9206 	br	409ac <___vfprintf_internal_r+0x5f8>
   40f64:	d9014f17 	ldw	r4,1340(sp)
   40f68:	b00b883a 	mov	r5,r22
   40f6c:	d9800c04 	addi	r6,sp,48
   40f70:	004035c0 	call	4035c <__sprint_r>
   40f74:	103ec026 	beq	r2,zero,40a78 <___vfprintf_internal_r+0x6c4>
   40f78:	003ec606 	br	40a94 <___vfprintf_internal_r+0x6e0>
   40f7c:	d9014f17 	ldw	r4,1340(sp)
   40f80:	b00b883a 	mov	r5,r22
   40f84:	d9800c04 	addi	r6,sp,48
   40f88:	d9c15115 	stw	r7,1348(sp)
   40f8c:	004035c0 	call	4035c <__sprint_r>
   40f90:	d9c15117 	ldw	r7,1348(sp)
   40f94:	103ebf1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40f98:	dc800e17 	ldw	r18,56(sp)
   40f9c:	dc400d17 	ldw	r17,52(sp)
   40fa0:	dd401904 	addi	r21,sp,100
   40fa4:	003e7406 	br	40978 <___vfprintf_internal_r+0x5c4>
   40fa8:	d9014f17 	ldw	r4,1340(sp)
   40fac:	b00b883a 	mov	r5,r22
   40fb0:	d9800c04 	addi	r6,sp,48
   40fb4:	d9c15115 	stw	r7,1348(sp)
   40fb8:	004035c0 	call	4035c <__sprint_r>
   40fbc:	d9c15117 	ldw	r7,1348(sp)
   40fc0:	103eb41e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40fc4:	dd401904 	addi	r21,sp,100
   40fc8:	003d6d06 	br	40580 <___vfprintf_internal_r+0x1cc>
   40fcc:	d9014f17 	ldw	r4,1340(sp)
   40fd0:	b00b883a 	mov	r5,r22
   40fd4:	d9800c04 	addi	r6,sp,48
   40fd8:	d9c15115 	stw	r7,1348(sp)
   40fdc:	004035c0 	call	4035c <__sprint_r>
   40fe0:	d9c15117 	ldw	r7,1348(sp)
   40fe4:	103eab1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   40fe8:	dc800e17 	ldw	r18,56(sp)
   40fec:	dc400d17 	ldw	r17,52(sp)
   40ff0:	dd401904 	addi	r21,sp,100
   40ff4:	003e3406 	br	408c8 <___vfprintf_internal_r+0x514>
   40ff8:	d9014f17 	ldw	r4,1340(sp)
   40ffc:	b00b883a 	mov	r5,r22
   41000:	d9800c04 	addi	r6,sp,48
   41004:	d9c15115 	stw	r7,1348(sp)
   41008:	004035c0 	call	4035c <__sprint_r>
   4100c:	d9c15117 	ldw	r7,1348(sp)
   41010:	103ea01e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41014:	dc800e17 	ldw	r18,56(sp)
   41018:	dc400d17 	ldw	r17,52(sp)
   4101c:	dd401904 	addi	r21,sp,100
   41020:	003e1c06 	br	40894 <___vfprintf_internal_r+0x4e0>
   41024:	d9014f17 	ldw	r4,1340(sp)
   41028:	b00b883a 	mov	r5,r22
   4102c:	d9800c04 	addi	r6,sp,48
   41030:	d9c15115 	stw	r7,1348(sp)
   41034:	004035c0 	call	4035c <__sprint_r>
   41038:	d9c15117 	ldw	r7,1348(sp)
   4103c:	103e951e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41040:	dc800e17 	ldw	r18,56(sp)
   41044:	dc400d17 	ldw	r17,52(sp)
   41048:	dd401904 	addi	r21,sp,100
   4104c:	003e0406 	br	40860 <___vfprintf_internal_r+0x4ac>
   41050:	d9000517 	ldw	r4,20(sp)
   41054:	0102580e 	bge	zero,r4,419b8 <___vfprintf_internal_r+0x1604>
   41058:	d9814717 	ldw	r6,1308(sp)
   4105c:	21807a16 	blt	r4,r6,41248 <___vfprintf_internal_r+0xe94>
   41060:	d8814117 	ldw	r2,1284(sp)
   41064:	91a5883a 	add	r18,r18,r6
   41068:	8c400044 	addi	r17,r17,1
   4106c:	a8800015 	stw	r2,0(r21)
   41070:	008001c4 	movi	r2,7
   41074:	a9800115 	stw	r6,4(r21)
   41078:	dc800e15 	stw	r18,56(sp)
   4107c:	dc400d15 	stw	r17,52(sp)
   41080:	1442fc16 	blt	r2,r17,41c74 <___vfprintf_internal_r+0x18c0>
   41084:	a8c00204 	addi	r3,r21,8
   41088:	d9414717 	ldw	r5,1308(sp)
   4108c:	2161c83a 	sub	r16,r4,r5
   41090:	043f9d0e 	bge	zero,r16,40f08 <___vfprintf_internal_r+0xb54>
   41094:	00800404 	movi	r2,16
   41098:	1402190e 	bge	r2,r16,41900 <___vfprintf_internal_r+0x154c>
   4109c:	dc400d17 	ldw	r17,52(sp)
   410a0:	1027883a 	mov	r19,r2
   410a4:	07000174 	movhi	fp,5
   410a8:	e707a784 	addi	fp,fp,7838
   410ac:	050001c4 	movi	r20,7
   410b0:	00000306 	br	410c0 <___vfprintf_internal_r+0xd0c>
   410b4:	18c00204 	addi	r3,r3,8
   410b8:	843ffc04 	addi	r16,r16,-16
   410bc:	9c02130e 	bge	r19,r16,4190c <___vfprintf_internal_r+0x1558>
   410c0:	94800404 	addi	r18,r18,16
   410c4:	8c400044 	addi	r17,r17,1
   410c8:	1f000015 	stw	fp,0(r3)
   410cc:	1cc00115 	stw	r19,4(r3)
   410d0:	dc800e15 	stw	r18,56(sp)
   410d4:	dc400d15 	stw	r17,52(sp)
   410d8:	a47ff60e 	bge	r20,r17,410b4 <___vfprintf_internal_r+0xd00>
   410dc:	d9014f17 	ldw	r4,1340(sp)
   410e0:	b00b883a 	mov	r5,r22
   410e4:	d9800c04 	addi	r6,sp,48
   410e8:	004035c0 	call	4035c <__sprint_r>
   410ec:	103e691e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   410f0:	dc800e17 	ldw	r18,56(sp)
   410f4:	dc400d17 	ldw	r17,52(sp)
   410f8:	d8c01904 	addi	r3,sp,100
   410fc:	003fee06 	br	410b8 <___vfprintf_internal_r+0xd04>
   41100:	d8814717 	ldw	r2,1308(sp)
   41104:	143fffc4 	addi	r16,r2,-1
   41108:	043e970e 	bge	zero,r16,40b68 <___vfprintf_internal_r+0x7b4>
   4110c:	00800404 	movi	r2,16
   41110:	1400180e 	bge	r2,r16,41174 <___vfprintf_internal_r+0xdc0>
   41114:	1029883a 	mov	r20,r2
   41118:	07000174 	movhi	fp,5
   4111c:	e707a784 	addi	fp,fp,7838
   41120:	054001c4 	movi	r21,7
   41124:	00000306 	br	41134 <___vfprintf_internal_r+0xd80>
   41128:	9cc00204 	addi	r19,r19,8
   4112c:	843ffc04 	addi	r16,r16,-16
   41130:	a400120e 	bge	r20,r16,4117c <___vfprintf_internal_r+0xdc8>
   41134:	94800404 	addi	r18,r18,16
   41138:	8c400044 	addi	r17,r17,1
   4113c:	9f000015 	stw	fp,0(r19)
   41140:	9d000115 	stw	r20,4(r19)
   41144:	dc800e15 	stw	r18,56(sp)
   41148:	dc400d15 	stw	r17,52(sp)
   4114c:	ac7ff60e 	bge	r21,r17,41128 <___vfprintf_internal_r+0xd74>
   41150:	d9014f17 	ldw	r4,1340(sp)
   41154:	b00b883a 	mov	r5,r22
   41158:	d9800c04 	addi	r6,sp,48
   4115c:	004035c0 	call	4035c <__sprint_r>
   41160:	103e4c1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41164:	dc800e17 	ldw	r18,56(sp)
   41168:	dc400d17 	ldw	r17,52(sp)
   4116c:	dcc01904 	addi	r19,sp,100
   41170:	003fee06 	br	4112c <___vfprintf_internal_r+0xd78>
   41174:	07000174 	movhi	fp,5
   41178:	e707a784 	addi	fp,fp,7838
   4117c:	9425883a 	add	r18,r18,r16
   41180:	8c400044 	addi	r17,r17,1
   41184:	008001c4 	movi	r2,7
   41188:	9f000015 	stw	fp,0(r19)
   4118c:	9c000115 	stw	r16,4(r19)
   41190:	dc800e15 	stw	r18,56(sp)
   41194:	dc400d15 	stw	r17,52(sp)
   41198:	147e720e 	bge	r2,r17,40b64 <___vfprintf_internal_r+0x7b0>
   4119c:	d9014f17 	ldw	r4,1340(sp)
   411a0:	b00b883a 	mov	r5,r22
   411a4:	d9800c04 	addi	r6,sp,48
   411a8:	004035c0 	call	4035c <__sprint_r>
   411ac:	103e391e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   411b0:	dc800e17 	ldw	r18,56(sp)
   411b4:	dc400d17 	ldw	r17,52(sp)
   411b8:	dcc01904 	addi	r19,sp,100
   411bc:	003e6a06 	br	40b68 <___vfprintf_internal_r+0x7b4>
   411c0:	d9014f17 	ldw	r4,1340(sp)
   411c4:	b00b883a 	mov	r5,r22
   411c8:	d9800c04 	addi	r6,sp,48
   411cc:	d9c15115 	stw	r7,1348(sp)
   411d0:	004035c0 	call	4035c <__sprint_r>
   411d4:	d9c15117 	ldw	r7,1348(sp)
   411d8:	103e2e1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   411dc:	dc800e17 	ldw	r18,56(sp)
   411e0:	dc400d17 	ldw	r17,52(sp)
   411e4:	dd401904 	addi	r21,sp,100
   411e8:	003dba06 	br	408d4 <___vfprintf_internal_r+0x520>
   411ec:	d9014f17 	ldw	r4,1340(sp)
   411f0:	b00b883a 	mov	r5,r22
   411f4:	d9800c04 	addi	r6,sp,48
   411f8:	004035c0 	call	4035c <__sprint_r>
   411fc:	103e251e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41200:	dc800e17 	ldw	r18,56(sp)
   41204:	dc400d17 	ldw	r17,52(sp)
   41208:	dcc01904 	addi	r19,sp,100
   4120c:	003e4206 	br	40b18 <___vfprintf_internal_r+0x764>
   41210:	d9014f17 	ldw	r4,1340(sp)
   41214:	b00b883a 	mov	r5,r22
   41218:	d9800c04 	addi	r6,sp,48
   4121c:	004035c0 	call	4035c <__sprint_r>
   41220:	103e1c1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41224:	dc800e17 	ldw	r18,56(sp)
   41228:	dc400d17 	ldw	r17,52(sp)
   4122c:	d8c01904 	addi	r3,sp,100
   41230:	003e2e06 	br	40aec <___vfprintf_internal_r+0x738>
   41234:	d9414c17 	ldw	r5,1328(sp)
   41238:	2880004c 	andi	r2,r5,1
   4123c:	1005003a 	cmpeq	r2,r2,zero
   41240:	103dda1e 	bne	r2,zero,409ac <___vfprintf_internal_r+0x5f8>
   41244:	003e9f06 	br	40cc4 <___vfprintf_internal_r+0x910>
   41248:	d8c14117 	ldw	r3,1284(sp)
   4124c:	9125883a 	add	r18,r18,r4
   41250:	8c400044 	addi	r17,r17,1
   41254:	008001c4 	movi	r2,7
   41258:	a8c00015 	stw	r3,0(r21)
   4125c:	a9000115 	stw	r4,4(r21)
   41260:	dc800e15 	stw	r18,56(sp)
   41264:	dc400d15 	stw	r17,52(sp)
   41268:	14426c16 	blt	r2,r17,41c1c <___vfprintf_internal_r+0x1868>
   4126c:	a8c00204 	addi	r3,r21,8
   41270:	d9414917 	ldw	r5,1316(sp)
   41274:	00800044 	movi	r2,1
   41278:	94800044 	addi	r18,r18,1
   4127c:	8c400044 	addi	r17,r17,1
   41280:	18800115 	stw	r2,4(r3)
   41284:	008001c4 	movi	r2,7
   41288:	19400015 	stw	r5,0(r3)
   4128c:	dc800e15 	stw	r18,56(sp)
   41290:	dc400d15 	stw	r17,52(sp)
   41294:	2021883a 	mov	r16,r4
   41298:	14425616 	blt	r2,r17,41bf4 <___vfprintf_internal_r+0x1840>
   4129c:	19400204 	addi	r5,r3,8
   412a0:	d9814717 	ldw	r6,1308(sp)
   412a4:	8c400044 	addi	r17,r17,1
   412a8:	dc400d15 	stw	r17,52(sp)
   412ac:	3107c83a 	sub	r3,r6,r4
   412b0:	d9014117 	ldw	r4,1284(sp)
   412b4:	90e5883a 	add	r18,r18,r3
   412b8:	28c00115 	stw	r3,4(r5)
   412bc:	8105883a 	add	r2,r16,r4
   412c0:	28800015 	stw	r2,0(r5)
   412c4:	008001c4 	movi	r2,7
   412c8:	dc800e15 	stw	r18,56(sp)
   412cc:	147f1d16 	blt	r2,r17,40f44 <___vfprintf_internal_r+0xb90>
   412d0:	28c00204 	addi	r3,r5,8
   412d4:	003db506 	br	409ac <___vfprintf_internal_r+0x5f8>
   412d8:	3c000017 	ldw	r16,0(r7)
   412dc:	3c400117 	ldw	r17,4(r7)
   412e0:	39800204 	addi	r6,r7,8
   412e4:	01000044 	movi	r4,1
   412e8:	d9814015 	stw	r6,1280(sp)
   412ec:	d8000405 	stb	zero,16(sp)
   412f0:	003ebe06 	br	40dec <___vfprintf_internal_r+0xa38>
   412f4:	3c000017 	ldw	r16,0(r7)
   412f8:	3c400117 	ldw	r17,4(r7)
   412fc:	38800204 	addi	r2,r7,8
   41300:	d8814015 	stw	r2,1280(sp)
   41304:	003eb706 	br	40de4 <___vfprintf_internal_r+0xa30>
   41308:	3c000017 	ldw	r16,0(r7)
   4130c:	3c400117 	ldw	r17,4(r7)
   41310:	39000204 	addi	r4,r7,8
   41314:	d9014015 	stw	r4,1280(sp)
   41318:	0009883a 	mov	r4,zero
   4131c:	d8000405 	stb	zero,16(sp)
   41320:	003eb206 	br	40dec <___vfprintf_internal_r+0xa38>
   41324:	38c00017 	ldw	r3,0(r7)
   41328:	39c00104 	addi	r7,r7,4
   4132c:	d8c14a15 	stw	r3,1320(sp)
   41330:	1800d70e 	bge	r3,zero,41690 <___vfprintf_internal_r+0x12dc>
   41334:	00c7c83a 	sub	r3,zero,r3
   41338:	d8c14a15 	stw	r3,1320(sp)
   4133c:	d9014c17 	ldw	r4,1328(sp)
   41340:	b8c00007 	ldb	r3,0(r23)
   41344:	21000114 	ori	r4,r4,4
   41348:	d9014c15 	stw	r4,1328(sp)
   4134c:	003c9806 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41350:	d9814c17 	ldw	r6,1328(sp)
   41354:	3080080c 	andi	r2,r6,32
   41358:	1001f626 	beq	r2,zero,41b34 <___vfprintf_internal_r+0x1780>
   4135c:	d9014b17 	ldw	r4,1324(sp)
   41360:	38800017 	ldw	r2,0(r7)
   41364:	39c00104 	addi	r7,r7,4
   41368:	d9c14015 	stw	r7,1280(sp)
   4136c:	2007d7fa 	srai	r3,r4,31
   41370:	d9c14017 	ldw	r7,1280(sp)
   41374:	11000015 	stw	r4,0(r2)
   41378:	10c00115 	stw	r3,4(r2)
   4137c:	003c6906 	br	40524 <___vfprintf_internal_r+0x170>
   41380:	b8c00007 	ldb	r3,0(r23)
   41384:	00801b04 	movi	r2,108
   41388:	18825526 	beq	r3,r2,41ce0 <___vfprintf_internal_r+0x192c>
   4138c:	d9414c17 	ldw	r5,1328(sp)
   41390:	29400414 	ori	r5,r5,16
   41394:	d9414c15 	stw	r5,1328(sp)
   41398:	003c8506 	br	405b0 <___vfprintf_internal_r+0x1fc>
   4139c:	d9814c17 	ldw	r6,1328(sp)
   413a0:	b8c00007 	ldb	r3,0(r23)
   413a4:	31800814 	ori	r6,r6,32
   413a8:	d9814c15 	stw	r6,1328(sp)
   413ac:	003c8006 	br	405b0 <___vfprintf_internal_r+0x1fc>
   413b0:	d8814c17 	ldw	r2,1328(sp)
   413b4:	3c000017 	ldw	r16,0(r7)
   413b8:	00c01e04 	movi	r3,120
   413bc:	10800094 	ori	r2,r2,2
   413c0:	d8814c15 	stw	r2,1328(sp)
   413c4:	39c00104 	addi	r7,r7,4
   413c8:	01400174 	movhi	r5,5
   413cc:	29479004 	addi	r5,r5,7744
   413d0:	00800c04 	movi	r2,48
   413d4:	0023883a 	mov	r17,zero
   413d8:	01000084 	movi	r4,2
   413dc:	d9c14015 	stw	r7,1280(sp)
   413e0:	d8c14d15 	stw	r3,1332(sp)
   413e4:	d9414415 	stw	r5,1296(sp)
   413e8:	d8800445 	stb	r2,17(sp)
   413ec:	d8c00485 	stb	r3,18(sp)
   413f0:	d8000405 	stb	zero,16(sp)
   413f4:	003e7d06 	br	40dec <___vfprintf_internal_r+0xa38>
   413f8:	d8814c17 	ldw	r2,1328(sp)
   413fc:	b8c00007 	ldb	r3,0(r23)
   41400:	10801014 	ori	r2,r2,64
   41404:	d8814c15 	stw	r2,1328(sp)
   41408:	003c6906 	br	405b0 <___vfprintf_internal_r+0x1fc>
   4140c:	d9414c17 	ldw	r5,1328(sp)
   41410:	2880020c 	andi	r2,r5,8
   41414:	1001e526 	beq	r2,zero,41bac <___vfprintf_internal_r+0x17f8>
   41418:	39800017 	ldw	r6,0(r7)
   4141c:	38800204 	addi	r2,r7,8
   41420:	d8814015 	stw	r2,1280(sp)
   41424:	d9814215 	stw	r6,1288(sp)
   41428:	39c00117 	ldw	r7,4(r7)
   4142c:	d9c14315 	stw	r7,1292(sp)
   41430:	d9014217 	ldw	r4,1288(sp)
   41434:	d9414317 	ldw	r5,1292(sp)
   41438:	0048b440 	call	48b44 <__isinfd>
   4143c:	10021d26 	beq	r2,zero,41cb4 <___vfprintf_internal_r+0x1900>
   41440:	d9014217 	ldw	r4,1288(sp)
   41444:	d9414317 	ldw	r5,1292(sp)
   41448:	000d883a 	mov	r6,zero
   4144c:	000f883a 	mov	r7,zero
   41450:	004e2b40 	call	4e2b4 <__ltdf2>
   41454:	1002d016 	blt	r2,zero,41f98 <___vfprintf_internal_r+0x1be4>
   41458:	d9414d17 	ldw	r5,1332(sp)
   4145c:	008011c4 	movi	r2,71
   41460:	11421016 	blt	r2,r5,41ca4 <___vfprintf_internal_r+0x18f0>
   41464:	01800174 	movhi	r6,5
   41468:	31879504 	addi	r6,r6,7764
   4146c:	d9814115 	stw	r6,1284(sp)
   41470:	d9014c17 	ldw	r4,1328(sp)
   41474:	00c000c4 	movi	r3,3
   41478:	00bfdfc4 	movi	r2,-129
   4147c:	2088703a 	and	r4,r4,r2
   41480:	180f883a 	mov	r7,r3
   41484:	d8c14515 	stw	r3,1300(sp)
   41488:	d9014c15 	stw	r4,1328(sp)
   4148c:	d8014615 	stw	zero,1304(sp)
   41490:	003e6a06 	br	40e3c <___vfprintf_internal_r+0xa88>
   41494:	38800017 	ldw	r2,0(r7)
   41498:	00c00044 	movi	r3,1
   4149c:	39c00104 	addi	r7,r7,4
   414a0:	d9c14015 	stw	r7,1280(sp)
   414a4:	d9000f04 	addi	r4,sp,60
   414a8:	180f883a 	mov	r7,r3
   414ac:	d8c14515 	stw	r3,1300(sp)
   414b0:	d9014115 	stw	r4,1284(sp)
   414b4:	d8800f05 	stb	r2,60(sp)
   414b8:	d8000405 	stb	zero,16(sp)
   414bc:	003cac06 	br	40770 <___vfprintf_internal_r+0x3bc>
   414c0:	01400174 	movhi	r5,5
   414c4:	29479b04 	addi	r5,r5,7788
   414c8:	d9414415 	stw	r5,1296(sp)
   414cc:	d9814c17 	ldw	r6,1328(sp)
   414d0:	3080080c 	andi	r2,r6,32
   414d4:	1000ff26 	beq	r2,zero,418d4 <___vfprintf_internal_r+0x1520>
   414d8:	3c000017 	ldw	r16,0(r7)
   414dc:	3c400117 	ldw	r17,4(r7)
   414e0:	38800204 	addi	r2,r7,8
   414e4:	d8814015 	stw	r2,1280(sp)
   414e8:	d9414c17 	ldw	r5,1328(sp)
   414ec:	2880004c 	andi	r2,r5,1
   414f0:	1005003a 	cmpeq	r2,r2,zero
   414f4:	1000b91e 	bne	r2,zero,417dc <___vfprintf_internal_r+0x1428>
   414f8:	8444b03a 	or	r2,r16,r17
   414fc:	1000b726 	beq	r2,zero,417dc <___vfprintf_internal_r+0x1428>
   41500:	d9814d17 	ldw	r6,1332(sp)
   41504:	29400094 	ori	r5,r5,2
   41508:	00800c04 	movi	r2,48
   4150c:	01000084 	movi	r4,2
   41510:	d9414c15 	stw	r5,1328(sp)
   41514:	d8800445 	stb	r2,17(sp)
   41518:	d9800485 	stb	r6,18(sp)
   4151c:	d8000405 	stb	zero,16(sp)
   41520:	003e3206 	br	40dec <___vfprintf_internal_r+0xa38>
   41524:	01800174 	movhi	r6,5
   41528:	31879004 	addi	r6,r6,7744
   4152c:	d9814415 	stw	r6,1296(sp)
   41530:	003fe606 	br	414cc <___vfprintf_internal_r+0x1118>
   41534:	00800ac4 	movi	r2,43
   41538:	d8800405 	stb	r2,16(sp)
   4153c:	b8c00007 	ldb	r3,0(r23)
   41540:	003c1b06 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41544:	d8814c17 	ldw	r2,1328(sp)
   41548:	b8c00007 	ldb	r3,0(r23)
   4154c:	10800054 	ori	r2,r2,1
   41550:	d8814c15 	stw	r2,1328(sp)
   41554:	003c1606 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41558:	d8800407 	ldb	r2,16(sp)
   4155c:	10004c1e 	bne	r2,zero,41690 <___vfprintf_internal_r+0x12dc>
   41560:	00800804 	movi	r2,32
   41564:	d8800405 	stb	r2,16(sp)
   41568:	b8c00007 	ldb	r3,0(r23)
   4156c:	003c1006 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41570:	d9814c17 	ldw	r6,1328(sp)
   41574:	b8c00007 	ldb	r3,0(r23)
   41578:	31800214 	ori	r6,r6,8
   4157c:	d9814c15 	stw	r6,1328(sp)
   41580:	003c0b06 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41584:	0009883a 	mov	r4,zero
   41588:	04000244 	movi	r16,9
   4158c:	01400284 	movi	r5,10
   41590:	d9c15115 	stw	r7,1348(sp)
   41594:	004e8e80 	call	4e8e8 <__mulsi3>
   41598:	b9000007 	ldb	r4,0(r23)
   4159c:	d8c14d17 	ldw	r3,1332(sp)
   415a0:	bdc00044 	addi	r23,r23,1
   415a4:	d9014d15 	stw	r4,1332(sp)
   415a8:	d9414d17 	ldw	r5,1332(sp)
   415ac:	1885883a 	add	r2,r3,r2
   415b0:	113ff404 	addi	r4,r2,-48
   415b4:	28bff404 	addi	r2,r5,-48
   415b8:	d9c15117 	ldw	r7,1348(sp)
   415bc:	80bff32e 	bgeu	r16,r2,4158c <___vfprintf_internal_r+0x11d8>
   415c0:	d9014a15 	stw	r4,1320(sp)
   415c4:	003bfc06 	br	405b8 <___vfprintf_internal_r+0x204>
   415c8:	d8814c17 	ldw	r2,1328(sp)
   415cc:	b8c00007 	ldb	r3,0(r23)
   415d0:	10802014 	ori	r2,r2,128
   415d4:	d8814c15 	stw	r2,1328(sp)
   415d8:	003bf506 	br	405b0 <___vfprintf_internal_r+0x1fc>
   415dc:	b8c00007 	ldb	r3,0(r23)
   415e0:	00800a84 	movi	r2,42
   415e4:	bdc00044 	addi	r23,r23,1
   415e8:	18831826 	beq	r3,r2,4224c <___vfprintf_internal_r+0x1e98>
   415ec:	d8c14d15 	stw	r3,1332(sp)
   415f0:	18bff404 	addi	r2,r3,-48
   415f4:	00c00244 	movi	r3,9
   415f8:	18827b36 	bltu	r3,r2,41fe8 <___vfprintf_internal_r+0x1c34>
   415fc:	1821883a 	mov	r16,r3
   41600:	0009883a 	mov	r4,zero
   41604:	01400284 	movi	r5,10
   41608:	d9c15115 	stw	r7,1348(sp)
   4160c:	004e8e80 	call	4e8e8 <__mulsi3>
   41610:	d9414d17 	ldw	r5,1332(sp)
   41614:	b9800007 	ldb	r6,0(r23)
   41618:	d9c15117 	ldw	r7,1348(sp)
   4161c:	1145883a 	add	r2,r2,r5
   41620:	113ff404 	addi	r4,r2,-48
   41624:	30bff404 	addi	r2,r6,-48
   41628:	d9814d15 	stw	r6,1332(sp)
   4162c:	bdc00044 	addi	r23,r23,1
   41630:	80bff42e 	bgeu	r16,r2,41604 <___vfprintf_internal_r+0x1250>
   41634:	2027883a 	mov	r19,r4
   41638:	203bdf0e 	bge	r4,zero,405b8 <___vfprintf_internal_r+0x204>
   4163c:	04ffffc4 	movi	r19,-1
   41640:	003bdd06 	br	405b8 <___vfprintf_internal_r+0x204>
   41644:	d8000405 	stb	zero,16(sp)
   41648:	39800017 	ldw	r6,0(r7)
   4164c:	39c00104 	addi	r7,r7,4
   41650:	d9c14015 	stw	r7,1280(sp)
   41654:	d9814115 	stw	r6,1284(sp)
   41658:	3001c926 	beq	r6,zero,41d80 <___vfprintf_internal_r+0x19cc>
   4165c:	98000e16 	blt	r19,zero,41698 <___vfprintf_internal_r+0x12e4>
   41660:	d9014117 	ldw	r4,1284(sp)
   41664:	000b883a 	mov	r5,zero
   41668:	980d883a 	mov	r6,r19
   4166c:	0046fe80 	call	46fe8 <memchr>
   41670:	10025926 	beq	r2,zero,41fd8 <___vfprintf_internal_r+0x1c24>
   41674:	d8c14117 	ldw	r3,1284(sp)
   41678:	10cfc83a 	sub	r7,r2,r3
   4167c:	99c19e16 	blt	r19,r7,41cf8 <___vfprintf_internal_r+0x1944>
   41680:	d9c14515 	stw	r7,1300(sp)
   41684:	38000916 	blt	r7,zero,416ac <___vfprintf_internal_r+0x12f8>
   41688:	d8014615 	stw	zero,1304(sp)
   4168c:	003deb06 	br	40e3c <___vfprintf_internal_r+0xa88>
   41690:	b8c00007 	ldb	r3,0(r23)
   41694:	003bc606 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41698:	d9014117 	ldw	r4,1284(sp)
   4169c:	0048fc80 	call	48fc8 <strlen>
   416a0:	d8814515 	stw	r2,1300(sp)
   416a4:	100f883a 	mov	r7,r2
   416a8:	103ff70e 	bge	r2,zero,41688 <___vfprintf_internal_r+0x12d4>
   416ac:	d8014515 	stw	zero,1300(sp)
   416b0:	d8014615 	stw	zero,1304(sp)
   416b4:	003de106 	br	40e3c <___vfprintf_internal_r+0xa88>
   416b8:	20c03fcc 	andi	r3,r4,255
   416bc:	00800044 	movi	r2,1
   416c0:	18802d26 	beq	r3,r2,41778 <___vfprintf_internal_r+0x13c4>
   416c4:	18800e36 	bltu	r3,r2,41700 <___vfprintf_internal_r+0x134c>
   416c8:	00800084 	movi	r2,2
   416cc:	1880fa26 	beq	r3,r2,41ab8 <___vfprintf_internal_r+0x1704>
   416d0:	01000174 	movhi	r4,5
   416d4:	2107a004 	addi	r4,r4,7808
   416d8:	0048fc80 	call	48fc8 <strlen>
   416dc:	100f883a 	mov	r7,r2
   416e0:	dcc14515 	stw	r19,1300(sp)
   416e4:	9880010e 	bge	r19,r2,416ec <___vfprintf_internal_r+0x1338>
   416e8:	d8814515 	stw	r2,1300(sp)
   416ec:	00800174 	movhi	r2,5
   416f0:	1087a004 	addi	r2,r2,7808
   416f4:	dcc14615 	stw	r19,1304(sp)
   416f8:	d8814115 	stw	r2,1284(sp)
   416fc:	003dcf06 	br	40e3c <___vfprintf_internal_r+0xa88>
   41700:	d9401904 	addi	r5,sp,100
   41704:	dd000f04 	addi	r20,sp,60
   41708:	d9414115 	stw	r5,1284(sp)
   4170c:	880a977a 	slli	r5,r17,29
   41710:	d9814117 	ldw	r6,1284(sp)
   41714:	8004d0fa 	srli	r2,r16,3
   41718:	8806d0fa 	srli	r3,r17,3
   4171c:	810001cc 	andi	r4,r16,7
   41720:	2884b03a 	or	r2,r5,r2
   41724:	31bfffc4 	addi	r6,r6,-1
   41728:	21000c04 	addi	r4,r4,48
   4172c:	d9814115 	stw	r6,1284(sp)
   41730:	10cab03a 	or	r5,r2,r3
   41734:	31000005 	stb	r4,0(r6)
   41738:	1021883a 	mov	r16,r2
   4173c:	1823883a 	mov	r17,r3
   41740:	283ff21e 	bne	r5,zero,4170c <___vfprintf_internal_r+0x1358>
   41744:	d8c14c17 	ldw	r3,1328(sp)
   41748:	1880004c 	andi	r2,r3,1
   4174c:	1005003a 	cmpeq	r2,r2,zero
   41750:	103db31e 	bne	r2,zero,40e20 <___vfprintf_internal_r+0xa6c>
   41754:	20803fcc 	andi	r2,r4,255
   41758:	1080201c 	xori	r2,r2,128
   4175c:	10bfe004 	addi	r2,r2,-128
   41760:	00c00c04 	movi	r3,48
   41764:	10fdae26 	beq	r2,r3,40e20 <___vfprintf_internal_r+0xa6c>
   41768:	31bfffc4 	addi	r6,r6,-1
   4176c:	d9814115 	stw	r6,1284(sp)
   41770:	30c00005 	stb	r3,0(r6)
   41774:	003daa06 	br	40e20 <___vfprintf_internal_r+0xa6c>
   41778:	88800068 	cmpgeui	r2,r17,1
   4177c:	10002c1e 	bne	r2,zero,41830 <___vfprintf_internal_r+0x147c>
   41780:	8800021e 	bne	r17,zero,4178c <___vfprintf_internal_r+0x13d8>
   41784:	00800244 	movi	r2,9
   41788:	14002936 	bltu	r2,r16,41830 <___vfprintf_internal_r+0x147c>
   4178c:	d90018c4 	addi	r4,sp,99
   41790:	dd000f04 	addi	r20,sp,60
   41794:	d9014115 	stw	r4,1284(sp)
   41798:	d9014117 	ldw	r4,1284(sp)
   4179c:	80800c04 	addi	r2,r16,48
   417a0:	20800005 	stb	r2,0(r4)
   417a4:	003d9e06 	br	40e20 <___vfprintf_internal_r+0xa6c>
   417a8:	dc400d17 	ldw	r17,52(sp)
   417ac:	07000174 	movhi	fp,5
   417b0:	e707a784 	addi	fp,fp,7838
   417b4:	9425883a 	add	r18,r18,r16
   417b8:	8c400044 	addi	r17,r17,1
   417bc:	008001c4 	movi	r2,7
   417c0:	1f000015 	stw	fp,0(r3)
   417c4:	1c000115 	stw	r16,4(r3)
   417c8:	dc800e15 	stw	r18,56(sp)
   417cc:	dc400d15 	stw	r17,52(sp)
   417d0:	147ddc16 	blt	r2,r17,40f44 <___vfprintf_internal_r+0xb90>
   417d4:	18c00204 	addi	r3,r3,8
   417d8:	003c7406 	br	409ac <___vfprintf_internal_r+0x5f8>
   417dc:	01000084 	movi	r4,2
   417e0:	d8000405 	stb	zero,16(sp)
   417e4:	003d8106 	br	40dec <___vfprintf_internal_r+0xa38>
   417e8:	d9814c17 	ldw	r6,1328(sp)
   417ec:	30c4703a 	and	r2,r6,r3
   417f0:	1005003a 	cmpeq	r2,r2,zero
   417f4:	103cb326 	beq	r2,zero,40ac4 <___vfprintf_internal_r+0x710>
   417f8:	d9014117 	ldw	r4,1284(sp)
   417fc:	94800044 	addi	r18,r18,1
   41800:	8c400044 	addi	r17,r17,1
   41804:	008001c4 	movi	r2,7
   41808:	a9000015 	stw	r4,0(r21)
   4180c:	a8c00115 	stw	r3,4(r21)
   41810:	dc800e15 	stw	r18,56(sp)
   41814:	dc400d15 	stw	r17,52(sp)
   41818:	147e6016 	blt	r2,r17,4119c <___vfprintf_internal_r+0xde8>
   4181c:	acc00204 	addi	r19,r21,8
   41820:	003cd106 	br	40b68 <___vfprintf_internal_r+0x7b4>
   41824:	07000174 	movhi	fp,5
   41828:	e707a784 	addi	fp,fp,7838
   4182c:	003c4906 	br	40954 <___vfprintf_internal_r+0x5a0>
   41830:	dd000f04 	addi	r20,sp,60
   41834:	dc801904 	addi	r18,sp,100
   41838:	8009883a 	mov	r4,r16
   4183c:	880b883a 	mov	r5,r17
   41840:	01800284 	movi	r6,10
   41844:	000f883a 	mov	r7,zero
   41848:	004cdac0 	call	4cdac <__umoddi3>
   4184c:	12000c04 	addi	r8,r2,48
   41850:	94bfffc4 	addi	r18,r18,-1
   41854:	8009883a 	mov	r4,r16
   41858:	880b883a 	mov	r5,r17
   4185c:	01800284 	movi	r6,10
   41860:	000f883a 	mov	r7,zero
   41864:	92000005 	stb	r8,0(r18)
   41868:	004c7400 	call	4c740 <__udivdi3>
   4186c:	1009883a 	mov	r4,r2
   41870:	1021883a 	mov	r16,r2
   41874:	18800068 	cmpgeui	r2,r3,1
   41878:	1823883a 	mov	r17,r3
   4187c:	103fee1e 	bne	r2,zero,41838 <___vfprintf_internal_r+0x1484>
   41880:	1800021e 	bne	r3,zero,4188c <___vfprintf_internal_r+0x14d8>
   41884:	00800244 	movi	r2,9
   41888:	113feb36 	bltu	r2,r4,41838 <___vfprintf_internal_r+0x1484>
   4188c:	94bfffc4 	addi	r18,r18,-1
   41890:	dc814115 	stw	r18,1284(sp)
   41894:	003fc006 	br	41798 <___vfprintf_internal_r+0x13e4>
   41898:	d9014c17 	ldw	r4,1328(sp)
   4189c:	2080004c 	andi	r2,r4,1
   418a0:	10009a1e 	bne	r2,zero,41b0c <___vfprintf_internal_r+0x1758>
   418a4:	d9401904 	addi	r5,sp,100
   418a8:	dd000f04 	addi	r20,sp,60
   418ac:	d9414115 	stw	r5,1284(sp)
   418b0:	003d5b06 	br	40e20 <___vfprintf_internal_r+0xa6c>
   418b4:	d9014f17 	ldw	r4,1340(sp)
   418b8:	b00b883a 	mov	r5,r22
   418bc:	d9800c04 	addi	r6,sp,48
   418c0:	004035c0 	call	4035c <__sprint_r>
   418c4:	103c731e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   418c8:	dc800e17 	ldw	r18,56(sp)
   418cc:	d8c01904 	addi	r3,sp,100
   418d0:	003cf906 	br	40cb8 <___vfprintf_internal_r+0x904>
   418d4:	d8c14c17 	ldw	r3,1328(sp)
   418d8:	1880040c 	andi	r2,r3,16
   418dc:	1000711e 	bne	r2,zero,41aa4 <___vfprintf_internal_r+0x16f0>
   418e0:	d9014c17 	ldw	r4,1328(sp)
   418e4:	2080100c 	andi	r2,r4,64
   418e8:	10006e26 	beq	r2,zero,41aa4 <___vfprintf_internal_r+0x16f0>
   418ec:	3c00000b 	ldhu	r16,0(r7)
   418f0:	0023883a 	mov	r17,zero
   418f4:	39c00104 	addi	r7,r7,4
   418f8:	d9c14015 	stw	r7,1280(sp)
   418fc:	003efa06 	br	414e8 <___vfprintf_internal_r+0x1134>
   41900:	dc400d17 	ldw	r17,52(sp)
   41904:	07000174 	movhi	fp,5
   41908:	e707a784 	addi	fp,fp,7838
   4190c:	9425883a 	add	r18,r18,r16
   41910:	8c400044 	addi	r17,r17,1
   41914:	008001c4 	movi	r2,7
   41918:	1f000015 	stw	fp,0(r3)
   4191c:	1c000115 	stw	r16,4(r3)
   41920:	dc800e15 	stw	r18,56(sp)
   41924:	dc400d15 	stw	r17,52(sp)
   41928:	147d7016 	blt	r2,r17,40eec <___vfprintf_internal_r+0xb38>
   4192c:	18c00204 	addi	r3,r3,8
   41930:	003d7506 	br	40f08 <___vfprintf_internal_r+0xb54>
   41934:	dc800e17 	ldw	r18,56(sp)
   41938:	dc400d17 	ldw	r17,52(sp)
   4193c:	07000174 	movhi	fp,5
   41940:	e707ab84 	addi	fp,fp,7854
   41944:	003bba06 	br	40830 <___vfprintf_internal_r+0x47c>
   41948:	d9014f17 	ldw	r4,1340(sp)
   4194c:	b00b883a 	mov	r5,r22
   41950:	d9800c04 	addi	r6,sp,48
   41954:	004035c0 	call	4035c <__sprint_r>
   41958:	103c4e1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   4195c:	dc800e17 	ldw	r18,56(sp)
   41960:	d8c01904 	addi	r3,sp,100
   41964:	003ce306 	br	40cf4 <___vfprintf_internal_r+0x940>
   41968:	3c000017 	ldw	r16,0(r7)
   4196c:	0009883a 	mov	r4,zero
   41970:	39c00104 	addi	r7,r7,4
   41974:	0023883a 	mov	r17,zero
   41978:	d9c14015 	stw	r7,1280(sp)
   4197c:	d8000405 	stb	zero,16(sp)
   41980:	003d1a06 	br	40dec <___vfprintf_internal_r+0xa38>
   41984:	38800017 	ldw	r2,0(r7)
   41988:	39c00104 	addi	r7,r7,4
   4198c:	d9c14015 	stw	r7,1280(sp)
   41990:	1023d7fa 	srai	r17,r2,31
   41994:	1021883a 	mov	r16,r2
   41998:	003d1206 	br	40de4 <___vfprintf_internal_r+0xa30>
   4199c:	3c000017 	ldw	r16,0(r7)
   419a0:	01000044 	movi	r4,1
   419a4:	39c00104 	addi	r7,r7,4
   419a8:	0023883a 	mov	r17,zero
   419ac:	d9c14015 	stw	r7,1280(sp)
   419b0:	d8000405 	stb	zero,16(sp)
   419b4:	003d0d06 	br	40dec <___vfprintf_internal_r+0xa38>
   419b8:	00800174 	movhi	r2,5
   419bc:	1087a704 	addi	r2,r2,7836
   419c0:	94800044 	addi	r18,r18,1
   419c4:	8c400044 	addi	r17,r17,1
   419c8:	a8800015 	stw	r2,0(r21)
   419cc:	00c00044 	movi	r3,1
   419d0:	008001c4 	movi	r2,7
   419d4:	a8c00115 	stw	r3,4(r21)
   419d8:	dc800e15 	stw	r18,56(sp)
   419dc:	dc400d15 	stw	r17,52(sp)
   419e0:	1440ca16 	blt	r2,r17,41d0c <___vfprintf_internal_r+0x1958>
   419e4:	a8c00204 	addi	r3,r21,8
   419e8:	2000061e 	bne	r4,zero,41a04 <___vfprintf_internal_r+0x1650>
   419ec:	d9414717 	ldw	r5,1308(sp)
   419f0:	2800041e 	bne	r5,zero,41a04 <___vfprintf_internal_r+0x1650>
   419f4:	d9814c17 	ldw	r6,1328(sp)
   419f8:	3080004c 	andi	r2,r6,1
   419fc:	1005003a 	cmpeq	r2,r2,zero
   41a00:	103bea1e 	bne	r2,zero,409ac <___vfprintf_internal_r+0x5f8>
   41a04:	00800044 	movi	r2,1
   41a08:	dc400d17 	ldw	r17,52(sp)
   41a0c:	18800115 	stw	r2,4(r3)
   41a10:	d8814917 	ldw	r2,1316(sp)
   41a14:	94800044 	addi	r18,r18,1
   41a18:	8c400044 	addi	r17,r17,1
   41a1c:	18800015 	stw	r2,0(r3)
   41a20:	008001c4 	movi	r2,7
   41a24:	dc800e15 	stw	r18,56(sp)
   41a28:	dc400d15 	stw	r17,52(sp)
   41a2c:	1440ca16 	blt	r2,r17,41d58 <___vfprintf_internal_r+0x19a4>
   41a30:	18c00204 	addi	r3,r3,8
   41a34:	0121c83a 	sub	r16,zero,r4
   41a38:	0400500e 	bge	zero,r16,41b7c <___vfprintf_internal_r+0x17c8>
   41a3c:	00800404 	movi	r2,16
   41a40:	1400800e 	bge	r2,r16,41c44 <___vfprintf_internal_r+0x1890>
   41a44:	1027883a 	mov	r19,r2
   41a48:	07000174 	movhi	fp,5
   41a4c:	e707a784 	addi	fp,fp,7838
   41a50:	050001c4 	movi	r20,7
   41a54:	00000306 	br	41a64 <___vfprintf_internal_r+0x16b0>
   41a58:	18c00204 	addi	r3,r3,8
   41a5c:	843ffc04 	addi	r16,r16,-16
   41a60:	9c007a0e 	bge	r19,r16,41c4c <___vfprintf_internal_r+0x1898>
   41a64:	94800404 	addi	r18,r18,16
   41a68:	8c400044 	addi	r17,r17,1
   41a6c:	1f000015 	stw	fp,0(r3)
   41a70:	1cc00115 	stw	r19,4(r3)
   41a74:	dc800e15 	stw	r18,56(sp)
   41a78:	dc400d15 	stw	r17,52(sp)
   41a7c:	a47ff60e 	bge	r20,r17,41a58 <___vfprintf_internal_r+0x16a4>
   41a80:	d9014f17 	ldw	r4,1340(sp)
   41a84:	b00b883a 	mov	r5,r22
   41a88:	d9800c04 	addi	r6,sp,48
   41a8c:	004035c0 	call	4035c <__sprint_r>
   41a90:	103c001e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41a94:	dc800e17 	ldw	r18,56(sp)
   41a98:	dc400d17 	ldw	r17,52(sp)
   41a9c:	d8c01904 	addi	r3,sp,100
   41aa0:	003fee06 	br	41a5c <___vfprintf_internal_r+0x16a8>
   41aa4:	3c000017 	ldw	r16,0(r7)
   41aa8:	0023883a 	mov	r17,zero
   41aac:	39c00104 	addi	r7,r7,4
   41ab0:	d9c14015 	stw	r7,1280(sp)
   41ab4:	003e8c06 	br	414e8 <___vfprintf_internal_r+0x1134>
   41ab8:	d9401904 	addi	r5,sp,100
   41abc:	dd000f04 	addi	r20,sp,60
   41ac0:	d9414115 	stw	r5,1284(sp)
   41ac4:	d9814417 	ldw	r6,1296(sp)
   41ac8:	880a973a 	slli	r5,r17,28
   41acc:	8004d13a 	srli	r2,r16,4
   41ad0:	810003cc 	andi	r4,r16,15
   41ad4:	3109883a 	add	r4,r6,r4
   41ad8:	2884b03a 	or	r2,r5,r2
   41adc:	21400003 	ldbu	r5,0(r4)
   41ae0:	d9014117 	ldw	r4,1284(sp)
   41ae4:	8806d13a 	srli	r3,r17,4
   41ae8:	1021883a 	mov	r16,r2
   41aec:	213fffc4 	addi	r4,r4,-1
   41af0:	d9014115 	stw	r4,1284(sp)
   41af4:	d9814117 	ldw	r6,1284(sp)
   41af8:	10c8b03a 	or	r4,r2,r3
   41afc:	1823883a 	mov	r17,r3
   41b00:	31400005 	stb	r5,0(r6)
   41b04:	203fef1e 	bne	r4,zero,41ac4 <___vfprintf_internal_r+0x1710>
   41b08:	003cc506 	br	40e20 <___vfprintf_internal_r+0xa6c>
   41b0c:	00800c04 	movi	r2,48
   41b10:	d98018c4 	addi	r6,sp,99
   41b14:	dd000f04 	addi	r20,sp,60
   41b18:	d88018c5 	stb	r2,99(sp)
   41b1c:	d9814115 	stw	r6,1284(sp)
   41b20:	003cbf06 	br	40e20 <___vfprintf_internal_r+0xa6c>
   41b24:	dc400d17 	ldw	r17,52(sp)
   41b28:	07000174 	movhi	fp,5
   41b2c:	e707ab84 	addi	fp,fp,7854
   41b30:	003bc106 	br	40a38 <___vfprintf_internal_r+0x684>
   41b34:	d9414c17 	ldw	r5,1328(sp)
   41b38:	2880040c 	andi	r2,r5,16
   41b3c:	10007c26 	beq	r2,zero,41d30 <___vfprintf_internal_r+0x197c>
   41b40:	38800017 	ldw	r2,0(r7)
   41b44:	39c00104 	addi	r7,r7,4
   41b48:	d9c14015 	stw	r7,1280(sp)
   41b4c:	d9814b17 	ldw	r6,1324(sp)
   41b50:	d9c14017 	ldw	r7,1280(sp)
   41b54:	11800015 	stw	r6,0(r2)
   41b58:	003a7206 	br	40524 <___vfprintf_internal_r+0x170>
   41b5c:	d9014f17 	ldw	r4,1340(sp)
   41b60:	b00b883a 	mov	r5,r22
   41b64:	d9800c04 	addi	r6,sp,48
   41b68:	004035c0 	call	4035c <__sprint_r>
   41b6c:	103bc91e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41b70:	dc800e17 	ldw	r18,56(sp)
   41b74:	dc400d17 	ldw	r17,52(sp)
   41b78:	d8c01904 	addi	r3,sp,100
   41b7c:	d9014717 	ldw	r4,1308(sp)
   41b80:	d9414117 	ldw	r5,1284(sp)
   41b84:	8c400044 	addi	r17,r17,1
   41b88:	9125883a 	add	r18,r18,r4
   41b8c:	008001c4 	movi	r2,7
   41b90:	19400015 	stw	r5,0(r3)
   41b94:	19000115 	stw	r4,4(r3)
   41b98:	dc800e15 	stw	r18,56(sp)
   41b9c:	dc400d15 	stw	r17,52(sp)
   41ba0:	147ce816 	blt	r2,r17,40f44 <___vfprintf_internal_r+0xb90>
   41ba4:	18c00204 	addi	r3,r3,8
   41ba8:	003b8006 	br	409ac <___vfprintf_internal_r+0x5f8>
   41bac:	38c00017 	ldw	r3,0(r7)
   41bb0:	39000204 	addi	r4,r7,8
   41bb4:	d9014015 	stw	r4,1280(sp)
   41bb8:	d8c14215 	stw	r3,1288(sp)
   41bbc:	39c00117 	ldw	r7,4(r7)
   41bc0:	d9c14315 	stw	r7,1292(sp)
   41bc4:	003e1a06 	br	41430 <___vfprintf_internal_r+0x107c>
   41bc8:	0005883a 	mov	r2,zero
   41bcc:	1409c83a 	sub	r4,r2,r16
   41bd0:	1105803a 	cmpltu	r2,r2,r4
   41bd4:	044bc83a 	sub	r5,zero,r17
   41bd8:	2885c83a 	sub	r2,r5,r2
   41bdc:	2021883a 	mov	r16,r4
   41be0:	1023883a 	mov	r17,r2
   41be4:	01000044 	movi	r4,1
   41be8:	00800b44 	movi	r2,45
   41bec:	d8800405 	stb	r2,16(sp)
   41bf0:	003c7e06 	br	40dec <___vfprintf_internal_r+0xa38>
   41bf4:	d9014f17 	ldw	r4,1340(sp)
   41bf8:	b00b883a 	mov	r5,r22
   41bfc:	d9800c04 	addi	r6,sp,48
   41c00:	004035c0 	call	4035c <__sprint_r>
   41c04:	103ba31e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41c08:	dc800e17 	ldw	r18,56(sp)
   41c0c:	dc400d17 	ldw	r17,52(sp)
   41c10:	d9000517 	ldw	r4,20(sp)
   41c14:	d9401904 	addi	r5,sp,100
   41c18:	003da106 	br	412a0 <___vfprintf_internal_r+0xeec>
   41c1c:	d9014f17 	ldw	r4,1340(sp)
   41c20:	b00b883a 	mov	r5,r22
   41c24:	d9800c04 	addi	r6,sp,48
   41c28:	004035c0 	call	4035c <__sprint_r>
   41c2c:	103b991e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41c30:	dc800e17 	ldw	r18,56(sp)
   41c34:	dc400d17 	ldw	r17,52(sp)
   41c38:	d9000517 	ldw	r4,20(sp)
   41c3c:	d8c01904 	addi	r3,sp,100
   41c40:	003d8b06 	br	41270 <___vfprintf_internal_r+0xebc>
   41c44:	07000174 	movhi	fp,5
   41c48:	e707a784 	addi	fp,fp,7838
   41c4c:	9425883a 	add	r18,r18,r16
   41c50:	8c400044 	addi	r17,r17,1
   41c54:	008001c4 	movi	r2,7
   41c58:	1f000015 	stw	fp,0(r3)
   41c5c:	1c000115 	stw	r16,4(r3)
   41c60:	dc800e15 	stw	r18,56(sp)
   41c64:	dc400d15 	stw	r17,52(sp)
   41c68:	147fbc16 	blt	r2,r17,41b5c <___vfprintf_internal_r+0x17a8>
   41c6c:	18c00204 	addi	r3,r3,8
   41c70:	003fc206 	br	41b7c <___vfprintf_internal_r+0x17c8>
   41c74:	d9014f17 	ldw	r4,1340(sp)
   41c78:	b00b883a 	mov	r5,r22
   41c7c:	d9800c04 	addi	r6,sp,48
   41c80:	004035c0 	call	4035c <__sprint_r>
   41c84:	103b831e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41c88:	dc800e17 	ldw	r18,56(sp)
   41c8c:	d9000517 	ldw	r4,20(sp)
   41c90:	d8c01904 	addi	r3,sp,100
   41c94:	003cfc06 	br	41088 <___vfprintf_internal_r+0xcd4>
   41c98:	07000174 	movhi	fp,5
   41c9c:	e707a784 	addi	fp,fp,7838
   41ca0:	003bde06 	br	40c1c <___vfprintf_internal_r+0x868>
   41ca4:	00800174 	movhi	r2,5
   41ca8:	10879604 	addi	r2,r2,7768
   41cac:	d8814115 	stw	r2,1284(sp)
   41cb0:	003def06 	br	41470 <___vfprintf_internal_r+0x10bc>
   41cb4:	d9014217 	ldw	r4,1288(sp)
   41cb8:	d9414317 	ldw	r5,1292(sp)
   41cbc:	0048b840 	call	48b84 <__isnand>
   41cc0:	10003926 	beq	r2,zero,41da8 <___vfprintf_internal_r+0x19f4>
   41cc4:	d9414d17 	ldw	r5,1332(sp)
   41cc8:	008011c4 	movi	r2,71
   41ccc:	1140ce16 	blt	r2,r5,42008 <___vfprintf_internal_r+0x1c54>
   41cd0:	01800174 	movhi	r6,5
   41cd4:	31879704 	addi	r6,r6,7772
   41cd8:	d9814115 	stw	r6,1284(sp)
   41cdc:	003de406 	br	41470 <___vfprintf_internal_r+0x10bc>
   41ce0:	d9014c17 	ldw	r4,1328(sp)
   41ce4:	bdc00044 	addi	r23,r23,1
   41ce8:	b8c00007 	ldb	r3,0(r23)
   41cec:	21000814 	ori	r4,r4,32
   41cf0:	d9014c15 	stw	r4,1328(sp)
   41cf4:	003a2e06 	br	405b0 <___vfprintf_internal_r+0x1fc>
   41cf8:	dcc14515 	stw	r19,1300(sp)
   41cfc:	98011016 	blt	r19,zero,42140 <___vfprintf_internal_r+0x1d8c>
   41d00:	980f883a 	mov	r7,r19
   41d04:	d8014615 	stw	zero,1304(sp)
   41d08:	003c4c06 	br	40e3c <___vfprintf_internal_r+0xa88>
   41d0c:	d9014f17 	ldw	r4,1340(sp)
   41d10:	b00b883a 	mov	r5,r22
   41d14:	d9800c04 	addi	r6,sp,48
   41d18:	004035c0 	call	4035c <__sprint_r>
   41d1c:	103b5d1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41d20:	dc800e17 	ldw	r18,56(sp)
   41d24:	d9000517 	ldw	r4,20(sp)
   41d28:	d8c01904 	addi	r3,sp,100
   41d2c:	003f2e06 	br	419e8 <___vfprintf_internal_r+0x1634>
   41d30:	d8c14c17 	ldw	r3,1328(sp)
   41d34:	1880100c 	andi	r2,r3,64
   41d38:	1000a026 	beq	r2,zero,41fbc <___vfprintf_internal_r+0x1c08>
   41d3c:	38800017 	ldw	r2,0(r7)
   41d40:	39c00104 	addi	r7,r7,4
   41d44:	d9c14015 	stw	r7,1280(sp)
   41d48:	d9014b17 	ldw	r4,1324(sp)
   41d4c:	d9c14017 	ldw	r7,1280(sp)
   41d50:	1100000d 	sth	r4,0(r2)
   41d54:	0039f306 	br	40524 <___vfprintf_internal_r+0x170>
   41d58:	d9014f17 	ldw	r4,1340(sp)
   41d5c:	b00b883a 	mov	r5,r22
   41d60:	d9800c04 	addi	r6,sp,48
   41d64:	004035c0 	call	4035c <__sprint_r>
   41d68:	103b4a1e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41d6c:	dc800e17 	ldw	r18,56(sp)
   41d70:	dc400d17 	ldw	r17,52(sp)
   41d74:	d9000517 	ldw	r4,20(sp)
   41d78:	d8c01904 	addi	r3,sp,100
   41d7c:	003f2d06 	br	41a34 <___vfprintf_internal_r+0x1680>
   41d80:	00800184 	movi	r2,6
   41d84:	14c09a36 	bltu	r2,r19,41ff0 <___vfprintf_internal_r+0x1c3c>
   41d88:	dcc14515 	stw	r19,1300(sp)
   41d8c:	9800010e 	bge	r19,zero,41d94 <___vfprintf_internal_r+0x19e0>
   41d90:	d8014515 	stw	zero,1300(sp)
   41d94:	00800174 	movhi	r2,5
   41d98:	10879904 	addi	r2,r2,7780
   41d9c:	980f883a 	mov	r7,r19
   41da0:	d8814115 	stw	r2,1284(sp)
   41da4:	003a7206 	br	40770 <___vfprintf_internal_r+0x3bc>
   41da8:	00bfffc4 	movi	r2,-1
   41dac:	9880e226 	beq	r19,r2,42138 <___vfprintf_internal_r+0x1d84>
   41db0:	d9414d17 	ldw	r5,1332(sp)
   41db4:	008019c4 	movi	r2,103
   41db8:	2880dc26 	beq	r5,r2,4212c <___vfprintf_internal_r+0x1d78>
   41dbc:	008011c4 	movi	r2,71
   41dc0:	2880da26 	beq	r5,r2,4212c <___vfprintf_internal_r+0x1d78>
   41dc4:	d9414c17 	ldw	r5,1328(sp)
   41dc8:	d9014317 	ldw	r4,1292(sp)
   41dcc:	d9814217 	ldw	r6,1288(sp)
   41dd0:	29404014 	ori	r5,r5,256
   41dd4:	d9414c15 	stw	r5,1328(sp)
   41dd8:	2000cc16 	blt	r4,zero,4210c <___vfprintf_internal_r+0x1d58>
   41ddc:	3021883a 	mov	r16,r6
   41de0:	2023883a 	mov	r17,r4
   41de4:	0039883a 	mov	fp,zero
   41de8:	d9414d17 	ldw	r5,1332(sp)
   41dec:	00801984 	movi	r2,102
   41df0:	2880b726 	beq	r5,r2,420d0 <___vfprintf_internal_r+0x1d1c>
   41df4:	00801184 	movi	r2,70
   41df8:	2880b526 	beq	r5,r2,420d0 <___vfprintf_internal_r+0x1d1c>
   41dfc:	00801944 	movi	r2,101
   41e00:	2880c826 	beq	r5,r2,42124 <___vfprintf_internal_r+0x1d70>
   41e04:	00801144 	movi	r2,69
   41e08:	2880c626 	beq	r5,r2,42124 <___vfprintf_internal_r+0x1d70>
   41e0c:	9829883a 	mov	r20,r19
   41e10:	d9014f17 	ldw	r4,1340(sp)
   41e14:	d8800504 	addi	r2,sp,20
   41e18:	880d883a 	mov	r6,r17
   41e1c:	d8800115 	stw	r2,4(sp)
   41e20:	d8c00604 	addi	r3,sp,24
   41e24:	d8800704 	addi	r2,sp,28
   41e28:	800b883a 	mov	r5,r16
   41e2c:	01c00084 	movi	r7,2
   41e30:	d8c00215 	stw	r3,8(sp)
   41e34:	d8800315 	stw	r2,12(sp)
   41e38:	dd000015 	stw	r20,0(sp)
   41e3c:	0043da40 	call	43da4 <_dtoa_r>
   41e40:	d9814d17 	ldw	r6,1332(sp)
   41e44:	d8814115 	stw	r2,1284(sp)
   41e48:	008019c4 	movi	r2,103
   41e4c:	30809526 	beq	r6,r2,420a4 <___vfprintf_internal_r+0x1cf0>
   41e50:	d8c14d17 	ldw	r3,1332(sp)
   41e54:	008011c4 	movi	r2,71
   41e58:	18809226 	beq	r3,r2,420a4 <___vfprintf_internal_r+0x1cf0>
   41e5c:	d9414117 	ldw	r5,1284(sp)
   41e60:	d9814d17 	ldw	r6,1332(sp)
   41e64:	00801984 	movi	r2,102
   41e68:	2d25883a 	add	r18,r5,r20
   41e6c:	30808626 	beq	r6,r2,42088 <___vfprintf_internal_r+0x1cd4>
   41e70:	00801184 	movi	r2,70
   41e74:	30808426 	beq	r6,r2,42088 <___vfprintf_internal_r+0x1cd4>
   41e78:	000d883a 	mov	r6,zero
   41e7c:	000f883a 	mov	r7,zero
   41e80:	880b883a 	mov	r5,r17
   41e84:	8009883a 	mov	r4,r16
   41e88:	004e0940 	call	4e094 <__eqdf2>
   41e8c:	1000751e 	bne	r2,zero,42064 <___vfprintf_internal_r+0x1cb0>
   41e90:	9005883a 	mov	r2,r18
   41e94:	dc800715 	stw	r18,28(sp)
   41e98:	d9014117 	ldw	r4,1284(sp)
   41e9c:	d9414d17 	ldw	r5,1332(sp)
   41ea0:	00c019c4 	movi	r3,103
   41ea4:	1125c83a 	sub	r18,r2,r4
   41ea8:	28c06826 	beq	r5,r3,4204c <___vfprintf_internal_r+0x1c98>
   41eac:	008011c4 	movi	r2,71
   41eb0:	28806626 	beq	r5,r2,4204c <___vfprintf_internal_r+0x1c98>
   41eb4:	d9000517 	ldw	r4,20(sp)
   41eb8:	d8c14d17 	ldw	r3,1332(sp)
   41ebc:	00801944 	movi	r2,101
   41ec0:	10c05516 	blt	r2,r3,42018 <___vfprintf_internal_r+0x1c64>
   41ec4:	213fffc4 	addi	r4,r4,-1
   41ec8:	d9000515 	stw	r4,20(sp)
   41ecc:	d8c00805 	stb	r3,32(sp)
   41ed0:	2021883a 	mov	r16,r4
   41ed4:	2000c116 	blt	r4,zero,421dc <___vfprintf_internal_r+0x1e28>
   41ed8:	00800ac4 	movi	r2,43
   41edc:	d8800845 	stb	r2,33(sp)
   41ee0:	00800244 	movi	r2,9
   41ee4:	1400af0e 	bge	r2,r16,421a4 <___vfprintf_internal_r+0x1df0>
   41ee8:	1027883a 	mov	r19,r2
   41eec:	dc400b84 	addi	r17,sp,46
   41ef0:	8009883a 	mov	r4,r16
   41ef4:	01400284 	movi	r5,10
   41ef8:	004e8780 	call	4e878 <__modsi3>
   41efc:	10800c04 	addi	r2,r2,48
   41f00:	8c7fffc4 	addi	r17,r17,-1
   41f04:	8009883a 	mov	r4,r16
   41f08:	01400284 	movi	r5,10
   41f0c:	88800005 	stb	r2,0(r17)
   41f10:	004e8180 	call	4e818 <__divsi3>
   41f14:	1021883a 	mov	r16,r2
   41f18:	98bff516 	blt	r19,r2,41ef0 <___vfprintf_internal_r+0x1b3c>
   41f1c:	10c00c04 	addi	r3,r2,48
   41f20:	d88009c4 	addi	r2,sp,39
   41f24:	108001c4 	addi	r2,r2,7
   41f28:	897fffc4 	addi	r5,r17,-1
   41f2c:	88ffffc5 	stb	r3,-1(r17)
   41f30:	2880a72e 	bgeu	r5,r2,421d0 <___vfprintf_internal_r+0x1e1c>
   41f34:	1009883a 	mov	r4,r2
   41f38:	d9800804 	addi	r6,sp,32
   41f3c:	d8c00884 	addi	r3,sp,34
   41f40:	28800003 	ldbu	r2,0(r5)
   41f44:	29400044 	addi	r5,r5,1
   41f48:	18800005 	stb	r2,0(r3)
   41f4c:	18c00044 	addi	r3,r3,1
   41f50:	293ffb36 	bltu	r5,r4,41f40 <___vfprintf_internal_r+0x1b8c>
   41f54:	1987c83a 	sub	r3,r3,r6
   41f58:	00800044 	movi	r2,1
   41f5c:	d8c14815 	stw	r3,1312(sp)
   41f60:	90cf883a 	add	r7,r18,r3
   41f64:	1480960e 	bge	r2,r18,421c0 <___vfprintf_internal_r+0x1e0c>
   41f68:	39c00044 	addi	r7,r7,1
   41f6c:	d9c14515 	stw	r7,1300(sp)
   41f70:	38003416 	blt	r7,zero,42044 <___vfprintf_internal_r+0x1c90>
   41f74:	e0803fcc 	andi	r2,fp,255
   41f78:	1080201c 	xori	r2,r2,128
   41f7c:	10bfe004 	addi	r2,r2,-128
   41f80:	10004e26 	beq	r2,zero,420bc <___vfprintf_internal_r+0x1d08>
   41f84:	00800b44 	movi	r2,45
   41f88:	dc814715 	stw	r18,1308(sp)
   41f8c:	d8014615 	stw	zero,1304(sp)
   41f90:	d8800405 	stb	r2,16(sp)
   41f94:	003bab06 	br	40e44 <___vfprintf_internal_r+0xa90>
   41f98:	00800b44 	movi	r2,45
   41f9c:	d8800405 	stb	r2,16(sp)
   41fa0:	003d2d06 	br	41458 <___vfprintf_internal_r+0x10a4>
   41fa4:	d9014f17 	ldw	r4,1340(sp)
   41fa8:	b00b883a 	mov	r5,r22
   41fac:	d9800c04 	addi	r6,sp,48
   41fb0:	004035c0 	call	4035c <__sprint_r>
   41fb4:	103ab71e 	bne	r2,zero,40a94 <___vfprintf_internal_r+0x6e0>
   41fb8:	003ab506 	br	40a90 <___vfprintf_internal_r+0x6dc>
   41fbc:	38800017 	ldw	r2,0(r7)
   41fc0:	39c00104 	addi	r7,r7,4
   41fc4:	d9c14015 	stw	r7,1280(sp)
   41fc8:	d9414b17 	ldw	r5,1324(sp)
   41fcc:	d9c14017 	ldw	r7,1280(sp)
   41fd0:	11400015 	stw	r5,0(r2)
   41fd4:	00395306 	br	40524 <___vfprintf_internal_r+0x170>
   41fd8:	980f883a 	mov	r7,r19
   41fdc:	dcc14515 	stw	r19,1300(sp)
   41fe0:	d8014615 	stw	zero,1304(sp)
   41fe4:	003b9506 	br	40e3c <___vfprintf_internal_r+0xa88>
   41fe8:	0027883a 	mov	r19,zero
   41fec:	00397206 	br	405b8 <___vfprintf_internal_r+0x204>
   41ff0:	00c00174 	movhi	r3,5
   41ff4:	18c79904 	addi	r3,r3,7780
   41ff8:	100f883a 	mov	r7,r2
   41ffc:	d8814515 	stw	r2,1300(sp)
   42000:	d8c14115 	stw	r3,1284(sp)
   42004:	0039da06 	br	40770 <___vfprintf_internal_r+0x3bc>
   42008:	00800174 	movhi	r2,5
   4200c:	10879804 	addi	r2,r2,7776
   42010:	d8814115 	stw	r2,1284(sp)
   42014:	003d1606 	br	41470 <___vfprintf_internal_r+0x10bc>
   42018:	d9414d17 	ldw	r5,1332(sp)
   4201c:	00801984 	movi	r2,102
   42020:	28804926 	beq	r5,r2,42148 <___vfprintf_internal_r+0x1d94>
   42024:	200f883a 	mov	r7,r4
   42028:	24805716 	blt	r4,r18,42188 <___vfprintf_internal_r+0x1dd4>
   4202c:	d9414c17 	ldw	r5,1328(sp)
   42030:	2880004c 	andi	r2,r5,1
   42034:	10000126 	beq	r2,zero,4203c <___vfprintf_internal_r+0x1c88>
   42038:	21c00044 	addi	r7,r4,1
   4203c:	d9c14515 	stw	r7,1300(sp)
   42040:	383fcc0e 	bge	r7,zero,41f74 <___vfprintf_internal_r+0x1bc0>
   42044:	d8014515 	stw	zero,1300(sp)
   42048:	003fca06 	br	41f74 <___vfprintf_internal_r+0x1bc0>
   4204c:	d9000517 	ldw	r4,20(sp)
   42050:	00bfff04 	movi	r2,-4
   42054:	1100480e 	bge	r2,r4,42178 <___vfprintf_internal_r+0x1dc4>
   42058:	99004716 	blt	r19,r4,42178 <___vfprintf_internal_r+0x1dc4>
   4205c:	d8c14d15 	stw	r3,1332(sp)
   42060:	003ff006 	br	42024 <___vfprintf_internal_r+0x1c70>
   42064:	d8800717 	ldw	r2,28(sp)
   42068:	14bf8b2e 	bgeu	r2,r18,41e98 <___vfprintf_internal_r+0x1ae4>
   4206c:	9007883a 	mov	r3,r18
   42070:	01000c04 	movi	r4,48
   42074:	11000005 	stb	r4,0(r2)
   42078:	10800044 	addi	r2,r2,1
   4207c:	d8800715 	stw	r2,28(sp)
   42080:	18bffc1e 	bne	r3,r2,42074 <___vfprintf_internal_r+0x1cc0>
   42084:	003f8406 	br	41e98 <___vfprintf_internal_r+0x1ae4>
   42088:	d8814117 	ldw	r2,1284(sp)
   4208c:	10c00007 	ldb	r3,0(r2)
   42090:	00800c04 	movi	r2,48
   42094:	18805b26 	beq	r3,r2,42204 <___vfprintf_internal_r+0x1e50>
   42098:	d9000517 	ldw	r4,20(sp)
   4209c:	9125883a 	add	r18,r18,r4
   420a0:	003f7506 	br	41e78 <___vfprintf_internal_r+0x1ac4>
   420a4:	d9014c17 	ldw	r4,1328(sp)
   420a8:	2080004c 	andi	r2,r4,1
   420ac:	1005003a 	cmpeq	r2,r2,zero
   420b0:	103f6a26 	beq	r2,zero,41e5c <___vfprintf_internal_r+0x1aa8>
   420b4:	d8800717 	ldw	r2,28(sp)
   420b8:	003f7706 	br	41e98 <___vfprintf_internal_r+0x1ae4>
   420bc:	d9c14515 	stw	r7,1300(sp)
   420c0:	38004d16 	blt	r7,zero,421f8 <___vfprintf_internal_r+0x1e44>
   420c4:	dc814715 	stw	r18,1308(sp)
   420c8:	d8014615 	stw	zero,1304(sp)
   420cc:	003b5b06 	br	40e3c <___vfprintf_internal_r+0xa88>
   420d0:	d9014f17 	ldw	r4,1340(sp)
   420d4:	d8800504 	addi	r2,sp,20
   420d8:	d8800115 	stw	r2,4(sp)
   420dc:	d8c00604 	addi	r3,sp,24
   420e0:	d8800704 	addi	r2,sp,28
   420e4:	800b883a 	mov	r5,r16
   420e8:	880d883a 	mov	r6,r17
   420ec:	01c000c4 	movi	r7,3
   420f0:	d8c00215 	stw	r3,8(sp)
   420f4:	d8800315 	stw	r2,12(sp)
   420f8:	dcc00015 	stw	r19,0(sp)
   420fc:	9829883a 	mov	r20,r19
   42100:	0043da40 	call	43da4 <_dtoa_r>
   42104:	d8814115 	stw	r2,1284(sp)
   42108:	003f5106 	br	41e50 <___vfprintf_internal_r+0x1a9c>
   4210c:	d8c14217 	ldw	r3,1288(sp)
   42110:	d9014317 	ldw	r4,1292(sp)
   42114:	07000b44 	movi	fp,45
   42118:	1821883a 	mov	r16,r3
   4211c:	2460003c 	xorhi	r17,r4,32768
   42120:	003f3106 	br	41de8 <___vfprintf_internal_r+0x1a34>
   42124:	9d000044 	addi	r20,r19,1
   42128:	003f3906 	br	41e10 <___vfprintf_internal_r+0x1a5c>
   4212c:	983f251e 	bne	r19,zero,41dc4 <___vfprintf_internal_r+0x1a10>
   42130:	04c00044 	movi	r19,1
   42134:	003f2306 	br	41dc4 <___vfprintf_internal_r+0x1a10>
   42138:	04c00184 	movi	r19,6
   4213c:	003f2106 	br	41dc4 <___vfprintf_internal_r+0x1a10>
   42140:	d8014515 	stw	zero,1300(sp)
   42144:	003eee06 	br	41d00 <___vfprintf_internal_r+0x194c>
   42148:	200f883a 	mov	r7,r4
   4214c:	0100370e 	bge	zero,r4,4222c <___vfprintf_internal_r+0x1e78>
   42150:	9800031e 	bne	r19,zero,42160 <___vfprintf_internal_r+0x1dac>
   42154:	d9814c17 	ldw	r6,1328(sp)
   42158:	3080004c 	andi	r2,r6,1
   4215c:	103fb726 	beq	r2,zero,4203c <___vfprintf_internal_r+0x1c88>
   42160:	20800044 	addi	r2,r4,1
   42164:	98a7883a 	add	r19,r19,r2
   42168:	dcc14515 	stw	r19,1300(sp)
   4216c:	980f883a 	mov	r7,r19
   42170:	983f800e 	bge	r19,zero,41f74 <___vfprintf_internal_r+0x1bc0>
   42174:	003fb306 	br	42044 <___vfprintf_internal_r+0x1c90>
   42178:	d9814d17 	ldw	r6,1332(sp)
   4217c:	31bfff84 	addi	r6,r6,-2
   42180:	d9814d15 	stw	r6,1332(sp)
   42184:	003f4c06 	br	41eb8 <___vfprintf_internal_r+0x1b04>
   42188:	0100180e 	bge	zero,r4,421ec <___vfprintf_internal_r+0x1e38>
   4218c:	00800044 	movi	r2,1
   42190:	1485883a 	add	r2,r2,r18
   42194:	d8814515 	stw	r2,1300(sp)
   42198:	100f883a 	mov	r7,r2
   4219c:	103f750e 	bge	r2,zero,41f74 <___vfprintf_internal_r+0x1bc0>
   421a0:	003fa806 	br	42044 <___vfprintf_internal_r+0x1c90>
   421a4:	80c00c04 	addi	r3,r16,48
   421a8:	00800c04 	movi	r2,48
   421ac:	d8c008c5 	stb	r3,35(sp)
   421b0:	d9800804 	addi	r6,sp,32
   421b4:	d8c00904 	addi	r3,sp,36
   421b8:	d8800885 	stb	r2,34(sp)
   421bc:	003f6506 	br	41f54 <___vfprintf_internal_r+0x1ba0>
   421c0:	d9014c17 	ldw	r4,1328(sp)
   421c4:	2084703a 	and	r2,r4,r2
   421c8:	103f9c26 	beq	r2,zero,4203c <___vfprintf_internal_r+0x1c88>
   421cc:	003f6606 	br	41f68 <___vfprintf_internal_r+0x1bb4>
   421d0:	d9800804 	addi	r6,sp,32
   421d4:	d8c00884 	addi	r3,sp,34
   421d8:	003f5e06 	br	41f54 <___vfprintf_internal_r+0x1ba0>
   421dc:	00800b44 	movi	r2,45
   421e0:	0121c83a 	sub	r16,zero,r4
   421e4:	d8800845 	stb	r2,33(sp)
   421e8:	003f3d06 	br	41ee0 <___vfprintf_internal_r+0x1b2c>
   421ec:	00800084 	movi	r2,2
   421f0:	1105c83a 	sub	r2,r2,r4
   421f4:	003fe606 	br	42190 <___vfprintf_internal_r+0x1ddc>
   421f8:	d8014515 	stw	zero,1300(sp)
   421fc:	dc814715 	stw	r18,1308(sp)
   42200:	003fb106 	br	420c8 <___vfprintf_internal_r+0x1d14>
   42204:	000d883a 	mov	r6,zero
   42208:	000f883a 	mov	r7,zero
   4220c:	8009883a 	mov	r4,r16
   42210:	880b883a 	mov	r5,r17
   42214:	004e11c0 	call	4e11c <__nedf2>
   42218:	103f9f26 	beq	r2,zero,42098 <___vfprintf_internal_r+0x1ce4>
   4221c:	00800044 	movi	r2,1
   42220:	1509c83a 	sub	r4,r2,r20
   42224:	d9000515 	stw	r4,20(sp)
   42228:	003f9b06 	br	42098 <___vfprintf_internal_r+0x1ce4>
   4222c:	98000d1e 	bne	r19,zero,42264 <___vfprintf_internal_r+0x1eb0>
   42230:	d8c14c17 	ldw	r3,1328(sp)
   42234:	1880004c 	andi	r2,r3,1
   42238:	10000a1e 	bne	r2,zero,42264 <___vfprintf_internal_r+0x1eb0>
   4223c:	01000044 	movi	r4,1
   42240:	200f883a 	mov	r7,r4
   42244:	d9014515 	stw	r4,1300(sp)
   42248:	003f4a06 	br	41f74 <___vfprintf_internal_r+0x1bc0>
   4224c:	3cc00017 	ldw	r19,0(r7)
   42250:	39c00104 	addi	r7,r7,4
   42254:	983d0e0e 	bge	r19,zero,41690 <___vfprintf_internal_r+0x12dc>
   42258:	b8c00007 	ldb	r3,0(r23)
   4225c:	04ffffc4 	movi	r19,-1
   42260:	0038d306 	br	405b0 <___vfprintf_internal_r+0x1fc>
   42264:	9cc00084 	addi	r19,r19,2
   42268:	dcc14515 	stw	r19,1300(sp)
   4226c:	980f883a 	mov	r7,r19
   42270:	983f400e 	bge	r19,zero,41f74 <___vfprintf_internal_r+0x1bc0>
   42274:	003f7306 	br	42044 <___vfprintf_internal_r+0x1c90>

00042278 <__vfprintf_internal>:
   42278:	00800174 	movhi	r2,5
   4227c:	108fb204 	addi	r2,r2,16072
   42280:	2013883a 	mov	r9,r4
   42284:	11000017 	ldw	r4,0(r2)
   42288:	2805883a 	mov	r2,r5
   4228c:	300f883a 	mov	r7,r6
   42290:	480b883a 	mov	r5,r9
   42294:	100d883a 	mov	r6,r2
   42298:	00403b41 	jmpi	403b4 <___vfprintf_internal_r>

0004229c <__svfscanf_r>:
   4229c:	deff4e04 	addi	sp,sp,-712
   422a0:	dd80ae15 	stw	r22,696(sp)
   422a4:	dd00ac15 	stw	r20,688(sp)
   422a8:	dc40a915 	stw	r17,676(sp)
   422ac:	dc00a815 	stw	r16,672(sp)
   422b0:	dfc0b115 	stw	ra,708(sp)
   422b4:	df00b015 	stw	fp,704(sp)
   422b8:	ddc0af15 	stw	r23,700(sp)
   422bc:	dd40ad15 	stw	r21,692(sp)
   422c0:	dcc0ab15 	stw	r19,684(sp)
   422c4:	dc80aa15 	stw	r18,680(sp)
   422c8:	202d883a 	mov	r22,r4
   422cc:	2821883a 	mov	r16,r5
   422d0:	d9c0a415 	stw	r7,656(sp)
   422d4:	3029883a 	mov	r20,r6
   422d8:	d800a215 	stw	zero,648(sp)
   422dc:	0023883a 	mov	r17,zero
   422e0:	d800a115 	stw	zero,644(sp)
   422e4:	d800a015 	stw	zero,640(sp)
   422e8:	a1000007 	ldb	r4,0(r20)
   422ec:	d9000115 	stw	r4,4(sp)
   422f0:	20001f26 	beq	r4,zero,42370 <__svfscanf_r+0xd4>
   422f4:	04c00174 	movhi	r19,5
   422f8:	9ccfb104 	addi	r19,r19,16068
   422fc:	9c800017 	ldw	r18,0(r19)
   42300:	a5000044 	addi	r20,r20,1
   42304:	9107883a 	add	r3,r18,r4
   42308:	18800003 	ldbu	r2,0(r3)
   4230c:	1080020c 	andi	r2,r2,8
   42310:	10002426 	beq	r2,zero,423a4 <__svfscanf_r+0x108>
   42314:	80c00117 	ldw	r3,4(r16)
   42318:	00c00e0e 	bge	zero,r3,42354 <__svfscanf_r+0xb8>
   4231c:	81400017 	ldw	r5,0(r16)
   42320:	98800017 	ldw	r2,0(r19)
   42324:	28c00003 	ldbu	r3,0(r5)
   42328:	1887883a 	add	r3,r3,r2
   4232c:	19000003 	ldbu	r4,0(r3)
   42330:	2100020c 	andi	r4,r4,8
   42334:	203fec26 	beq	r4,zero,422e8 <__svfscanf_r+0x4c>
   42338:	80c00117 	ldw	r3,4(r16)
   4233c:	29800044 	addi	r6,r5,1
   42340:	8c400044 	addi	r17,r17,1
   42344:	18ffffc4 	addi	r3,r3,-1
   42348:	81800015 	stw	r6,0(r16)
   4234c:	80c00115 	stw	r3,4(r16)
   42350:	00fff216 	blt	zero,r3,4231c <__svfscanf_r+0x80>
   42354:	b009883a 	mov	r4,r22
   42358:	800b883a 	mov	r5,r16
   4235c:	00489640 	call	48964 <__srefill_r>
   42360:	103fee26 	beq	r2,zero,4231c <__svfscanf_r+0x80>
   42364:	a1000007 	ldb	r4,0(r20)
   42368:	d9000115 	stw	r4,4(sp)
   4236c:	203fe11e 	bne	r4,zero,422f4 <__svfscanf_r+0x58>
   42370:	d880a217 	ldw	r2,648(sp)
   42374:	dfc0b117 	ldw	ra,708(sp)
   42378:	df00b017 	ldw	fp,704(sp)
   4237c:	ddc0af17 	ldw	r23,700(sp)
   42380:	dd80ae17 	ldw	r22,696(sp)
   42384:	dd40ad17 	ldw	r21,692(sp)
   42388:	dd00ac17 	ldw	r20,688(sp)
   4238c:	dcc0ab17 	ldw	r19,684(sp)
   42390:	dc80aa17 	ldw	r18,680(sp)
   42394:	dc40a917 	ldw	r17,676(sp)
   42398:	dc00a817 	ldw	r16,672(sp)
   4239c:	dec0b204 	addi	sp,sp,712
   423a0:	f800283a 	ret
   423a4:	00800944 	movi	r2,37
   423a8:	20801626 	beq	r4,r2,42404 <__svfscanf_r+0x168>
   423ac:	80800117 	ldw	r2,4(r16)
   423b0:	00800b0e 	bge	zero,r2,423e0 <__svfscanf_r+0x144>
   423b4:	81000017 	ldw	r4,0(r16)
   423b8:	a0ffffc7 	ldb	r3,-1(r20)
   423bc:	20800003 	ldbu	r2,0(r4)
   423c0:	10ffeb1e 	bne	r2,r3,42370 <__svfscanf_r+0xd4>
   423c4:	80c00117 	ldw	r3,4(r16)
   423c8:	21800044 	addi	r6,r4,1
   423cc:	8c400044 	addi	r17,r17,1
   423d0:	18ffffc4 	addi	r3,r3,-1
   423d4:	80c00115 	stw	r3,4(r16)
   423d8:	81800015 	stw	r6,0(r16)
   423dc:	003fc206 	br	422e8 <__svfscanf_r+0x4c>
   423e0:	b009883a 	mov	r4,r22
   423e4:	800b883a 	mov	r5,r16
   423e8:	00489640 	call	48964 <__srefill_r>
   423ec:	103ff126 	beq	r2,zero,423b4 <__svfscanf_r+0x118>
   423f0:	d900a217 	ldw	r4,648(sp)
   423f4:	2004981e 	bne	r4,zero,43658 <__svfscanf_r+0x13bc>
   423f8:	00bfffc4 	movi	r2,-1
   423fc:	d880a215 	stw	r2,648(sp)
   42400:	003fdb06 	br	42370 <__svfscanf_r+0xd4>
   42404:	d800a315 	stw	zero,652(sp)
   42408:	002b883a 	mov	r21,zero
   4240c:	a0c00003 	ldbu	r3,0(r20)
   42410:	00801e04 	movi	r2,120
   42414:	a5000044 	addi	r20,r20,1
   42418:	1dc03fcc 	andi	r23,r3,255
   4241c:	bdc0201c 	xori	r23,r23,128
   42420:	bdffe004 	addi	r23,r23,-128
   42424:	10c08036 	bltu	r2,r3,42628 <__svfscanf_r+0x38c>
   42428:	18c5883a 	add	r2,r3,r3
   4242c:	1085883a 	add	r2,r2,r2
   42430:	00c00134 	movhi	r3,4
   42434:	18c91104 	addi	r3,r3,9284
   42438:	10c5883a 	add	r2,r2,r3
   4243c:	11000017 	ldw	r4,0(r2)
   42440:	2000683a 	jmp	r4
   42444:	000423f8 	rdprs	zero,zero,4239
   42448:	00042628 	cmpgeui	zero,zero,4248
   4244c:	00042628 	cmpgeui	zero,zero,4248
   42450:	00042628 	cmpgeui	zero,zero,4248
   42454:	00042628 	cmpgeui	zero,zero,4248
   42458:	00042628 	cmpgeui	zero,zero,4248
   4245c:	00042628 	cmpgeui	zero,zero,4248
   42460:	00042628 	cmpgeui	zero,zero,4248
   42464:	00042628 	cmpgeui	zero,zero,4248
   42468:	00042628 	cmpgeui	zero,zero,4248
   4246c:	00042628 	cmpgeui	zero,zero,4248
   42470:	00042628 	cmpgeui	zero,zero,4248
   42474:	00042628 	cmpgeui	zero,zero,4248
   42478:	00042628 	cmpgeui	zero,zero,4248
   4247c:	00042628 	cmpgeui	zero,zero,4248
   42480:	00042628 	cmpgeui	zero,zero,4248
   42484:	00042628 	cmpgeui	zero,zero,4248
   42488:	00042628 	cmpgeui	zero,zero,4248
   4248c:	00042628 	cmpgeui	zero,zero,4248
   42490:	00042628 	cmpgeui	zero,zero,4248
   42494:	00042628 	cmpgeui	zero,zero,4248
   42498:	00042628 	cmpgeui	zero,zero,4248
   4249c:	00042628 	cmpgeui	zero,zero,4248
   424a0:	00042628 	cmpgeui	zero,zero,4248
   424a4:	00042628 	cmpgeui	zero,zero,4248
   424a8:	00042628 	cmpgeui	zero,zero,4248
   424ac:	00042628 	cmpgeui	zero,zero,4248
   424b0:	00042628 	cmpgeui	zero,zero,4248
   424b4:	00042628 	cmpgeui	zero,zero,4248
   424b8:	00042628 	cmpgeui	zero,zero,4248
   424bc:	00042628 	cmpgeui	zero,zero,4248
   424c0:	00042628 	cmpgeui	zero,zero,4248
   424c4:	00042628 	cmpgeui	zero,zero,4248
   424c8:	00042628 	cmpgeui	zero,zero,4248
   424cc:	00042628 	cmpgeui	zero,zero,4248
   424d0:	00042628 	cmpgeui	zero,zero,4248
   424d4:	00042628 	cmpgeui	zero,zero,4248
   424d8:	000423ac 	andhi	zero,zero,4238
   424dc:	00042628 	cmpgeui	zero,zero,4248
   424e0:	00042628 	cmpgeui	zero,zero,4248
   424e4:	00042628 	cmpgeui	zero,zero,4248
   424e8:	00042628 	cmpgeui	zero,zero,4248
   424ec:	000434c8 	cmpgei	zero,zero,4307
   424f0:	00042628 	cmpgeui	zero,zero,4248
   424f4:	00042628 	cmpgeui	zero,zero,4248
   424f8:	00042628 	cmpgeui	zero,zero,4248
   424fc:	00042628 	cmpgeui	zero,zero,4248
   42500:	00042628 	cmpgeui	zero,zero,4248
   42504:	000434ac 	andhi	zero,zero,4306
   42508:	000434ac 	andhi	zero,zero,4306
   4250c:	000434ac 	andhi	zero,zero,4306
   42510:	000434ac 	andhi	zero,zero,4306
   42514:	000434ac 	andhi	zero,zero,4306
   42518:	000434ac 	andhi	zero,zero,4306
   4251c:	000434ac 	andhi	zero,zero,4306
   42520:	000434ac 	andhi	zero,zero,4306
   42524:	000434ac 	andhi	zero,zero,4306
   42528:	000434ac 	andhi	zero,zero,4306
   4252c:	00042628 	cmpgeui	zero,zero,4248
   42530:	00042628 	cmpgeui	zero,zero,4248
   42534:	00042628 	cmpgeui	zero,zero,4248
   42538:	00042628 	cmpgeui	zero,zero,4248
   4253c:	00042628 	cmpgeui	zero,zero,4248
   42540:	00042628 	cmpgeui	zero,zero,4248
   42544:	00042628 	cmpgeui	zero,zero,4248
   42548:	00042628 	cmpgeui	zero,zero,4248
   4254c:	00042628 	cmpgeui	zero,zero,4248
   42550:	00042628 	cmpgeui	zero,zero,4248
   42554:	0004263c 	xorhi	zero,zero,4248
   42558:	000435b0 	cmpltui	zero,zero,4310
   4255c:	00042628 	cmpgeui	zero,zero,4248
   42560:	000435b0 	cmpltui	zero,zero,4310
   42564:	00042628 	cmpgeui	zero,zero,4248
   42568:	00042628 	cmpgeui	zero,zero,4248
   4256c:	00042628 	cmpgeui	zero,zero,4248
   42570:	00042628 	cmpgeui	zero,zero,4248
   42574:	000434a4 	muli	zero,zero,4306
   42578:	00042628 	cmpgeui	zero,zero,4248
   4257c:	00042628 	cmpgeui	zero,zero,4248
   42580:	00043484 	movi	zero,4306
   42584:	00042628 	cmpgeui	zero,zero,4248
   42588:	00042628 	cmpgeui	zero,zero,4248
   4258c:	00042628 	cmpgeui	zero,zero,4248
   42590:	00042628 	cmpgeui	zero,zero,4248
   42594:	00042628 	cmpgeui	zero,zero,4248
   42598:	00042628 	cmpgeui	zero,zero,4248
   4259c:	00042628 	cmpgeui	zero,zero,4248
   425a0:	00042628 	cmpgeui	zero,zero,4248
   425a4:	000434d0 	cmplti	zero,zero,4307
   425a8:	00042628 	cmpgeui	zero,zero,4248
   425ac:	00042628 	cmpgeui	zero,zero,4248
   425b0:	00043468 	cmpgeui	zero,zero,4305
   425b4:	00042628 	cmpgeui	zero,zero,4248
   425b8:	00042628 	cmpgeui	zero,zero,4248
   425bc:	00042628 	cmpgeui	zero,zero,4248
   425c0:	00042628 	cmpgeui	zero,zero,4248
   425c4:	00042628 	cmpgeui	zero,zero,4248
   425c8:	00042628 	cmpgeui	zero,zero,4248
   425cc:	00042628 	cmpgeui	zero,zero,4248
   425d0:	000435b8 	rdprs	zero,zero,4310
   425d4:	00042640 	call	4264 <__alt_mem_onchip_mem-0x3bd9c>
   425d8:	000435b0 	cmpltui	zero,zero,4310
   425dc:	000435b0 	cmpltui	zero,zero,4310
   425e0:	000435b0 	cmpltui	zero,zero,4310
   425e4:	000435c4 	movi	zero,4311
   425e8:	0004350c 	andi	zero,zero,4308
   425ec:	00042628 	cmpgeui	zero,zero,4248
   425f0:	00042628 	cmpgeui	zero,zero,4248
   425f4:	00042bd4 	movui	zero,4271
   425f8:	00042628 	cmpgeui	zero,zero,4248
   425fc:	000436c0 	call	436c <__alt_mem_onchip_mem-0x3bc94>
   42600:	0004367c 	xorhi	zero,zero,4313
   42604:	000436a0 	cmpeqi	zero,zero,4314
   42608:	00042628 	cmpgeui	zero,zero,4248
   4260c:	00042628 	cmpgeui	zero,zero,4248
   42610:	00043698 	cmpnei	zero,zero,4314
   42614:	00042628 	cmpgeui	zero,zero,4248
   42618:	000434f0 	cmpltui	zero,zero,4307
   4261c:	00042628 	cmpgeui	zero,zero,4248
   42620:	00042628 	cmpgeui	zero,zero,4248
   42624:	000434d0 	cmplti	zero,zero,4307
   42628:	bc87883a 	add	r3,r23,r18
   4262c:	18800003 	ldbu	r2,0(r3)
   42630:	1080004c 	andi	r2,r2,1
   42634:	1005003a 	cmpeq	r2,r2,zero
   42638:	1000011e 	bne	r2,zero,42640 <__svfscanf_r+0x3a4>
   4263c:	ad400054 	ori	r21,r21,1
   42640:	01000174 	movhi	r4,5
   42644:	2129e404 	addi	r4,r4,-22640
   42648:	00800284 	movi	r2,10
   4264c:	d900a015 	stw	r4,640(sp)
   42650:	048000c4 	movi	r18,3
   42654:	d880a115 	stw	r2,644(sp)
   42658:	80c00117 	ldw	r3,4(r16)
   4265c:	00c13f0e 	bge	zero,r3,42b5c <__svfscanf_r+0x8c0>
   42660:	a880100c 	andi	r2,r21,64
   42664:	10001326 	beq	r2,zero,426b4 <__svfscanf_r+0x418>
   42668:	00800104 	movi	r2,4
   4266c:	14bf1e36 	bltu	r2,r18,422e8 <__svfscanf_r+0x4c>
   42670:	9485883a 	add	r2,r18,r18
   42674:	1085883a 	add	r2,r2,r2
   42678:	00c00134 	movhi	r3,4
   4267c:	18c9a304 	addi	r3,r3,9868
   42680:	10c5883a 	add	r2,r2,r3
   42684:	11000017 	ldw	r4,0(r2)
   42688:	2000683a 	jmp	r4
   4268c:	000426f0 	cmpltui	zero,zero,4251
   42690:	000427f0 	cmpltui	zero,zero,4255
   42694:	00042a00 	call	42a0 <__alt_mem_onchip_mem-0x3bd60>
   42698:	00042864 	muli	zero,zero,4257
   4269c:	00042b38 	rdprs	zero,zero,4268
   426a0:	b009883a 	mov	r4,r22
   426a4:	800b883a 	mov	r5,r16
   426a8:	00489640 	call	48964 <__srefill_r>
   426ac:	103f501e 	bne	r2,zero,423f0 <__svfscanf_r+0x154>
   426b0:	8c400044 	addi	r17,r17,1
   426b4:	81400017 	ldw	r5,0(r16)
   426b8:	98800017 	ldw	r2,0(r19)
   426bc:	28c00003 	ldbu	r3,0(r5)
   426c0:	1887883a 	add	r3,r3,r2
   426c4:	19000003 	ldbu	r4,0(r3)
   426c8:	2100020c 	andi	r4,r4,8
   426cc:	203fe626 	beq	r4,zero,42668 <__svfscanf_r+0x3cc>
   426d0:	80c00117 	ldw	r3,4(r16)
   426d4:	18ffffc4 	addi	r3,r3,-1
   426d8:	80c00115 	stw	r3,4(r16)
   426dc:	00fff00e 	bge	zero,r3,426a0 <__svfscanf_r+0x404>
   426e0:	29800044 	addi	r6,r5,1
   426e4:	8c400044 	addi	r17,r17,1
   426e8:	81800015 	stw	r6,0(r16)
   426ec:	003ff106 	br	426b4 <__svfscanf_r+0x418>
   426f0:	d8c0a317 	ldw	r3,652(sp)
   426f4:	1800021e 	bne	r3,zero,42700 <__svfscanf_r+0x464>
   426f8:	01000044 	movi	r4,1
   426fc:	d900a315 	stw	r4,652(sp)
   42700:	a880004c 	andi	r2,r21,1
   42704:	1005003a 	cmpeq	r2,r2,zero
   42708:	1002811e 	bne	r2,zero,43110 <__svfscanf_r+0xe74>
   4270c:	ad40040c 	andi	r21,r21,16
   42710:	a805003a 	cmpeq	r2,r21,zero
   42714:	d880a615 	stw	r2,664(sp)
   42718:	1003d31e 	bne	r2,zero,43668 <__svfscanf_r+0x13cc>
   4271c:	0027883a 	mov	r19,zero
   42720:	d900a317 	ldw	r4,652(sp)
   42724:	2003c726 	beq	r4,zero,43644 <__svfscanf_r+0x13a8>
   42728:	07000174 	movhi	fp,5
   4272c:	e70fb404 	addi	fp,fp,16080
   42730:	e0800017 	ldw	r2,0(fp)
   42734:	103f2e26 	beq	r2,zero,423f0 <__svfscanf_r+0x154>
   42738:	d8804404 	addi	r2,sp,272
   4273c:	0025883a 	mov	r18,zero
   42740:	d880a515 	stw	r2,660(sp)
   42744:	05ffffc4 	movi	r23,-1
   42748:	80800017 	ldw	r2,0(r16)
   4274c:	80c00117 	ldw	r3,4(r16)
   42750:	d900a517 	ldw	r4,660(sp)
   42754:	12000003 	ldbu	r8,0(r2)
   42758:	18ffffc4 	addi	r3,r3,-1
   4275c:	11800044 	addi	r6,r2,1
   42760:	248f883a 	add	r7,r4,r18
   42764:	80c00115 	stw	r3,4(r16)
   42768:	81800015 	stw	r6,0(r16)
   4276c:	3a000005 	stb	r8,0(r7)
   42770:	d9000204 	addi	r4,sp,8
   42774:	000b883a 	mov	r5,zero
   42778:	01800204 	movi	r6,8
   4277c:	004724c0 	call	4724c <memset>
   42780:	d980a517 	ldw	r6,660(sp)
   42784:	94800044 	addi	r18,r18,1
   42788:	d8800204 	addi	r2,sp,8
   4278c:	b009883a 	mov	r4,r22
   42790:	980b883a 	mov	r5,r19
   42794:	900f883a 	mov	r7,r18
   42798:	d8800015 	stw	r2,0(sp)
   4279c:	0046ee80 	call	46ee8 <_mbrtowc_r>
   427a0:	1007883a 	mov	r3,r2
   427a4:	15ff1226 	beq	r2,r23,423f0 <__svfscanf_r+0x154>
   427a8:	10039e1e 	bne	r2,zero,43624 <__svfscanf_r+0x1388>
   427ac:	a800011e 	bne	r21,zero,427b4 <__svfscanf_r+0x518>
   427b0:	98000015 	stw	zero,0(r19)
   427b4:	d8c0a317 	ldw	r3,652(sp)
   427b8:	d900a617 	ldw	r4,664(sp)
   427bc:	8ca3883a 	add	r17,r17,r18
   427c0:	18ffffc4 	addi	r3,r3,-1
   427c4:	d8c0a315 	stw	r3,652(sp)
   427c8:	20000126 	beq	r4,zero,427d0 <__svfscanf_r+0x534>
   427cc:	9cc00104 	addi	r19,r19,4
   427d0:	0025883a 	mov	r18,zero
   427d4:	80c00117 	ldw	r3,4(r16)
   427d8:	00c3950e 	bge	zero,r3,43630 <__svfscanf_r+0x1394>
   427dc:	d880a317 	ldw	r2,652(sp)
   427e0:	10039826 	beq	r2,zero,43644 <__svfscanf_r+0x13a8>
   427e4:	e0800017 	ldw	r2,0(fp)
   427e8:	90bfd71e 	bne	r18,r2,42748 <__svfscanf_r+0x4ac>
   427ec:	003f0006 	br	423f0 <__svfscanf_r+0x154>
   427f0:	d880a317 	ldw	r2,652(sp)
   427f4:	1000021e 	bne	r2,zero,42800 <__svfscanf_r+0x564>
   427f8:	00ffffc4 	movi	r3,-1
   427fc:	d8c0a315 	stw	r3,652(sp)
   42800:	a880040c 	andi	r2,r21,16
   42804:	1003b826 	beq	r2,zero,436e8 <__svfscanf_r+0x144c>
   42808:	0027883a 	mov	r19,zero
   4280c:	dd400404 	addi	r21,sp,16
   42810:	81000017 	ldw	r4,0(r16)
   42814:	20800003 	ldbu	r2,0(r4)
   42818:	a885883a 	add	r2,r21,r2
   4281c:	10c00007 	ldb	r3,0(r2)
   42820:	18037d26 	beq	r3,zero,43618 <__svfscanf_r+0x137c>
   42824:	80c00117 	ldw	r3,4(r16)
   42828:	21800044 	addi	r6,r4,1
   4282c:	d900a317 	ldw	r4,652(sp)
   42830:	18ffffc4 	addi	r3,r3,-1
   42834:	9cc00044 	addi	r19,r19,1
   42838:	81800015 	stw	r6,0(r16)
   4283c:	80c00115 	stw	r3,4(r16)
   42840:	24c37526 	beq	r4,r19,43618 <__svfscanf_r+0x137c>
   42844:	00fff216 	blt	zero,r3,42810 <__svfscanf_r+0x574>
   42848:	b009883a 	mov	r4,r22
   4284c:	800b883a 	mov	r5,r16
   42850:	00489640 	call	48964 <__srefill_r>
   42854:	103fee26 	beq	r2,zero,42810 <__svfscanf_r+0x574>
   42858:	983ee526 	beq	r19,zero,423f0 <__svfscanf_r+0x154>
   4285c:	8ce3883a 	add	r17,r17,r19
   42860:	003ea106 	br	422e8 <__svfscanf_r+0x4c>
   42864:	d900a317 	ldw	r4,652(sp)
   42868:	00805704 	movi	r2,348
   4286c:	20ffffc4 	addi	r3,r4,-1
   42870:	10c0bf2e 	bgeu	r2,r3,42b70 <__svfscanf_r+0x8d4>
   42874:	00805744 	movi	r2,349
   42878:	24ffa8c4 	addi	r19,r4,-349
   4287c:	ac836014 	ori	r18,r21,3456
   42880:	d880a315 	stw	r2,652(sp)
   42884:	d8c04404 	addi	r3,sp,272
   42888:	d8c0a515 	stw	r3,660(sp)
   4288c:	002f883a 	mov	r23,zero
   42890:	182b883a 	mov	r21,r3
   42894:	81800017 	ldw	r6,0(r16)
   42898:	00c01344 	movi	r3,77
   4289c:	31400003 	ldbu	r5,0(r6)
   428a0:	28bff544 	addi	r2,r5,-43
   428a4:	10803fcc 	andi	r2,r2,255
   428a8:	1880b836 	bltu	r3,r2,42b8c <__svfscanf_r+0x8f0>
   428ac:	1085883a 	add	r2,r2,r2
   428b0:	1085883a 	add	r2,r2,r2
   428b4:	00c00134 	movhi	r3,4
   428b8:	18ca3204 	addi	r3,r3,10440
   428bc:	10c5883a 	add	r2,r2,r3
   428c0:	11000017 	ldw	r4,0(r2)
   428c4:	2000683a 	jmp	r4
   428c8:	00042cdc 	xori	zero,zero,4275
   428cc:	00042b8c 	andi	zero,zero,4270
   428d0:	00042cdc 	xori	zero,zero,4275
   428d4:	00042b8c 	andi	zero,zero,4270
   428d8:	00042b8c 	andi	zero,zero,4270
   428dc:	00042d20 	cmpeqi	zero,zero,4276
   428e0:	00043524 	muli	zero,zero,4308
   428e4:	00043524 	muli	zero,zero,4308
   428e8:	00043524 	muli	zero,zero,4308
   428ec:	00043524 	muli	zero,zero,4308
   428f0:	00043524 	muli	zero,zero,4308
   428f4:	00043524 	muli	zero,zero,4308
   428f8:	00043524 	muli	zero,zero,4308
   428fc:	0004354c 	andi	zero,zero,4309
   42900:	0004354c 	andi	zero,zero,4309
   42904:	00042b8c 	andi	zero,zero,4270
   42908:	00042b8c 	andi	zero,zero,4270
   4290c:	00042b8c 	andi	zero,zero,4270
   42910:	00042b8c 	andi	zero,zero,4270
   42914:	00042b8c 	andi	zero,zero,4270
   42918:	00042b8c 	andi	zero,zero,4270
   4291c:	00042b8c 	andi	zero,zero,4270
   42920:	0004357c 	xorhi	zero,zero,4309
   42924:	0004357c 	xorhi	zero,zero,4309
   42928:	0004357c 	xorhi	zero,zero,4309
   4292c:	0004357c 	xorhi	zero,zero,4309
   42930:	0004357c 	xorhi	zero,zero,4309
   42934:	0004357c 	xorhi	zero,zero,4309
   42938:	00042b8c 	andi	zero,zero,4270
   4293c:	00042b8c 	andi	zero,zero,4270
   42940:	00042b8c 	andi	zero,zero,4270
   42944:	00042b8c 	andi	zero,zero,4270
   42948:	00042b8c 	andi	zero,zero,4270
   4294c:	00042b8c 	andi	zero,zero,4270
   42950:	00042b8c 	andi	zero,zero,4270
   42954:	00042b8c 	andi	zero,zero,4270
   42958:	00042b8c 	andi	zero,zero,4270
   4295c:	00042b8c 	andi	zero,zero,4270
   42960:	00042b8c 	andi	zero,zero,4270
   42964:	00042b8c 	andi	zero,zero,4270
   42968:	00042b8c 	andi	zero,zero,4270
   4296c:	00042b8c 	andi	zero,zero,4270
   42970:	00042b8c 	andi	zero,zero,4270
   42974:	00042b8c 	andi	zero,zero,4270
   42978:	00042b8c 	andi	zero,zero,4270
   4297c:	0004358c 	andi	zero,zero,4310
   42980:	00042b8c 	andi	zero,zero,4270
   42984:	00042b8c 	andi	zero,zero,4270
   42988:	00042b8c 	andi	zero,zero,4270
   4298c:	00042b8c 	andi	zero,zero,4270
   42990:	00042b8c 	andi	zero,zero,4270
   42994:	00042b8c 	andi	zero,zero,4270
   42998:	00042b8c 	andi	zero,zero,4270
   4299c:	00042b8c 	andi	zero,zero,4270
   429a0:	0004357c 	xorhi	zero,zero,4309
   429a4:	0004357c 	xorhi	zero,zero,4309
   429a8:	0004357c 	xorhi	zero,zero,4309
   429ac:	0004357c 	xorhi	zero,zero,4309
   429b0:	0004357c 	xorhi	zero,zero,4309
   429b4:	0004357c 	xorhi	zero,zero,4309
   429b8:	00042b8c 	andi	zero,zero,4270
   429bc:	00042b8c 	andi	zero,zero,4270
   429c0:	00042b8c 	andi	zero,zero,4270
   429c4:	00042b8c 	andi	zero,zero,4270
   429c8:	00042b8c 	andi	zero,zero,4270
   429cc:	00042b8c 	andi	zero,zero,4270
   429d0:	00042b8c 	andi	zero,zero,4270
   429d4:	00042b8c 	andi	zero,zero,4270
   429d8:	00042b8c 	andi	zero,zero,4270
   429dc:	00042b8c 	andi	zero,zero,4270
   429e0:	00042b8c 	andi	zero,zero,4270
   429e4:	00042b8c 	andi	zero,zero,4270
   429e8:	00042b8c 	andi	zero,zero,4270
   429ec:	00042b8c 	andi	zero,zero,4270
   429f0:	00042b8c 	andi	zero,zero,4270
   429f4:	00042b8c 	andi	zero,zero,4270
   429f8:	00042b8c 	andi	zero,zero,4270
   429fc:	0004358c 	andi	zero,zero,4310
   42a00:	d900a317 	ldw	r4,652(sp)
   42a04:	2000021e 	bne	r4,zero,42a10 <__svfscanf_r+0x774>
   42a08:	00bfffc4 	movi	r2,-1
   42a0c:	d880a315 	stw	r2,652(sp)
   42a10:	a880004c 	andi	r2,r21,1
   42a14:	1005003a 	cmpeq	r2,r2,zero
   42a18:	1003651e 	bne	r2,zero,437b0 <__svfscanf_r+0x1514>
   42a1c:	adc0040c 	andi	r23,r21,16
   42a20:	b807003a 	cmpeq	r3,r23,zero
   42a24:	d8c0a715 	stw	r3,668(sp)
   42a28:	1802f61e 	bne	r3,zero,43604 <__svfscanf_r+0x1368>
   42a2c:	dd400104 	addi	r21,sp,4
   42a30:	0025883a 	mov	r18,zero
   42a34:	073fffc4 	movi	fp,-1
   42a38:	81400017 	ldw	r5,0(r16)
   42a3c:	98800017 	ldw	r2,0(r19)
   42a40:	29c00003 	ldbu	r7,0(r5)
   42a44:	38c03fcc 	andi	r3,r7,255
   42a48:	1887883a 	add	r3,r3,r2
   42a4c:	19000003 	ldbu	r4,0(r3)
   42a50:	2100020c 	andi	r4,r4,8
   42a54:	2000321e 	bne	r4,zero,42b20 <__svfscanf_r+0x884>
   42a58:	d8c0a317 	ldw	r3,652(sp)
   42a5c:	18003026 	beq	r3,zero,42b20 <__svfscanf_r+0x884>
   42a60:	00800174 	movhi	r2,5
   42a64:	108fb404 	addi	r2,r2,16080
   42a68:	10c00017 	ldw	r3,0(r2)
   42a6c:	90fe6026 	beq	r18,r3,423f0 <__svfscanf_r+0x154>
   42a70:	d8c04404 	addi	r3,sp,272
   42a74:	80800117 	ldw	r2,4(r16)
   42a78:	d8c0a515 	stw	r3,660(sp)
   42a7c:	d900a517 	ldw	r4,660(sp)
   42a80:	10ffffc4 	addi	r3,r2,-1
   42a84:	29800044 	addi	r6,r5,1
   42a88:	80c00115 	stw	r3,4(r16)
   42a8c:	2485883a 	add	r2,r4,r18
   42a90:	81800015 	stw	r6,0(r16)
   42a94:	d9000204 	addi	r4,sp,8
   42a98:	000b883a 	mov	r5,zero
   42a9c:	01800204 	movi	r6,8
   42aa0:	11c00005 	stb	r7,0(r2)
   42aa4:	004724c0 	call	4724c <memset>
   42aa8:	d980a517 	ldw	r6,660(sp)
   42aac:	94800044 	addi	r18,r18,1
   42ab0:	d8800204 	addi	r2,sp,8
   42ab4:	b009883a 	mov	r4,r22
   42ab8:	a80b883a 	mov	r5,r21
   42abc:	900f883a 	mov	r7,r18
   42ac0:	d8800015 	stw	r2,0(sp)
   42ac4:	0046ee80 	call	46ee8 <_mbrtowc_r>
   42ac8:	1007883a 	mov	r3,r2
   42acc:	173e4826 	beq	r2,fp,423f0 <__svfscanf_r+0x154>
   42ad0:	1002c91e 	bne	r2,zero,435f8 <__svfscanf_r+0x135c>
   42ad4:	a8000015 	stw	zero,0(r21)
   42ad8:	a9000017 	ldw	r4,0(r21)
   42adc:	00465240 	call	46524 <iswspace>
   42ae0:	1002bc1e 	bne	r2,zero,435d4 <__svfscanf_r+0x1338>
   42ae4:	d900a317 	ldw	r4,652(sp)
   42ae8:	d880a717 	ldw	r2,668(sp)
   42aec:	8ca3883a 	add	r17,r17,r18
   42af0:	213fffc4 	addi	r4,r4,-1
   42af4:	d900a315 	stw	r4,652(sp)
   42af8:	10000126 	beq	r2,zero,42b00 <__svfscanf_r+0x864>
   42afc:	ad400104 	addi	r21,r21,4
   42b00:	0025883a 	mov	r18,zero
   42b04:	80c00117 	ldw	r3,4(r16)
   42b08:	00ffcb16 	blt	zero,r3,42a38 <__svfscanf_r+0x79c>
   42b0c:	b009883a 	mov	r4,r22
   42b10:	800b883a 	mov	r5,r16
   42b14:	00489640 	call	48964 <__srefill_r>
   42b18:	103fc726 	beq	r2,zero,42a38 <__svfscanf_r+0x79c>
   42b1c:	903e341e 	bne	r18,zero,423f0 <__svfscanf_r+0x154>
   42b20:	b83df11e 	bne	r23,zero,422e8 <__svfscanf_r+0x4c>
   42b24:	d900a217 	ldw	r4,648(sp)
   42b28:	a8000015 	stw	zero,0(r21)
   42b2c:	21000044 	addi	r4,r4,1
   42b30:	d900a215 	stw	r4,648(sp)
   42b34:	003dec06 	br	422e8 <__svfscanf_r+0x4c>
   42b38:	d900a317 	ldw	r4,652(sp)
   42b3c:	00805704 	movi	r2,348
   42b40:	20ffffc4 	addi	r3,r4,-1
   42b44:	10c0902e 	bgeu	r2,r3,42d88 <__svfscanf_r+0xaec>
   42b48:	00805744 	movi	r2,349
   42b4c:	24ffa8c4 	addi	r19,r4,-349
   42b50:	ad41e014 	ori	r21,r21,1920
   42b54:	d880a315 	stw	r2,652(sp)
   42b58:	00010806 	br	42f7c <__svfscanf_r+0xce0>
   42b5c:	b009883a 	mov	r4,r22
   42b60:	800b883a 	mov	r5,r16
   42b64:	00489640 	call	48964 <__srefill_r>
   42b68:	103ebd26 	beq	r2,zero,42660 <__svfscanf_r+0x3c4>
   42b6c:	003e2006 	br	423f0 <__svfscanf_r+0x154>
   42b70:	d900a317 	ldw	r4,652(sp)
   42b74:	ac836014 	ori	r18,r21,3456
   42b78:	2002941e 	bne	r4,zero,435cc <__svfscanf_r+0x1330>
   42b7c:	d8804404 	addi	r2,sp,272
   42b80:	d880a515 	stw	r2,660(sp)
   42b84:	002f883a 	mov	r23,zero
   42b88:	102b883a 	mov	r21,r2
   42b8c:	9080400c 	andi	r2,r18,256
   42b90:	10000926 	beq	r2,zero,42bb8 <__svfscanf_r+0x91c>
   42b94:	d8c0a517 	ldw	r3,660(sp)
   42b98:	1d40052e 	bgeu	r3,r21,42bb0 <__svfscanf_r+0x914>
   42b9c:	ad7fffc4 	addi	r21,r21,-1
   42ba0:	a9400007 	ldb	r5,0(r21)
   42ba4:	b009883a 	mov	r4,r22
   42ba8:	800d883a 	mov	r6,r16
   42bac:	004b34c0 	call	4b34c <_ungetc_r>
   42bb0:	d900a517 	ldw	r4,660(sp)
   42bb4:	257dee26 	beq	r4,r21,42370 <__svfscanf_r+0xd4>
   42bb8:	9080040c 	andi	r2,r18,16
   42bbc:	10000a26 	beq	r2,zero,42be8 <__svfscanf_r+0x94c>
   42bc0:	d8c0a517 	ldw	r3,660(sp)
   42bc4:	a8c5c83a 	sub	r2,r21,r3
   42bc8:	b885883a 	add	r2,r23,r2
   42bcc:	88a3883a 	add	r17,r17,r2
   42bd0:	003dc506 	br	422e8 <__svfscanf_r+0x4c>
   42bd4:	a0c00007 	ldb	r3,0(r20)
   42bd8:	00801b04 	movi	r2,108
   42bdc:	18801726 	beq	r3,r2,42c3c <__svfscanf_r+0x9a0>
   42be0:	ad400054 	ori	r21,r21,1
   42be4:	003e0906 	br	4240c <__svfscanf_r+0x170>
   42be8:	a8000005 	stb	zero,0(r21)
   42bec:	d8c0a017 	ldw	r3,640(sp)
   42bf0:	d940a517 	ldw	r5,660(sp)
   42bf4:	d9c0a117 	ldw	r7,644(sp)
   42bf8:	b009883a 	mov	r4,r22
   42bfc:	000d883a 	mov	r6,zero
   42c00:	183ee83a 	callr	r3
   42c04:	1007883a 	mov	r3,r2
   42c08:	9080080c 	andi	r2,r18,32
   42c0c:	1000251e 	bne	r2,zero,42ca4 <__svfscanf_r+0xa08>
   42c10:	9080010c 	andi	r2,r18,4
   42c14:	10000c26 	beq	r2,zero,42c48 <__svfscanf_r+0x9ac>
   42c18:	d900a417 	ldw	r4,656(sp)
   42c1c:	20800017 	ldw	r2,0(r4)
   42c20:	21000104 	addi	r4,r4,4
   42c24:	d900a415 	stw	r4,656(sp)
   42c28:	10c0000d 	sth	r3,0(r2)
   42c2c:	d880a217 	ldw	r2,648(sp)
   42c30:	10800044 	addi	r2,r2,1
   42c34:	d880a215 	stw	r2,648(sp)
   42c38:	003fe106 	br	42bc0 <__svfscanf_r+0x924>
   42c3c:	a5000044 	addi	r20,r20,1
   42c40:	ad400094 	ori	r21,r21,2
   42c44:	003df106 	br	4240c <__svfscanf_r+0x170>
   42c48:	9080004c 	andi	r2,r18,1
   42c4c:	1005003a 	cmpeq	r2,r2,zero
   42c50:	10001426 	beq	r2,zero,42ca4 <__svfscanf_r+0xa08>
   42c54:	9080008c 	andi	r2,r18,2
   42c58:	10001226 	beq	r2,zero,42ca4 <__svfscanf_r+0xa08>
   42c5c:	d8c0a017 	ldw	r3,640(sp)
   42c60:	00800174 	movhi	r2,5
   42c64:	10ab4704 	addi	r2,r2,-21220
   42c68:	18801426 	beq	r3,r2,42cbc <__svfscanf_r+0xa20>
   42c6c:	d9c0a117 	ldw	r7,644(sp)
   42c70:	d940a517 	ldw	r5,660(sp)
   42c74:	000d883a 	mov	r6,zero
   42c78:	b009883a 	mov	r4,r22
   42c7c:	004aa040 	call	4aa04 <_strtoll_r>
   42c80:	100d883a 	mov	r6,r2
   42c84:	180f883a 	mov	r7,r3
   42c88:	d900a417 	ldw	r4,656(sp)
   42c8c:	20800017 	ldw	r2,0(r4)
   42c90:	21000104 	addi	r4,r4,4
   42c94:	d900a415 	stw	r4,656(sp)
   42c98:	11c00115 	stw	r7,4(r2)
   42c9c:	11800015 	stw	r6,0(r2)
   42ca0:	003fe206 	br	42c2c <__svfscanf_r+0x990>
   42ca4:	d900a417 	ldw	r4,656(sp)
   42ca8:	20800017 	ldw	r2,0(r4)
   42cac:	21000104 	addi	r4,r4,4
   42cb0:	d900a415 	stw	r4,656(sp)
   42cb4:	10c00015 	stw	r3,0(r2)
   42cb8:	003fdc06 	br	42c2c <__svfscanf_r+0x990>
   42cbc:	d9c0a117 	ldw	r7,644(sp)
   42cc0:	d940a517 	ldw	r5,660(sp)
   42cc4:	000d883a 	mov	r6,zero
   42cc8:	b009883a 	mov	r4,r22
   42ccc:	004af800 	call	4af80 <_strtoull_r>
   42cd0:	100d883a 	mov	r6,r2
   42cd4:	180f883a 	mov	r7,r3
   42cd8:	003feb06 	br	42c88 <__svfscanf_r+0x9ec>
   42cdc:	9080200c 	andi	r2,r18,128
   42ce0:	103faa26 	beq	r2,zero,42b8c <__svfscanf_r+0x8f0>
   42ce4:	00bfdfc4 	movi	r2,-129
   42ce8:	90a4703a 	and	r18,r18,r2
   42cec:	a9400005 	stb	r5,0(r21)
   42cf0:	ad400044 	addi	r21,r21,1
   42cf4:	80c00117 	ldw	r3,4(r16)
   42cf8:	18ffffc4 	addi	r3,r3,-1
   42cfc:	80c00115 	stw	r3,4(r16)
   42d00:	00c0130e 	bge	zero,r3,42d50 <__svfscanf_r+0xab4>
   42d04:	31800044 	addi	r6,r6,1
   42d08:	81800015 	stw	r6,0(r16)
   42d0c:	d880a317 	ldw	r2,652(sp)
   42d10:	10bfffc4 	addi	r2,r2,-1
   42d14:	d880a315 	stw	r2,652(sp)
   42d18:	103ede1e 	bne	r2,zero,42894 <__svfscanf_r+0x5f8>
   42d1c:	003f9b06 	br	42b8c <__svfscanf_r+0x8f0>
   42d20:	9082000c 	andi	r2,r18,2048
   42d24:	103ff126 	beq	r2,zero,42cec <__svfscanf_r+0xa50>
   42d28:	d8c0a117 	ldw	r3,644(sp)
   42d2c:	1800031e 	bne	r3,zero,42d3c <__svfscanf_r+0xaa0>
   42d30:	01000204 	movi	r4,8
   42d34:	94808014 	ori	r18,r18,512
   42d38:	d900a115 	stw	r4,644(sp)
   42d3c:	9081000c 	andi	r2,r18,1024
   42d40:	10000826 	beq	r2,zero,42d64 <__svfscanf_r+0xac8>
   42d44:	00be9fc4 	movi	r2,-1409
   42d48:	90a4703a 	and	r18,r18,r2
   42d4c:	003fe706 	br	42cec <__svfscanf_r+0xa50>
   42d50:	b009883a 	mov	r4,r22
   42d54:	800b883a 	mov	r5,r16
   42d58:	00489640 	call	48964 <__srefill_r>
   42d5c:	103feb26 	beq	r2,zero,42d0c <__svfscanf_r+0xa70>
   42d60:	003f8a06 	br	42b8c <__svfscanf_r+0x8f0>
   42d64:	98000426 	beq	r19,zero,42d78 <__svfscanf_r+0xadc>
   42d68:	d880a317 	ldw	r2,652(sp)
   42d6c:	9cffffc4 	addi	r19,r19,-1
   42d70:	10800044 	addi	r2,r2,1
   42d74:	d880a315 	stw	r2,652(sp)
   42d78:	00bf1fc4 	movi	r2,-897
   42d7c:	90a4703a 	and	r18,r18,r2
   42d80:	bdc00044 	addi	r23,r23,1
   42d84:	003fdb06 	br	42cf4 <__svfscanf_r+0xa58>
   42d88:	d900a317 	ldw	r4,652(sp)
   42d8c:	ad41e014 	ori	r21,r21,1920
   42d90:	2000791e 	bne	r4,zero,42f78 <__svfscanf_r+0xcdc>
   42d94:	d8c04404 	addi	r3,sp,272
   42d98:	d8c0a515 	stw	r3,660(sp)
   42d9c:	182f883a 	mov	r23,r3
   42da0:	d8009c15 	stw	zero,624(sp)
   42da4:	d8009d15 	stw	zero,628(sp)
   42da8:	d8009f15 	stw	zero,636(sp)
   42dac:	d8009e15 	stw	zero,632(sp)
   42db0:	0039883a 	mov	fp,zero
   42db4:	e1003fcc 	andi	r4,fp,255
   42db8:	2100201c 	xori	r4,r4,128
   42dbc:	213fe004 	addi	r4,r4,-128
   42dc0:	20ffffc4 	addi	r3,r4,-1
   42dc4:	00800184 	movi	r2,6
   42dc8:	10c01736 	bltu	r2,r3,42e28 <__svfscanf_r+0xb8c>
   42dcc:	00c00084 	movi	r3,2
   42dd0:	19026d0e 	bge	r3,r4,43788 <__svfscanf_r+0x14ec>
   42dd4:	008000c4 	movi	r2,3
   42dd8:	1100130e 	bge	r2,r4,42e28 <__svfscanf_r+0xb8c>
   42ddc:	e4ffffc4 	addi	r19,fp,-1
   42de0:	b825883a 	mov	r18,r23
   42de4:	94bfffc4 	addi	r18,r18,-1
   42de8:	91400007 	ldb	r5,0(r18)
   42dec:	b009883a 	mov	r4,r22
   42df0:	800d883a 	mov	r6,r16
   42df4:	004b34c0 	call	4b34c <_ungetc_r>
   42df8:	9cffffc4 	addi	r19,r19,-1
   42dfc:	98c03fcc 	andi	r3,r19,255
   42e00:	18c0201c 	xori	r3,r3,128
   42e04:	18ffe004 	addi	r3,r3,-128
   42e08:	00800084 	movi	r2,2
   42e0c:	18bff51e 	bne	r3,r2,42de4 <__svfscanf_r+0xb48>
   42e10:	e0bfff04 	addi	r2,fp,-4
   42e14:	10803fcc 	andi	r2,r2,255
   42e18:	b887c83a 	sub	r3,r23,r2
   42e1c:	8885c83a 	sub	r2,r17,r2
   42e20:	147fffc4 	addi	r17,r2,-1
   42e24:	1dffffc4 	addi	r23,r3,-1
   42e28:	a880400c 	andi	r2,r21,256
   42e2c:	10001226 	beq	r2,zero,42e78 <__svfscanf_r+0xbdc>
   42e30:	a881000c 	andi	r2,r21,1024
   42e34:	10002b1e 	bne	r2,zero,42ee4 <__svfscanf_r+0xc48>
   42e38:	bdffffc4 	addi	r23,r23,-1
   42e3c:	b9400007 	ldb	r5,0(r23)
   42e40:	00801944 	movi	r2,101
   42e44:	8c7fffc4 	addi	r17,r17,-1
   42e48:	28800826 	beq	r5,r2,42e6c <__svfscanf_r+0xbd0>
   42e4c:	00801144 	movi	r2,69
   42e50:	28800626 	beq	r5,r2,42e6c <__svfscanf_r+0xbd0>
   42e54:	bdffffc4 	addi	r23,r23,-1
   42e58:	b009883a 	mov	r4,r22
   42e5c:	800d883a 	mov	r6,r16
   42e60:	004b34c0 	call	4b34c <_ungetc_r>
   42e64:	b9400007 	ldb	r5,0(r23)
   42e68:	8c7fffc4 	addi	r17,r17,-1
   42e6c:	b009883a 	mov	r4,r22
   42e70:	800d883a 	mov	r6,r16
   42e74:	004b34c0 	call	4b34c <_ungetc_r>
   42e78:	a880040c 	andi	r2,r21,16
   42e7c:	103d1a1e 	bne	r2,zero,422e8 <__svfscanf_r+0x4c>
   42e80:	a8c1800c 	andi	r3,r21,1536
   42e84:	00810004 	movi	r2,1024
   42e88:	b8000005 	stb	zero,0(r23)
   42e8c:	18813326 	beq	r3,r2,4335c <__svfscanf_r+0x10c0>
   42e90:	d8809d17 	ldw	r2,628(sp)
   42e94:	1000251e 	bne	r2,zero,42f2c <__svfscanf_r+0xc90>
   42e98:	d940a517 	ldw	r5,660(sp)
   42e9c:	b009883a 	mov	r4,r22
   42ea0:	000d883a 	mov	r6,zero
   42ea4:	00490840 	call	49084 <_strtod_r>
   42ea8:	a900004c 	andi	r4,r21,1
   42eac:	2009003a 	cmpeq	r4,r4,zero
   42eb0:	1025883a 	mov	r18,r2
   42eb4:	1827883a 	mov	r19,r3
   42eb8:	2000141e 	bne	r4,zero,42f0c <__svfscanf_r+0xc70>
   42ebc:	d8c0a417 	ldw	r3,656(sp)
   42ec0:	18800017 	ldw	r2,0(r3)
   42ec4:	1d400104 	addi	r21,r3,4
   42ec8:	14c00115 	stw	r19,4(r2)
   42ecc:	14800015 	stw	r18,0(r2)
   42ed0:	d8c0a217 	ldw	r3,648(sp)
   42ed4:	dd40a415 	stw	r21,656(sp)
   42ed8:	18c00044 	addi	r3,r3,1
   42edc:	d8c0a215 	stw	r3,648(sp)
   42ee0:	003d0106 	br	422e8 <__svfscanf_r+0x4c>
   42ee4:	d900a517 	ldw	r4,660(sp)
   42ee8:	25fd212e 	bgeu	r4,r23,42370 <__svfscanf_r+0xd4>
   42eec:	bdffffc4 	addi	r23,r23,-1
   42ef0:	b9400007 	ldb	r5,0(r23)
   42ef4:	b009883a 	mov	r4,r22
   42ef8:	800d883a 	mov	r6,r16
   42efc:	004b34c0 	call	4b34c <_ungetc_r>
   42f00:	d880a517 	ldw	r2,660(sp)
   42f04:	15fff936 	bltu	r2,r23,42eec <__svfscanf_r+0xc50>
   42f08:	003d1906 	br	42370 <__svfscanf_r+0xd4>
   42f0c:	a880008c 	andi	r2,r21,2
   42f10:	10011926 	beq	r2,zero,43378 <__svfscanf_r+0x10dc>
   42f14:	d900a417 	ldw	r4,656(sp)
   42f18:	20800017 	ldw	r2,0(r4)
   42f1c:	25400104 	addi	r21,r4,4
   42f20:	10c00115 	stw	r3,4(r2)
   42f24:	14800015 	stw	r18,0(r2)
   42f28:	003fe906 	br	42ed0 <__svfscanf_r+0xc34>
   42f2c:	d8c09c17 	ldw	r3,624(sp)
   42f30:	b009883a 	mov	r4,r22
   42f34:	000d883a 	mov	r6,zero
   42f38:	19400044 	addi	r5,r3,1
   42f3c:	01c00284 	movi	r7,10
   42f40:	004a7900 	call	4a790 <_strtol_r>
   42f44:	d9009d17 	ldw	r4,628(sp)
   42f48:	110dc83a 	sub	r6,r2,r4
   42f4c:	d8c0a517 	ldw	r3,660(sp)
   42f50:	d9009c17 	ldw	r4,624(sp)
   42f54:	188054c4 	addi	r2,r3,339
   42f58:	20800236 	bltu	r4,r2,42f64 <__svfscanf_r+0xcc8>
   42f5c:	18805484 	addi	r2,r3,338
   42f60:	d8809c15 	stw	r2,624(sp)
   42f64:	d9009c17 	ldw	r4,624(sp)
   42f68:	01400174 	movhi	r5,5
   42f6c:	2947b004 	addi	r5,r5,7872
   42f70:	0048cec0 	call	48cec <sprintf>
   42f74:	003fc806 	br	42e98 <__svfscanf_r+0xbfc>
   42f78:	0027883a 	mov	r19,zero
   42f7c:	d8c04404 	addi	r3,sp,272
   42f80:	d8c0a515 	stw	r3,660(sp)
   42f84:	182f883a 	mov	r23,r3
   42f88:	d8009f15 	stw	zero,636(sp)
   42f8c:	d8009e15 	stw	zero,632(sp)
   42f90:	d8009d15 	stw	zero,628(sp)
   42f94:	d8009c15 	stw	zero,624(sp)
   42f98:	0039883a 	mov	fp,zero
   42f9c:	0025883a 	mov	r18,zero
   42fa0:	80800017 	ldw	r2,0(r16)
   42fa4:	11400003 	ldbu	r5,0(r2)
   42fa8:	00801384 	movi	r2,78
   42fac:	28fff544 	addi	r3,r5,-43
   42fb0:	18c03fcc 	andi	r3,r3,255
   42fb4:	10c08336 	bltu	r2,r3,431c4 <__svfscanf_r+0xf28>
   42fb8:	18c5883a 	add	r2,r3,r3
   42fbc:	1085883a 	add	r2,r2,r2
   42fc0:	00c00134 	movhi	r3,4
   42fc4:	18cbf504 	addi	r3,r3,12244
   42fc8:	10c5883a 	add	r2,r2,r3
   42fcc:	11000017 	ldw	r4,0(r2)
   42fd0:	2000683a 	jmp	r4
   42fd4:	0004317c 	xorhi	zero,zero,4293
   42fd8:	000431c4 	movi	zero,4295
   42fdc:	0004317c 	xorhi	zero,zero,4293
   42fe0:	00043208 	cmpgei	zero,zero,4296
   42fe4:	000431c4 	movi	zero,4295
   42fe8:	00043274 	movhi	zero,4297
   42fec:	000432a8 	cmpgeui	zero,zero,4298
   42ff0:	000432a8 	cmpgeui	zero,zero,4298
   42ff4:	000432a8 	cmpgeui	zero,zero,4298
   42ff8:	000432a8 	cmpgeui	zero,zero,4298
   42ffc:	000432a8 	cmpgeui	zero,zero,4298
   43000:	000432a8 	cmpgeui	zero,zero,4298
   43004:	000432a8 	cmpgeui	zero,zero,4298
   43008:	000432a8 	cmpgeui	zero,zero,4298
   4300c:	000432a8 	cmpgeui	zero,zero,4298
   43010:	000431c4 	movi	zero,4295
   43014:	000431c4 	movi	zero,4295
   43018:	000431c4 	movi	zero,4295
   4301c:	000431c4 	movi	zero,4295
   43020:	000431c4 	movi	zero,4295
   43024:	000431c4 	movi	zero,4295
   43028:	000431c4 	movi	zero,4295
   4302c:	000432c8 	cmpgei	zero,zero,4299
   43030:	000431c4 	movi	zero,4295
   43034:	000431c4 	movi	zero,4295
   43038:	000431c4 	movi	zero,4295
   4303c:	000432d8 	cmpnei	zero,zero,4299
   43040:	00043324 	muli	zero,zero,4300
   43044:	000431c4 	movi	zero,4295
   43048:	000431c4 	movi	zero,4295
   4304c:	000433fc 	xorhi	zero,zero,4303
   43050:	000431c4 	movi	zero,4295
   43054:	000431c4 	movi	zero,4295
   43058:	000431c4 	movi	zero,4295
   4305c:	000431c4 	movi	zero,4295
   43060:	000433a8 	cmpgeui	zero,zero,4302
   43064:	000431c4 	movi	zero,4295
   43068:	000431c4 	movi	zero,4295
   4306c:	000431c4 	movi	zero,4295
   43070:	000431c4 	movi	zero,4295
   43074:	000431c4 	movi	zero,4295
   43078:	0004343c 	xorhi	zero,zero,4304
   4307c:	000431c4 	movi	zero,4295
   43080:	000431c4 	movi	zero,4295
   43084:	000431c4 	movi	zero,4295
   43088:	000431c4 	movi	zero,4295
   4308c:	00043340 	call	4334 <__alt_mem_onchip_mem-0x3bccc>
   43090:	000431c4 	movi	zero,4295
   43094:	000431c4 	movi	zero,4295
   43098:	000431c4 	movi	zero,4295
   4309c:	000431c4 	movi	zero,4295
   430a0:	000431c4 	movi	zero,4295
   430a4:	000431c4 	movi	zero,4295
   430a8:	000431c4 	movi	zero,4295
   430ac:	000432c8 	cmpgei	zero,zero,4299
   430b0:	000431c4 	movi	zero,4295
   430b4:	000431c4 	movi	zero,4295
   430b8:	000431c4 	movi	zero,4295
   430bc:	000432d8 	cmpnei	zero,zero,4299
   430c0:	00043324 	muli	zero,zero,4300
   430c4:	000431c4 	movi	zero,4295
   430c8:	000431c4 	movi	zero,4295
   430cc:	000433fc 	xorhi	zero,zero,4303
   430d0:	000431c4 	movi	zero,4295
   430d4:	000431c4 	movi	zero,4295
   430d8:	000431c4 	movi	zero,4295
   430dc:	000431c4 	movi	zero,4295
   430e0:	000433a8 	cmpgeui	zero,zero,4302
   430e4:	000431c4 	movi	zero,4295
   430e8:	000431c4 	movi	zero,4295
   430ec:	000431c4 	movi	zero,4295
   430f0:	000431c4 	movi	zero,4295
   430f4:	000431c4 	movi	zero,4295
   430f8:	0004343c 	xorhi	zero,zero,4304
   430fc:	000431c4 	movi	zero,4295
   43100:	000431c4 	movi	zero,4295
   43104:	000431c4 	movi	zero,4295
   43108:	000431c4 	movi	zero,4295
   4310c:	00043340 	call	4334 <__alt_mem_onchip_mem-0x3bccc>
   43110:	a880040c 	andi	r2,r21,16
   43114:	10004826 	beq	r2,zero,43238 <__svfscanf_r+0xf9c>
   43118:	0027883a 	mov	r19,zero
   4311c:	00000b06 	br	4314c <__svfscanf_r+0xeb0>
   43120:	80800017 	ldw	r2,0(r16)
   43124:	b009883a 	mov	r4,r22
   43128:	800b883a 	mov	r5,r16
   4312c:	148d883a 	add	r6,r2,r18
   43130:	81800015 	stw	r6,0(r16)
   43134:	9ca7883a 	add	r19,r19,r18
   43138:	00489640 	call	48964 <__srefill_r>
   4313c:	103dc61e 	bne	r2,zero,42858 <__svfscanf_r+0x5bc>
   43140:	d880a317 	ldw	r2,652(sp)
   43144:	1485c83a 	sub	r2,r2,r18
   43148:	d880a315 	stw	r2,652(sp)
   4314c:	84800117 	ldw	r18,4(r16)
   43150:	d900a317 	ldw	r4,652(sp)
   43154:	913ff216 	blt	r18,r4,43120 <__svfscanf_r+0xe84>
   43158:	d900a317 	ldw	r4,652(sp)
   4315c:	80800017 	ldw	r2,0(r16)
   43160:	9927883a 	add	r19,r19,r4
   43164:	9107c83a 	sub	r3,r18,r4
   43168:	110d883a 	add	r6,r2,r4
   4316c:	8ce3883a 	add	r17,r17,r19
   43170:	80c00115 	stw	r3,4(r16)
   43174:	81800015 	stw	r6,0(r16)
   43178:	003c5b06 	br	422e8 <__svfscanf_r+0x4c>
   4317c:	a880200c 	andi	r2,r21,128
   43180:	10001026 	beq	r2,zero,431c4 <__svfscanf_r+0xf28>
   43184:	00bfdfc4 	movi	r2,-129
   43188:	a8aa703a 	and	r21,r21,r2
   4318c:	b9400005 	stb	r5,0(r23)
   43190:	bdc00044 	addi	r23,r23,1
   43194:	80c00117 	ldw	r3,4(r16)
   43198:	8c400044 	addi	r17,r17,1
   4319c:	18bfffc4 	addi	r2,r3,-1
   431a0:	80800115 	stw	r2,4(r16)
   431a4:	00801f0e 	bge	zero,r2,43224 <__svfscanf_r+0xf88>
   431a8:	80800017 	ldw	r2,0(r16)
   431ac:	10800044 	addi	r2,r2,1
   431b0:	80800015 	stw	r2,0(r16)
   431b4:	d880a317 	ldw	r2,652(sp)
   431b8:	10bfffc4 	addi	r2,r2,-1
   431bc:	d880a315 	stw	r2,652(sp)
   431c0:	103f771e 	bne	r2,zero,42fa0 <__svfscanf_r+0xd04>
   431c4:	d8c09e17 	ldw	r3,632(sp)
   431c8:	18000226 	beq	r3,zero,431d4 <__svfscanf_r+0xf38>
   431cc:	00bfbfc4 	movi	r2,-257
   431d0:	a8aa703a 	and	r21,r21,r2
   431d4:	90ffffc4 	addi	r3,r18,-1
   431d8:	00800044 	movi	r2,1
   431dc:	10fef536 	bltu	r2,r3,42db4 <__svfscanf_r+0xb18>
   431e0:	d900a517 	ldw	r4,660(sp)
   431e4:	25fc622e 	bgeu	r4,r23,42370 <__svfscanf_r+0xd4>
   431e8:	bdffffc4 	addi	r23,r23,-1
   431ec:	b9400007 	ldb	r5,0(r23)
   431f0:	b009883a 	mov	r4,r22
   431f4:	800d883a 	mov	r6,r16
   431f8:	004b34c0 	call	4b34c <_ungetc_r>
   431fc:	d880a517 	ldw	r2,660(sp)
   43200:	15fff936 	bltu	r2,r23,431e8 <__svfscanf_r+0xf4c>
   43204:	003c5a06 	br	42370 <__svfscanf_r+0xd4>
   43208:	a880800c 	andi	r2,r21,512
   4320c:	103fed26 	beq	r2,zero,431c4 <__svfscanf_r+0xf28>
   43210:	d9009e17 	ldw	r4,632(sp)
   43214:	00bf5fc4 	movi	r2,-641
   43218:	a8aa703a 	and	r21,r21,r2
   4321c:	d9009f15 	stw	r4,636(sp)
   43220:	003fda06 	br	4318c <__svfscanf_r+0xef0>
   43224:	b009883a 	mov	r4,r22
   43228:	800b883a 	mov	r5,r16
   4322c:	00489640 	call	48964 <__srefill_r>
   43230:	103fe026 	beq	r2,zero,431b4 <__svfscanf_r+0xf18>
   43234:	003fe306 	br	431c4 <__svfscanf_r+0xf28>
   43238:	d880a417 	ldw	r2,656(sp)
   4323c:	d980a317 	ldw	r6,652(sp)
   43240:	01400044 	movi	r5,1
   43244:	11000017 	ldw	r4,0(r2)
   43248:	800f883a 	mov	r7,r16
   4324c:	0045a880 	call	45a88 <fread>
   43250:	103c6726 	beq	r2,zero,423f0 <__svfscanf_r+0x154>
   43254:	d8c0a417 	ldw	r3,656(sp)
   43258:	d900a217 	ldw	r4,648(sp)
   4325c:	88a3883a 	add	r17,r17,r2
   43260:	18c00104 	addi	r3,r3,4
   43264:	21000044 	addi	r4,r4,1
   43268:	d8c0a415 	stw	r3,656(sp)
   4326c:	d900a215 	stw	r4,648(sp)
   43270:	003c1d06 	br	422e8 <__svfscanf_r+0x4c>
   43274:	a880400c 	andi	r2,r21,256
   43278:	10000b26 	beq	r2,zero,432a8 <__svfscanf_r+0x100c>
   4327c:	00bfdfc4 	movi	r2,-129
   43280:	a8aa703a 	and	r21,r21,r2
   43284:	d8809e17 	ldw	r2,632(sp)
   43288:	10800044 	addi	r2,r2,1
   4328c:	d8809e15 	stw	r2,632(sp)
   43290:	983fc026 	beq	r19,zero,43194 <__svfscanf_r+0xef8>
   43294:	d8c0a317 	ldw	r3,652(sp)
   43298:	9cffffc4 	addi	r19,r19,-1
   4329c:	18c00044 	addi	r3,r3,1
   432a0:	d8c0a315 	stw	r3,652(sp)
   432a4:	003fbb06 	br	43194 <__svfscanf_r+0xef8>
   432a8:	e0803fcc 	andi	r2,fp,255
   432ac:	1080201c 	xori	r2,r2,128
   432b0:	10bfe004 	addi	r2,r2,-128
   432b4:	9085883a 	add	r2,r18,r2
   432b8:	103fc21e 	bne	r2,zero,431c4 <__svfscanf_r+0xf28>
   432bc:	00bf9fc4 	movi	r2,-385
   432c0:	a8aa703a 	and	r21,r21,r2
   432c4:	003fb106 	br	4318c <__svfscanf_r+0xef0>
   432c8:	00800044 	movi	r2,1
   432cc:	90bfbd1e 	bne	r18,r2,431c4 <__svfscanf_r+0xf28>
   432d0:	04800084 	movi	r18,2
   432d4:	003fad06 	br	4318c <__svfscanf_r+0xef0>
   432d8:	a8c1400c 	andi	r3,r21,1280
   432dc:	00810004 	movi	r2,1024
   432e0:	18800426 	beq	r3,r2,432f4 <__svfscanf_r+0x1058>
   432e4:	a884703a 	and	r2,r21,r2
   432e8:	103fb626 	beq	r2,zero,431c4 <__svfscanf_r+0xf28>
   432ec:	d8809e17 	ldw	r2,632(sp)
   432f0:	103fb826 	beq	r2,zero,431d4 <__svfscanf_r+0xf38>
   432f4:	a880800c 	andi	r2,r21,512
   432f8:	1000051e 	bne	r2,zero,43310 <__svfscanf_r+0x1074>
   432fc:	d8c09e17 	ldw	r3,632(sp)
   43300:	d9009f17 	ldw	r4,636(sp)
   43304:	ddc09c15 	stw	r23,624(sp)
   43308:	1907c83a 	sub	r3,r3,r4
   4330c:	d8c09d15 	stw	r3,628(sp)
   43310:	00be7fc4 	movi	r2,-1537
   43314:	a884703a 	and	r2,r21,r2
   43318:	15406014 	ori	r21,r2,384
   4331c:	d8009e15 	stw	zero,632(sp)
   43320:	003f9a06 	br	4318c <__svfscanf_r+0xef0>
   43324:	e0c03fcc 	andi	r3,fp,255
   43328:	18c0201c 	xori	r3,r3,128
   4332c:	18ffe004 	addi	r3,r3,-128
   43330:	00800084 	movi	r2,2
   43334:	18bfa31e 	bne	r3,r2,431c4 <__svfscanf_r+0xf28>
   43338:	070000c4 	movi	fp,3
   4333c:	003f9306 	br	4318c <__svfscanf_r+0xef0>
   43340:	e0c03fcc 	andi	r3,fp,255
   43344:	18c0201c 	xori	r3,r3,128
   43348:	18ffe004 	addi	r3,r3,-128
   4334c:	008001c4 	movi	r2,7
   43350:	18bf9c1e 	bne	r3,r2,431c4 <__svfscanf_r+0xf28>
   43354:	07000204 	movi	fp,8
   43358:	003f8c06 	br	4318c <__svfscanf_r+0xef0>
   4335c:	d8c09e17 	ldw	r3,632(sp)
   43360:	d9009f17 	ldw	r4,636(sp)
   43364:	1905c83a 	sub	r2,r3,r4
   43368:	103ecb26 	beq	r2,zero,42e98 <__svfscanf_r+0xbfc>
   4336c:	008dc83a 	sub	r6,zero,r2
   43370:	ddc09c15 	stw	r23,624(sp)
   43374:	003ef506 	br	42f4c <__svfscanf_r+0xcb0>
   43378:	d880a417 	ldw	r2,656(sp)
   4337c:	9009883a 	mov	r4,r18
   43380:	180b883a 	mov	r5,r3
   43384:	15c00017 	ldw	r23,0(r2)
   43388:	15400104 	addi	r21,r2,4
   4338c:	0048b840 	call	48b84 <__isnand>
   43390:	1000311e 	bne	r2,zero,43458 <__svfscanf_r+0x11bc>
   43394:	980b883a 	mov	r5,r19
   43398:	9009883a 	mov	r4,r18
   4339c:	004e5940 	call	4e594 <__truncdfsf2>
   433a0:	b8800015 	stw	r2,0(r23)
   433a4:	003eca06 	br	42ed0 <__svfscanf_r+0xc34>
   433a8:	9000101e 	bne	r18,zero,433ec <__svfscanf_r+0x1150>
   433ac:	a8c1c00c 	andi	r3,r21,1792
   433b0:	0081c004 	movi	r2,1792
   433b4:	18800926 	beq	r3,r2,433dc <__svfscanf_r+0x1140>
   433b8:	e0c03fcc 	andi	r3,fp,255
   433bc:	18c0201c 	xori	r3,r3,128
   433c0:	18ffe004 	addi	r3,r3,-128
   433c4:	00800044 	movi	r2,1
   433c8:	18800226 	beq	r3,r2,433d4 <__svfscanf_r+0x1138>
   433cc:	00800104 	movi	r2,4
   433d0:	18bf7c1e 	bne	r3,r2,431c4 <__svfscanf_r+0xf28>
   433d4:	e7000044 	addi	fp,fp,1
   433d8:	003f6c06 	br	4318c <__svfscanf_r+0xef0>
   433dc:	00be1fc4 	movi	r2,-1921
   433e0:	a8aa703a 	and	r21,r21,r2
   433e4:	04800044 	movi	r18,1
   433e8:	003f6806 	br	4318c <__svfscanf_r+0xef0>
   433ec:	00800084 	movi	r2,2
   433f0:	90bff11e 	bne	r18,r2,433b8 <__svfscanf_r+0x111c>
   433f4:	048000c4 	movi	r18,3
   433f8:	003f6406 	br	4318c <__svfscanf_r+0xef0>
   433fc:	e0c03fcc 	andi	r3,fp,255
   43400:	18c0201c 	xori	r3,r3,128
   43404:	18ffe004 	addi	r3,r3,-128
   43408:	1800071e 	bne	r3,zero,43428 <__svfscanf_r+0x118c>
   4340c:	a8c1c00c 	andi	r3,r21,1792
   43410:	0081c004 	movi	r2,1792
   43414:	18bf6b1e 	bne	r3,r2,431c4 <__svfscanf_r+0xf28>
   43418:	00be1fc4 	movi	r2,-1921
   4341c:	a8aa703a 	and	r21,r21,r2
   43420:	07000044 	movi	fp,1
   43424:	003f5906 	br	4318c <__svfscanf_r+0xef0>
   43428:	008000c4 	movi	r2,3
   4342c:	18bfe926 	beq	r3,r2,433d4 <__svfscanf_r+0x1138>
   43430:	00800144 	movi	r2,5
   43434:	18bfe726 	beq	r3,r2,433d4 <__svfscanf_r+0x1138>
   43438:	003f6206 	br	431c4 <__svfscanf_r+0xf28>
   4343c:	e0c03fcc 	andi	r3,fp,255
   43440:	18c0201c 	xori	r3,r3,128
   43444:	18ffe004 	addi	r3,r3,-128
   43448:	00800184 	movi	r2,6
   4344c:	18bf5d1e 	bne	r3,r2,431c4 <__svfscanf_r+0xf28>
   43450:	070001c4 	movi	fp,7
   43454:	003f4d06 	br	4318c <__svfscanf_r+0xef0>
   43458:	0009883a 	mov	r4,zero
   4345c:	0048ce40 	call	48ce4 <nanf>
   43460:	b8800015 	stw	r2,0(r23)
   43464:	003e9a06 	br	42ed0 <__svfscanf_r+0xc34>
   43468:	a00b883a 	mov	r5,r20
   4346c:	d9000404 	addi	r4,sp,16
   43470:	0048c240 	call	48c24 <__sccl>
   43474:	1029883a 	mov	r20,r2
   43478:	ad401014 	ori	r21,r21,64
   4347c:	04800044 	movi	r18,1
   43480:	003c7506 	br	42658 <__svfscanf_r+0x3bc>
   43484:	01000204 	movi	r4,8
   43488:	00800174 	movhi	r2,5
   4348c:	10ab4704 	addi	r2,r2,-21220
   43490:	ad400054 	ori	r21,r21,1
   43494:	048000c4 	movi	r18,3
   43498:	d900a115 	stw	r4,644(sp)
   4349c:	d880a015 	stw	r2,640(sp)
   434a0:	003c6d06 	br	42658 <__svfscanf_r+0x3bc>
   434a4:	ad400094 	ori	r21,r21,2
   434a8:	003bd806 	br	4240c <__svfscanf_r+0x170>
   434ac:	d900a317 	ldw	r4,652(sp)
   434b0:	01400284 	movi	r5,10
   434b4:	004e8e80 	call	4e8e8 <__mulsi3>
   434b8:	15c5883a 	add	r2,r2,r23
   434bc:	10bff404 	addi	r2,r2,-48
   434c0:	d880a315 	stw	r2,652(sp)
   434c4:	003bd106 	br	4240c <__svfscanf_r+0x170>
   434c8:	ad400414 	ori	r21,r21,16
   434cc:	003bcf06 	br	4240c <__svfscanf_r+0x170>
   434d0:	00800404 	movi	r2,16
   434d4:	00c00174 	movhi	r3,5
   434d8:	18eb4704 	addi	r3,r3,-21220
   434dc:	ad408014 	ori	r21,r21,512
   434e0:	048000c4 	movi	r18,3
   434e4:	d880a115 	stw	r2,644(sp)
   434e8:	d8c0a015 	stw	r3,640(sp)
   434ec:	003c5a06 	br	42658 <__svfscanf_r+0x3bc>
   434f0:	00c00284 	movi	r3,10
   434f4:	01000174 	movhi	r4,5
   434f8:	212b4704 	addi	r4,r4,-21220
   434fc:	048000c4 	movi	r18,3
   43500:	d8c0a115 	stw	r3,644(sp)
   43504:	d900a015 	stw	r4,640(sp)
   43508:	003c5306 	br	42658 <__svfscanf_r+0x3bc>
   4350c:	00c00174 	movhi	r3,5
   43510:	18e9e404 	addi	r3,r3,-22640
   43514:	048000c4 	movi	r18,3
   43518:	d8c0a015 	stw	r3,640(sp)
   4351c:	d800a115 	stw	zero,644(sp)
   43520:	003c4d06 	br	42658 <__svfscanf_r+0x3bc>
   43524:	d8c0a117 	ldw	r3,644(sp)
   43528:	18c5883a 	add	r2,r3,r3
   4352c:	00c00174 	movhi	r3,5
   43530:	18c7b184 	addi	r3,r3,7878
   43534:	10c5883a 	add	r2,r2,r3
   43538:	1080000f 	ldh	r2,0(r2)
   4353c:	00fd1fc4 	movi	r3,-2945
   43540:	90e4703a 	and	r18,r18,r3
   43544:	d880a115 	stw	r2,644(sp)
   43548:	003de806 	br	42cec <__svfscanf_r+0xa50>
   4354c:	d900a117 	ldw	r4,644(sp)
   43550:	00c00174 	movhi	r3,5
   43554:	18c7b184 	addi	r3,r3,7878
   43558:	2105883a 	add	r2,r4,r4
   4355c:	10c5883a 	add	r2,r2,r3
   43560:	1080000f 	ldh	r2,0(r2)
   43564:	00c00204 	movi	r3,8
   43568:	d880a115 	stw	r2,644(sp)
   4356c:	18bd870e 	bge	r3,r2,42b8c <__svfscanf_r+0x8f0>
   43570:	00bd1fc4 	movi	r2,-2945
   43574:	90a4703a 	and	r18,r18,r2
   43578:	003ddc06 	br	42cec <__svfscanf_r+0xa50>
   4357c:	d8c0a117 	ldw	r3,644(sp)
   43580:	00800284 	movi	r2,10
   43584:	10fffa16 	blt	r2,r3,43570 <__svfscanf_r+0x12d4>
   43588:	003d8006 	br	42b8c <__svfscanf_r+0x8f0>
   4358c:	90c1800c 	andi	r3,r18,1536
   43590:	00808004 	movi	r2,512
   43594:	18bd7d1e 	bne	r3,r2,42b8c <__svfscanf_r+0x8f0>
   43598:	00bf7fc4 	movi	r2,-513
   4359c:	9084703a 	and	r2,r18,r2
   435a0:	01000404 	movi	r4,16
   435a4:	14814014 	ori	r18,r2,1280
   435a8:	d900a115 	stw	r4,644(sp)
   435ac:	003dcf06 	br	42cec <__svfscanf_r+0xa50>
   435b0:	04800104 	movi	r18,4
   435b4:	003c2806 	br	42658 <__svfscanf_r+0x3bc>
   435b8:	ad401014 	ori	r21,r21,64
   435bc:	0025883a 	mov	r18,zero
   435c0:	003c2506 	br	42658 <__svfscanf_r+0x3bc>
   435c4:	ad400114 	ori	r21,r21,4
   435c8:	003b9006 	br	4240c <__svfscanf_r+0x170>
   435cc:	0027883a 	mov	r19,zero
   435d0:	003cac06 	br	42884 <__svfscanf_r+0x5e8>
   435d4:	903d5226 	beq	r18,zero,42b20 <__svfscanf_r+0x884>
   435d8:	94bfffc4 	addi	r18,r18,-1
   435dc:	d8c04404 	addi	r3,sp,272
   435e0:	1c85883a 	add	r2,r3,r18
   435e4:	11400003 	ldbu	r5,0(r2)
   435e8:	b009883a 	mov	r4,r22
   435ec:	800d883a 	mov	r6,r16
   435f0:	004b34c0 	call	4b34c <_ungetc_r>
   435f4:	003ff706 	br	435d4 <__svfscanf_r+0x1338>
   435f8:	00bfff84 	movi	r2,-2
   435fc:	18bd361e 	bne	r3,r2,42ad8 <__svfscanf_r+0x83c>
   43600:	003d4006 	br	42b04 <__svfscanf_r+0x868>
   43604:	d900a417 	ldw	r4,656(sp)
   43608:	25400017 	ldw	r21,0(r4)
   4360c:	21000104 	addi	r4,r4,4
   43610:	d900a415 	stw	r4,656(sp)
   43614:	003d0606 	br	42a30 <__svfscanf_r+0x794>
   43618:	983b5526 	beq	r19,zero,42370 <__svfscanf_r+0xd4>
   4361c:	8ce3883a 	add	r17,r17,r19
   43620:	003b3106 	br	422e8 <__svfscanf_r+0x4c>
   43624:	00bfff84 	movi	r2,-2
   43628:	18bc621e 	bne	r3,r2,427b4 <__svfscanf_r+0x518>
   4362c:	003c6906 	br	427d4 <__svfscanf_r+0x538>
   43630:	b009883a 	mov	r4,r22
   43634:	800b883a 	mov	r5,r16
   43638:	00489640 	call	48964 <__srefill_r>
   4363c:	103c6726 	beq	r2,zero,427dc <__svfscanf_r+0x540>
   43640:	903b6b1e 	bne	r18,zero,423f0 <__svfscanf_r+0x154>
   43644:	a83b281e 	bne	r21,zero,422e8 <__svfscanf_r+0x4c>
   43648:	d8c0a217 	ldw	r3,648(sp)
   4364c:	18c00044 	addi	r3,r3,1
   43650:	d8c0a215 	stw	r3,648(sp)
   43654:	003b2406 	br	422e8 <__svfscanf_r+0x4c>
   43658:	8080030b 	ldhu	r2,12(r16)
   4365c:	1080100c 	andi	r2,r2,64
   43660:	103b4326 	beq	r2,zero,42370 <__svfscanf_r+0xd4>
   43664:	003b6406 	br	423f8 <__svfscanf_r+0x15c>
   43668:	d8c0a417 	ldw	r3,656(sp)
   4366c:	1cc00017 	ldw	r19,0(r3)
   43670:	18c00104 	addi	r3,r3,4
   43674:	d8c0a415 	stw	r3,656(sp)
   43678:	003c2906 	br	42720 <__svfscanf_r+0x484>
   4367c:	00800204 	movi	r2,8
   43680:	00c00174 	movhi	r3,5
   43684:	18eb4704 	addi	r3,r3,-21220
   43688:	048000c4 	movi	r18,3
   4368c:	d880a115 	stw	r2,644(sp)
   43690:	d8c0a015 	stw	r3,640(sp)
   43694:	003bf006 	br	42658 <__svfscanf_r+0x3bc>
   43698:	04800084 	movi	r18,2
   4369c:	003bee06 	br	42658 <__svfscanf_r+0x3bc>
   436a0:	01000404 	movi	r4,16
   436a4:	00800174 	movhi	r2,5
   436a8:	10ab4704 	addi	r2,r2,-21220
   436ac:	ad408814 	ori	r21,r21,544
   436b0:	048000c4 	movi	r18,3
   436b4:	d900a115 	stw	r4,644(sp)
   436b8:	d880a015 	stw	r2,640(sp)
   436bc:	003be606 	br	42658 <__svfscanf_r+0x3bc>
   436c0:	a880040c 	andi	r2,r21,16
   436c4:	103b081e 	bne	r2,zero,422e8 <__svfscanf_r+0x4c>
   436c8:	a880010c 	andi	r2,r21,4
   436cc:	10004e26 	beq	r2,zero,43808 <__svfscanf_r+0x156c>
   436d0:	d8c0a417 	ldw	r3,656(sp)
   436d4:	18800017 	ldw	r2,0(r3)
   436d8:	18c00104 	addi	r3,r3,4
   436dc:	d8c0a415 	stw	r3,656(sp)
   436e0:	1440000d 	sth	r17,0(r2)
   436e4:	003b0006 	br	422e8 <__svfscanf_r+0x4c>
   436e8:	d880a417 	ldw	r2,656(sp)
   436ec:	dd400404 	addi	r21,sp,16
   436f0:	14800017 	ldw	r18,0(r2)
   436f4:	9027883a 	mov	r19,r18
   436f8:	81000017 	ldw	r4,0(r16)
   436fc:	20800003 	ldbu	r2,0(r4)
   43700:	a885883a 	add	r2,r21,r2
   43704:	10c00007 	ldb	r3,0(r2)
   43708:	18001426 	beq	r3,zero,4375c <__svfscanf_r+0x14c0>
   4370c:	d8c0a317 	ldw	r3,652(sp)
   43710:	80800117 	ldw	r2,4(r16)
   43714:	21800044 	addi	r6,r4,1
   43718:	18ffffc4 	addi	r3,r3,-1
   4371c:	d8c0a315 	stw	r3,652(sp)
   43720:	10ffffc4 	addi	r3,r2,-1
   43724:	80c00115 	stw	r3,4(r16)
   43728:	20800003 	ldbu	r2,0(r4)
   4372c:	90800005 	stb	r2,0(r18)
   43730:	d900a317 	ldw	r4,652(sp)
   43734:	81800015 	stw	r6,0(r16)
   43738:	94800044 	addi	r18,r18,1
   4373c:	20000726 	beq	r4,zero,4375c <__svfscanf_r+0x14c0>
   43740:	80800117 	ldw	r2,4(r16)
   43744:	00bfec16 	blt	zero,r2,436f8 <__svfscanf_r+0x145c>
   43748:	b009883a 	mov	r4,r22
   4374c:	800b883a 	mov	r5,r16
   43750:	00489640 	call	48964 <__srefill_r>
   43754:	103fe826 	beq	r2,zero,436f8 <__svfscanf_r+0x145c>
   43758:	9cbb2526 	beq	r19,r18,423f0 <__svfscanf_r+0x154>
   4375c:	94e7c83a 	sub	r19,r18,r19
   43760:	983b0326 	beq	r19,zero,42370 <__svfscanf_r+0xd4>
   43764:	90000005 	stb	zero,0(r18)
   43768:	d880a417 	ldw	r2,656(sp)
   4376c:	d8c0a217 	ldw	r3,648(sp)
   43770:	8ce3883a 	add	r17,r17,r19
   43774:	10800104 	addi	r2,r2,4
   43778:	18c00044 	addi	r3,r3,1
   4377c:	d880a415 	stw	r2,656(sp)
   43780:	d8c0a215 	stw	r3,648(sp)
   43784:	003ad806 	br	422e8 <__svfscanf_r+0x4c>
   43788:	d900a517 	ldw	r4,660(sp)
   4378c:	25faf82e 	bgeu	r4,r23,42370 <__svfscanf_r+0xd4>
   43790:	bdffffc4 	addi	r23,r23,-1
   43794:	b9400007 	ldb	r5,0(r23)
   43798:	b009883a 	mov	r4,r22
   4379c:	800d883a 	mov	r6,r16
   437a0:	004b34c0 	call	4b34c <_ungetc_r>
   437a4:	d8c0a517 	ldw	r3,660(sp)
   437a8:	1dfff936 	bltu	r3,r23,43790 <__svfscanf_r+0x14f4>
   437ac:	003af006 	br	42370 <__svfscanf_r+0xd4>
   437b0:	a880040c 	andi	r2,r21,16
   437b4:	10002d26 	beq	r2,zero,4386c <__svfscanf_r+0x15d0>
   437b8:	0025883a 	mov	r18,zero
   437bc:	00000906 	br	437e4 <__svfscanf_r+0x1548>
   437c0:	80c00117 	ldw	r3,4(r16)
   437c4:	d880a317 	ldw	r2,652(sp)
   437c8:	29800044 	addi	r6,r5,1
   437cc:	18ffffc4 	addi	r3,r3,-1
   437d0:	94800044 	addi	r18,r18,1
   437d4:	81800015 	stw	r6,0(r16)
   437d8:	80c00115 	stw	r3,4(r16)
   437dc:	14800826 	beq	r2,r18,43800 <__svfscanf_r+0x1564>
   437e0:	00c0120e 	bge	zero,r3,4382c <__svfscanf_r+0x1590>
   437e4:	81400017 	ldw	r5,0(r16)
   437e8:	98800017 	ldw	r2,0(r19)
   437ec:	28c00003 	ldbu	r3,0(r5)
   437f0:	1887883a 	add	r3,r3,r2
   437f4:	19000003 	ldbu	r4,0(r3)
   437f8:	2100020c 	andi	r4,r4,8
   437fc:	203ff026 	beq	r4,zero,437c0 <__svfscanf_r+0x1524>
   43800:	8ca3883a 	add	r17,r17,r18
   43804:	003ab806 	br	422e8 <__svfscanf_r+0x4c>
   43808:	a880004c 	andi	r2,r21,1
   4380c:	1005003a 	cmpeq	r2,r2,zero
   43810:	10000b1e 	bne	r2,zero,43840 <__svfscanf_r+0x15a4>
   43814:	d900a417 	ldw	r4,656(sp)
   43818:	20800017 	ldw	r2,0(r4)
   4381c:	21000104 	addi	r4,r4,4
   43820:	d900a415 	stw	r4,656(sp)
   43824:	14400015 	stw	r17,0(r2)
   43828:	003aaf06 	br	422e8 <__svfscanf_r+0x4c>
   4382c:	b009883a 	mov	r4,r22
   43830:	800b883a 	mov	r5,r16
   43834:	00489640 	call	48964 <__srefill_r>
   43838:	103fea26 	beq	r2,zero,437e4 <__svfscanf_r+0x1548>
   4383c:	003ff006 	br	43800 <__svfscanf_r+0x1564>
   43840:	a880008c 	andi	r2,r21,2
   43844:	10002c26 	beq	r2,zero,438f8 <__svfscanf_r+0x165c>
   43848:	d8c0a417 	ldw	r3,656(sp)
   4384c:	d900a417 	ldw	r4,656(sp)
   43850:	18800017 	ldw	r2,0(r3)
   43854:	8807d7fa 	srai	r3,r17,31
   43858:	21000104 	addi	r4,r4,4
   4385c:	d900a415 	stw	r4,656(sp)
   43860:	14400015 	stw	r17,0(r2)
   43864:	10c00115 	stw	r3,4(r2)
   43868:	003a9f06 	br	422e8 <__svfscanf_r+0x4c>
   4386c:	d8c0a417 	ldw	r3,656(sp)
   43870:	1d400017 	ldw	r21,0(r3)
   43874:	a825883a 	mov	r18,r21
   43878:	00000e06 	br	438b4 <__svfscanf_r+0x1618>
   4387c:	80800117 	ldw	r2,4(r16)
   43880:	d900a317 	ldw	r4,652(sp)
   43884:	29800044 	addi	r6,r5,1
   43888:	10ffffc4 	addi	r3,r2,-1
   4388c:	213fffc4 	addi	r4,r4,-1
   43890:	d900a315 	stw	r4,652(sp)
   43894:	80c00115 	stw	r3,4(r16)
   43898:	28800003 	ldbu	r2,0(r5)
   4389c:	90800005 	stb	r2,0(r18)
   438a0:	81800015 	stw	r6,0(r16)
   438a4:	94800044 	addi	r18,r18,1
   438a8:	20000926 	beq	r4,zero,438d0 <__svfscanf_r+0x1634>
   438ac:	80800117 	ldw	r2,4(r16)
   438b0:	0080170e 	bge	zero,r2,43910 <__svfscanf_r+0x1674>
   438b4:	81400017 	ldw	r5,0(r16)
   438b8:	98800017 	ldw	r2,0(r19)
   438bc:	28c00003 	ldbu	r3,0(r5)
   438c0:	1887883a 	add	r3,r3,r2
   438c4:	19000003 	ldbu	r4,0(r3)
   438c8:	2100020c 	andi	r4,r4,8
   438cc:	203feb26 	beq	r4,zero,4387c <__svfscanf_r+0x15e0>
   438d0:	9545c83a 	sub	r2,r18,r21
   438d4:	d8c0a217 	ldw	r3,648(sp)
   438d8:	88a3883a 	add	r17,r17,r2
   438dc:	d880a417 	ldw	r2,656(sp)
   438e0:	18c00044 	addi	r3,r3,1
   438e4:	d8c0a215 	stw	r3,648(sp)
   438e8:	10800104 	addi	r2,r2,4
   438ec:	d880a415 	stw	r2,656(sp)
   438f0:	90000005 	stb	zero,0(r18)
   438f4:	003a7c06 	br	422e8 <__svfscanf_r+0x4c>
   438f8:	d8c0a417 	ldw	r3,656(sp)
   438fc:	18800017 	ldw	r2,0(r3)
   43900:	18c00104 	addi	r3,r3,4
   43904:	d8c0a415 	stw	r3,656(sp)
   43908:	14400015 	stw	r17,0(r2)
   4390c:	003a7606 	br	422e8 <__svfscanf_r+0x4c>
   43910:	b009883a 	mov	r4,r22
   43914:	800b883a 	mov	r5,r16
   43918:	00489640 	call	48964 <__srefill_r>
   4391c:	103fe526 	beq	r2,zero,438b4 <__svfscanf_r+0x1618>
   43920:	003feb06 	br	438d0 <__svfscanf_r+0x1634>

00043924 <__svfscanf>:
   43924:	00800174 	movhi	r2,5
   43928:	108fb204 	addi	r2,r2,16072
   4392c:	2013883a 	mov	r9,r4
   43930:	11000017 	ldw	r4,0(r2)
   43934:	2805883a 	mov	r2,r5
   43938:	300f883a 	mov	r7,r6
   4393c:	480b883a 	mov	r5,r9
   43940:	100d883a 	mov	r6,r2
   43944:	004229c1 	jmpi	4229c <__svfscanf_r>

00043948 <_vfscanf_r>:
   43948:	defffb04 	addi	sp,sp,-20
   4394c:	dcc00315 	stw	r19,12(sp)
   43950:	dc800215 	stw	r18,8(sp)
   43954:	dc400115 	stw	r17,4(sp)
   43958:	dc000015 	stw	r16,0(sp)
   4395c:	dfc00415 	stw	ra,16(sp)
   43960:	2021883a 	mov	r16,r4
   43964:	2823883a 	mov	r17,r5
   43968:	3025883a 	mov	r18,r6
   4396c:	3827883a 	mov	r19,r7
   43970:	20000226 	beq	r4,zero,4397c <_vfscanf_r+0x34>
   43974:	20800e17 	ldw	r2,56(r4)
   43978:	10000b26 	beq	r2,zero,439a8 <_vfscanf_r+0x60>
   4397c:	8009883a 	mov	r4,r16
   43980:	880b883a 	mov	r5,r17
   43984:	900d883a 	mov	r6,r18
   43988:	980f883a 	mov	r7,r19
   4398c:	dfc00417 	ldw	ra,16(sp)
   43990:	dcc00317 	ldw	r19,12(sp)
   43994:	dc800217 	ldw	r18,8(sp)
   43998:	dc400117 	ldw	r17,4(sp)
   4399c:	dc000017 	ldw	r16,0(sp)
   439a0:	dec00504 	addi	sp,sp,20
   439a4:	004229c1 	jmpi	4229c <__svfscanf_r>
   439a8:	00455f00 	call	455f0 <__sinit>
   439ac:	003ff306 	br	4397c <_vfscanf_r+0x34>

000439b0 <vfscanf>:
   439b0:	defffb04 	addi	sp,sp,-20
   439b4:	dcc00315 	stw	r19,12(sp)
   439b8:	04c00174 	movhi	r19,5
   439bc:	9ccfb204 	addi	r19,r19,16072
   439c0:	98c00017 	ldw	r3,0(r19)
   439c4:	dc800215 	stw	r18,8(sp)
   439c8:	dc400115 	stw	r17,4(sp)
   439cc:	dc000015 	stw	r16,0(sp)
   439d0:	dfc00415 	stw	ra,16(sp)
   439d4:	2021883a 	mov	r16,r4
   439d8:	2823883a 	mov	r17,r5
   439dc:	3025883a 	mov	r18,r6
   439e0:	18000326 	beq	r3,zero,439f0 <vfscanf+0x40>
   439e4:	18800e17 	ldw	r2,56(r3)
   439e8:	1809883a 	mov	r4,r3
   439ec:	10000b26 	beq	r2,zero,43a1c <vfscanf+0x6c>
   439f0:	99000017 	ldw	r4,0(r19)
   439f4:	800b883a 	mov	r5,r16
   439f8:	880d883a 	mov	r6,r17
   439fc:	900f883a 	mov	r7,r18
   43a00:	dfc00417 	ldw	ra,16(sp)
   43a04:	dcc00317 	ldw	r19,12(sp)
   43a08:	dc800217 	ldw	r18,8(sp)
   43a0c:	dc400117 	ldw	r17,4(sp)
   43a10:	dc000017 	ldw	r16,0(sp)
   43a14:	dec00504 	addi	sp,sp,20
   43a18:	004229c1 	jmpi	4229c <__svfscanf_r>
   43a1c:	00455f00 	call	455f0 <__sinit>
   43a20:	003ff306 	br	439f0 <vfscanf+0x40>

00043a24 <__swsetup_r>:
   43a24:	00800174 	movhi	r2,5
   43a28:	108fb204 	addi	r2,r2,16072
   43a2c:	10c00017 	ldw	r3,0(r2)
   43a30:	defffd04 	addi	sp,sp,-12
   43a34:	dc400115 	stw	r17,4(sp)
   43a38:	dc000015 	stw	r16,0(sp)
   43a3c:	dfc00215 	stw	ra,8(sp)
   43a40:	2023883a 	mov	r17,r4
   43a44:	2821883a 	mov	r16,r5
   43a48:	18000226 	beq	r3,zero,43a54 <__swsetup_r+0x30>
   43a4c:	18800e17 	ldw	r2,56(r3)
   43a50:	10001f26 	beq	r2,zero,43ad0 <__swsetup_r+0xac>
   43a54:	8100030b 	ldhu	r4,12(r16)
   43a58:	2080020c 	andi	r2,r4,8
   43a5c:	10002826 	beq	r2,zero,43b00 <__swsetup_r+0xdc>
   43a60:	81400417 	ldw	r5,16(r16)
   43a64:	28001d26 	beq	r5,zero,43adc <__swsetup_r+0xb8>
   43a68:	2080004c 	andi	r2,r4,1
   43a6c:	1005003a 	cmpeq	r2,r2,zero
   43a70:	10000b26 	beq	r2,zero,43aa0 <__swsetup_r+0x7c>
   43a74:	2080008c 	andi	r2,r4,2
   43a78:	10001226 	beq	r2,zero,43ac4 <__swsetup_r+0xa0>
   43a7c:	0005883a 	mov	r2,zero
   43a80:	80800215 	stw	r2,8(r16)
   43a84:	28000b26 	beq	r5,zero,43ab4 <__swsetup_r+0x90>
   43a88:	0005883a 	mov	r2,zero
   43a8c:	dfc00217 	ldw	ra,8(sp)
   43a90:	dc400117 	ldw	r17,4(sp)
   43a94:	dc000017 	ldw	r16,0(sp)
   43a98:	dec00304 	addi	sp,sp,12
   43a9c:	f800283a 	ret
   43aa0:	80800517 	ldw	r2,20(r16)
   43aa4:	80000215 	stw	zero,8(r16)
   43aa8:	0085c83a 	sub	r2,zero,r2
   43aac:	80800615 	stw	r2,24(r16)
   43ab0:	283ff51e 	bne	r5,zero,43a88 <__swsetup_r+0x64>
   43ab4:	2080200c 	andi	r2,r4,128
   43ab8:	103ff326 	beq	r2,zero,43a88 <__swsetup_r+0x64>
   43abc:	00bfffc4 	movi	r2,-1
   43ac0:	003ff206 	br	43a8c <__swsetup_r+0x68>
   43ac4:	80800517 	ldw	r2,20(r16)
   43ac8:	80800215 	stw	r2,8(r16)
   43acc:	003fed06 	br	43a84 <__swsetup_r+0x60>
   43ad0:	1809883a 	mov	r4,r3
   43ad4:	00455f00 	call	455f0 <__sinit>
   43ad8:	003fde06 	br	43a54 <__swsetup_r+0x30>
   43adc:	20c0a00c 	andi	r3,r4,640
   43ae0:	00808004 	movi	r2,512
   43ae4:	18bfe026 	beq	r3,r2,43a68 <__swsetup_r+0x44>
   43ae8:	8809883a 	mov	r4,r17
   43aec:	800b883a 	mov	r5,r16
   43af0:	00466140 	call	46614 <__smakebuf_r>
   43af4:	8100030b 	ldhu	r4,12(r16)
   43af8:	81400417 	ldw	r5,16(r16)
   43afc:	003fda06 	br	43a68 <__swsetup_r+0x44>
   43b00:	2080040c 	andi	r2,r4,16
   43b04:	103fed26 	beq	r2,zero,43abc <__swsetup_r+0x98>
   43b08:	2080010c 	andi	r2,r4,4
   43b0c:	10001226 	beq	r2,zero,43b58 <__swsetup_r+0x134>
   43b10:	81400c17 	ldw	r5,48(r16)
   43b14:	28000526 	beq	r5,zero,43b2c <__swsetup_r+0x108>
   43b18:	80801004 	addi	r2,r16,64
   43b1c:	28800226 	beq	r5,r2,43b28 <__swsetup_r+0x104>
   43b20:	8809883a 	mov	r4,r17
   43b24:	0045bf40 	call	45bf4 <_free_r>
   43b28:	80000c15 	stw	zero,48(r16)
   43b2c:	8080030b 	ldhu	r2,12(r16)
   43b30:	81400417 	ldw	r5,16(r16)
   43b34:	80000115 	stw	zero,4(r16)
   43b38:	10bff6cc 	andi	r2,r2,65499
   43b3c:	8080030d 	sth	r2,12(r16)
   43b40:	81400015 	stw	r5,0(r16)
   43b44:	8080030b 	ldhu	r2,12(r16)
   43b48:	10800214 	ori	r2,r2,8
   43b4c:	113fffcc 	andi	r4,r2,65535
   43b50:	8080030d 	sth	r2,12(r16)
   43b54:	003fc306 	br	43a64 <__swsetup_r+0x40>
   43b58:	81400417 	ldw	r5,16(r16)
   43b5c:	003ff906 	br	43b44 <__swsetup_r+0x120>

00043b60 <quorem>:
   43b60:	28c00417 	ldw	r3,16(r5)
   43b64:	20800417 	ldw	r2,16(r4)
   43b68:	defff104 	addi	sp,sp,-60
   43b6c:	dfc00e15 	stw	ra,56(sp)
   43b70:	df000d15 	stw	fp,52(sp)
   43b74:	ddc00c15 	stw	r23,48(sp)
   43b78:	dd800b15 	stw	r22,44(sp)
   43b7c:	dd400a15 	stw	r21,40(sp)
   43b80:	dd000915 	stw	r20,36(sp)
   43b84:	dcc00815 	stw	r19,32(sp)
   43b88:	dc800715 	stw	r18,28(sp)
   43b8c:	dc400615 	stw	r17,24(sp)
   43b90:	dc000515 	stw	r16,20(sp)
   43b94:	d9000315 	stw	r4,12(sp)
   43b98:	d9400415 	stw	r5,16(sp)
   43b9c:	10c07f16 	blt	r2,r3,43d9c <quorem+0x23c>
   43ba0:	1d3fffc4 	addi	r20,r3,-1
   43ba4:	d8c00417 	ldw	r3,16(sp)
   43ba8:	d9000317 	ldw	r4,12(sp)
   43bac:	a505883a 	add	r2,r20,r20
   43bb0:	1085883a 	add	r2,r2,r2
   43bb4:	1cc00504 	addi	r19,r3,20
   43bb8:	25c00504 	addi	r23,r4,20
   43bbc:	98ad883a 	add	r22,r19,r2
   43bc0:	15c7883a 	add	r3,r2,r23
   43bc4:	b1400017 	ldw	r5,0(r22)
   43bc8:	19000017 	ldw	r4,0(r3)
   43bcc:	d8c00015 	stw	r3,0(sp)
   43bd0:	29400044 	addi	r5,r5,1
   43bd4:	d9000215 	stw	r4,8(sp)
   43bd8:	004e8d80 	call	4e8d8 <__udivsi3>
   43bdc:	1039883a 	mov	fp,r2
   43be0:	10003d1e 	bne	r2,zero,43cd8 <quorem+0x178>
   43be4:	d9400417 	ldw	r5,16(sp)
   43be8:	d9000317 	ldw	r4,12(sp)
   43bec:	00474400 	call	47440 <__mcmp>
   43bf0:	10002c16 	blt	r2,zero,43ca4 <quorem+0x144>
   43bf4:	e7000044 	addi	fp,fp,1
   43bf8:	b80f883a 	mov	r7,r23
   43bfc:	0011883a 	mov	r8,zero
   43c00:	0009883a 	mov	r4,zero
   43c04:	99400017 	ldw	r5,0(r19)
   43c08:	38c00017 	ldw	r3,0(r7)
   43c0c:	9cc00104 	addi	r19,r19,4
   43c10:	28bfffcc 	andi	r2,r5,65535
   43c14:	2085883a 	add	r2,r4,r2
   43c18:	11bfffcc 	andi	r6,r2,65535
   43c1c:	193fffcc 	andi	r4,r3,65535
   43c20:	1004d43a 	srli	r2,r2,16
   43c24:	280ad43a 	srli	r5,r5,16
   43c28:	2189c83a 	sub	r4,r4,r6
   43c2c:	2209883a 	add	r4,r4,r8
   43c30:	1806d43a 	srli	r3,r3,16
   43c34:	288b883a 	add	r5,r5,r2
   43c38:	200dd43a 	srai	r6,r4,16
   43c3c:	28bfffcc 	andi	r2,r5,65535
   43c40:	1887c83a 	sub	r3,r3,r2
   43c44:	1987883a 	add	r3,r3,r6
   43c48:	3900000d 	sth	r4,0(r7)
   43c4c:	38c0008d 	sth	r3,2(r7)
   43c50:	2808d43a 	srli	r4,r5,16
   43c54:	39c00104 	addi	r7,r7,4
   43c58:	1811d43a 	srai	r8,r3,16
   43c5c:	b4ffe92e 	bgeu	r22,r19,43c04 <quorem+0xa4>
   43c60:	a505883a 	add	r2,r20,r20
   43c64:	1085883a 	add	r2,r2,r2
   43c68:	b885883a 	add	r2,r23,r2
   43c6c:	10c00017 	ldw	r3,0(r2)
   43c70:	18000c1e 	bne	r3,zero,43ca4 <quorem+0x144>
   43c74:	113fff04 	addi	r4,r2,-4
   43c78:	b900082e 	bgeu	r23,r4,43c9c <quorem+0x13c>
   43c7c:	10bfff17 	ldw	r2,-4(r2)
   43c80:	10000326 	beq	r2,zero,43c90 <quorem+0x130>
   43c84:	00000506 	br	43c9c <quorem+0x13c>
   43c88:	20800017 	ldw	r2,0(r4)
   43c8c:	1000031e 	bne	r2,zero,43c9c <quorem+0x13c>
   43c90:	213fff04 	addi	r4,r4,-4
   43c94:	a53fffc4 	addi	r20,r20,-1
   43c98:	b93ffb36 	bltu	r23,r4,43c88 <quorem+0x128>
   43c9c:	d9000317 	ldw	r4,12(sp)
   43ca0:	25000415 	stw	r20,16(r4)
   43ca4:	e005883a 	mov	r2,fp
   43ca8:	dfc00e17 	ldw	ra,56(sp)
   43cac:	df000d17 	ldw	fp,52(sp)
   43cb0:	ddc00c17 	ldw	r23,48(sp)
   43cb4:	dd800b17 	ldw	r22,44(sp)
   43cb8:	dd400a17 	ldw	r21,40(sp)
   43cbc:	dd000917 	ldw	r20,36(sp)
   43cc0:	dcc00817 	ldw	r19,32(sp)
   43cc4:	dc800717 	ldw	r18,28(sp)
   43cc8:	dc400617 	ldw	r17,24(sp)
   43ccc:	dc000517 	ldw	r16,20(sp)
   43cd0:	dec00f04 	addi	sp,sp,60
   43cd4:	f800283a 	ret
   43cd8:	b823883a 	mov	r17,r23
   43cdc:	9825883a 	mov	r18,r19
   43ce0:	d8000115 	stw	zero,4(sp)
   43ce4:	002b883a 	mov	r21,zero
   43ce8:	94000017 	ldw	r16,0(r18)
   43cec:	e009883a 	mov	r4,fp
   43cf0:	94800104 	addi	r18,r18,4
   43cf4:	817fffcc 	andi	r5,r16,65535
   43cf8:	004e8e80 	call	4e8e8 <__mulsi3>
   43cfc:	800ad43a 	srli	r5,r16,16
   43d00:	e009883a 	mov	r4,fp
   43d04:	a8a1883a 	add	r16,r21,r2
   43d08:	004e8e80 	call	4e8e8 <__mulsi3>
   43d0c:	89000017 	ldw	r4,0(r17)
   43d10:	80ffffcc 	andi	r3,r16,65535
   43d14:	8020d43a 	srli	r16,r16,16
   43d18:	217fffcc 	andi	r5,r4,65535
   43d1c:	28cbc83a 	sub	r5,r5,r3
   43d20:	d8c00117 	ldw	r3,4(sp)
   43d24:	2008d43a 	srli	r4,r4,16
   43d28:	1405883a 	add	r2,r2,r16
   43d2c:	28cb883a 	add	r5,r5,r3
   43d30:	280dd43a 	srai	r6,r5,16
   43d34:	10ffffcc 	andi	r3,r2,65535
   43d38:	20c9c83a 	sub	r4,r4,r3
   43d3c:	2189883a 	add	r4,r4,r6
   43d40:	8900008d 	sth	r4,2(r17)
   43d44:	2009d43a 	srai	r4,r4,16
   43d48:	8940000d 	sth	r5,0(r17)
   43d4c:	102ad43a 	srli	r21,r2,16
   43d50:	8c400104 	addi	r17,r17,4
   43d54:	d9000115 	stw	r4,4(sp)
   43d58:	b4bfe32e 	bgeu	r22,r18,43ce8 <quorem+0x188>
   43d5c:	d9000217 	ldw	r4,8(sp)
   43d60:	203fa01e 	bne	r4,zero,43be4 <quorem+0x84>
   43d64:	d8800017 	ldw	r2,0(sp)
   43d68:	10ffff04 	addi	r3,r2,-4
   43d6c:	b8c0082e 	bgeu	r23,r3,43d90 <quorem+0x230>
   43d70:	10bfff17 	ldw	r2,-4(r2)
   43d74:	10000326 	beq	r2,zero,43d84 <quorem+0x224>
   43d78:	00000506 	br	43d90 <quorem+0x230>
   43d7c:	18800017 	ldw	r2,0(r3)
   43d80:	1000031e 	bne	r2,zero,43d90 <quorem+0x230>
   43d84:	18ffff04 	addi	r3,r3,-4
   43d88:	a53fffc4 	addi	r20,r20,-1
   43d8c:	b8fffb36 	bltu	r23,r3,43d7c <quorem+0x21c>
   43d90:	d8c00317 	ldw	r3,12(sp)
   43d94:	1d000415 	stw	r20,16(r3)
   43d98:	003f9206 	br	43be4 <quorem+0x84>
   43d9c:	0005883a 	mov	r2,zero
   43da0:	003fc106 	br	43ca8 <quorem+0x148>

00043da4 <_dtoa_r>:
   43da4:	22001017 	ldw	r8,64(r4)
   43da8:	deffda04 	addi	sp,sp,-152
   43dac:	dd402115 	stw	r21,132(sp)
   43db0:	dd002015 	stw	r20,128(sp)
   43db4:	dc801e15 	stw	r18,120(sp)
   43db8:	dc401d15 	stw	r17,116(sp)
   43dbc:	dfc02515 	stw	ra,148(sp)
   43dc0:	df002415 	stw	fp,144(sp)
   43dc4:	ddc02315 	stw	r23,140(sp)
   43dc8:	dd802215 	stw	r22,136(sp)
   43dcc:	dcc01f15 	stw	r19,124(sp)
   43dd0:	dc001c15 	stw	r16,112(sp)
   43dd4:	d9001615 	stw	r4,88(sp)
   43dd8:	3023883a 	mov	r17,r6
   43ddc:	2829883a 	mov	r20,r5
   43de0:	d9c01715 	stw	r7,92(sp)
   43de4:	dc802817 	ldw	r18,160(sp)
   43de8:	302b883a 	mov	r21,r6
   43dec:	40000a26 	beq	r8,zero,43e18 <_dtoa_r+0x74>
   43df0:	20801117 	ldw	r2,68(r4)
   43df4:	400b883a 	mov	r5,r8
   43df8:	40800115 	stw	r2,4(r8)
   43dfc:	20c01117 	ldw	r3,68(r4)
   43e00:	00800044 	movi	r2,1
   43e04:	10c4983a 	sll	r2,r2,r3
   43e08:	40800215 	stw	r2,8(r8)
   43e0c:	00472e40 	call	472e4 <_Bfree>
   43e10:	d8c01617 	ldw	r3,88(sp)
   43e14:	18001015 	stw	zero,64(r3)
   43e18:	8800a316 	blt	r17,zero,440a8 <_dtoa_r+0x304>
   43e1c:	90000015 	stw	zero,0(r18)
   43e20:	a8dffc2c 	andhi	r3,r21,32752
   43e24:	009ffc34 	movhi	r2,32752
   43e28:	18809126 	beq	r3,r2,44070 <_dtoa_r+0x2cc>
   43e2c:	000d883a 	mov	r6,zero
   43e30:	000f883a 	mov	r7,zero
   43e34:	a009883a 	mov	r4,r20
   43e38:	a80b883a 	mov	r5,r21
   43e3c:	dd001215 	stw	r20,72(sp)
   43e40:	dd401315 	stw	r21,76(sp)
   43e44:	004e11c0 	call	4e11c <__nedf2>
   43e48:	1000171e 	bne	r2,zero,43ea8 <_dtoa_r+0x104>
   43e4c:	d9802717 	ldw	r6,156(sp)
   43e50:	00800044 	movi	r2,1
   43e54:	30800015 	stw	r2,0(r6)
   43e58:	d8802917 	ldw	r2,164(sp)
   43e5c:	10029b26 	beq	r2,zero,448cc <_dtoa_r+0xb28>
   43e60:	d9002917 	ldw	r4,164(sp)
   43e64:	00800174 	movhi	r2,5
   43e68:	1087a744 	addi	r2,r2,7837
   43e6c:	10ffffc4 	addi	r3,r2,-1
   43e70:	20800015 	stw	r2,0(r4)
   43e74:	1805883a 	mov	r2,r3
   43e78:	dfc02517 	ldw	ra,148(sp)
   43e7c:	df002417 	ldw	fp,144(sp)
   43e80:	ddc02317 	ldw	r23,140(sp)
   43e84:	dd802217 	ldw	r22,136(sp)
   43e88:	dd402117 	ldw	r21,132(sp)
   43e8c:	dd002017 	ldw	r20,128(sp)
   43e90:	dcc01f17 	ldw	r19,124(sp)
   43e94:	dc801e17 	ldw	r18,120(sp)
   43e98:	dc401d17 	ldw	r17,116(sp)
   43e9c:	dc001c17 	ldw	r16,112(sp)
   43ea0:	dec02604 	addi	sp,sp,152
   43ea4:	f800283a 	ret
   43ea8:	d9001617 	ldw	r4,88(sp)
   43eac:	d9401217 	ldw	r5,72(sp)
   43eb0:	d8800104 	addi	r2,sp,4
   43eb4:	a80d883a 	mov	r6,r21
   43eb8:	d9c00204 	addi	r7,sp,8
   43ebc:	d8800015 	stw	r2,0(sp)
   43ec0:	00479200 	call	47920 <__d2b>
   43ec4:	d8800715 	stw	r2,28(sp)
   43ec8:	a804d53a 	srli	r2,r21,20
   43ecc:	1101ffcc 	andi	r4,r2,2047
   43ed0:	20008626 	beq	r4,zero,440ec <_dtoa_r+0x348>
   43ed4:	d8c01217 	ldw	r3,72(sp)
   43ed8:	00800434 	movhi	r2,16
   43edc:	10bfffc4 	addi	r2,r2,-1
   43ee0:	ddc00117 	ldw	r23,4(sp)
   43ee4:	a884703a 	and	r2,r21,r2
   43ee8:	1811883a 	mov	r8,r3
   43eec:	124ffc34 	orhi	r9,r2,16368
   43ef0:	25bf0044 	addi	r22,r4,-1023
   43ef4:	d8000815 	stw	zero,32(sp)
   43ef8:	0005883a 	mov	r2,zero
   43efc:	00cffe34 	movhi	r3,16376
   43f00:	480b883a 	mov	r5,r9
   43f04:	4009883a 	mov	r4,r8
   43f08:	180f883a 	mov	r7,r3
   43f0c:	100d883a 	mov	r6,r2
   43f10:	004d9840 	call	4d984 <__subdf3>
   43f14:	0218dbf4 	movhi	r8,25455
   43f18:	4210d844 	addi	r8,r8,17249
   43f1c:	024ff4f4 	movhi	r9,16339
   43f20:	4a61e9c4 	addi	r9,r9,-30809
   43f24:	480f883a 	mov	r7,r9
   43f28:	400d883a 	mov	r6,r8
   43f2c:	180b883a 	mov	r5,r3
   43f30:	1009883a 	mov	r4,r2
   43f34:	004da780 	call	4da78 <__muldf3>
   43f38:	0222d874 	movhi	r8,35681
   43f3c:	42322cc4 	addi	r8,r8,-14157
   43f40:	024ff1f4 	movhi	r9,16327
   43f44:	4a628a04 	addi	r9,r9,-30168
   43f48:	480f883a 	mov	r7,r9
   43f4c:	400d883a 	mov	r6,r8
   43f50:	180b883a 	mov	r5,r3
   43f54:	1009883a 	mov	r4,r2
   43f58:	004da040 	call	4da04 <__adddf3>
   43f5c:	b009883a 	mov	r4,r22
   43f60:	1021883a 	mov	r16,r2
   43f64:	1823883a 	mov	r17,r3
   43f68:	004e3c40 	call	4e3c4 <__floatsidf>
   43f6c:	021427f4 	movhi	r8,20639
   43f70:	421e7ec4 	addi	r8,r8,31227
   43f74:	024ff4f4 	movhi	r9,16339
   43f78:	4a5104c4 	addi	r9,r9,17427
   43f7c:	480f883a 	mov	r7,r9
   43f80:	400d883a 	mov	r6,r8
   43f84:	180b883a 	mov	r5,r3
   43f88:	1009883a 	mov	r4,r2
   43f8c:	004da780 	call	4da78 <__muldf3>
   43f90:	180f883a 	mov	r7,r3
   43f94:	880b883a 	mov	r5,r17
   43f98:	100d883a 	mov	r6,r2
   43f9c:	8009883a 	mov	r4,r16
   43fa0:	004da040 	call	4da04 <__adddf3>
   43fa4:	1009883a 	mov	r4,r2
   43fa8:	180b883a 	mov	r5,r3
   43fac:	1021883a 	mov	r16,r2
   43fb0:	1823883a 	mov	r17,r3
   43fb4:	004e4bc0 	call	4e4bc <__fixdfsi>
   43fb8:	000d883a 	mov	r6,zero
   43fbc:	000f883a 	mov	r7,zero
   43fc0:	8009883a 	mov	r4,r16
   43fc4:	880b883a 	mov	r5,r17
   43fc8:	d8800d15 	stw	r2,52(sp)
   43fcc:	004e2b40 	call	4e2b4 <__ltdf2>
   43fd0:	10031716 	blt	r2,zero,44c30 <_dtoa_r+0xe8c>
   43fd4:	d8c00d17 	ldw	r3,52(sp)
   43fd8:	00800584 	movi	r2,22
   43fdc:	10c1482e 	bgeu	r2,r3,44500 <_dtoa_r+0x75c>
   43fe0:	01000044 	movi	r4,1
   43fe4:	d9000c15 	stw	r4,48(sp)
   43fe8:	bd85c83a 	sub	r2,r23,r22
   43fec:	11bfffc4 	addi	r6,r2,-1
   43ff0:	30030b16 	blt	r6,zero,44c20 <_dtoa_r+0xe7c>
   43ff4:	d9800a15 	stw	r6,40(sp)
   43ff8:	d8001115 	stw	zero,68(sp)
   43ffc:	d8c00d17 	ldw	r3,52(sp)
   44000:	1802ff16 	blt	r3,zero,44c00 <_dtoa_r+0xe5c>
   44004:	d9000a17 	ldw	r4,40(sp)
   44008:	d8c00915 	stw	r3,36(sp)
   4400c:	d8001015 	stw	zero,64(sp)
   44010:	20c9883a 	add	r4,r4,r3
   44014:	d9000a15 	stw	r4,40(sp)
   44018:	d9001717 	ldw	r4,92(sp)
   4401c:	00800244 	movi	r2,9
   44020:	11004636 	bltu	r2,r4,4413c <_dtoa_r+0x398>
   44024:	00800144 	movi	r2,5
   44028:	11020416 	blt	r2,r4,4483c <_dtoa_r+0xa98>
   4402c:	04400044 	movi	r17,1
   44030:	d8c01717 	ldw	r3,92(sp)
   44034:	00800144 	movi	r2,5
   44038:	10c1ed36 	bltu	r2,r3,447f0 <_dtoa_r+0xa4c>
   4403c:	18c5883a 	add	r2,r3,r3
   44040:	1085883a 	add	r2,r2,r2
   44044:	00c00134 	movhi	r3,4
   44048:	18d01604 	addi	r3,r3,16472
   4404c:	10c5883a 	add	r2,r2,r3
   44050:	11000017 	ldw	r4,0(r2)
   44054:	2000683a 	jmp	r4
   44058:	00044144 	movi	zero,4357
   4405c:	00044144 	movi	zero,4357
   44060:	00044b44 	movi	zero,4397
   44064:	00044b1c 	xori	zero,zero,4396
   44068:	00044b60 	cmpeqi	zero,zero,4397
   4406c:	00044b6c 	andhi	zero,zero,4397
   44070:	d9002717 	ldw	r4,156(sp)
   44074:	0089c3c4 	movi	r2,9999
   44078:	20800015 	stw	r2,0(r4)
   4407c:	a0001026 	beq	r20,zero,440c0 <_dtoa_r+0x31c>
   44080:	00c00174 	movhi	r3,5
   44084:	18c85e04 	addi	r3,r3,8568
   44088:	d9802917 	ldw	r6,164(sp)
   4408c:	303f7926 	beq	r6,zero,43e74 <_dtoa_r+0xd0>
   44090:	188000c7 	ldb	r2,3(r3)
   44094:	190000c4 	addi	r4,r3,3
   44098:	1000101e 	bne	r2,zero,440dc <_dtoa_r+0x338>
   4409c:	d8802917 	ldw	r2,164(sp)
   440a0:	11000015 	stw	r4,0(r2)
   440a4:	003f7306 	br	43e74 <_dtoa_r+0xd0>
   440a8:	00a00034 	movhi	r2,32768
   440ac:	10bfffc4 	addi	r2,r2,-1
   440b0:	00c00044 	movi	r3,1
   440b4:	88aa703a 	and	r21,r17,r2
   440b8:	90c00015 	stw	r3,0(r18)
   440bc:	003f5806 	br	43e20 <_dtoa_r+0x7c>
   440c0:	00800434 	movhi	r2,16
   440c4:	10bfffc4 	addi	r2,r2,-1
   440c8:	a884703a 	and	r2,r21,r2
   440cc:	103fec1e 	bne	r2,zero,44080 <_dtoa_r+0x2dc>
   440d0:	00c00174 	movhi	r3,5
   440d4:	18c85b04 	addi	r3,r3,8556
   440d8:	003feb06 	br	44088 <_dtoa_r+0x2e4>
   440dc:	d8802917 	ldw	r2,164(sp)
   440e0:	19000204 	addi	r4,r3,8
   440e4:	11000015 	stw	r4,0(r2)
   440e8:	003f6206 	br	43e74 <_dtoa_r+0xd0>
   440ec:	ddc00117 	ldw	r23,4(sp)
   440f0:	d8800217 	ldw	r2,8(sp)
   440f4:	01000804 	movi	r4,32
   440f8:	b8c10c84 	addi	r3,r23,1074
   440fc:	18a3883a 	add	r17,r3,r2
   44100:	2441b80e 	bge	r4,r17,447e4 <_dtoa_r+0xa40>
   44104:	00c01004 	movi	r3,64
   44108:	1c47c83a 	sub	r3,r3,r17
   4410c:	88bff804 	addi	r2,r17,-32
   44110:	a8c6983a 	sll	r3,r21,r3
   44114:	a084d83a 	srl	r2,r20,r2
   44118:	1888b03a 	or	r4,r3,r2
   4411c:	004e6080 	call	4e608 <__floatunsidf>
   44120:	1011883a 	mov	r8,r2
   44124:	00bf8434 	movhi	r2,65040
   44128:	01000044 	movi	r4,1
   4412c:	10d3883a 	add	r9,r2,r3
   44130:	8dbef344 	addi	r22,r17,-1075
   44134:	d9000815 	stw	r4,32(sp)
   44138:	003f6f06 	br	43ef8 <_dtoa_r+0x154>
   4413c:	d8001715 	stw	zero,92(sp)
   44140:	04400044 	movi	r17,1
   44144:	00bfffc4 	movi	r2,-1
   44148:	00c00044 	movi	r3,1
   4414c:	d8800e15 	stw	r2,56(sp)
   44150:	d8002615 	stw	zero,152(sp)
   44154:	d8800f15 	stw	r2,60(sp)
   44158:	d8c00b15 	stw	r3,44(sp)
   4415c:	1021883a 	mov	r16,r2
   44160:	d8801617 	ldw	r2,88(sp)
   44164:	10001115 	stw	zero,68(r2)
   44168:	d8801617 	ldw	r2,88(sp)
   4416c:	11401117 	ldw	r5,68(r2)
   44170:	1009883a 	mov	r4,r2
   44174:	00478640 	call	47864 <_Balloc>
   44178:	d8c01617 	ldw	r3,88(sp)
   4417c:	d8800515 	stw	r2,20(sp)
   44180:	18801015 	stw	r2,64(r3)
   44184:	00800384 	movi	r2,14
   44188:	14006836 	bltu	r2,r16,4432c <_dtoa_r+0x588>
   4418c:	8805003a 	cmpeq	r2,r17,zero
   44190:	1000661e 	bne	r2,zero,4432c <_dtoa_r+0x588>
   44194:	d9000d17 	ldw	r4,52(sp)
   44198:	0102300e 	bge	zero,r4,44a5c <_dtoa_r+0xcb8>
   4419c:	208003cc 	andi	r2,r4,15
   441a0:	100490fa 	slli	r2,r2,3
   441a4:	2025d13a 	srai	r18,r4,4
   441a8:	00c00174 	movhi	r3,5
   441ac:	18c87004 	addi	r3,r3,8640
   441b0:	10c5883a 	add	r2,r2,r3
   441b4:	90c0040c 	andi	r3,r18,16
   441b8:	14000017 	ldw	r16,0(r2)
   441bc:	14400117 	ldw	r17,4(r2)
   441c0:	18036a1e 	bne	r3,zero,44f6c <_dtoa_r+0x11c8>
   441c4:	05800084 	movi	r22,2
   441c8:	90001026 	beq	r18,zero,4420c <_dtoa_r+0x468>
   441cc:	04c00174 	movhi	r19,5
   441d0:	9cc8a204 	addi	r19,r19,8840
   441d4:	9080004c 	andi	r2,r18,1
   441d8:	1005003a 	cmpeq	r2,r2,zero
   441dc:	1000081e 	bne	r2,zero,44200 <_dtoa_r+0x45c>
   441e0:	99800017 	ldw	r6,0(r19)
   441e4:	99c00117 	ldw	r7,4(r19)
   441e8:	880b883a 	mov	r5,r17
   441ec:	8009883a 	mov	r4,r16
   441f0:	004da780 	call	4da78 <__muldf3>
   441f4:	1021883a 	mov	r16,r2
   441f8:	b5800044 	addi	r22,r22,1
   441fc:	1823883a 	mov	r17,r3
   44200:	9025d07a 	srai	r18,r18,1
   44204:	9cc00204 	addi	r19,r19,8
   44208:	903ff21e 	bne	r18,zero,441d4 <_dtoa_r+0x430>
   4420c:	a80b883a 	mov	r5,r21
   44210:	a009883a 	mov	r4,r20
   44214:	880f883a 	mov	r7,r17
   44218:	800d883a 	mov	r6,r16
   4421c:	004de3c0 	call	4de3c <__divdf3>
   44220:	1029883a 	mov	r20,r2
   44224:	182b883a 	mov	r21,r3
   44228:	d8c00c17 	ldw	r3,48(sp)
   4422c:	1805003a 	cmpeq	r2,r3,zero
   44230:	1000081e 	bne	r2,zero,44254 <_dtoa_r+0x4b0>
   44234:	0005883a 	mov	r2,zero
   44238:	00cffc34 	movhi	r3,16368
   4423c:	180f883a 	mov	r7,r3
   44240:	a009883a 	mov	r4,r20
   44244:	a80b883a 	mov	r5,r21
   44248:	100d883a 	mov	r6,r2
   4424c:	004e2b40 	call	4e2b4 <__ltdf2>
   44250:	1003fe16 	blt	r2,zero,4524c <_dtoa_r+0x14a8>
   44254:	b009883a 	mov	r4,r22
   44258:	004e3c40 	call	4e3c4 <__floatsidf>
   4425c:	180b883a 	mov	r5,r3
   44260:	1009883a 	mov	r4,r2
   44264:	a00d883a 	mov	r6,r20
   44268:	a80f883a 	mov	r7,r21
   4426c:	004da780 	call	4da78 <__muldf3>
   44270:	0011883a 	mov	r8,zero
   44274:	02500734 	movhi	r9,16412
   44278:	1009883a 	mov	r4,r2
   4427c:	180b883a 	mov	r5,r3
   44280:	480f883a 	mov	r7,r9
   44284:	400d883a 	mov	r6,r8
   44288:	004da040 	call	4da04 <__adddf3>
   4428c:	d9000f17 	ldw	r4,60(sp)
   44290:	102d883a 	mov	r22,r2
   44294:	00bf3034 	movhi	r2,64704
   44298:	18b9883a 	add	fp,r3,r2
   4429c:	e02f883a 	mov	r23,fp
   442a0:	20028f1e 	bne	r4,zero,44ce0 <_dtoa_r+0xf3c>
   442a4:	0005883a 	mov	r2,zero
   442a8:	00d00534 	movhi	r3,16404
   442ac:	a009883a 	mov	r4,r20
   442b0:	a80b883a 	mov	r5,r21
   442b4:	180f883a 	mov	r7,r3
   442b8:	100d883a 	mov	r6,r2
   442bc:	004d9840 	call	4d984 <__subdf3>
   442c0:	1009883a 	mov	r4,r2
   442c4:	e00f883a 	mov	r7,fp
   442c8:	180b883a 	mov	r5,r3
   442cc:	b00d883a 	mov	r6,r22
   442d0:	1025883a 	mov	r18,r2
   442d4:	1827883a 	mov	r19,r3
   442d8:	004e1a40 	call	4e1a4 <__gtdf2>
   442dc:	00834f16 	blt	zero,r2,4501c <_dtoa_r+0x1278>
   442e0:	e0e0003c 	xorhi	r3,fp,32768
   442e4:	9009883a 	mov	r4,r18
   442e8:	980b883a 	mov	r5,r19
   442ec:	180f883a 	mov	r7,r3
   442f0:	b00d883a 	mov	r6,r22
   442f4:	004e2b40 	call	4e2b4 <__ltdf2>
   442f8:	1000080e 	bge	r2,zero,4431c <_dtoa_r+0x578>
   442fc:	0027883a 	mov	r19,zero
   44300:	0025883a 	mov	r18,zero
   44304:	d8802617 	ldw	r2,152(sp)
   44308:	df000517 	ldw	fp,20(sp)
   4430c:	d8000615 	stw	zero,24(sp)
   44310:	0084303a 	nor	r2,zero,r2
   44314:	d8800d15 	stw	r2,52(sp)
   44318:	00019b06 	br	44988 <_dtoa_r+0xbe4>
   4431c:	d9801217 	ldw	r6,72(sp)
   44320:	d8801317 	ldw	r2,76(sp)
   44324:	3029883a 	mov	r20,r6
   44328:	102b883a 	mov	r21,r2
   4432c:	d8c00217 	ldw	r3,8(sp)
   44330:	18008516 	blt	r3,zero,44548 <_dtoa_r+0x7a4>
   44334:	d9000d17 	ldw	r4,52(sp)
   44338:	00800384 	movi	r2,14
   4433c:	11008216 	blt	r2,r4,44548 <_dtoa_r+0x7a4>
   44340:	200490fa 	slli	r2,r4,3
   44344:	d9802617 	ldw	r6,152(sp)
   44348:	00c00174 	movhi	r3,5
   4434c:	18c87004 	addi	r3,r3,8640
   44350:	10c5883a 	add	r2,r2,r3
   44354:	14800017 	ldw	r18,0(r2)
   44358:	14c00117 	ldw	r19,4(r2)
   4435c:	30031e16 	blt	r6,zero,44fd8 <_dtoa_r+0x1234>
   44360:	d9000517 	ldw	r4,20(sp)
   44364:	d8c00f17 	ldw	r3,60(sp)
   44368:	a823883a 	mov	r17,r21
   4436c:	a021883a 	mov	r16,r20
   44370:	192b883a 	add	r21,r3,r4
   44374:	2039883a 	mov	fp,r4
   44378:	00000f06 	br	443b8 <_dtoa_r+0x614>
   4437c:	0005883a 	mov	r2,zero
   44380:	00d00934 	movhi	r3,16420
   44384:	5009883a 	mov	r4,r10
   44388:	580b883a 	mov	r5,r11
   4438c:	180f883a 	mov	r7,r3
   44390:	100d883a 	mov	r6,r2
   44394:	004da780 	call	4da78 <__muldf3>
   44398:	180b883a 	mov	r5,r3
   4439c:	000d883a 	mov	r6,zero
   443a0:	000f883a 	mov	r7,zero
   443a4:	1009883a 	mov	r4,r2
   443a8:	1021883a 	mov	r16,r2
   443ac:	1823883a 	mov	r17,r3
   443b0:	004e11c0 	call	4e11c <__nedf2>
   443b4:	10004526 	beq	r2,zero,444cc <_dtoa_r+0x728>
   443b8:	900d883a 	mov	r6,r18
   443bc:	980f883a 	mov	r7,r19
   443c0:	8009883a 	mov	r4,r16
   443c4:	880b883a 	mov	r5,r17
   443c8:	004de3c0 	call	4de3c <__divdf3>
   443cc:	180b883a 	mov	r5,r3
   443d0:	1009883a 	mov	r4,r2
   443d4:	004e4bc0 	call	4e4bc <__fixdfsi>
   443d8:	1009883a 	mov	r4,r2
   443dc:	1029883a 	mov	r20,r2
   443e0:	004e3c40 	call	4e3c4 <__floatsidf>
   443e4:	180f883a 	mov	r7,r3
   443e8:	9009883a 	mov	r4,r18
   443ec:	980b883a 	mov	r5,r19
   443f0:	100d883a 	mov	r6,r2
   443f4:	004da780 	call	4da78 <__muldf3>
   443f8:	180f883a 	mov	r7,r3
   443fc:	880b883a 	mov	r5,r17
   44400:	8009883a 	mov	r4,r16
   44404:	100d883a 	mov	r6,r2
   44408:	004d9840 	call	4d984 <__subdf3>
   4440c:	1015883a 	mov	r10,r2
   44410:	a0800c04 	addi	r2,r20,48
   44414:	e0800005 	stb	r2,0(fp)
   44418:	e7000044 	addi	fp,fp,1
   4441c:	1817883a 	mov	r11,r3
   44420:	e57fd61e 	bne	fp,r21,4437c <_dtoa_r+0x5d8>
   44424:	500d883a 	mov	r6,r10
   44428:	180f883a 	mov	r7,r3
   4442c:	5009883a 	mov	r4,r10
   44430:	180b883a 	mov	r5,r3
   44434:	004da040 	call	4da04 <__adddf3>
   44438:	100d883a 	mov	r6,r2
   4443c:	9009883a 	mov	r4,r18
   44440:	980b883a 	mov	r5,r19
   44444:	180f883a 	mov	r7,r3
   44448:	1021883a 	mov	r16,r2
   4444c:	1823883a 	mov	r17,r3
   44450:	004e2b40 	call	4e2b4 <__ltdf2>
   44454:	10000816 	blt	r2,zero,44478 <_dtoa_r+0x6d4>
   44458:	980b883a 	mov	r5,r19
   4445c:	800d883a 	mov	r6,r16
   44460:	880f883a 	mov	r7,r17
   44464:	9009883a 	mov	r4,r18
   44468:	004e0940 	call	4e094 <__eqdf2>
   4446c:	1000171e 	bne	r2,zero,444cc <_dtoa_r+0x728>
   44470:	a080004c 	andi	r2,r20,1
   44474:	10001526 	beq	r2,zero,444cc <_dtoa_r+0x728>
   44478:	d8800d17 	ldw	r2,52(sp)
   4447c:	d8800415 	stw	r2,16(sp)
   44480:	e009883a 	mov	r4,fp
   44484:	213fffc4 	addi	r4,r4,-1
   44488:	20c00007 	ldb	r3,0(r4)
   4448c:	00800e44 	movi	r2,57
   44490:	1880081e 	bne	r3,r2,444b4 <_dtoa_r+0x710>
   44494:	d8800517 	ldw	r2,20(sp)
   44498:	113ffa1e 	bne	r2,r4,44484 <_dtoa_r+0x6e0>
   4449c:	d8c00417 	ldw	r3,16(sp)
   444a0:	d9800517 	ldw	r6,20(sp)
   444a4:	00800c04 	movi	r2,48
   444a8:	18c00044 	addi	r3,r3,1
   444ac:	d8c00415 	stw	r3,16(sp)
   444b0:	30800005 	stb	r2,0(r6)
   444b4:	20800003 	ldbu	r2,0(r4)
   444b8:	d8c00417 	ldw	r3,16(sp)
   444bc:	27000044 	addi	fp,r4,1
   444c0:	10800044 	addi	r2,r2,1
   444c4:	d8c00d15 	stw	r3,52(sp)
   444c8:	20800005 	stb	r2,0(r4)
   444cc:	d9001617 	ldw	r4,88(sp)
   444d0:	d9400717 	ldw	r5,28(sp)
   444d4:	00472e40 	call	472e4 <_Bfree>
   444d8:	e0000005 	stb	zero,0(fp)
   444dc:	d9800d17 	ldw	r6,52(sp)
   444e0:	d8c02717 	ldw	r3,156(sp)
   444e4:	d9002917 	ldw	r4,164(sp)
   444e8:	30800044 	addi	r2,r6,1
   444ec:	18800015 	stw	r2,0(r3)
   444f0:	20029c26 	beq	r4,zero,44f64 <_dtoa_r+0x11c0>
   444f4:	d8c00517 	ldw	r3,20(sp)
   444f8:	27000015 	stw	fp,0(r4)
   444fc:	003e5d06 	br	43e74 <_dtoa_r+0xd0>
   44500:	d9800d17 	ldw	r6,52(sp)
   44504:	00c00174 	movhi	r3,5
   44508:	18c87004 	addi	r3,r3,8640
   4450c:	d9001217 	ldw	r4,72(sp)
   44510:	300490fa 	slli	r2,r6,3
   44514:	d9401317 	ldw	r5,76(sp)
   44518:	10c5883a 	add	r2,r2,r3
   4451c:	12000017 	ldw	r8,0(r2)
   44520:	12400117 	ldw	r9,4(r2)
   44524:	400d883a 	mov	r6,r8
   44528:	480f883a 	mov	r7,r9
   4452c:	004e2b40 	call	4e2b4 <__ltdf2>
   44530:	1000030e 	bge	r2,zero,44540 <_dtoa_r+0x79c>
   44534:	d8800d17 	ldw	r2,52(sp)
   44538:	10bfffc4 	addi	r2,r2,-1
   4453c:	d8800d15 	stw	r2,52(sp)
   44540:	d8000c15 	stw	zero,48(sp)
   44544:	003ea806 	br	43fe8 <_dtoa_r+0x244>
   44548:	d9000b17 	ldw	r4,44(sp)
   4454c:	202cc03a 	cmpne	r22,r4,zero
   44550:	b000c71e 	bne	r22,zero,44870 <_dtoa_r+0xacc>
   44554:	dc001117 	ldw	r16,68(sp)
   44558:	dc801017 	ldw	r18,64(sp)
   4455c:	0027883a 	mov	r19,zero
   44560:	04000b0e 	bge	zero,r16,44590 <_dtoa_r+0x7ec>
   44564:	d8c00a17 	ldw	r3,40(sp)
   44568:	00c0090e 	bge	zero,r3,44590 <_dtoa_r+0x7ec>
   4456c:	8005883a 	mov	r2,r16
   44570:	1c011316 	blt	r3,r16,449c0 <_dtoa_r+0xc1c>
   44574:	d9000a17 	ldw	r4,40(sp)
   44578:	d9801117 	ldw	r6,68(sp)
   4457c:	80a1c83a 	sub	r16,r16,r2
   44580:	2089c83a 	sub	r4,r4,r2
   44584:	308dc83a 	sub	r6,r6,r2
   44588:	d9000a15 	stw	r4,40(sp)
   4458c:	d9801115 	stw	r6,68(sp)
   44590:	d8801017 	ldw	r2,64(sp)
   44594:	0080150e 	bge	zero,r2,445ec <_dtoa_r+0x848>
   44598:	d8c00b17 	ldw	r3,44(sp)
   4459c:	1805003a 	cmpeq	r2,r3,zero
   445a0:	1001c91e 	bne	r2,zero,44cc8 <_dtoa_r+0xf24>
   445a4:	04800e0e 	bge	zero,r18,445e0 <_dtoa_r+0x83c>
   445a8:	d9001617 	ldw	r4,88(sp)
   445ac:	980b883a 	mov	r5,r19
   445b0:	900d883a 	mov	r6,r18
   445b4:	00481300 	call	48130 <__pow5mult>
   445b8:	d9001617 	ldw	r4,88(sp)
   445bc:	d9800717 	ldw	r6,28(sp)
   445c0:	100b883a 	mov	r5,r2
   445c4:	1027883a 	mov	r19,r2
   445c8:	0047d740 	call	47d74 <__multiply>
   445cc:	d9001617 	ldw	r4,88(sp)
   445d0:	d9400717 	ldw	r5,28(sp)
   445d4:	1023883a 	mov	r17,r2
   445d8:	00472e40 	call	472e4 <_Bfree>
   445dc:	dc400715 	stw	r17,28(sp)
   445e0:	d9001017 	ldw	r4,64(sp)
   445e4:	248dc83a 	sub	r6,r4,r18
   445e8:	30010e1e 	bne	r6,zero,44a24 <_dtoa_r+0xc80>
   445ec:	d9001617 	ldw	r4,88(sp)
   445f0:	04400044 	movi	r17,1
   445f4:	880b883a 	mov	r5,r17
   445f8:	0047fc80 	call	47fc8 <__i2b>
   445fc:	d9800917 	ldw	r6,36(sp)
   44600:	1025883a 	mov	r18,r2
   44604:	0180040e 	bge	zero,r6,44618 <_dtoa_r+0x874>
   44608:	d9001617 	ldw	r4,88(sp)
   4460c:	100b883a 	mov	r5,r2
   44610:	00481300 	call	48130 <__pow5mult>
   44614:	1025883a 	mov	r18,r2
   44618:	d8801717 	ldw	r2,92(sp)
   4461c:	8880f30e 	bge	r17,r2,449ec <_dtoa_r+0xc48>
   44620:	0023883a 	mov	r17,zero
   44624:	d9800917 	ldw	r6,36(sp)
   44628:	30019e1e 	bne	r6,zero,44ca4 <_dtoa_r+0xf00>
   4462c:	00c00044 	movi	r3,1
   44630:	d9000a17 	ldw	r4,40(sp)
   44634:	20c5883a 	add	r2,r4,r3
   44638:	10c007cc 	andi	r3,r2,31
   4463c:	1800841e 	bne	r3,zero,44850 <_dtoa_r+0xaac>
   44640:	00800704 	movi	r2,28
   44644:	d9000a17 	ldw	r4,40(sp)
   44648:	d9801117 	ldw	r6,68(sp)
   4464c:	80a1883a 	add	r16,r16,r2
   44650:	2089883a 	add	r4,r4,r2
   44654:	308d883a 	add	r6,r6,r2
   44658:	d9000a15 	stw	r4,40(sp)
   4465c:	d9801115 	stw	r6,68(sp)
   44660:	d8801117 	ldw	r2,68(sp)
   44664:	0080050e 	bge	zero,r2,4467c <_dtoa_r+0x8d8>
   44668:	d9400717 	ldw	r5,28(sp)
   4466c:	d9001617 	ldw	r4,88(sp)
   44670:	100d883a 	mov	r6,r2
   44674:	0047c280 	call	47c28 <__lshift>
   44678:	d8800715 	stw	r2,28(sp)
   4467c:	d8c00a17 	ldw	r3,40(sp)
   44680:	00c0050e 	bge	zero,r3,44698 <_dtoa_r+0x8f4>
   44684:	d9001617 	ldw	r4,88(sp)
   44688:	900b883a 	mov	r5,r18
   4468c:	180d883a 	mov	r6,r3
   44690:	0047c280 	call	47c28 <__lshift>
   44694:	1025883a 	mov	r18,r2
   44698:	d9000c17 	ldw	r4,48(sp)
   4469c:	2005003a 	cmpeq	r2,r4,zero
   446a0:	10016f26 	beq	r2,zero,44c60 <_dtoa_r+0xebc>
   446a4:	d9000f17 	ldw	r4,60(sp)
   446a8:	0102170e 	bge	zero,r4,44f08 <_dtoa_r+0x1164>
   446ac:	d9800b17 	ldw	r6,44(sp)
   446b0:	3005003a 	cmpeq	r2,r6,zero
   446b4:	1000881e 	bne	r2,zero,448d8 <_dtoa_r+0xb34>
   446b8:	0400050e 	bge	zero,r16,446d0 <_dtoa_r+0x92c>
   446bc:	d9001617 	ldw	r4,88(sp)
   446c0:	980b883a 	mov	r5,r19
   446c4:	800d883a 	mov	r6,r16
   446c8:	0047c280 	call	47c28 <__lshift>
   446cc:	1027883a 	mov	r19,r2
   446d0:	8804c03a 	cmpne	r2,r17,zero
   446d4:	1002541e 	bne	r2,zero,45028 <_dtoa_r+0x1284>
   446d8:	980b883a 	mov	r5,r19
   446dc:	dd800517 	ldw	r22,20(sp)
   446e0:	dcc00615 	stw	r19,24(sp)
   446e4:	a700004c 	andi	fp,r20,1
   446e8:	2827883a 	mov	r19,r5
   446ec:	d9000717 	ldw	r4,28(sp)
   446f0:	900b883a 	mov	r5,r18
   446f4:	0043b600 	call	43b60 <quorem>
   446f8:	d9000717 	ldw	r4,28(sp)
   446fc:	d9400617 	ldw	r5,24(sp)
   44700:	1023883a 	mov	r17,r2
   44704:	8dc00c04 	addi	r23,r17,48
   44708:	00474400 	call	47440 <__mcmp>
   4470c:	d9001617 	ldw	r4,88(sp)
   44710:	900b883a 	mov	r5,r18
   44714:	980d883a 	mov	r6,r19
   44718:	1029883a 	mov	r20,r2
   4471c:	0047a9c0 	call	47a9c <__mdiff>
   44720:	102b883a 	mov	r21,r2
   44724:	10800317 	ldw	r2,12(r2)
   44728:	1001281e 	bne	r2,zero,44bcc <_dtoa_r+0xe28>
   4472c:	d9000717 	ldw	r4,28(sp)
   44730:	a80b883a 	mov	r5,r21
   44734:	00474400 	call	47440 <__mcmp>
   44738:	d9001617 	ldw	r4,88(sp)
   4473c:	1021883a 	mov	r16,r2
   44740:	a80b883a 	mov	r5,r21
   44744:	00472e40 	call	472e4 <_Bfree>
   44748:	8000041e 	bne	r16,zero,4475c <_dtoa_r+0x9b8>
   4474c:	d8801717 	ldw	r2,92(sp)
   44750:	1000021e 	bne	r2,zero,4475c <_dtoa_r+0x9b8>
   44754:	e004c03a 	cmpne	r2,fp,zero
   44758:	10011726 	beq	r2,zero,44bb8 <_dtoa_r+0xe14>
   4475c:	a0010616 	blt	r20,zero,44b78 <_dtoa_r+0xdd4>
   44760:	a000041e 	bne	r20,zero,44774 <_dtoa_r+0x9d0>
   44764:	d8c01717 	ldw	r3,92(sp)
   44768:	1800021e 	bne	r3,zero,44774 <_dtoa_r+0x9d0>
   4476c:	e004c03a 	cmpne	r2,fp,zero
   44770:	10010126 	beq	r2,zero,44b78 <_dtoa_r+0xdd4>
   44774:	04023d16 	blt	zero,r16,4506c <_dtoa_r+0x12c8>
   44778:	b5c00005 	stb	r23,0(r22)
   4477c:	d9800517 	ldw	r6,20(sp)
   44780:	d9000f17 	ldw	r4,60(sp)
   44784:	b5800044 	addi	r22,r22,1
   44788:	3105883a 	add	r2,r6,r4
   4478c:	b0806526 	beq	r22,r2,44924 <_dtoa_r+0xb80>
   44790:	d9400717 	ldw	r5,28(sp)
   44794:	d9001617 	ldw	r4,88(sp)
   44798:	01800284 	movi	r6,10
   4479c:	000f883a 	mov	r7,zero
   447a0:	00480040 	call	48004 <__multadd>
   447a4:	d8800715 	stw	r2,28(sp)
   447a8:	d8800617 	ldw	r2,24(sp)
   447ac:	14c10c26 	beq	r2,r19,44be0 <_dtoa_r+0xe3c>
   447b0:	d9400617 	ldw	r5,24(sp)
   447b4:	d9001617 	ldw	r4,88(sp)
   447b8:	01800284 	movi	r6,10
   447bc:	000f883a 	mov	r7,zero
   447c0:	00480040 	call	48004 <__multadd>
   447c4:	d9001617 	ldw	r4,88(sp)
   447c8:	980b883a 	mov	r5,r19
   447cc:	01800284 	movi	r6,10
   447d0:	000f883a 	mov	r7,zero
   447d4:	d8800615 	stw	r2,24(sp)
   447d8:	00480040 	call	48004 <__multadd>
   447dc:	1027883a 	mov	r19,r2
   447e0:	003fc206 	br	446ec <_dtoa_r+0x948>
   447e4:	2445c83a 	sub	r2,r4,r17
   447e8:	a088983a 	sll	r4,r20,r2
   447ec:	003e4b06 	br	4411c <_dtoa_r+0x378>
   447f0:	01bfffc4 	movi	r6,-1
   447f4:	00800044 	movi	r2,1
   447f8:	d9800e15 	stw	r6,56(sp)
   447fc:	d9800f15 	stw	r6,60(sp)
   44800:	d8800b15 	stw	r2,44(sp)
   44804:	d8c01617 	ldw	r3,88(sp)
   44808:	008005c4 	movi	r2,23
   4480c:	18001115 	stw	zero,68(r3)
   44810:	1580082e 	bgeu	r2,r22,44834 <_dtoa_r+0xa90>
   44814:	00c00104 	movi	r3,4
   44818:	0009883a 	mov	r4,zero
   4481c:	18c7883a 	add	r3,r3,r3
   44820:	18800504 	addi	r2,r3,20
   44824:	21000044 	addi	r4,r4,1
   44828:	b0bffc2e 	bgeu	r22,r2,4481c <_dtoa_r+0xa78>
   4482c:	d9801617 	ldw	r6,88(sp)
   44830:	31001115 	stw	r4,68(r6)
   44834:	dc000f17 	ldw	r16,60(sp)
   44838:	003e4b06 	br	44168 <_dtoa_r+0x3c4>
   4483c:	d9801717 	ldw	r6,92(sp)
   44840:	0023883a 	mov	r17,zero
   44844:	31bfff04 	addi	r6,r6,-4
   44848:	d9801715 	stw	r6,92(sp)
   4484c:	003df806 	br	44030 <_dtoa_r+0x28c>
   44850:	00800804 	movi	r2,32
   44854:	10c9c83a 	sub	r4,r2,r3
   44858:	00c00104 	movi	r3,4
   4485c:	19005a16 	blt	r3,r4,449c8 <_dtoa_r+0xc24>
   44860:	008000c4 	movi	r2,3
   44864:	113f7e16 	blt	r2,r4,44660 <_dtoa_r+0x8bc>
   44868:	20800704 	addi	r2,r4,28
   4486c:	003f7506 	br	44644 <_dtoa_r+0x8a0>
   44870:	d9801717 	ldw	r6,92(sp)
   44874:	00800044 	movi	r2,1
   44878:	1180a10e 	bge	r2,r6,44b00 <_dtoa_r+0xd5c>
   4487c:	d9800f17 	ldw	r6,60(sp)
   44880:	d8c01017 	ldw	r3,64(sp)
   44884:	30bfffc4 	addi	r2,r6,-1
   44888:	1881c616 	blt	r3,r2,44fa4 <_dtoa_r+0x1200>
   4488c:	18a5c83a 	sub	r18,r3,r2
   44890:	d8800f17 	ldw	r2,60(sp)
   44894:	10026216 	blt	r2,zero,45220 <_dtoa_r+0x147c>
   44898:	dc001117 	ldw	r16,68(sp)
   4489c:	1007883a 	mov	r3,r2
   448a0:	d9800a17 	ldw	r6,40(sp)
   448a4:	d8801117 	ldw	r2,68(sp)
   448a8:	d9001617 	ldw	r4,88(sp)
   448ac:	30cd883a 	add	r6,r6,r3
   448b0:	10c5883a 	add	r2,r2,r3
   448b4:	01400044 	movi	r5,1
   448b8:	d9800a15 	stw	r6,40(sp)
   448bc:	d8801115 	stw	r2,68(sp)
   448c0:	0047fc80 	call	47fc8 <__i2b>
   448c4:	1027883a 	mov	r19,r2
   448c8:	003f2506 	br	44560 <_dtoa_r+0x7bc>
   448cc:	00c00174 	movhi	r3,5
   448d0:	18c7a704 	addi	r3,r3,7836
   448d4:	003d6706 	br	43e74 <_dtoa_r+0xd0>
   448d8:	dd800517 	ldw	r22,20(sp)
   448dc:	04000044 	movi	r16,1
   448e0:	00000706 	br	44900 <_dtoa_r+0xb5c>
   448e4:	d9400717 	ldw	r5,28(sp)
   448e8:	d9001617 	ldw	r4,88(sp)
   448ec:	01800284 	movi	r6,10
   448f0:	000f883a 	mov	r7,zero
   448f4:	00480040 	call	48004 <__multadd>
   448f8:	d8800715 	stw	r2,28(sp)
   448fc:	84000044 	addi	r16,r16,1
   44900:	d9000717 	ldw	r4,28(sp)
   44904:	900b883a 	mov	r5,r18
   44908:	0043b600 	call	43b60 <quorem>
   4490c:	15c00c04 	addi	r23,r2,48
   44910:	b5c00005 	stb	r23,0(r22)
   44914:	d8c00f17 	ldw	r3,60(sp)
   44918:	b5800044 	addi	r22,r22,1
   4491c:	80fff116 	blt	r16,r3,448e4 <_dtoa_r+0xb40>
   44920:	d8000615 	stw	zero,24(sp)
   44924:	d9400717 	ldw	r5,28(sp)
   44928:	d9001617 	ldw	r4,88(sp)
   4492c:	01800044 	movi	r6,1
   44930:	0047c280 	call	47c28 <__lshift>
   44934:	1009883a 	mov	r4,r2
   44938:	900b883a 	mov	r5,r18
   4493c:	d8800715 	stw	r2,28(sp)
   44940:	00474400 	call	47440 <__mcmp>
   44944:	00803c0e 	bge	zero,r2,44a38 <_dtoa_r+0xc94>
   44948:	b009883a 	mov	r4,r22
   4494c:	213fffc4 	addi	r4,r4,-1
   44950:	21400003 	ldbu	r5,0(r4)
   44954:	00800e44 	movi	r2,57
   44958:	28c03fcc 	andi	r3,r5,255
   4495c:	18c0201c 	xori	r3,r3,128
   44960:	18ffe004 	addi	r3,r3,-128
   44964:	1881981e 	bne	r3,r2,44fc8 <_dtoa_r+0x1224>
   44968:	d9800517 	ldw	r6,20(sp)
   4496c:	21bff71e 	bne	r4,r6,4494c <_dtoa_r+0xba8>
   44970:	d8800d17 	ldw	r2,52(sp)
   44974:	37000044 	addi	fp,r6,1
   44978:	10800044 	addi	r2,r2,1
   4497c:	d8800d15 	stw	r2,52(sp)
   44980:	00800c44 	movi	r2,49
   44984:	30800005 	stb	r2,0(r6)
   44988:	d9001617 	ldw	r4,88(sp)
   4498c:	900b883a 	mov	r5,r18
   44990:	00472e40 	call	472e4 <_Bfree>
   44994:	983ecd26 	beq	r19,zero,444cc <_dtoa_r+0x728>
   44998:	d8c00617 	ldw	r3,24(sp)
   4499c:	18000426 	beq	r3,zero,449b0 <_dtoa_r+0xc0c>
   449a0:	1cc00326 	beq	r3,r19,449b0 <_dtoa_r+0xc0c>
   449a4:	d9001617 	ldw	r4,88(sp)
   449a8:	180b883a 	mov	r5,r3
   449ac:	00472e40 	call	472e4 <_Bfree>
   449b0:	d9001617 	ldw	r4,88(sp)
   449b4:	980b883a 	mov	r5,r19
   449b8:	00472e40 	call	472e4 <_Bfree>
   449bc:	003ec306 	br	444cc <_dtoa_r+0x728>
   449c0:	1805883a 	mov	r2,r3
   449c4:	003eeb06 	br	44574 <_dtoa_r+0x7d0>
   449c8:	d9800a17 	ldw	r6,40(sp)
   449cc:	d8c01117 	ldw	r3,68(sp)
   449d0:	20bfff04 	addi	r2,r4,-4
   449d4:	308d883a 	add	r6,r6,r2
   449d8:	1887883a 	add	r3,r3,r2
   449dc:	80a1883a 	add	r16,r16,r2
   449e0:	d9800a15 	stw	r6,40(sp)
   449e4:	d8c01115 	stw	r3,68(sp)
   449e8:	003f1d06 	br	44660 <_dtoa_r+0x8bc>
   449ec:	a03f0c1e 	bne	r20,zero,44620 <_dtoa_r+0x87c>
   449f0:	00800434 	movhi	r2,16
   449f4:	10bfffc4 	addi	r2,r2,-1
   449f8:	a884703a 	and	r2,r21,r2
   449fc:	103f081e 	bne	r2,zero,44620 <_dtoa_r+0x87c>
   44a00:	a89ffc2c 	andhi	r2,r21,32752
   44a04:	103f0626 	beq	r2,zero,44620 <_dtoa_r+0x87c>
   44a08:	d8c01117 	ldw	r3,68(sp)
   44a0c:	d9000a17 	ldw	r4,40(sp)
   44a10:	18c00044 	addi	r3,r3,1
   44a14:	21000044 	addi	r4,r4,1
   44a18:	d8c01115 	stw	r3,68(sp)
   44a1c:	d9000a15 	stw	r4,40(sp)
   44a20:	003f0006 	br	44624 <_dtoa_r+0x880>
   44a24:	d9400717 	ldw	r5,28(sp)
   44a28:	d9001617 	ldw	r4,88(sp)
   44a2c:	00481300 	call	48130 <__pow5mult>
   44a30:	d8800715 	stw	r2,28(sp)
   44a34:	003eed06 	br	445ec <_dtoa_r+0x848>
   44a38:	1000021e 	bne	r2,zero,44a44 <_dtoa_r+0xca0>
   44a3c:	b880004c 	andi	r2,r23,1
   44a40:	103fc11e 	bne	r2,zero,44948 <_dtoa_r+0xba4>
   44a44:	b5bfffc4 	addi	r22,r22,-1
   44a48:	b0c00007 	ldb	r3,0(r22)
   44a4c:	00800c04 	movi	r2,48
   44a50:	18bffc26 	beq	r3,r2,44a44 <_dtoa_r+0xca0>
   44a54:	b7000044 	addi	fp,r22,1
   44a58:	003fcb06 	br	44988 <_dtoa_r+0xbe4>
   44a5c:	d9800d17 	ldw	r6,52(sp)
   44a60:	018fc83a 	sub	r7,zero,r6
   44a64:	3801f726 	beq	r7,zero,45244 <_dtoa_r+0x14a0>
   44a68:	398003cc 	andi	r6,r7,15
   44a6c:	300c90fa 	slli	r6,r6,3
   44a70:	01400174 	movhi	r5,5
   44a74:	29487004 	addi	r5,r5,8640
   44a78:	d9001217 	ldw	r4,72(sp)
   44a7c:	314d883a 	add	r6,r6,r5
   44a80:	30c00117 	ldw	r3,4(r6)
   44a84:	30800017 	ldw	r2,0(r6)
   44a88:	d9401317 	ldw	r5,76(sp)
   44a8c:	3821d13a 	srai	r16,r7,4
   44a90:	100d883a 	mov	r6,r2
   44a94:	180f883a 	mov	r7,r3
   44a98:	004da780 	call	4da78 <__muldf3>
   44a9c:	1011883a 	mov	r8,r2
   44aa0:	1813883a 	mov	r9,r3
   44aa4:	1029883a 	mov	r20,r2
   44aa8:	182b883a 	mov	r21,r3
   44aac:	8001e526 	beq	r16,zero,45244 <_dtoa_r+0x14a0>
   44ab0:	05800084 	movi	r22,2
   44ab4:	04400174 	movhi	r17,5
   44ab8:	8c48a204 	addi	r17,r17,8840
   44abc:	8080004c 	andi	r2,r16,1
   44ac0:	1005003a 	cmpeq	r2,r2,zero
   44ac4:	1000081e 	bne	r2,zero,44ae8 <_dtoa_r+0xd44>
   44ac8:	89800017 	ldw	r6,0(r17)
   44acc:	89c00117 	ldw	r7,4(r17)
   44ad0:	480b883a 	mov	r5,r9
   44ad4:	4009883a 	mov	r4,r8
   44ad8:	004da780 	call	4da78 <__muldf3>
   44adc:	1011883a 	mov	r8,r2
   44ae0:	b5800044 	addi	r22,r22,1
   44ae4:	1813883a 	mov	r9,r3
   44ae8:	8021d07a 	srai	r16,r16,1
   44aec:	8c400204 	addi	r17,r17,8
   44af0:	803ff21e 	bne	r16,zero,44abc <_dtoa_r+0xd18>
   44af4:	4029883a 	mov	r20,r8
   44af8:	482b883a 	mov	r21,r9
   44afc:	003dca06 	br	44228 <_dtoa_r+0x484>
   44b00:	d9000817 	ldw	r4,32(sp)
   44b04:	2005003a 	cmpeq	r2,r4,zero
   44b08:	1001f61e 	bne	r2,zero,452e4 <_dtoa_r+0x1540>
   44b0c:	dc001117 	ldw	r16,68(sp)
   44b10:	dc801017 	ldw	r18,64(sp)
   44b14:	18c10cc4 	addi	r3,r3,1075
   44b18:	003f6106 	br	448a0 <_dtoa_r+0xafc>
   44b1c:	d8000b15 	stw	zero,44(sp)
   44b20:	d9802617 	ldw	r6,152(sp)
   44b24:	d8c00d17 	ldw	r3,52(sp)
   44b28:	30800044 	addi	r2,r6,1
   44b2c:	18ad883a 	add	r22,r3,r2
   44b30:	b13fffc4 	addi	r4,r22,-1
   44b34:	d9000e15 	stw	r4,56(sp)
   44b38:	0581f60e 	bge	zero,r22,45314 <_dtoa_r+0x1570>
   44b3c:	dd800f15 	stw	r22,60(sp)
   44b40:	003f3006 	br	44804 <_dtoa_r+0xa60>
   44b44:	d8000b15 	stw	zero,44(sp)
   44b48:	d9002617 	ldw	r4,152(sp)
   44b4c:	0101eb0e 	bge	zero,r4,452fc <_dtoa_r+0x1558>
   44b50:	202d883a 	mov	r22,r4
   44b54:	d9000e15 	stw	r4,56(sp)
   44b58:	d9000f15 	stw	r4,60(sp)
   44b5c:	003f2906 	br	44804 <_dtoa_r+0xa60>
   44b60:	01800044 	movi	r6,1
   44b64:	d9800b15 	stw	r6,44(sp)
   44b68:	003ff706 	br	44b48 <_dtoa_r+0xda4>
   44b6c:	01000044 	movi	r4,1
   44b70:	d9000b15 	stw	r4,44(sp)
   44b74:	003fea06 	br	44b20 <_dtoa_r+0xd7c>
   44b78:	04000c0e 	bge	zero,r16,44bac <_dtoa_r+0xe08>
   44b7c:	d9400717 	ldw	r5,28(sp)
   44b80:	d9001617 	ldw	r4,88(sp)
   44b84:	01800044 	movi	r6,1
   44b88:	0047c280 	call	47c28 <__lshift>
   44b8c:	1009883a 	mov	r4,r2
   44b90:	900b883a 	mov	r5,r18
   44b94:	d8800715 	stw	r2,28(sp)
   44b98:	00474400 	call	47440 <__mcmp>
   44b9c:	0081e00e 	bge	zero,r2,45320 <_dtoa_r+0x157c>
   44ba0:	bdc00044 	addi	r23,r23,1
   44ba4:	00800e84 	movi	r2,58
   44ba8:	b881a226 	beq	r23,r2,45234 <_dtoa_r+0x1490>
   44bac:	b7000044 	addi	fp,r22,1
   44bb0:	b5c00005 	stb	r23,0(r22)
   44bb4:	003f7406 	br	44988 <_dtoa_r+0xbe4>
   44bb8:	00800e44 	movi	r2,57
   44bbc:	b8819d26 	beq	r23,r2,45234 <_dtoa_r+0x1490>
   44bc0:	053ffa0e 	bge	zero,r20,44bac <_dtoa_r+0xe08>
   44bc4:	8dc00c44 	addi	r23,r17,49
   44bc8:	003ff806 	br	44bac <_dtoa_r+0xe08>
   44bcc:	d9001617 	ldw	r4,88(sp)
   44bd0:	a80b883a 	mov	r5,r21
   44bd4:	04000044 	movi	r16,1
   44bd8:	00472e40 	call	472e4 <_Bfree>
   44bdc:	003edf06 	br	4475c <_dtoa_r+0x9b8>
   44be0:	d9001617 	ldw	r4,88(sp)
   44be4:	980b883a 	mov	r5,r19
   44be8:	01800284 	movi	r6,10
   44bec:	000f883a 	mov	r7,zero
   44bf0:	00480040 	call	48004 <__multadd>
   44bf4:	1027883a 	mov	r19,r2
   44bf8:	d8800615 	stw	r2,24(sp)
   44bfc:	003ebb06 	br	446ec <_dtoa_r+0x948>
   44c00:	d9801117 	ldw	r6,68(sp)
   44c04:	d8800d17 	ldw	r2,52(sp)
   44c08:	d8000915 	stw	zero,36(sp)
   44c0c:	308dc83a 	sub	r6,r6,r2
   44c10:	0087c83a 	sub	r3,zero,r2
   44c14:	d9801115 	stw	r6,68(sp)
   44c18:	d8c01015 	stw	r3,64(sp)
   44c1c:	003cfe06 	br	44018 <_dtoa_r+0x274>
   44c20:	018dc83a 	sub	r6,zero,r6
   44c24:	d9801115 	stw	r6,68(sp)
   44c28:	d8000a15 	stw	zero,40(sp)
   44c2c:	003cf306 	br	43ffc <_dtoa_r+0x258>
   44c30:	d9000d17 	ldw	r4,52(sp)
   44c34:	004e3c40 	call	4e3c4 <__floatsidf>
   44c38:	880b883a 	mov	r5,r17
   44c3c:	8009883a 	mov	r4,r16
   44c40:	180f883a 	mov	r7,r3
   44c44:	100d883a 	mov	r6,r2
   44c48:	004e11c0 	call	4e11c <__nedf2>
   44c4c:	103ce126 	beq	r2,zero,43fd4 <_dtoa_r+0x230>
   44c50:	d9800d17 	ldw	r6,52(sp)
   44c54:	31bfffc4 	addi	r6,r6,-1
   44c58:	d9800d15 	stw	r6,52(sp)
   44c5c:	003cdd06 	br	43fd4 <_dtoa_r+0x230>
   44c60:	d9000717 	ldw	r4,28(sp)
   44c64:	900b883a 	mov	r5,r18
   44c68:	00474400 	call	47440 <__mcmp>
   44c6c:	103e8d0e 	bge	r2,zero,446a4 <_dtoa_r+0x900>
   44c70:	d9400717 	ldw	r5,28(sp)
   44c74:	d9001617 	ldw	r4,88(sp)
   44c78:	01800284 	movi	r6,10
   44c7c:	000f883a 	mov	r7,zero
   44c80:	00480040 	call	48004 <__multadd>
   44c84:	d9800d17 	ldw	r6,52(sp)
   44c88:	d8800715 	stw	r2,28(sp)
   44c8c:	31bfffc4 	addi	r6,r6,-1
   44c90:	d9800d15 	stw	r6,52(sp)
   44c94:	b001a71e 	bne	r22,zero,45334 <_dtoa_r+0x1590>
   44c98:	d8800e17 	ldw	r2,56(sp)
   44c9c:	d8800f15 	stw	r2,60(sp)
   44ca0:	003e8006 	br	446a4 <_dtoa_r+0x900>
   44ca4:	90800417 	ldw	r2,16(r18)
   44ca8:	1085883a 	add	r2,r2,r2
   44cac:	1085883a 	add	r2,r2,r2
   44cb0:	1485883a 	add	r2,r2,r18
   44cb4:	11000417 	ldw	r4,16(r2)
   44cb8:	004730c0 	call	4730c <__hi0bits>
   44cbc:	00c00804 	movi	r3,32
   44cc0:	1887c83a 	sub	r3,r3,r2
   44cc4:	003e5a06 	br	44630 <_dtoa_r+0x88c>
   44cc8:	d9400717 	ldw	r5,28(sp)
   44ccc:	d9801017 	ldw	r6,64(sp)
   44cd0:	d9001617 	ldw	r4,88(sp)
   44cd4:	00481300 	call	48130 <__pow5mult>
   44cd8:	d8800715 	stw	r2,28(sp)
   44cdc:	003e4306 	br	445ec <_dtoa_r+0x848>
   44ce0:	d9800f17 	ldw	r6,60(sp)
   44ce4:	d8800d17 	ldw	r2,52(sp)
   44ce8:	d9800315 	stw	r6,12(sp)
   44cec:	d8800415 	stw	r2,16(sp)
   44cf0:	d8c00b17 	ldw	r3,44(sp)
   44cf4:	1805003a 	cmpeq	r2,r3,zero
   44cf8:	1000e21e 	bne	r2,zero,45084 <_dtoa_r+0x12e0>
   44cfc:	d9000317 	ldw	r4,12(sp)
   44d00:	0005883a 	mov	r2,zero
   44d04:	00cff834 	movhi	r3,16352
   44d08:	200c90fa 	slli	r6,r4,3
   44d0c:	01000174 	movhi	r4,5
   44d10:	21087004 	addi	r4,r4,8640
   44d14:	180b883a 	mov	r5,r3
   44d18:	310d883a 	add	r6,r6,r4
   44d1c:	327fff17 	ldw	r9,-4(r6)
   44d20:	323ffe17 	ldw	r8,-8(r6)
   44d24:	1009883a 	mov	r4,r2
   44d28:	480f883a 	mov	r7,r9
   44d2c:	400d883a 	mov	r6,r8
   44d30:	004de3c0 	call	4de3c <__divdf3>
   44d34:	180b883a 	mov	r5,r3
   44d38:	b00d883a 	mov	r6,r22
   44d3c:	b80f883a 	mov	r7,r23
   44d40:	1009883a 	mov	r4,r2
   44d44:	004d9840 	call	4d984 <__subdf3>
   44d48:	a80b883a 	mov	r5,r21
   44d4c:	a009883a 	mov	r4,r20
   44d50:	d8c01915 	stw	r3,100(sp)
   44d54:	d8801815 	stw	r2,96(sp)
   44d58:	004e4bc0 	call	4e4bc <__fixdfsi>
   44d5c:	1009883a 	mov	r4,r2
   44d60:	1027883a 	mov	r19,r2
   44d64:	004e3c40 	call	4e3c4 <__floatsidf>
   44d68:	a80b883a 	mov	r5,r21
   44d6c:	a009883a 	mov	r4,r20
   44d70:	180f883a 	mov	r7,r3
   44d74:	100d883a 	mov	r6,r2
   44d78:	004d9840 	call	4d984 <__subdf3>
   44d7c:	d9801817 	ldw	r6,96(sp)
   44d80:	1823883a 	mov	r17,r3
   44d84:	d8801415 	stw	r2,80(sp)
   44d88:	302d883a 	mov	r22,r6
   44d8c:	d9800517 	ldw	r6,20(sp)
   44d90:	9cc00c04 	addi	r19,r19,48
   44d94:	dc401515 	stw	r17,84(sp)
   44d98:	d8c01917 	ldw	r3,100(sp)
   44d9c:	34c00005 	stb	r19,0(r6)
   44da0:	d8800517 	ldw	r2,20(sp)
   44da4:	d9401917 	ldw	r5,100(sp)
   44da8:	d9801417 	ldw	r6,80(sp)
   44dac:	b009883a 	mov	r4,r22
   44db0:	880f883a 	mov	r7,r17
   44db4:	182f883a 	mov	r23,r3
   44db8:	17000044 	addi	fp,r2,1
   44dbc:	004e1a40 	call	4e1a4 <__gtdf2>
   44dc0:	00804e16 	blt	zero,r2,44efc <_dtoa_r+0x1158>
   44dc4:	d9801417 	ldw	r6,80(sp)
   44dc8:	0005883a 	mov	r2,zero
   44dcc:	00cffc34 	movhi	r3,16368
   44dd0:	180b883a 	mov	r5,r3
   44dd4:	880f883a 	mov	r7,r17
   44dd8:	1009883a 	mov	r4,r2
   44ddc:	004d9840 	call	4d984 <__subdf3>
   44de0:	d9401917 	ldw	r5,100(sp)
   44de4:	180f883a 	mov	r7,r3
   44de8:	b009883a 	mov	r4,r22
   44dec:	100d883a 	mov	r6,r2
   44df0:	004e1a40 	call	4e1a4 <__gtdf2>
   44df4:	00bda216 	blt	zero,r2,44480 <_dtoa_r+0x6dc>
   44df8:	d8c00317 	ldw	r3,12(sp)
   44dfc:	00800044 	movi	r2,1
   44e00:	10c01216 	blt	r2,r3,44e4c <_dtoa_r+0x10a8>
   44e04:	003d4506 	br	4431c <_dtoa_r+0x578>
   44e08:	d9801417 	ldw	r6,80(sp)
   44e0c:	0005883a 	mov	r2,zero
   44e10:	00cffc34 	movhi	r3,16368
   44e14:	180b883a 	mov	r5,r3
   44e18:	880f883a 	mov	r7,r17
   44e1c:	1009883a 	mov	r4,r2
   44e20:	004d9840 	call	4d984 <__subdf3>
   44e24:	d9c01b17 	ldw	r7,108(sp)
   44e28:	180b883a 	mov	r5,r3
   44e2c:	1009883a 	mov	r4,r2
   44e30:	b00d883a 	mov	r6,r22
   44e34:	004e2b40 	call	4e2b4 <__ltdf2>
   44e38:	103d9116 	blt	r2,zero,44480 <_dtoa_r+0x6dc>
   44e3c:	d9800517 	ldw	r6,20(sp)
   44e40:	d9000317 	ldw	r4,12(sp)
   44e44:	3105883a 	add	r2,r6,r4
   44e48:	e0bd3426 	beq	fp,r2,4431c <_dtoa_r+0x578>
   44e4c:	04500934 	movhi	r17,16420
   44e50:	0021883a 	mov	r16,zero
   44e54:	b80b883a 	mov	r5,r23
   44e58:	b009883a 	mov	r4,r22
   44e5c:	800d883a 	mov	r6,r16
   44e60:	880f883a 	mov	r7,r17
   44e64:	004da780 	call	4da78 <__muldf3>
   44e68:	d9401517 	ldw	r5,84(sp)
   44e6c:	d9001417 	ldw	r4,80(sp)
   44e70:	880f883a 	mov	r7,r17
   44e74:	000d883a 	mov	r6,zero
   44e78:	d8801a15 	stw	r2,104(sp)
   44e7c:	d8c01b15 	stw	r3,108(sp)
   44e80:	004da780 	call	4da78 <__muldf3>
   44e84:	180b883a 	mov	r5,r3
   44e88:	1009883a 	mov	r4,r2
   44e8c:	1823883a 	mov	r17,r3
   44e90:	1021883a 	mov	r16,r2
   44e94:	004e4bc0 	call	4e4bc <__fixdfsi>
   44e98:	1009883a 	mov	r4,r2
   44e9c:	102b883a 	mov	r21,r2
   44ea0:	004e3c40 	call	4e3c4 <__floatsidf>
   44ea4:	880b883a 	mov	r5,r17
   44ea8:	8009883a 	mov	r4,r16
   44eac:	180f883a 	mov	r7,r3
   44eb0:	100d883a 	mov	r6,r2
   44eb4:	004d9840 	call	4d984 <__subdf3>
   44eb8:	1021883a 	mov	r16,r2
   44ebc:	d9001b17 	ldw	r4,108(sp)
   44ec0:	1823883a 	mov	r17,r3
   44ec4:	dc001415 	stw	r16,80(sp)
   44ec8:	ad400c04 	addi	r21,r21,48
   44ecc:	dc401515 	stw	r17,84(sp)
   44ed0:	d8801a17 	ldw	r2,104(sp)
   44ed4:	e5400005 	stb	r21,0(fp)
   44ed8:	202f883a 	mov	r23,r4
   44edc:	d9c01b17 	ldw	r7,108(sp)
   44ee0:	d9001417 	ldw	r4,80(sp)
   44ee4:	880b883a 	mov	r5,r17
   44ee8:	100d883a 	mov	r6,r2
   44eec:	102d883a 	mov	r22,r2
   44ef0:	e7000044 	addi	fp,fp,1
   44ef4:	004e2b40 	call	4e2b4 <__ltdf2>
   44ef8:	103fc30e 	bge	r2,zero,44e08 <_dtoa_r+0x1064>
   44efc:	d9000417 	ldw	r4,16(sp)
   44f00:	d9000d15 	stw	r4,52(sp)
   44f04:	003d7106 	br	444cc <_dtoa_r+0x728>
   44f08:	d9801717 	ldw	r6,92(sp)
   44f0c:	00800084 	movi	r2,2
   44f10:	11bde60e 	bge	r2,r6,446ac <_dtoa_r+0x908>
   44f14:	203cfb1e 	bne	r4,zero,44304 <_dtoa_r+0x560>
   44f18:	d9001617 	ldw	r4,88(sp)
   44f1c:	900b883a 	mov	r5,r18
   44f20:	01800144 	movi	r6,5
   44f24:	000f883a 	mov	r7,zero
   44f28:	00480040 	call	48004 <__multadd>
   44f2c:	d9000717 	ldw	r4,28(sp)
   44f30:	100b883a 	mov	r5,r2
   44f34:	1025883a 	mov	r18,r2
   44f38:	00474400 	call	47440 <__mcmp>
   44f3c:	00bcf10e 	bge	zero,r2,44304 <_dtoa_r+0x560>
   44f40:	d8c00d17 	ldw	r3,52(sp)
   44f44:	d9000517 	ldw	r4,20(sp)
   44f48:	d8000615 	stw	zero,24(sp)
   44f4c:	18c00044 	addi	r3,r3,1
   44f50:	d8c00d15 	stw	r3,52(sp)
   44f54:	00800c44 	movi	r2,49
   44f58:	27000044 	addi	fp,r4,1
   44f5c:	20800005 	stb	r2,0(r4)
   44f60:	003e8906 	br	44988 <_dtoa_r+0xbe4>
   44f64:	d8c00517 	ldw	r3,20(sp)
   44f68:	003bc206 	br	43e74 <_dtoa_r+0xd0>
   44f6c:	01800174 	movhi	r6,5
   44f70:	3188a204 	addi	r6,r6,8840
   44f74:	30c00917 	ldw	r3,36(r6)
   44f78:	30800817 	ldw	r2,32(r6)
   44f7c:	d9001217 	ldw	r4,72(sp)
   44f80:	d9401317 	ldw	r5,76(sp)
   44f84:	180f883a 	mov	r7,r3
   44f88:	100d883a 	mov	r6,r2
   44f8c:	004de3c0 	call	4de3c <__divdf3>
   44f90:	948003cc 	andi	r18,r18,15
   44f94:	058000c4 	movi	r22,3
   44f98:	1029883a 	mov	r20,r2
   44f9c:	182b883a 	mov	r21,r3
   44fa0:	003c8906 	br	441c8 <_dtoa_r+0x424>
   44fa4:	d9001017 	ldw	r4,64(sp)
   44fa8:	d9800917 	ldw	r6,36(sp)
   44fac:	0025883a 	mov	r18,zero
   44fb0:	1105c83a 	sub	r2,r2,r4
   44fb4:	2089883a 	add	r4,r4,r2
   44fb8:	308d883a 	add	r6,r6,r2
   44fbc:	d9001015 	stw	r4,64(sp)
   44fc0:	d9800915 	stw	r6,36(sp)
   44fc4:	003e3206 	br	44890 <_dtoa_r+0xaec>
   44fc8:	28800044 	addi	r2,r5,1
   44fcc:	27000044 	addi	fp,r4,1
   44fd0:	20800005 	stb	r2,0(r4)
   44fd4:	003e6c06 	br	44988 <_dtoa_r+0xbe4>
   44fd8:	d8800f17 	ldw	r2,60(sp)
   44fdc:	00bce016 	blt	zero,r2,44360 <_dtoa_r+0x5bc>
   44fe0:	d9800f17 	ldw	r6,60(sp)
   44fe4:	303cc51e 	bne	r6,zero,442fc <_dtoa_r+0x558>
   44fe8:	0005883a 	mov	r2,zero
   44fec:	00d00534 	movhi	r3,16404
   44ff0:	980b883a 	mov	r5,r19
   44ff4:	180f883a 	mov	r7,r3
   44ff8:	9009883a 	mov	r4,r18
   44ffc:	100d883a 	mov	r6,r2
   45000:	004da780 	call	4da78 <__muldf3>
   45004:	180b883a 	mov	r5,r3
   45008:	a80f883a 	mov	r7,r21
   4500c:	1009883a 	mov	r4,r2
   45010:	a00d883a 	mov	r6,r20
   45014:	004e22c0 	call	4e22c <__gedf2>
   45018:	103cb80e 	bge	r2,zero,442fc <_dtoa_r+0x558>
   4501c:	0027883a 	mov	r19,zero
   45020:	0025883a 	mov	r18,zero
   45024:	003fc606 	br	44f40 <_dtoa_r+0x119c>
   45028:	99400117 	ldw	r5,4(r19)
   4502c:	d9001617 	ldw	r4,88(sp)
   45030:	00478640 	call	47864 <_Balloc>
   45034:	99800417 	ldw	r6,16(r19)
   45038:	11000304 	addi	r4,r2,12
   4503c:	99400304 	addi	r5,r19,12
   45040:	318d883a 	add	r6,r6,r6
   45044:	318d883a 	add	r6,r6,r6
   45048:	31800204 	addi	r6,r6,8
   4504c:	1023883a 	mov	r17,r2
   45050:	00470cc0 	call	470cc <memcpy>
   45054:	d9001617 	ldw	r4,88(sp)
   45058:	880b883a 	mov	r5,r17
   4505c:	01800044 	movi	r6,1
   45060:	0047c280 	call	47c28 <__lshift>
   45064:	100b883a 	mov	r5,r2
   45068:	003d9c06 	br	446dc <_dtoa_r+0x938>
   4506c:	00800e44 	movi	r2,57
   45070:	b8807026 	beq	r23,r2,45234 <_dtoa_r+0x1490>
   45074:	b8800044 	addi	r2,r23,1
   45078:	b7000044 	addi	fp,r22,1
   4507c:	b0800005 	stb	r2,0(r22)
   45080:	003e4106 	br	44988 <_dtoa_r+0xbe4>
   45084:	d8800317 	ldw	r2,12(sp)
   45088:	01800174 	movhi	r6,5
   4508c:	31887004 	addi	r6,r6,8640
   45090:	b009883a 	mov	r4,r22
   45094:	100e90fa 	slli	r7,r2,3
   45098:	b80b883a 	mov	r5,r23
   4509c:	398f883a 	add	r7,r7,r6
   450a0:	38bffe17 	ldw	r2,-8(r7)
   450a4:	d9800517 	ldw	r6,20(sp)
   450a8:	38ffff17 	ldw	r3,-4(r7)
   450ac:	37000044 	addi	fp,r6,1
   450b0:	180f883a 	mov	r7,r3
   450b4:	100d883a 	mov	r6,r2
   450b8:	004da780 	call	4da78 <__muldf3>
   450bc:	a80b883a 	mov	r5,r21
   450c0:	a009883a 	mov	r4,r20
   450c4:	182f883a 	mov	r23,r3
   450c8:	102d883a 	mov	r22,r2
   450cc:	004e4bc0 	call	4e4bc <__fixdfsi>
   450d0:	1009883a 	mov	r4,r2
   450d4:	1027883a 	mov	r19,r2
   450d8:	004e3c40 	call	4e3c4 <__floatsidf>
   450dc:	a80b883a 	mov	r5,r21
   450e0:	a009883a 	mov	r4,r20
   450e4:	180f883a 	mov	r7,r3
   450e8:	100d883a 	mov	r6,r2
   450ec:	004d9840 	call	4d984 <__subdf3>
   450f0:	180b883a 	mov	r5,r3
   450f4:	d8c00517 	ldw	r3,20(sp)
   450f8:	9cc00c04 	addi	r19,r19,48
   450fc:	1009883a 	mov	r4,r2
   45100:	1cc00005 	stb	r19,0(r3)
   45104:	2021883a 	mov	r16,r4
   45108:	d9000317 	ldw	r4,12(sp)
   4510c:	00800044 	movi	r2,1
   45110:	2823883a 	mov	r17,r5
   45114:	20802226 	beq	r4,r2,451a0 <_dtoa_r+0x13fc>
   45118:	1029883a 	mov	r20,r2
   4511c:	0005883a 	mov	r2,zero
   45120:	00d00934 	movhi	r3,16420
   45124:	180f883a 	mov	r7,r3
   45128:	100d883a 	mov	r6,r2
   4512c:	880b883a 	mov	r5,r17
   45130:	8009883a 	mov	r4,r16
   45134:	004da780 	call	4da78 <__muldf3>
   45138:	180b883a 	mov	r5,r3
   4513c:	1009883a 	mov	r4,r2
   45140:	1823883a 	mov	r17,r3
   45144:	1021883a 	mov	r16,r2
   45148:	004e4bc0 	call	4e4bc <__fixdfsi>
   4514c:	1009883a 	mov	r4,r2
   45150:	102b883a 	mov	r21,r2
   45154:	004e3c40 	call	4e3c4 <__floatsidf>
   45158:	880b883a 	mov	r5,r17
   4515c:	8009883a 	mov	r4,r16
   45160:	180f883a 	mov	r7,r3
   45164:	100d883a 	mov	r6,r2
   45168:	004d9840 	call	4d984 <__subdf3>
   4516c:	180b883a 	mov	r5,r3
   45170:	d8c00517 	ldw	r3,20(sp)
   45174:	1009883a 	mov	r4,r2
   45178:	ad400c04 	addi	r21,r21,48
   4517c:	1d05883a 	add	r2,r3,r20
   45180:	15400005 	stb	r21,0(r2)
   45184:	2021883a 	mov	r16,r4
   45188:	d9000317 	ldw	r4,12(sp)
   4518c:	a5000044 	addi	r20,r20,1
   45190:	2823883a 	mov	r17,r5
   45194:	a13fe11e 	bne	r20,r4,4511c <_dtoa_r+0x1378>
   45198:	e505883a 	add	r2,fp,r20
   4519c:	173fffc4 	addi	fp,r2,-1
   451a0:	0025883a 	mov	r18,zero
   451a4:	04cff834 	movhi	r19,16352
   451a8:	b009883a 	mov	r4,r22
   451ac:	b80b883a 	mov	r5,r23
   451b0:	900d883a 	mov	r6,r18
   451b4:	980f883a 	mov	r7,r19
   451b8:	004da040 	call	4da04 <__adddf3>
   451bc:	180b883a 	mov	r5,r3
   451c0:	1009883a 	mov	r4,r2
   451c4:	800d883a 	mov	r6,r16
   451c8:	880f883a 	mov	r7,r17
   451cc:	004e2b40 	call	4e2b4 <__ltdf2>
   451d0:	103cab16 	blt	r2,zero,44480 <_dtoa_r+0x6dc>
   451d4:	0009883a 	mov	r4,zero
   451d8:	980b883a 	mov	r5,r19
   451dc:	b80f883a 	mov	r7,r23
   451e0:	b00d883a 	mov	r6,r22
   451e4:	004d9840 	call	4d984 <__subdf3>
   451e8:	180b883a 	mov	r5,r3
   451ec:	880f883a 	mov	r7,r17
   451f0:	1009883a 	mov	r4,r2
   451f4:	800d883a 	mov	r6,r16
   451f8:	004e1a40 	call	4e1a4 <__gtdf2>
   451fc:	00bc470e 	bge	zero,r2,4431c <_dtoa_r+0x578>
   45200:	00c00c04 	movi	r3,48
   45204:	e73fffc4 	addi	fp,fp,-1
   45208:	e0800007 	ldb	r2,0(fp)
   4520c:	10fffd26 	beq	r2,r3,45204 <_dtoa_r+0x1460>
   45210:	d9800417 	ldw	r6,16(sp)
   45214:	e7000044 	addi	fp,fp,1
   45218:	d9800d15 	stw	r6,52(sp)
   4521c:	003cab06 	br	444cc <_dtoa_r+0x728>
   45220:	d8c00f17 	ldw	r3,60(sp)
   45224:	d9001117 	ldw	r4,68(sp)
   45228:	20e1c83a 	sub	r16,r4,r3
   4522c:	0007883a 	mov	r3,zero
   45230:	003d9b06 	br	448a0 <_dtoa_r+0xafc>
   45234:	00800e44 	movi	r2,57
   45238:	b0800005 	stb	r2,0(r22)
   4523c:	b5800044 	addi	r22,r22,1
   45240:	003dc106 	br	44948 <_dtoa_r+0xba4>
   45244:	05800084 	movi	r22,2
   45248:	003bf706 	br	44228 <_dtoa_r+0x484>
   4524c:	d9000f17 	ldw	r4,60(sp)
   45250:	013c000e 	bge	zero,r4,44254 <_dtoa_r+0x4b0>
   45254:	d9800e17 	ldw	r6,56(sp)
   45258:	01bc300e 	bge	zero,r6,4431c <_dtoa_r+0x578>
   4525c:	0005883a 	mov	r2,zero
   45260:	00d00934 	movhi	r3,16420
   45264:	a80b883a 	mov	r5,r21
   45268:	180f883a 	mov	r7,r3
   4526c:	a009883a 	mov	r4,r20
   45270:	100d883a 	mov	r6,r2
   45274:	004da780 	call	4da78 <__muldf3>
   45278:	b1000044 	addi	r4,r22,1
   4527c:	1021883a 	mov	r16,r2
   45280:	1823883a 	mov	r17,r3
   45284:	004e3c40 	call	4e3c4 <__floatsidf>
   45288:	880b883a 	mov	r5,r17
   4528c:	8009883a 	mov	r4,r16
   45290:	180f883a 	mov	r7,r3
   45294:	100d883a 	mov	r6,r2
   45298:	004da780 	call	4da78 <__muldf3>
   4529c:	0011883a 	mov	r8,zero
   452a0:	02500734 	movhi	r9,16412
   452a4:	180b883a 	mov	r5,r3
   452a8:	480f883a 	mov	r7,r9
   452ac:	1009883a 	mov	r4,r2
   452b0:	400d883a 	mov	r6,r8
   452b4:	004da040 	call	4da04 <__adddf3>
   452b8:	102d883a 	mov	r22,r2
   452bc:	00bf3034 	movhi	r2,64704
   452c0:	10ef883a 	add	r23,r2,r3
   452c4:	d8800d17 	ldw	r2,52(sp)
   452c8:	d8c00e17 	ldw	r3,56(sp)
   452cc:	8029883a 	mov	r20,r16
   452d0:	10bfffc4 	addi	r2,r2,-1
   452d4:	882b883a 	mov	r21,r17
   452d8:	d8800415 	stw	r2,16(sp)
   452dc:	d8c00315 	stw	r3,12(sp)
   452e0:	003e8306 	br	44cf0 <_dtoa_r+0xf4c>
   452e4:	d8800117 	ldw	r2,4(sp)
   452e8:	dc001117 	ldw	r16,68(sp)
   452ec:	dc801017 	ldw	r18,64(sp)
   452f0:	00c00d84 	movi	r3,54
   452f4:	1887c83a 	sub	r3,r3,r2
   452f8:	003d6906 	br	448a0 <_dtoa_r+0xafc>
   452fc:	01800044 	movi	r6,1
   45300:	3021883a 	mov	r16,r6
   45304:	d9800f15 	stw	r6,60(sp)
   45308:	d9802615 	stw	r6,152(sp)
   4530c:	d9800e15 	stw	r6,56(sp)
   45310:	003b9306 	br	44160 <_dtoa_r+0x3bc>
   45314:	b021883a 	mov	r16,r22
   45318:	dd800f15 	stw	r22,60(sp)
   4531c:	003b9006 	br	44160 <_dtoa_r+0x3bc>
   45320:	103e221e 	bne	r2,zero,44bac <_dtoa_r+0xe08>
   45324:	b880004c 	andi	r2,r23,1
   45328:	1005003a 	cmpeq	r2,r2,zero
   4532c:	103e1f1e 	bne	r2,zero,44bac <_dtoa_r+0xe08>
   45330:	003e1b06 	br	44ba0 <_dtoa_r+0xdfc>
   45334:	d9001617 	ldw	r4,88(sp)
   45338:	980b883a 	mov	r5,r19
   4533c:	01800284 	movi	r6,10
   45340:	000f883a 	mov	r7,zero
   45344:	00480040 	call	48004 <__multadd>
   45348:	d8c00e17 	ldw	r3,56(sp)
   4534c:	1027883a 	mov	r19,r2
   45350:	d8c00f15 	stw	r3,60(sp)
   45354:	003cd306 	br	446a4 <_dtoa_r+0x900>

00045358 <_fflush_r>:
   45358:	defffb04 	addi	sp,sp,-20
   4535c:	dcc00315 	stw	r19,12(sp)
   45360:	dc800215 	stw	r18,8(sp)
   45364:	dfc00415 	stw	ra,16(sp)
   45368:	dc400115 	stw	r17,4(sp)
   4536c:	dc000015 	stw	r16,0(sp)
   45370:	2027883a 	mov	r19,r4
   45374:	2825883a 	mov	r18,r5
   45378:	20000226 	beq	r4,zero,45384 <_fflush_r+0x2c>
   4537c:	20800e17 	ldw	r2,56(r4)
   45380:	10005626 	beq	r2,zero,454dc <_fflush_r+0x184>
   45384:	9100030b 	ldhu	r4,12(r18)
   45388:	20ffffcc 	andi	r3,r4,65535
   4538c:	18e0001c 	xori	r3,r3,32768
   45390:	18e00004 	addi	r3,r3,-32768
   45394:	1880020c 	andi	r2,r3,8
   45398:	1000261e 	bne	r2,zero,45434 <_fflush_r+0xdc>
   4539c:	90c00117 	ldw	r3,4(r18)
   453a0:	20820014 	ori	r2,r4,2048
   453a4:	9080030d 	sth	r2,12(r18)
   453a8:	1009883a 	mov	r4,r2
   453ac:	00c0400e 	bge	zero,r3,454b0 <_fflush_r+0x158>
   453b0:	92000a17 	ldw	r8,40(r18)
   453b4:	40004026 	beq	r8,zero,454b8 <_fflush_r+0x160>
   453b8:	2084000c 	andi	r2,r4,4096
   453bc:	10005326 	beq	r2,zero,4550c <_fflush_r+0x1b4>
   453c0:	94001417 	ldw	r16,80(r18)
   453c4:	9080030b 	ldhu	r2,12(r18)
   453c8:	1080010c 	andi	r2,r2,4
   453cc:	1000481e 	bne	r2,zero,454f0 <_fflush_r+0x198>
   453d0:	91400717 	ldw	r5,28(r18)
   453d4:	9809883a 	mov	r4,r19
   453d8:	800d883a 	mov	r6,r16
   453dc:	000f883a 	mov	r7,zero
   453e0:	403ee83a 	callr	r8
   453e4:	8080261e 	bne	r16,r2,45480 <_fflush_r+0x128>
   453e8:	9080030b 	ldhu	r2,12(r18)
   453ec:	91000417 	ldw	r4,16(r18)
   453f0:	90000115 	stw	zero,4(r18)
   453f4:	10bdffcc 	andi	r2,r2,63487
   453f8:	10ffffcc 	andi	r3,r2,65535
   453fc:	18c4000c 	andi	r3,r3,4096
   45400:	9080030d 	sth	r2,12(r18)
   45404:	91000015 	stw	r4,0(r18)
   45408:	18002b26 	beq	r3,zero,454b8 <_fflush_r+0x160>
   4540c:	0007883a 	mov	r3,zero
   45410:	1805883a 	mov	r2,r3
   45414:	94001415 	stw	r16,80(r18)
   45418:	dfc00417 	ldw	ra,16(sp)
   4541c:	dcc00317 	ldw	r19,12(sp)
   45420:	dc800217 	ldw	r18,8(sp)
   45424:	dc400117 	ldw	r17,4(sp)
   45428:	dc000017 	ldw	r16,0(sp)
   4542c:	dec00504 	addi	sp,sp,20
   45430:	f800283a 	ret
   45434:	94400417 	ldw	r17,16(r18)
   45438:	88001f26 	beq	r17,zero,454b8 <_fflush_r+0x160>
   4543c:	90800017 	ldw	r2,0(r18)
   45440:	18c000cc 	andi	r3,r3,3
   45444:	94400015 	stw	r17,0(r18)
   45448:	1461c83a 	sub	r16,r2,r17
   4544c:	18002526 	beq	r3,zero,454e4 <_fflush_r+0x18c>
   45450:	0005883a 	mov	r2,zero
   45454:	90800215 	stw	r2,8(r18)
   45458:	0400170e 	bge	zero,r16,454b8 <_fflush_r+0x160>
   4545c:	90c00917 	ldw	r3,36(r18)
   45460:	91400717 	ldw	r5,28(r18)
   45464:	880d883a 	mov	r6,r17
   45468:	800f883a 	mov	r7,r16
   4546c:	9809883a 	mov	r4,r19
   45470:	183ee83a 	callr	r3
   45474:	88a3883a 	add	r17,r17,r2
   45478:	80a1c83a 	sub	r16,r16,r2
   4547c:	00bff616 	blt	zero,r2,45458 <_fflush_r+0x100>
   45480:	9080030b 	ldhu	r2,12(r18)
   45484:	00ffffc4 	movi	r3,-1
   45488:	10801014 	ori	r2,r2,64
   4548c:	9080030d 	sth	r2,12(r18)
   45490:	1805883a 	mov	r2,r3
   45494:	dfc00417 	ldw	ra,16(sp)
   45498:	dcc00317 	ldw	r19,12(sp)
   4549c:	dc800217 	ldw	r18,8(sp)
   454a0:	dc400117 	ldw	r17,4(sp)
   454a4:	dc000017 	ldw	r16,0(sp)
   454a8:	dec00504 	addi	sp,sp,20
   454ac:	f800283a 	ret
   454b0:	90800f17 	ldw	r2,60(r18)
   454b4:	00bfbe16 	blt	zero,r2,453b0 <_fflush_r+0x58>
   454b8:	0007883a 	mov	r3,zero
   454bc:	1805883a 	mov	r2,r3
   454c0:	dfc00417 	ldw	ra,16(sp)
   454c4:	dcc00317 	ldw	r19,12(sp)
   454c8:	dc800217 	ldw	r18,8(sp)
   454cc:	dc400117 	ldw	r17,4(sp)
   454d0:	dc000017 	ldw	r16,0(sp)
   454d4:	dec00504 	addi	sp,sp,20
   454d8:	f800283a 	ret
   454dc:	00455f00 	call	455f0 <__sinit>
   454e0:	003fa806 	br	45384 <_fflush_r+0x2c>
   454e4:	90800517 	ldw	r2,20(r18)
   454e8:	90800215 	stw	r2,8(r18)
   454ec:	003fda06 	br	45458 <_fflush_r+0x100>
   454f0:	90800117 	ldw	r2,4(r18)
   454f4:	90c00c17 	ldw	r3,48(r18)
   454f8:	80a1c83a 	sub	r16,r16,r2
   454fc:	183fb426 	beq	r3,zero,453d0 <_fflush_r+0x78>
   45500:	90800f17 	ldw	r2,60(r18)
   45504:	80a1c83a 	sub	r16,r16,r2
   45508:	003fb106 	br	453d0 <_fflush_r+0x78>
   4550c:	91400717 	ldw	r5,28(r18)
   45510:	9809883a 	mov	r4,r19
   45514:	000d883a 	mov	r6,zero
   45518:	01c00044 	movi	r7,1
   4551c:	403ee83a 	callr	r8
   45520:	1021883a 	mov	r16,r2
   45524:	00bfffc4 	movi	r2,-1
   45528:	80800226 	beq	r16,r2,45534 <_fflush_r+0x1dc>
   4552c:	92000a17 	ldw	r8,40(r18)
   45530:	003fa406 	br	453c4 <_fflush_r+0x6c>
   45534:	98c00017 	ldw	r3,0(r19)
   45538:	00800744 	movi	r2,29
   4553c:	18bfde26 	beq	r3,r2,454b8 <_fflush_r+0x160>
   45540:	9080030b 	ldhu	r2,12(r18)
   45544:	8007883a 	mov	r3,r16
   45548:	10801014 	ori	r2,r2,64
   4554c:	9080030d 	sth	r2,12(r18)
   45550:	003fcf06 	br	45490 <_fflush_r+0x138>

00045554 <fflush>:
   45554:	01400134 	movhi	r5,4
   45558:	2954d604 	addi	r5,r5,21336
   4555c:	2007883a 	mov	r3,r4
   45560:	20000526 	beq	r4,zero,45578 <fflush+0x24>
   45564:	00800174 	movhi	r2,5
   45568:	108fb204 	addi	r2,r2,16072
   4556c:	11000017 	ldw	r4,0(r2)
   45570:	180b883a 	mov	r5,r3
   45574:	00453581 	jmpi	45358 <_fflush_r>
   45578:	00800174 	movhi	r2,5
   4557c:	108fb304 	addi	r2,r2,16076
   45580:	11000017 	ldw	r4,0(r2)
   45584:	00463a41 	jmpi	463a4 <_fwalk_reent>

00045588 <std>:
   45588:	00800174 	movhi	r2,5
   4558c:	10a37004 	addi	r2,r2,-29248
   45590:	20800b15 	stw	r2,44(r4)
   45594:	00800174 	movhi	r2,5
   45598:	10a3ab04 	addi	r2,r2,-29012
   4559c:	20800815 	stw	r2,32(r4)
   455a0:	00c00174 	movhi	r3,5
   455a4:	18e38c04 	addi	r3,r3,-29136
   455a8:	00800174 	movhi	r2,5
   455ac:	10a37204 	addi	r2,r2,-29240
   455b0:	2140030d 	sth	r5,12(r4)
   455b4:	2180038d 	sth	r6,14(r4)
   455b8:	20c00915 	stw	r3,36(r4)
   455bc:	20800a15 	stw	r2,40(r4)
   455c0:	20000015 	stw	zero,0(r4)
   455c4:	20000115 	stw	zero,4(r4)
   455c8:	20000215 	stw	zero,8(r4)
   455cc:	20000415 	stw	zero,16(r4)
   455d0:	20000515 	stw	zero,20(r4)
   455d4:	20000615 	stw	zero,24(r4)
   455d8:	21000715 	stw	r4,28(r4)
   455dc:	f800283a 	ret

000455e0 <__sfp_lock_acquire>:
   455e0:	f800283a 	ret

000455e4 <__sfp_lock_release>:
   455e4:	f800283a 	ret

000455e8 <__sinit_lock_acquire>:
   455e8:	f800283a 	ret

000455ec <__sinit_lock_release>:
   455ec:	f800283a 	ret

000455f0 <__sinit>:
   455f0:	20800e17 	ldw	r2,56(r4)
   455f4:	defffd04 	addi	sp,sp,-12
   455f8:	dc400115 	stw	r17,4(sp)
   455fc:	dc000015 	stw	r16,0(sp)
   45600:	dfc00215 	stw	ra,8(sp)
   45604:	04400044 	movi	r17,1
   45608:	01400104 	movi	r5,4
   4560c:	000d883a 	mov	r6,zero
   45610:	2021883a 	mov	r16,r4
   45614:	2200bb04 	addi	r8,r4,748
   45618:	200f883a 	mov	r7,r4
   4561c:	10000526 	beq	r2,zero,45634 <__sinit+0x44>
   45620:	dfc00217 	ldw	ra,8(sp)
   45624:	dc400117 	ldw	r17,4(sp)
   45628:	dc000017 	ldw	r16,0(sp)
   4562c:	dec00304 	addi	sp,sp,12
   45630:	f800283a 	ret
   45634:	21000117 	ldw	r4,4(r4)
   45638:	00800134 	movhi	r2,4
   4563c:	1095b504 	addi	r2,r2,22228
   45640:	00c000c4 	movi	r3,3
   45644:	80800f15 	stw	r2,60(r16)
   45648:	80c0b915 	stw	r3,740(r16)
   4564c:	8200ba15 	stw	r8,744(r16)
   45650:	84400e15 	stw	r17,56(r16)
   45654:	8000b815 	stw	zero,736(r16)
   45658:	00455880 	call	45588 <std>
   4565c:	81000217 	ldw	r4,8(r16)
   45660:	880d883a 	mov	r6,r17
   45664:	800f883a 	mov	r7,r16
   45668:	01400284 	movi	r5,10
   4566c:	00455880 	call	45588 <std>
   45670:	81000317 	ldw	r4,12(r16)
   45674:	800f883a 	mov	r7,r16
   45678:	01400484 	movi	r5,18
   4567c:	01800084 	movi	r6,2
   45680:	dfc00217 	ldw	ra,8(sp)
   45684:	dc400117 	ldw	r17,4(sp)
   45688:	dc000017 	ldw	r16,0(sp)
   4568c:	dec00304 	addi	sp,sp,12
   45690:	00455881 	jmpi	45588 <std>

00045694 <__fp_lock>:
   45694:	0005883a 	mov	r2,zero
   45698:	f800283a 	ret

0004569c <__fp_unlock>:
   4569c:	0005883a 	mov	r2,zero
   456a0:	f800283a 	ret

000456a4 <__fp_unlock_all>:
   456a4:	00800174 	movhi	r2,5
   456a8:	108fb204 	addi	r2,r2,16072
   456ac:	11000017 	ldw	r4,0(r2)
   456b0:	01400134 	movhi	r5,4
   456b4:	2955a704 	addi	r5,r5,22172
   456b8:	004646c1 	jmpi	4646c <_fwalk>

000456bc <__fp_lock_all>:
   456bc:	00800174 	movhi	r2,5
   456c0:	108fb204 	addi	r2,r2,16072
   456c4:	11000017 	ldw	r4,0(r2)
   456c8:	01400134 	movhi	r5,4
   456cc:	2955a504 	addi	r5,r5,22164
   456d0:	004646c1 	jmpi	4646c <_fwalk>

000456d4 <_cleanup_r>:
   456d4:	01400174 	movhi	r5,5
   456d8:	296df104 	addi	r5,r5,-18492
   456dc:	004646c1 	jmpi	4646c <_fwalk>

000456e0 <_cleanup>:
   456e0:	00800174 	movhi	r2,5
   456e4:	108fb304 	addi	r2,r2,16076
   456e8:	11000017 	ldw	r4,0(r2)
   456ec:	00456d41 	jmpi	456d4 <_cleanup_r>

000456f0 <__sfmoreglue>:
   456f0:	defffc04 	addi	sp,sp,-16
   456f4:	dc000015 	stw	r16,0(sp)
   456f8:	2821883a 	mov	r16,r5
   456fc:	dc400115 	stw	r17,4(sp)
   45700:	01401704 	movi	r5,92
   45704:	2023883a 	mov	r17,r4
   45708:	8009883a 	mov	r4,r16
   4570c:	dfc00315 	stw	ra,12(sp)
   45710:	dcc00215 	stw	r19,8(sp)
   45714:	004e8e80 	call	4e8e8 <__mulsi3>
   45718:	11400304 	addi	r5,r2,12
   4571c:	8809883a 	mov	r4,r17
   45720:	1027883a 	mov	r19,r2
   45724:	00467a80 	call	467a8 <_malloc_r>
   45728:	10c00304 	addi	r3,r2,12
   4572c:	1023883a 	mov	r17,r2
   45730:	1809883a 	mov	r4,r3
   45734:	980d883a 	mov	r6,r19
   45738:	000b883a 	mov	r5,zero
   4573c:	10000b26 	beq	r2,zero,4576c <__sfmoreglue+0x7c>
   45740:	14000115 	stw	r16,4(r2)
   45744:	10c00215 	stw	r3,8(r2)
   45748:	10000015 	stw	zero,0(r2)
   4574c:	004724c0 	call	4724c <memset>
   45750:	8805883a 	mov	r2,r17
   45754:	dfc00317 	ldw	ra,12(sp)
   45758:	dcc00217 	ldw	r19,8(sp)
   4575c:	dc400117 	ldw	r17,4(sp)
   45760:	dc000017 	ldw	r16,0(sp)
   45764:	dec00404 	addi	sp,sp,16
   45768:	f800283a 	ret
   4576c:	0023883a 	mov	r17,zero
   45770:	8805883a 	mov	r2,r17
   45774:	dfc00317 	ldw	ra,12(sp)
   45778:	dcc00217 	ldw	r19,8(sp)
   4577c:	dc400117 	ldw	r17,4(sp)
   45780:	dc000017 	ldw	r16,0(sp)
   45784:	dec00404 	addi	sp,sp,16
   45788:	f800283a 	ret

0004578c <__sfp>:
   4578c:	defffd04 	addi	sp,sp,-12
   45790:	00800174 	movhi	r2,5
   45794:	108fb304 	addi	r2,r2,16076
   45798:	dc000015 	stw	r16,0(sp)
   4579c:	14000017 	ldw	r16,0(r2)
   457a0:	dc400115 	stw	r17,4(sp)
   457a4:	dfc00215 	stw	ra,8(sp)
   457a8:	80800e17 	ldw	r2,56(r16)
   457ac:	2023883a 	mov	r17,r4
   457b0:	10002626 	beq	r2,zero,4584c <__sfp+0xc0>
   457b4:	8400b804 	addi	r16,r16,736
   457b8:	80800117 	ldw	r2,4(r16)
   457bc:	81000217 	ldw	r4,8(r16)
   457c0:	10ffffc4 	addi	r3,r2,-1
   457c4:	18000916 	blt	r3,zero,457ec <__sfp+0x60>
   457c8:	2080030f 	ldh	r2,12(r4)
   457cc:	10000b26 	beq	r2,zero,457fc <__sfp+0x70>
   457d0:	017fffc4 	movi	r5,-1
   457d4:	00000206 	br	457e0 <__sfp+0x54>
   457d8:	2080030f 	ldh	r2,12(r4)
   457dc:	10000726 	beq	r2,zero,457fc <__sfp+0x70>
   457e0:	18ffffc4 	addi	r3,r3,-1
   457e4:	21001704 	addi	r4,r4,92
   457e8:	197ffb1e 	bne	r3,r5,457d8 <__sfp+0x4c>
   457ec:	80800017 	ldw	r2,0(r16)
   457f0:	10001926 	beq	r2,zero,45858 <__sfp+0xcc>
   457f4:	1021883a 	mov	r16,r2
   457f8:	003fef06 	br	457b8 <__sfp+0x2c>
   457fc:	00bfffc4 	movi	r2,-1
   45800:	00c00044 	movi	r3,1
   45804:	2080038d 	sth	r2,14(r4)
   45808:	20c0030d 	sth	r3,12(r4)
   4580c:	20000015 	stw	zero,0(r4)
   45810:	20000215 	stw	zero,8(r4)
   45814:	20000115 	stw	zero,4(r4)
   45818:	20000415 	stw	zero,16(r4)
   4581c:	20000515 	stw	zero,20(r4)
   45820:	20000615 	stw	zero,24(r4)
   45824:	20000c15 	stw	zero,48(r4)
   45828:	20000d15 	stw	zero,52(r4)
   4582c:	20001115 	stw	zero,68(r4)
   45830:	20001215 	stw	zero,72(r4)
   45834:	2005883a 	mov	r2,r4
   45838:	dfc00217 	ldw	ra,8(sp)
   4583c:	dc400117 	ldw	r17,4(sp)
   45840:	dc000017 	ldw	r16,0(sp)
   45844:	dec00304 	addi	sp,sp,12
   45848:	f800283a 	ret
   4584c:	8009883a 	mov	r4,r16
   45850:	00455f00 	call	455f0 <__sinit>
   45854:	003fd706 	br	457b4 <__sfp+0x28>
   45858:	8809883a 	mov	r4,r17
   4585c:	01400104 	movi	r5,4
   45860:	00456f00 	call	456f0 <__sfmoreglue>
   45864:	80800015 	stw	r2,0(r16)
   45868:	103fe21e 	bne	r2,zero,457f4 <__sfp+0x68>
   4586c:	00800304 	movi	r2,12
   45870:	0009883a 	mov	r4,zero
   45874:	88800015 	stw	r2,0(r17)
   45878:	003fee06 	br	45834 <__sfp+0xa8>

0004587c <_fread_r>:
   4587c:	defff504 	addi	sp,sp,-44
   45880:	dd800715 	stw	r22,28(sp)
   45884:	dc000115 	stw	r16,4(sp)
   45888:	202d883a 	mov	r22,r4
   4588c:	2821883a 	mov	r16,r5
   45890:	3809883a 	mov	r4,r7
   45894:	300b883a 	mov	r5,r6
   45898:	df000915 	stw	fp,36(sp)
   4589c:	ddc00815 	stw	r23,32(sp)
   458a0:	dcc00415 	stw	r19,16(sp)
   458a4:	dfc00a15 	stw	ra,40(sp)
   458a8:	dd400615 	stw	r21,24(sp)
   458ac:	dd000515 	stw	r20,20(sp)
   458b0:	dc800315 	stw	r18,12(sp)
   458b4:	dc400215 	stw	r17,8(sp)
   458b8:	d9800015 	stw	r6,0(sp)
   458bc:	3839883a 	mov	fp,r7
   458c0:	004e8e80 	call	4e8e8 <__mulsi3>
   458c4:	102f883a 	mov	r23,r2
   458c8:	dcc00b17 	ldw	r19,44(sp)
   458cc:	10005926 	beq	r2,zero,45a34 <_fread_r+0x1b8>
   458d0:	b0000226 	beq	r22,zero,458dc <_fread_r+0x60>
   458d4:	b0800e17 	ldw	r2,56(r22)
   458d8:	10005826 	beq	r2,zero,45a3c <_fread_r+0x1c0>
   458dc:	9c400117 	ldw	r17,4(r19)
   458e0:	88005a16 	blt	r17,zero,45a4c <_fread_r+0x1d0>
   458e4:	9880030b 	ldhu	r2,12(r19)
   458e8:	8029883a 	mov	r20,r16
   458ec:	1080008c 	andi	r2,r2,2
   458f0:	1000221e 	bne	r2,zero,4597c <_fread_r+0x100>
   458f4:	b825883a 	mov	r18,r23
   458f8:	00000106 	br	45900 <_fread_r+0x84>
   458fc:	9c400117 	ldw	r17,4(r19)
   45900:	a009883a 	mov	r4,r20
   45904:	880d883a 	mov	r6,r17
   45908:	8c80552e 	bgeu	r17,r18,45a60 <_fread_r+0x1e4>
   4590c:	99400017 	ldw	r5,0(r19)
   45910:	a469883a 	add	r20,r20,r17
   45914:	9465c83a 	sub	r18,r18,r17
   45918:	00470cc0 	call	470cc <memcpy>
   4591c:	98800017 	ldw	r2,0(r19)
   45920:	b009883a 	mov	r4,r22
   45924:	980b883a 	mov	r5,r19
   45928:	1461883a 	add	r16,r2,r17
   4592c:	9c000015 	stw	r16,0(r19)
   45930:	00489640 	call	48964 <__srefill_r>
   45934:	103ff126 	beq	r2,zero,458fc <_fread_r+0x80>
   45938:	d9400017 	ldw	r5,0(sp)
   4593c:	bc89c83a 	sub	r4,r23,r18
   45940:	004e8d80 	call	4e8d8 <__udivsi3>
   45944:	1039883a 	mov	fp,r2
   45948:	e005883a 	mov	r2,fp
   4594c:	dfc00a17 	ldw	ra,40(sp)
   45950:	df000917 	ldw	fp,36(sp)
   45954:	ddc00817 	ldw	r23,32(sp)
   45958:	dd800717 	ldw	r22,28(sp)
   4595c:	dd400617 	ldw	r21,24(sp)
   45960:	dd000517 	ldw	r20,20(sp)
   45964:	dcc00417 	ldw	r19,16(sp)
   45968:	dc800317 	ldw	r18,12(sp)
   4596c:	dc400217 	ldw	r17,8(sp)
   45970:	dc000117 	ldw	r16,4(sp)
   45974:	dec00b04 	addi	sp,sp,44
   45978:	f800283a 	ret
   4597c:	b825883a 	mov	r18,r23
   45980:	8dc03536 	bltu	r17,r23,45a58 <_fread_r+0x1dc>
   45984:	99400017 	ldw	r5,0(r19)
   45988:	a009883a 	mov	r4,r20
   4598c:	900d883a 	mov	r6,r18
   45990:	00470cc0 	call	470cc <memcpy>
   45994:	9c000017 	ldw	r16,0(r19)
   45998:	98800117 	ldw	r2,4(r19)
   4599c:	99400c17 	ldw	r5,48(r19)
   459a0:	84a1883a 	add	r16,r16,r18
   459a4:	14a3c83a 	sub	r17,r2,r18
   459a8:	a4ab883a 	add	r21,r20,r18
   459ac:	9c400115 	stw	r17,4(r19)
   459b0:	9c000015 	stw	r16,0(r19)
   459b4:	bca9c83a 	sub	r20,r23,r18
   459b8:	28000826 	beq	r5,zero,459dc <_fread_r+0x160>
   459bc:	a03fe226 	beq	r20,zero,45948 <_fread_r+0xcc>
   459c0:	98801004 	addi	r2,r19,64
   459c4:	28800326 	beq	r5,r2,459d4 <_fread_r+0x158>
   459c8:	b009883a 	mov	r4,r22
   459cc:	0045bf40 	call	45bf4 <_free_r>
   459d0:	9c000017 	ldw	r16,0(r19)
   459d4:	98000c15 	stw	zero,48(r19)
   459d8:	00000106 	br	459e0 <_fread_r+0x164>
   459dc:	a03fda26 	beq	r20,zero,45948 <_fread_r+0xcc>
   459e0:	9c800417 	ldw	r18,16(r19)
   459e4:	9c400517 	ldw	r17,20(r19)
   459e8:	9d400015 	stw	r21,0(r19)
   459ec:	9d400415 	stw	r21,16(r19)
   459f0:	9d000515 	stw	r20,20(r19)
   459f4:	b009883a 	mov	r4,r22
   459f8:	980b883a 	mov	r5,r19
   459fc:	00489640 	call	48964 <__srefill_r>
   45a00:	98c00117 	ldw	r3,4(r19)
   45a04:	9c800415 	stw	r18,16(r19)
   45a08:	9c400515 	stw	r17,20(r19)
   45a0c:	a8eb883a 	add	r21,r21,r3
   45a10:	9c000015 	stw	r16,0(r19)
   45a14:	a0e9c83a 	sub	r20,r20,r3
   45a18:	98000115 	stw	zero,4(r19)
   45a1c:	103fef26 	beq	r2,zero,459dc <_fread_r+0x160>
   45a20:	d9400017 	ldw	r5,0(sp)
   45a24:	bd09c83a 	sub	r4,r23,r20
   45a28:	004e8d80 	call	4e8d8 <__udivsi3>
   45a2c:	1039883a 	mov	fp,r2
   45a30:	003fc506 	br	45948 <_fread_r+0xcc>
   45a34:	0039883a 	mov	fp,zero
   45a38:	003fc306 	br	45948 <_fread_r+0xcc>
   45a3c:	b009883a 	mov	r4,r22
   45a40:	00455f00 	call	455f0 <__sinit>
   45a44:	9c400117 	ldw	r17,4(r19)
   45a48:	883fa60e 	bge	r17,zero,458e4 <_fread_r+0x68>
   45a4c:	0023883a 	mov	r17,zero
   45a50:	98000115 	stw	zero,4(r19)
   45a54:	003fa306 	br	458e4 <_fread_r+0x68>
   45a58:	8825883a 	mov	r18,r17
   45a5c:	003fc906 	br	45984 <_fread_r+0x108>
   45a60:	99400017 	ldw	r5,0(r19)
   45a64:	900d883a 	mov	r6,r18
   45a68:	00470cc0 	call	470cc <memcpy>
   45a6c:	98c00117 	ldw	r3,4(r19)
   45a70:	98800017 	ldw	r2,0(r19)
   45a74:	1c87c83a 	sub	r3,r3,r18
   45a78:	1485883a 	add	r2,r2,r18
   45a7c:	98800015 	stw	r2,0(r19)
   45a80:	98c00115 	stw	r3,4(r19)
   45a84:	003fb006 	br	45948 <_fread_r+0xcc>

00045a88 <fread>:
   45a88:	00800174 	movhi	r2,5
   45a8c:	108fb204 	addi	r2,r2,16072
   45a90:	2017883a 	mov	r11,r4
   45a94:	11000017 	ldw	r4,0(r2)
   45a98:	defffe04 	addi	sp,sp,-8
   45a9c:	3013883a 	mov	r9,r6
   45aa0:	2805883a 	mov	r2,r5
   45aa4:	d9c00015 	stw	r7,0(sp)
   45aa8:	580b883a 	mov	r5,r11
   45aac:	100d883a 	mov	r6,r2
   45ab0:	480f883a 	mov	r7,r9
   45ab4:	dfc00115 	stw	ra,4(sp)
   45ab8:	004587c0 	call	4587c <_fread_r>
   45abc:	dfc00117 	ldw	ra,4(sp)
   45ac0:	dec00204 	addi	sp,sp,8
   45ac4:	f800283a 	ret

00045ac8 <_malloc_trim_r>:
   45ac8:	defffb04 	addi	sp,sp,-20
   45acc:	dcc00315 	stw	r19,12(sp)
   45ad0:	04c00174 	movhi	r19,5
   45ad4:	9cca2304 	addi	r19,r19,10380
   45ad8:	dc800215 	stw	r18,8(sp)
   45adc:	dc400115 	stw	r17,4(sp)
   45ae0:	dc000015 	stw	r16,0(sp)
   45ae4:	2823883a 	mov	r17,r5
   45ae8:	2025883a 	mov	r18,r4
   45aec:	dfc00415 	stw	ra,16(sp)
   45af0:	004f8440 	call	4f844 <__malloc_lock>
   45af4:	98800217 	ldw	r2,8(r19)
   45af8:	9009883a 	mov	r4,r18
   45afc:	000b883a 	mov	r5,zero
   45b00:	10c00117 	ldw	r3,4(r2)
   45b04:	00bfff04 	movi	r2,-4
   45b08:	18a0703a 	and	r16,r3,r2
   45b0c:	8463c83a 	sub	r17,r16,r17
   45b10:	8c43fbc4 	addi	r17,r17,4079
   45b14:	8822d33a 	srli	r17,r17,12
   45b18:	0083ffc4 	movi	r2,4095
   45b1c:	8c7fffc4 	addi	r17,r17,-1
   45b20:	8822933a 	slli	r17,r17,12
   45b24:	1440060e 	bge	r2,r17,45b40 <_malloc_trim_r+0x78>
   45b28:	0048bb40 	call	48bb4 <_sbrk_r>
   45b2c:	98c00217 	ldw	r3,8(r19)
   45b30:	9009883a 	mov	r4,r18
   45b34:	044bc83a 	sub	r5,zero,r17
   45b38:	80c7883a 	add	r3,r16,r3
   45b3c:	10c00926 	beq	r2,r3,45b64 <_malloc_trim_r+0x9c>
   45b40:	004f8640 	call	4f864 <__malloc_unlock>
   45b44:	0005883a 	mov	r2,zero
   45b48:	dfc00417 	ldw	ra,16(sp)
   45b4c:	dcc00317 	ldw	r19,12(sp)
   45b50:	dc800217 	ldw	r18,8(sp)
   45b54:	dc400117 	ldw	r17,4(sp)
   45b58:	dc000017 	ldw	r16,0(sp)
   45b5c:	dec00504 	addi	sp,sp,20
   45b60:	f800283a 	ret
   45b64:	9009883a 	mov	r4,r18
   45b68:	0048bb40 	call	48bb4 <_sbrk_r>
   45b6c:	844dc83a 	sub	r6,r16,r17
   45b70:	00ffffc4 	movi	r3,-1
   45b74:	9009883a 	mov	r4,r18
   45b78:	000b883a 	mov	r5,zero
   45b7c:	01c00174 	movhi	r7,5
   45b80:	39d67204 	addi	r7,r7,22984
   45b84:	31800054 	ori	r6,r6,1
   45b88:	10c00926 	beq	r2,r3,45bb0 <_malloc_trim_r+0xe8>
   45b8c:	38800017 	ldw	r2,0(r7)
   45b90:	98c00217 	ldw	r3,8(r19)
   45b94:	9009883a 	mov	r4,r18
   45b98:	1445c83a 	sub	r2,r2,r17
   45b9c:	38800015 	stw	r2,0(r7)
   45ba0:	19800115 	stw	r6,4(r3)
   45ba4:	004f8640 	call	4f864 <__malloc_unlock>
   45ba8:	00800044 	movi	r2,1
   45bac:	003fe606 	br	45b48 <_malloc_trim_r+0x80>
   45bb0:	0048bb40 	call	48bb4 <_sbrk_r>
   45bb4:	99800217 	ldw	r6,8(r19)
   45bb8:	100f883a 	mov	r7,r2
   45bbc:	9009883a 	mov	r4,r18
   45bc0:	1187c83a 	sub	r3,r2,r6
   45bc4:	008003c4 	movi	r2,15
   45bc8:	19400054 	ori	r5,r3,1
   45bcc:	10ffdc0e 	bge	r2,r3,45b40 <_malloc_trim_r+0x78>
   45bd0:	00800174 	movhi	r2,5
   45bd4:	108fb704 	addi	r2,r2,16092
   45bd8:	10c00017 	ldw	r3,0(r2)
   45bdc:	00800174 	movhi	r2,5
   45be0:	10967204 	addi	r2,r2,22984
   45be4:	31400115 	stw	r5,4(r6)
   45be8:	38c7c83a 	sub	r3,r7,r3
   45bec:	10c00015 	stw	r3,0(r2)
   45bf0:	003fd306 	br	45b40 <_malloc_trim_r+0x78>

00045bf4 <_free_r>:
   45bf4:	defffd04 	addi	sp,sp,-12
   45bf8:	dc400115 	stw	r17,4(sp)
   45bfc:	dc000015 	stw	r16,0(sp)
   45c00:	dfc00215 	stw	ra,8(sp)
   45c04:	2821883a 	mov	r16,r5
   45c08:	2023883a 	mov	r17,r4
   45c0c:	28005a26 	beq	r5,zero,45d78 <_free_r+0x184>
   45c10:	004f8440 	call	4f844 <__malloc_lock>
   45c14:	823ffe04 	addi	r8,r16,-8
   45c18:	41400117 	ldw	r5,4(r8)
   45c1c:	00bfff84 	movi	r2,-2
   45c20:	02800174 	movhi	r10,5
   45c24:	528a2304 	addi	r10,r10,10380
   45c28:	288e703a 	and	r7,r5,r2
   45c2c:	41cd883a 	add	r6,r8,r7
   45c30:	30c00117 	ldw	r3,4(r6)
   45c34:	51000217 	ldw	r4,8(r10)
   45c38:	00bfff04 	movi	r2,-4
   45c3c:	1892703a 	and	r9,r3,r2
   45c40:	5017883a 	mov	r11,r10
   45c44:	31006726 	beq	r6,r4,45de4 <_free_r+0x1f0>
   45c48:	2880004c 	andi	r2,r5,1
   45c4c:	1005003a 	cmpeq	r2,r2,zero
   45c50:	32400115 	stw	r9,4(r6)
   45c54:	10001a1e 	bne	r2,zero,45cc0 <_free_r+0xcc>
   45c58:	000b883a 	mov	r5,zero
   45c5c:	3247883a 	add	r3,r6,r9
   45c60:	18800117 	ldw	r2,4(r3)
   45c64:	1080004c 	andi	r2,r2,1
   45c68:	1000231e 	bne	r2,zero,45cf8 <_free_r+0x104>
   45c6c:	280ac03a 	cmpne	r5,r5,zero
   45c70:	3a4f883a 	add	r7,r7,r9
   45c74:	2800451e 	bne	r5,zero,45d8c <_free_r+0x198>
   45c78:	31000217 	ldw	r4,8(r6)
   45c7c:	00800174 	movhi	r2,5
   45c80:	108a2504 	addi	r2,r2,10388
   45c84:	20807b26 	beq	r4,r2,45e74 <_free_r+0x280>
   45c88:	30800317 	ldw	r2,12(r6)
   45c8c:	3a07883a 	add	r3,r7,r8
   45c90:	19c00015 	stw	r7,0(r3)
   45c94:	11000215 	stw	r4,8(r2)
   45c98:	20800315 	stw	r2,12(r4)
   45c9c:	38800054 	ori	r2,r7,1
   45ca0:	40800115 	stw	r2,4(r8)
   45ca4:	28001a26 	beq	r5,zero,45d10 <_free_r+0x11c>
   45ca8:	8809883a 	mov	r4,r17
   45cac:	dfc00217 	ldw	ra,8(sp)
   45cb0:	dc400117 	ldw	r17,4(sp)
   45cb4:	dc000017 	ldw	r16,0(sp)
   45cb8:	dec00304 	addi	sp,sp,12
   45cbc:	004f8641 	jmpi	4f864 <__malloc_unlock>
   45cc0:	80bffe17 	ldw	r2,-8(r16)
   45cc4:	50c00204 	addi	r3,r10,8
   45cc8:	4091c83a 	sub	r8,r8,r2
   45ccc:	41000217 	ldw	r4,8(r8)
   45cd0:	388f883a 	add	r7,r7,r2
   45cd4:	20c06126 	beq	r4,r3,45e5c <_free_r+0x268>
   45cd8:	40800317 	ldw	r2,12(r8)
   45cdc:	3247883a 	add	r3,r6,r9
   45ce0:	000b883a 	mov	r5,zero
   45ce4:	11000215 	stw	r4,8(r2)
   45ce8:	20800315 	stw	r2,12(r4)
   45cec:	18800117 	ldw	r2,4(r3)
   45cf0:	1080004c 	andi	r2,r2,1
   45cf4:	103fdd26 	beq	r2,zero,45c6c <_free_r+0x78>
   45cf8:	38800054 	ori	r2,r7,1
   45cfc:	3a07883a 	add	r3,r7,r8
   45d00:	280ac03a 	cmpne	r5,r5,zero
   45d04:	40800115 	stw	r2,4(r8)
   45d08:	19c00015 	stw	r7,0(r3)
   45d0c:	283fe61e 	bne	r5,zero,45ca8 <_free_r+0xb4>
   45d10:	00807fc4 	movi	r2,511
   45d14:	11c01f2e 	bgeu	r2,r7,45d94 <_free_r+0x1a0>
   45d18:	3806d27a 	srli	r3,r7,9
   45d1c:	1800481e 	bne	r3,zero,45e40 <_free_r+0x24c>
   45d20:	3804d0fa 	srli	r2,r7,3
   45d24:	100690fa 	slli	r3,r2,3
   45d28:	1acd883a 	add	r6,r3,r11
   45d2c:	31400217 	ldw	r5,8(r6)
   45d30:	31405926 	beq	r6,r5,45e98 <_free_r+0x2a4>
   45d34:	28800117 	ldw	r2,4(r5)
   45d38:	00ffff04 	movi	r3,-4
   45d3c:	10c4703a 	and	r2,r2,r3
   45d40:	3880022e 	bgeu	r7,r2,45d4c <_free_r+0x158>
   45d44:	29400217 	ldw	r5,8(r5)
   45d48:	317ffa1e 	bne	r6,r5,45d34 <_free_r+0x140>
   45d4c:	29800317 	ldw	r6,12(r5)
   45d50:	41800315 	stw	r6,12(r8)
   45d54:	41400215 	stw	r5,8(r8)
   45d58:	8809883a 	mov	r4,r17
   45d5c:	2a000315 	stw	r8,12(r5)
   45d60:	32000215 	stw	r8,8(r6)
   45d64:	dfc00217 	ldw	ra,8(sp)
   45d68:	dc400117 	ldw	r17,4(sp)
   45d6c:	dc000017 	ldw	r16,0(sp)
   45d70:	dec00304 	addi	sp,sp,12
   45d74:	004f8641 	jmpi	4f864 <__malloc_unlock>
   45d78:	dfc00217 	ldw	ra,8(sp)
   45d7c:	dc400117 	ldw	r17,4(sp)
   45d80:	dc000017 	ldw	r16,0(sp)
   45d84:	dec00304 	addi	sp,sp,12
   45d88:	f800283a 	ret
   45d8c:	31000217 	ldw	r4,8(r6)
   45d90:	003fbd06 	br	45c88 <_free_r+0x94>
   45d94:	3806d0fa 	srli	r3,r7,3
   45d98:	00800044 	movi	r2,1
   45d9c:	51400117 	ldw	r5,4(r10)
   45da0:	180890fa 	slli	r4,r3,3
   45da4:	1807d0ba 	srai	r3,r3,2
   45da8:	22c9883a 	add	r4,r4,r11
   45dac:	21800217 	ldw	r6,8(r4)
   45db0:	10c4983a 	sll	r2,r2,r3
   45db4:	41000315 	stw	r4,12(r8)
   45db8:	41800215 	stw	r6,8(r8)
   45dbc:	288ab03a 	or	r5,r5,r2
   45dc0:	22000215 	stw	r8,8(r4)
   45dc4:	8809883a 	mov	r4,r17
   45dc8:	51400115 	stw	r5,4(r10)
   45dcc:	32000315 	stw	r8,12(r6)
   45dd0:	dfc00217 	ldw	ra,8(sp)
   45dd4:	dc400117 	ldw	r17,4(sp)
   45dd8:	dc000017 	ldw	r16,0(sp)
   45ddc:	dec00304 	addi	sp,sp,12
   45de0:	004f8641 	jmpi	4f864 <__malloc_unlock>
   45de4:	2880004c 	andi	r2,r5,1
   45de8:	3a4d883a 	add	r6,r7,r9
   45dec:	1000071e 	bne	r2,zero,45e0c <_free_r+0x218>
   45df0:	80bffe17 	ldw	r2,-8(r16)
   45df4:	4091c83a 	sub	r8,r8,r2
   45df8:	41000317 	ldw	r4,12(r8)
   45dfc:	40c00217 	ldw	r3,8(r8)
   45e00:	308d883a 	add	r6,r6,r2
   45e04:	20c00215 	stw	r3,8(r4)
   45e08:	19000315 	stw	r4,12(r3)
   45e0c:	00800174 	movhi	r2,5
   45e10:	108fb604 	addi	r2,r2,16088
   45e14:	11000017 	ldw	r4,0(r2)
   45e18:	30c00054 	ori	r3,r6,1
   45e1c:	52000215 	stw	r8,8(r10)
   45e20:	40c00115 	stw	r3,4(r8)
   45e24:	313fa036 	bltu	r6,r4,45ca8 <_free_r+0xb4>
   45e28:	00800174 	movhi	r2,5
   45e2c:	10966804 	addi	r2,r2,22944
   45e30:	11400017 	ldw	r5,0(r2)
   45e34:	8809883a 	mov	r4,r17
   45e38:	0045ac80 	call	45ac8 <_malloc_trim_r>
   45e3c:	003f9a06 	br	45ca8 <_free_r+0xb4>
   45e40:	00800104 	movi	r2,4
   45e44:	10c0072e 	bgeu	r2,r3,45e64 <_free_r+0x270>
   45e48:	00800504 	movi	r2,20
   45e4c:	10c01936 	bltu	r2,r3,45eb4 <_free_r+0x2c0>
   45e50:	188016c4 	addi	r2,r3,91
   45e54:	100690fa 	slli	r3,r2,3
   45e58:	003fb306 	br	45d28 <_free_r+0x134>
   45e5c:	01400044 	movi	r5,1
   45e60:	003f7e06 	br	45c5c <_free_r+0x68>
   45e64:	3804d1ba 	srli	r2,r7,6
   45e68:	10800e04 	addi	r2,r2,56
   45e6c:	100690fa 	slli	r3,r2,3
   45e70:	003fad06 	br	45d28 <_free_r+0x134>
   45e74:	22000315 	stw	r8,12(r4)
   45e78:	22000215 	stw	r8,8(r4)
   45e7c:	3a05883a 	add	r2,r7,r8
   45e80:	38c00054 	ori	r3,r7,1
   45e84:	11c00015 	stw	r7,0(r2)
   45e88:	41000215 	stw	r4,8(r8)
   45e8c:	40c00115 	stw	r3,4(r8)
   45e90:	41000315 	stw	r4,12(r8)
   45e94:	003f8406 	br	45ca8 <_free_r+0xb4>
   45e98:	1005d0ba 	srai	r2,r2,2
   45e9c:	00c00044 	movi	r3,1
   45ea0:	51000117 	ldw	r4,4(r10)
   45ea4:	1886983a 	sll	r3,r3,r2
   45ea8:	20c8b03a 	or	r4,r4,r3
   45eac:	51000115 	stw	r4,4(r10)
   45eb0:	003fa706 	br	45d50 <_free_r+0x15c>
   45eb4:	00801504 	movi	r2,84
   45eb8:	10c00436 	bltu	r2,r3,45ecc <_free_r+0x2d8>
   45ebc:	3804d33a 	srli	r2,r7,12
   45ec0:	10801b84 	addi	r2,r2,110
   45ec4:	100690fa 	slli	r3,r2,3
   45ec8:	003f9706 	br	45d28 <_free_r+0x134>
   45ecc:	00805504 	movi	r2,340
   45ed0:	10c00436 	bltu	r2,r3,45ee4 <_free_r+0x2f0>
   45ed4:	3804d3fa 	srli	r2,r7,15
   45ed8:	10801dc4 	addi	r2,r2,119
   45edc:	100690fa 	slli	r3,r2,3
   45ee0:	003f9106 	br	45d28 <_free_r+0x134>
   45ee4:	00815504 	movi	r2,1364
   45ee8:	10c0032e 	bgeu	r2,r3,45ef8 <_free_r+0x304>
   45eec:	00801f84 	movi	r2,126
   45ef0:	00c0fc04 	movi	r3,1008
   45ef4:	003f8c06 	br	45d28 <_free_r+0x134>
   45ef8:	3804d4ba 	srli	r2,r7,18
   45efc:	10801f04 	addi	r2,r2,124
   45f00:	100690fa 	slli	r3,r2,3
   45f04:	003f8806 	br	45d28 <_free_r+0x134>

00045f08 <__sfvwrite_r>:
   45f08:	30800217 	ldw	r2,8(r6)
   45f0c:	defff504 	addi	sp,sp,-44
   45f10:	df000915 	stw	fp,36(sp)
   45f14:	dd800715 	stw	r22,28(sp)
   45f18:	dc800315 	stw	r18,12(sp)
   45f1c:	dfc00a15 	stw	ra,40(sp)
   45f20:	ddc00815 	stw	r23,32(sp)
   45f24:	dd400615 	stw	r21,24(sp)
   45f28:	dd000515 	stw	r20,20(sp)
   45f2c:	dcc00415 	stw	r19,16(sp)
   45f30:	dc400215 	stw	r17,8(sp)
   45f34:	dc000115 	stw	r16,4(sp)
   45f38:	302d883a 	mov	r22,r6
   45f3c:	2039883a 	mov	fp,r4
   45f40:	2825883a 	mov	r18,r5
   45f44:	10001c26 	beq	r2,zero,45fb8 <__sfvwrite_r+0xb0>
   45f48:	29c0030b 	ldhu	r7,12(r5)
   45f4c:	3880020c 	andi	r2,r7,8
   45f50:	10002726 	beq	r2,zero,45ff0 <__sfvwrite_r+0xe8>
   45f54:	28800417 	ldw	r2,16(r5)
   45f58:	10002526 	beq	r2,zero,45ff0 <__sfvwrite_r+0xe8>
   45f5c:	3880008c 	andi	r2,r7,2
   45f60:	b5400017 	ldw	r21,0(r22)
   45f64:	10002826 	beq	r2,zero,46008 <__sfvwrite_r+0x100>
   45f68:	0021883a 	mov	r16,zero
   45f6c:	0023883a 	mov	r17,zero
   45f70:	880d883a 	mov	r6,r17
   45f74:	e009883a 	mov	r4,fp
   45f78:	00810004 	movi	r2,1024
   45f7c:	80006e26 	beq	r16,zero,46138 <__sfvwrite_r+0x230>
   45f80:	800f883a 	mov	r7,r16
   45f84:	91400717 	ldw	r5,28(r18)
   45f88:	1400012e 	bgeu	r2,r16,45f90 <__sfvwrite_r+0x88>
   45f8c:	100f883a 	mov	r7,r2
   45f90:	90c00917 	ldw	r3,36(r18)
   45f94:	183ee83a 	callr	r3
   45f98:	1007883a 	mov	r3,r2
   45f9c:	80a1c83a 	sub	r16,r16,r2
   45fa0:	88a3883a 	add	r17,r17,r2
   45fa4:	00806d0e 	bge	zero,r2,4615c <__sfvwrite_r+0x254>
   45fa8:	b0800217 	ldw	r2,8(r22)
   45fac:	10c5c83a 	sub	r2,r2,r3
   45fb0:	b0800215 	stw	r2,8(r22)
   45fb4:	103fee1e 	bne	r2,zero,45f70 <__sfvwrite_r+0x68>
   45fb8:	0009883a 	mov	r4,zero
   45fbc:	2005883a 	mov	r2,r4
   45fc0:	dfc00a17 	ldw	ra,40(sp)
   45fc4:	df000917 	ldw	fp,36(sp)
   45fc8:	ddc00817 	ldw	r23,32(sp)
   45fcc:	dd800717 	ldw	r22,28(sp)
   45fd0:	dd400617 	ldw	r21,24(sp)
   45fd4:	dd000517 	ldw	r20,20(sp)
   45fd8:	dcc00417 	ldw	r19,16(sp)
   45fdc:	dc800317 	ldw	r18,12(sp)
   45fe0:	dc400217 	ldw	r17,8(sp)
   45fe4:	dc000117 	ldw	r16,4(sp)
   45fe8:	dec00b04 	addi	sp,sp,44
   45fec:	f800283a 	ret
   45ff0:	0043a240 	call	43a24 <__swsetup_r>
   45ff4:	1000e41e 	bne	r2,zero,46388 <__sfvwrite_r+0x480>
   45ff8:	91c0030b 	ldhu	r7,12(r18)
   45ffc:	b5400017 	ldw	r21,0(r22)
   46000:	3880008c 	andi	r2,r7,2
   46004:	103fd81e 	bne	r2,zero,45f68 <__sfvwrite_r+0x60>
   46008:	3880004c 	andi	r2,r7,1
   4600c:	1005003a 	cmpeq	r2,r2,zero
   46010:	10005726 	beq	r2,zero,46170 <__sfvwrite_r+0x268>
   46014:	0029883a 	mov	r20,zero
   46018:	002f883a 	mov	r23,zero
   4601c:	a0004226 	beq	r20,zero,46128 <__sfvwrite_r+0x220>
   46020:	3880800c 	andi	r2,r7,512
   46024:	94000217 	ldw	r16,8(r18)
   46028:	10008b26 	beq	r2,zero,46258 <__sfvwrite_r+0x350>
   4602c:	800d883a 	mov	r6,r16
   46030:	a400a536 	bltu	r20,r16,462c8 <__sfvwrite_r+0x3c0>
   46034:	3881200c 	andi	r2,r7,1152
   46038:	10002726 	beq	r2,zero,460d8 <__sfvwrite_r+0x1d0>
   4603c:	90800517 	ldw	r2,20(r18)
   46040:	92000417 	ldw	r8,16(r18)
   46044:	91400017 	ldw	r5,0(r18)
   46048:	1087883a 	add	r3,r2,r2
   4604c:	1887883a 	add	r3,r3,r2
   46050:	1808d7fa 	srli	r4,r3,31
   46054:	2a21c83a 	sub	r16,r5,r8
   46058:	80800044 	addi	r2,r16,1
   4605c:	20c9883a 	add	r4,r4,r3
   46060:	2027d07a 	srai	r19,r4,1
   46064:	a085883a 	add	r2,r20,r2
   46068:	980d883a 	mov	r6,r19
   4606c:	9880022e 	bgeu	r19,r2,46078 <__sfvwrite_r+0x170>
   46070:	1027883a 	mov	r19,r2
   46074:	100d883a 	mov	r6,r2
   46078:	3881000c 	andi	r2,r7,1024
   4607c:	1000b826 	beq	r2,zero,46360 <__sfvwrite_r+0x458>
   46080:	300b883a 	mov	r5,r6
   46084:	e009883a 	mov	r4,fp
   46088:	00467a80 	call	467a8 <_malloc_r>
   4608c:	10003126 	beq	r2,zero,46154 <__sfvwrite_r+0x24c>
   46090:	91400417 	ldw	r5,16(r18)
   46094:	1009883a 	mov	r4,r2
   46098:	800d883a 	mov	r6,r16
   4609c:	1023883a 	mov	r17,r2
   460a0:	00470cc0 	call	470cc <memcpy>
   460a4:	90c0030b 	ldhu	r3,12(r18)
   460a8:	00beffc4 	movi	r2,-1025
   460ac:	1886703a 	and	r3,r3,r2
   460b0:	18c02014 	ori	r3,r3,128
   460b4:	90c0030d 	sth	r3,12(r18)
   460b8:	9c07c83a 	sub	r3,r19,r16
   460bc:	8c05883a 	add	r2,r17,r16
   460c0:	a00d883a 	mov	r6,r20
   460c4:	a021883a 	mov	r16,r20
   460c8:	90800015 	stw	r2,0(r18)
   460cc:	90c00215 	stw	r3,8(r18)
   460d0:	94400415 	stw	r17,16(r18)
   460d4:	94c00515 	stw	r19,20(r18)
   460d8:	91000017 	ldw	r4,0(r18)
   460dc:	b80b883a 	mov	r5,r23
   460e0:	a023883a 	mov	r17,r20
   460e4:	004716c0 	call	4716c <memmove>
   460e8:	90c00217 	ldw	r3,8(r18)
   460ec:	90800017 	ldw	r2,0(r18)
   460f0:	a027883a 	mov	r19,r20
   460f4:	1c07c83a 	sub	r3,r3,r16
   460f8:	1405883a 	add	r2,r2,r16
   460fc:	90c00215 	stw	r3,8(r18)
   46100:	a021883a 	mov	r16,r20
   46104:	90800015 	stw	r2,0(r18)
   46108:	b0800217 	ldw	r2,8(r22)
   4610c:	1405c83a 	sub	r2,r2,r16
   46110:	b0800215 	stw	r2,8(r22)
   46114:	103fa826 	beq	r2,zero,45fb8 <__sfvwrite_r+0xb0>
   46118:	a469c83a 	sub	r20,r20,r17
   4611c:	91c0030b 	ldhu	r7,12(r18)
   46120:	bcef883a 	add	r23,r23,r19
   46124:	a03fbe1e 	bne	r20,zero,46020 <__sfvwrite_r+0x118>
   46128:	adc00017 	ldw	r23,0(r21)
   4612c:	ad000117 	ldw	r20,4(r21)
   46130:	ad400204 	addi	r21,r21,8
   46134:	003fb906 	br	4601c <__sfvwrite_r+0x114>
   46138:	ac400017 	ldw	r17,0(r21)
   4613c:	ac000117 	ldw	r16,4(r21)
   46140:	ad400204 	addi	r21,r21,8
   46144:	003f8a06 	br	45f70 <__sfvwrite_r+0x68>
   46148:	91400417 	ldw	r5,16(r18)
   4614c:	e009883a 	mov	r4,fp
   46150:	0045bf40 	call	45bf4 <_free_r>
   46154:	00800304 	movi	r2,12
   46158:	e0800015 	stw	r2,0(fp)
   4615c:	9080030b 	ldhu	r2,12(r18)
   46160:	013fffc4 	movi	r4,-1
   46164:	10801014 	ori	r2,r2,64
   46168:	9080030d 	sth	r2,12(r18)
   4616c:	003f9306 	br	45fbc <__sfvwrite_r+0xb4>
   46170:	0027883a 	mov	r19,zero
   46174:	002f883a 	mov	r23,zero
   46178:	d8000015 	stw	zero,0(sp)
   4617c:	0029883a 	mov	r20,zero
   46180:	98001e26 	beq	r19,zero,461fc <__sfvwrite_r+0x2f4>
   46184:	d8c00017 	ldw	r3,0(sp)
   46188:	1804c03a 	cmpne	r2,r3,zero
   4618c:	10005e26 	beq	r2,zero,46308 <__sfvwrite_r+0x400>
   46190:	9821883a 	mov	r16,r19
   46194:	a4c0012e 	bgeu	r20,r19,4619c <__sfvwrite_r+0x294>
   46198:	a021883a 	mov	r16,r20
   4619c:	91000017 	ldw	r4,0(r18)
   461a0:	90800417 	ldw	r2,16(r18)
   461a4:	91800217 	ldw	r6,8(r18)
   461a8:	91c00517 	ldw	r7,20(r18)
   461ac:	1100022e 	bgeu	r2,r4,461b8 <__sfvwrite_r+0x2b0>
   461b0:	31e3883a 	add	r17,r6,r7
   461b4:	8c001616 	blt	r17,r16,46210 <__sfvwrite_r+0x308>
   461b8:	81c03816 	blt	r16,r7,4629c <__sfvwrite_r+0x394>
   461bc:	90c00917 	ldw	r3,36(r18)
   461c0:	91400717 	ldw	r5,28(r18)
   461c4:	e009883a 	mov	r4,fp
   461c8:	b80d883a 	mov	r6,r23
   461cc:	183ee83a 	callr	r3
   461d0:	1023883a 	mov	r17,r2
   461d4:	00bfe10e 	bge	zero,r2,4615c <__sfvwrite_r+0x254>
   461d8:	a469c83a 	sub	r20,r20,r17
   461dc:	a0001826 	beq	r20,zero,46240 <__sfvwrite_r+0x338>
   461e0:	b0800217 	ldw	r2,8(r22)
   461e4:	1445c83a 	sub	r2,r2,r17
   461e8:	b0800215 	stw	r2,8(r22)
   461ec:	103f7226 	beq	r2,zero,45fb8 <__sfvwrite_r+0xb0>
   461f0:	9c67c83a 	sub	r19,r19,r17
   461f4:	bc6f883a 	add	r23,r23,r17
   461f8:	983fe21e 	bne	r19,zero,46184 <__sfvwrite_r+0x27c>
   461fc:	adc00017 	ldw	r23,0(r21)
   46200:	acc00117 	ldw	r19,4(r21)
   46204:	ad400204 	addi	r21,r21,8
   46208:	d8000015 	stw	zero,0(sp)
   4620c:	003fdc06 	br	46180 <__sfvwrite_r+0x278>
   46210:	b80b883a 	mov	r5,r23
   46214:	880d883a 	mov	r6,r17
   46218:	004716c0 	call	4716c <memmove>
   4621c:	90c00017 	ldw	r3,0(r18)
   46220:	e009883a 	mov	r4,fp
   46224:	900b883a 	mov	r5,r18
   46228:	1c47883a 	add	r3,r3,r17
   4622c:	90c00015 	stw	r3,0(r18)
   46230:	00453580 	call	45358 <_fflush_r>
   46234:	103fc91e 	bne	r2,zero,4615c <__sfvwrite_r+0x254>
   46238:	a469c83a 	sub	r20,r20,r17
   4623c:	a03fe81e 	bne	r20,zero,461e0 <__sfvwrite_r+0x2d8>
   46240:	e009883a 	mov	r4,fp
   46244:	900b883a 	mov	r5,r18
   46248:	00453580 	call	45358 <_fflush_r>
   4624c:	103fc31e 	bne	r2,zero,4615c <__sfvwrite_r+0x254>
   46250:	d8000015 	stw	zero,0(sp)
   46254:	003fe206 	br	461e0 <__sfvwrite_r+0x2d8>
   46258:	91000017 	ldw	r4,0(r18)
   4625c:	90800417 	ldw	r2,16(r18)
   46260:	1100022e 	bgeu	r2,r4,4626c <__sfvwrite_r+0x364>
   46264:	8023883a 	mov	r17,r16
   46268:	85003136 	bltu	r16,r20,46330 <__sfvwrite_r+0x428>
   4626c:	91c00517 	ldw	r7,20(r18)
   46270:	a1c01836 	bltu	r20,r7,462d4 <__sfvwrite_r+0x3cc>
   46274:	90c00917 	ldw	r3,36(r18)
   46278:	91400717 	ldw	r5,28(r18)
   4627c:	e009883a 	mov	r4,fp
   46280:	b80d883a 	mov	r6,r23
   46284:	183ee83a 	callr	r3
   46288:	1021883a 	mov	r16,r2
   4628c:	00bfb30e 	bge	zero,r2,4615c <__sfvwrite_r+0x254>
   46290:	1023883a 	mov	r17,r2
   46294:	1027883a 	mov	r19,r2
   46298:	003f9b06 	br	46108 <__sfvwrite_r+0x200>
   4629c:	b80b883a 	mov	r5,r23
   462a0:	800d883a 	mov	r6,r16
   462a4:	004716c0 	call	4716c <memmove>
   462a8:	90c00217 	ldw	r3,8(r18)
   462ac:	90800017 	ldw	r2,0(r18)
   462b0:	8023883a 	mov	r17,r16
   462b4:	1c07c83a 	sub	r3,r3,r16
   462b8:	1405883a 	add	r2,r2,r16
   462bc:	90c00215 	stw	r3,8(r18)
   462c0:	90800015 	stw	r2,0(r18)
   462c4:	003fc406 	br	461d8 <__sfvwrite_r+0x2d0>
   462c8:	a00d883a 	mov	r6,r20
   462cc:	a021883a 	mov	r16,r20
   462d0:	003f8106 	br	460d8 <__sfvwrite_r+0x1d0>
   462d4:	b80b883a 	mov	r5,r23
   462d8:	a00d883a 	mov	r6,r20
   462dc:	004716c0 	call	4716c <memmove>
   462e0:	90c00217 	ldw	r3,8(r18)
   462e4:	90800017 	ldw	r2,0(r18)
   462e8:	a021883a 	mov	r16,r20
   462ec:	1d07c83a 	sub	r3,r3,r20
   462f0:	1505883a 	add	r2,r2,r20
   462f4:	a023883a 	mov	r17,r20
   462f8:	a027883a 	mov	r19,r20
   462fc:	90c00215 	stw	r3,8(r18)
   46300:	90800015 	stw	r2,0(r18)
   46304:	003f8006 	br	46108 <__sfvwrite_r+0x200>
   46308:	b809883a 	mov	r4,r23
   4630c:	01400284 	movi	r5,10
   46310:	980d883a 	mov	r6,r19
   46314:	0046fe80 	call	46fe8 <memchr>
   46318:	10001726 	beq	r2,zero,46378 <__sfvwrite_r+0x470>
   4631c:	15c5c83a 	sub	r2,r2,r23
   46320:	15000044 	addi	r20,r2,1
   46324:	00800044 	movi	r2,1
   46328:	d8800015 	stw	r2,0(sp)
   4632c:	003f9806 	br	46190 <__sfvwrite_r+0x288>
   46330:	b80b883a 	mov	r5,r23
   46334:	800d883a 	mov	r6,r16
   46338:	004716c0 	call	4716c <memmove>
   4633c:	90c00017 	ldw	r3,0(r18)
   46340:	e009883a 	mov	r4,fp
   46344:	900b883a 	mov	r5,r18
   46348:	1c07883a 	add	r3,r3,r16
   4634c:	90c00015 	stw	r3,0(r18)
   46350:	8027883a 	mov	r19,r16
   46354:	00453580 	call	45358 <_fflush_r>
   46358:	103f6b26 	beq	r2,zero,46108 <__sfvwrite_r+0x200>
   4635c:	003f7f06 	br	4615c <__sfvwrite_r+0x254>
   46360:	400b883a 	mov	r5,r8
   46364:	e009883a 	mov	r4,fp
   46368:	00483700 	call	48370 <_realloc_r>
   4636c:	103f7626 	beq	r2,zero,46148 <__sfvwrite_r+0x240>
   46370:	1023883a 	mov	r17,r2
   46374:	003f5006 	br	460b8 <__sfvwrite_r+0x1b0>
   46378:	00c00044 	movi	r3,1
   4637c:	9d000044 	addi	r20,r19,1
   46380:	d8c00015 	stw	r3,0(sp)
   46384:	003f8206 	br	46190 <__sfvwrite_r+0x288>
   46388:	9080030b 	ldhu	r2,12(r18)
   4638c:	00c00244 	movi	r3,9
   46390:	013fffc4 	movi	r4,-1
   46394:	10801014 	ori	r2,r2,64
   46398:	9080030d 	sth	r2,12(r18)
   4639c:	e0c00015 	stw	r3,0(fp)
   463a0:	003f0606 	br	45fbc <__sfvwrite_r+0xb4>

000463a4 <_fwalk_reent>:
   463a4:	defff704 	addi	sp,sp,-36
   463a8:	dcc00315 	stw	r19,12(sp)
   463ac:	24c0b804 	addi	r19,r4,736
   463b0:	dd800615 	stw	r22,24(sp)
   463b4:	dd400515 	stw	r21,20(sp)
   463b8:	dfc00815 	stw	ra,32(sp)
   463bc:	ddc00715 	stw	r23,28(sp)
   463c0:	dd000415 	stw	r20,16(sp)
   463c4:	dc800215 	stw	r18,8(sp)
   463c8:	dc400115 	stw	r17,4(sp)
   463cc:	dc000015 	stw	r16,0(sp)
   463d0:	202b883a 	mov	r21,r4
   463d4:	282d883a 	mov	r22,r5
   463d8:	00455e00 	call	455e0 <__sfp_lock_acquire>
   463dc:	98002126 	beq	r19,zero,46464 <_fwalk_reent+0xc0>
   463e0:	002f883a 	mov	r23,zero
   463e4:	9c800117 	ldw	r18,4(r19)
   463e8:	9c000217 	ldw	r16,8(r19)
   463ec:	90bfffc4 	addi	r2,r18,-1
   463f0:	10000d16 	blt	r2,zero,46428 <_fwalk_reent+0x84>
   463f4:	0023883a 	mov	r17,zero
   463f8:	053fffc4 	movi	r20,-1
   463fc:	8080030f 	ldh	r2,12(r16)
   46400:	8c400044 	addi	r17,r17,1
   46404:	10000626 	beq	r2,zero,46420 <_fwalk_reent+0x7c>
   46408:	8080038f 	ldh	r2,14(r16)
   4640c:	800b883a 	mov	r5,r16
   46410:	a809883a 	mov	r4,r21
   46414:	15000226 	beq	r2,r20,46420 <_fwalk_reent+0x7c>
   46418:	b03ee83a 	callr	r22
   4641c:	b8aeb03a 	or	r23,r23,r2
   46420:	84001704 	addi	r16,r16,92
   46424:	947ff51e 	bne	r18,r17,463fc <_fwalk_reent+0x58>
   46428:	9cc00017 	ldw	r19,0(r19)
   4642c:	983fed1e 	bne	r19,zero,463e4 <_fwalk_reent+0x40>
   46430:	00455e40 	call	455e4 <__sfp_lock_release>
   46434:	b805883a 	mov	r2,r23
   46438:	dfc00817 	ldw	ra,32(sp)
   4643c:	ddc00717 	ldw	r23,28(sp)
   46440:	dd800617 	ldw	r22,24(sp)
   46444:	dd400517 	ldw	r21,20(sp)
   46448:	dd000417 	ldw	r20,16(sp)
   4644c:	dcc00317 	ldw	r19,12(sp)
   46450:	dc800217 	ldw	r18,8(sp)
   46454:	dc400117 	ldw	r17,4(sp)
   46458:	dc000017 	ldw	r16,0(sp)
   4645c:	dec00904 	addi	sp,sp,36
   46460:	f800283a 	ret
   46464:	002f883a 	mov	r23,zero
   46468:	003ff106 	br	46430 <_fwalk_reent+0x8c>

0004646c <_fwalk>:
   4646c:	defff804 	addi	sp,sp,-32
   46470:	dcc00315 	stw	r19,12(sp)
   46474:	24c0b804 	addi	r19,r4,736
   46478:	dd400515 	stw	r21,20(sp)
   4647c:	dfc00715 	stw	ra,28(sp)
   46480:	dd800615 	stw	r22,24(sp)
   46484:	dd000415 	stw	r20,16(sp)
   46488:	dc800215 	stw	r18,8(sp)
   4648c:	dc400115 	stw	r17,4(sp)
   46490:	dc000015 	stw	r16,0(sp)
   46494:	282b883a 	mov	r21,r5
   46498:	00455e00 	call	455e0 <__sfp_lock_acquire>
   4649c:	98001f26 	beq	r19,zero,4651c <_fwalk+0xb0>
   464a0:	002d883a 	mov	r22,zero
   464a4:	9c800117 	ldw	r18,4(r19)
   464a8:	9c000217 	ldw	r16,8(r19)
   464ac:	90bfffc4 	addi	r2,r18,-1
   464b0:	10000c16 	blt	r2,zero,464e4 <_fwalk+0x78>
   464b4:	0023883a 	mov	r17,zero
   464b8:	053fffc4 	movi	r20,-1
   464bc:	8080030f 	ldh	r2,12(r16)
   464c0:	8c400044 	addi	r17,r17,1
   464c4:	10000526 	beq	r2,zero,464dc <_fwalk+0x70>
   464c8:	8080038f 	ldh	r2,14(r16)
   464cc:	8009883a 	mov	r4,r16
   464d0:	15000226 	beq	r2,r20,464dc <_fwalk+0x70>
   464d4:	a83ee83a 	callr	r21
   464d8:	b0acb03a 	or	r22,r22,r2
   464dc:	84001704 	addi	r16,r16,92
   464e0:	947ff61e 	bne	r18,r17,464bc <_fwalk+0x50>
   464e4:	9cc00017 	ldw	r19,0(r19)
   464e8:	983fee1e 	bne	r19,zero,464a4 <_fwalk+0x38>
   464ec:	00455e40 	call	455e4 <__sfp_lock_release>
   464f0:	b005883a 	mov	r2,r22
   464f4:	dfc00717 	ldw	ra,28(sp)
   464f8:	dd800617 	ldw	r22,24(sp)
   464fc:	dd400517 	ldw	r21,20(sp)
   46500:	dd000417 	ldw	r20,16(sp)
   46504:	dcc00317 	ldw	r19,12(sp)
   46508:	dc800217 	ldw	r18,8(sp)
   4650c:	dc400117 	ldw	r17,4(sp)
   46510:	dc000017 	ldw	r16,0(sp)
   46514:	dec00804 	addi	sp,sp,32
   46518:	f800283a 	ret
   4651c:	002d883a 	mov	r22,zero
   46520:	003ff206 	br	464ec <_fwalk+0x80>

00046524 <iswspace>:
   46524:	00803fc4 	movi	r2,255
   46528:	0007883a 	mov	r3,zero
   4652c:	11000636 	bltu	r2,r4,46548 <iswspace+0x24>
   46530:	00800174 	movhi	r2,5
   46534:	108fb104 	addi	r2,r2,16068
   46538:	10c00017 	ldw	r3,0(r2)
   4653c:	1907883a 	add	r3,r3,r4
   46540:	18800003 	ldbu	r2,0(r3)
   46544:	10c0020c 	andi	r3,r2,8
   46548:	1805883a 	mov	r2,r3
   4654c:	f800283a 	ret

00046550 <__locale_charset>:
   46550:	d0a00417 	ldw	r2,-32752(gp)
   46554:	f800283a 	ret

00046558 <_localeconv_r>:
   46558:	00800174 	movhi	r2,5
   4655c:	10886404 	addi	r2,r2,8592
   46560:	f800283a 	ret

00046564 <localeconv>:
   46564:	00800174 	movhi	r2,5
   46568:	108fb204 	addi	r2,r2,16072
   4656c:	11000017 	ldw	r4,0(r2)
   46570:	00465581 	jmpi	46558 <_localeconv_r>

00046574 <_setlocale_r>:
   46574:	defffc04 	addi	sp,sp,-16
   46578:	00c00174 	movhi	r3,5
   4657c:	18c85f04 	addi	r3,r3,8572
   46580:	dc800215 	stw	r18,8(sp)
   46584:	dc400115 	stw	r17,4(sp)
   46588:	dc000015 	stw	r16,0(sp)
   4658c:	2023883a 	mov	r17,r4
   46590:	2825883a 	mov	r18,r5
   46594:	dfc00315 	stw	ra,12(sp)
   46598:	3021883a 	mov	r16,r6
   4659c:	3009883a 	mov	r4,r6
   465a0:	180b883a 	mov	r5,r3
   465a4:	30000926 	beq	r6,zero,465cc <_setlocale_r+0x58>
   465a8:	0048f0c0 	call	48f0c <strcmp>
   465ac:	8009883a 	mov	r4,r16
   465b0:	01400174 	movhi	r5,5
   465b4:	29479f04 	addi	r5,r5,7804
   465b8:	10000b1e 	bne	r2,zero,465e8 <_setlocale_r+0x74>
   465bc:	8c000d15 	stw	r16,52(r17)
   465c0:	8c800c15 	stw	r18,48(r17)
   465c4:	00c00174 	movhi	r3,5
   465c8:	18c85f04 	addi	r3,r3,8572
   465cc:	1805883a 	mov	r2,r3
   465d0:	dfc00317 	ldw	ra,12(sp)
   465d4:	dc800217 	ldw	r18,8(sp)
   465d8:	dc400117 	ldw	r17,4(sp)
   465dc:	dc000017 	ldw	r16,0(sp)
   465e0:	dec00404 	addi	sp,sp,16
   465e4:	f800283a 	ret
   465e8:	0048f0c0 	call	48f0c <strcmp>
   465ec:	0007883a 	mov	r3,zero
   465f0:	103ff226 	beq	r2,zero,465bc <_setlocale_r+0x48>
   465f4:	003ff506 	br	465cc <_setlocale_r+0x58>

000465f8 <setlocale>:
   465f8:	01800174 	movhi	r6,5
   465fc:	318fb204 	addi	r6,r6,16072
   46600:	2007883a 	mov	r3,r4
   46604:	31000017 	ldw	r4,0(r6)
   46608:	280d883a 	mov	r6,r5
   4660c:	180b883a 	mov	r5,r3
   46610:	00465741 	jmpi	46574 <_setlocale_r>

00046614 <__smakebuf_r>:
   46614:	2880030b 	ldhu	r2,12(r5)
   46618:	deffed04 	addi	sp,sp,-76
   4661c:	dc401015 	stw	r17,64(sp)
   46620:	1080008c 	andi	r2,r2,2
   46624:	dc000f15 	stw	r16,60(sp)
   46628:	dfc01215 	stw	ra,72(sp)
   4662c:	dc801115 	stw	r18,68(sp)
   46630:	2821883a 	mov	r16,r5
   46634:	2023883a 	mov	r17,r4
   46638:	10000b26 	beq	r2,zero,46668 <__smakebuf_r+0x54>
   4663c:	28c010c4 	addi	r3,r5,67
   46640:	00800044 	movi	r2,1
   46644:	28800515 	stw	r2,20(r5)
   46648:	28c00415 	stw	r3,16(r5)
   4664c:	28c00015 	stw	r3,0(r5)
   46650:	dfc01217 	ldw	ra,72(sp)
   46654:	dc801117 	ldw	r18,68(sp)
   46658:	dc401017 	ldw	r17,64(sp)
   4665c:	dc000f17 	ldw	r16,60(sp)
   46660:	dec01304 	addi	sp,sp,76
   46664:	f800283a 	ret
   46668:	2940038f 	ldh	r5,14(r5)
   4666c:	28002116 	blt	r5,zero,466f4 <__smakebuf_r+0xe0>
   46670:	d80d883a 	mov	r6,sp
   46674:	004b7d80 	call	4b7d8 <_fstat_r>
   46678:	10001e16 	blt	r2,zero,466f4 <__smakebuf_r+0xe0>
   4667c:	d8800117 	ldw	r2,4(sp)
   46680:	00e00014 	movui	r3,32768
   46684:	113c000c 	andi	r4,r2,61440
   46688:	20c03126 	beq	r4,r3,46750 <__smakebuf_r+0x13c>
   4668c:	8080030b 	ldhu	r2,12(r16)
   46690:	00c80004 	movi	r3,8192
   46694:	10820014 	ori	r2,r2,2048
   46698:	8080030d 	sth	r2,12(r16)
   4669c:	20c01e26 	beq	r4,r3,46718 <__smakebuf_r+0x104>
   466a0:	04810004 	movi	r18,1024
   466a4:	8809883a 	mov	r4,r17
   466a8:	900b883a 	mov	r5,r18
   466ac:	00467a80 	call	467a8 <_malloc_r>
   466b0:	1009883a 	mov	r4,r2
   466b4:	10003126 	beq	r2,zero,4677c <__smakebuf_r+0x168>
   466b8:	80c0030b 	ldhu	r3,12(r16)
   466bc:	00800134 	movhi	r2,4
   466c0:	1095b504 	addi	r2,r2,22228
   466c4:	88800f15 	stw	r2,60(r17)
   466c8:	18c02014 	ori	r3,r3,128
   466cc:	84800515 	stw	r18,20(r16)
   466d0:	80c0030d 	sth	r3,12(r16)
   466d4:	81000415 	stw	r4,16(r16)
   466d8:	81000015 	stw	r4,0(r16)
   466dc:	dfc01217 	ldw	ra,72(sp)
   466e0:	dc801117 	ldw	r18,68(sp)
   466e4:	dc401017 	ldw	r17,64(sp)
   466e8:	dc000f17 	ldw	r16,60(sp)
   466ec:	dec01304 	addi	sp,sp,76
   466f0:	f800283a 	ret
   466f4:	80c0030b 	ldhu	r3,12(r16)
   466f8:	1880200c 	andi	r2,r3,128
   466fc:	10000426 	beq	r2,zero,46710 <__smakebuf_r+0xfc>
   46700:	04801004 	movi	r18,64
   46704:	18820014 	ori	r2,r3,2048
   46708:	8080030d 	sth	r2,12(r16)
   4670c:	003fe506 	br	466a4 <__smakebuf_r+0x90>
   46710:	04810004 	movi	r18,1024
   46714:	003ffb06 	br	46704 <__smakebuf_r+0xf0>
   46718:	8140038f 	ldh	r5,14(r16)
   4671c:	8809883a 	mov	r4,r17
   46720:	004c4180 	call	4c418 <_isatty_r>
   46724:	103fde26 	beq	r2,zero,466a0 <__smakebuf_r+0x8c>
   46728:	8080030b 	ldhu	r2,12(r16)
   4672c:	80c010c4 	addi	r3,r16,67
   46730:	04810004 	movi	r18,1024
   46734:	10800054 	ori	r2,r2,1
   46738:	8080030d 	sth	r2,12(r16)
   4673c:	00800044 	movi	r2,1
   46740:	80c00415 	stw	r3,16(r16)
   46744:	80800515 	stw	r2,20(r16)
   46748:	80c00015 	stw	r3,0(r16)
   4674c:	003fd506 	br	466a4 <__smakebuf_r+0x90>
   46750:	80c00a17 	ldw	r3,40(r16)
   46754:	00800174 	movhi	r2,5
   46758:	10a37204 	addi	r2,r2,-29240
   4675c:	18bfcb1e 	bne	r3,r2,4668c <__smakebuf_r+0x78>
   46760:	8080030b 	ldhu	r2,12(r16)
   46764:	00c10004 	movi	r3,1024
   46768:	1825883a 	mov	r18,r3
   4676c:	10c4b03a 	or	r2,r2,r3
   46770:	8080030d 	sth	r2,12(r16)
   46774:	80c01315 	stw	r3,76(r16)
   46778:	003fca06 	br	466a4 <__smakebuf_r+0x90>
   4677c:	8100030b 	ldhu	r4,12(r16)
   46780:	2080800c 	andi	r2,r4,512
   46784:	103fb21e 	bne	r2,zero,46650 <__smakebuf_r+0x3c>
   46788:	80c010c4 	addi	r3,r16,67
   4678c:	21000094 	ori	r4,r4,2
   46790:	00800044 	movi	r2,1
   46794:	80800515 	stw	r2,20(r16)
   46798:	8100030d 	sth	r4,12(r16)
   4679c:	80c00415 	stw	r3,16(r16)
   467a0:	80c00015 	stw	r3,0(r16)
   467a4:	003faa06 	br	46650 <__smakebuf_r+0x3c>

000467a8 <_malloc_r>:
   467a8:	defff604 	addi	sp,sp,-40
   467ac:	28c002c4 	addi	r3,r5,11
   467b0:	00800584 	movi	r2,22
   467b4:	dc800215 	stw	r18,8(sp)
   467b8:	dfc00915 	stw	ra,36(sp)
   467bc:	df000815 	stw	fp,32(sp)
   467c0:	ddc00715 	stw	r23,28(sp)
   467c4:	dd800615 	stw	r22,24(sp)
   467c8:	dd400515 	stw	r21,20(sp)
   467cc:	dd000415 	stw	r20,16(sp)
   467d0:	dcc00315 	stw	r19,12(sp)
   467d4:	dc400115 	stw	r17,4(sp)
   467d8:	dc000015 	stw	r16,0(sp)
   467dc:	2025883a 	mov	r18,r4
   467e0:	10c01236 	bltu	r2,r3,4682c <_malloc_r+0x84>
   467e4:	04400404 	movi	r17,16
   467e8:	8940142e 	bgeu	r17,r5,4683c <_malloc_r+0x94>
   467ec:	00800304 	movi	r2,12
   467f0:	0007883a 	mov	r3,zero
   467f4:	90800015 	stw	r2,0(r18)
   467f8:	1805883a 	mov	r2,r3
   467fc:	dfc00917 	ldw	ra,36(sp)
   46800:	df000817 	ldw	fp,32(sp)
   46804:	ddc00717 	ldw	r23,28(sp)
   46808:	dd800617 	ldw	r22,24(sp)
   4680c:	dd400517 	ldw	r21,20(sp)
   46810:	dd000417 	ldw	r20,16(sp)
   46814:	dcc00317 	ldw	r19,12(sp)
   46818:	dc800217 	ldw	r18,8(sp)
   4681c:	dc400117 	ldw	r17,4(sp)
   46820:	dc000017 	ldw	r16,0(sp)
   46824:	dec00a04 	addi	sp,sp,40
   46828:	f800283a 	ret
   4682c:	00bffe04 	movi	r2,-8
   46830:	18a2703a 	and	r17,r3,r2
   46834:	883fed16 	blt	r17,zero,467ec <_malloc_r+0x44>
   46838:	897fec36 	bltu	r17,r5,467ec <_malloc_r+0x44>
   4683c:	9009883a 	mov	r4,r18
   46840:	004f8440 	call	4f844 <__malloc_lock>
   46844:	00807dc4 	movi	r2,503
   46848:	14402b2e 	bgeu	r2,r17,468f8 <_malloc_r+0x150>
   4684c:	8806d27a 	srli	r3,r17,9
   46850:	18003f1e 	bne	r3,zero,46950 <_malloc_r+0x1a8>
   46854:	880cd0fa 	srli	r6,r17,3
   46858:	300490fa 	slli	r2,r6,3
   4685c:	02c00174 	movhi	r11,5
   46860:	5aca2304 	addi	r11,r11,10380
   46864:	12cb883a 	add	r5,r2,r11
   46868:	2c000317 	ldw	r16,12(r5)
   4686c:	580f883a 	mov	r7,r11
   46870:	2c00041e 	bne	r5,r16,46884 <_malloc_r+0xdc>
   46874:	00000a06 	br	468a0 <_malloc_r+0xf8>
   46878:	1800860e 	bge	r3,zero,46a94 <_malloc_r+0x2ec>
   4687c:	84000317 	ldw	r16,12(r16)
   46880:	2c000726 	beq	r5,r16,468a0 <_malloc_r+0xf8>
   46884:	80800117 	ldw	r2,4(r16)
   46888:	00ffff04 	movi	r3,-4
   4688c:	10c8703a 	and	r4,r2,r3
   46890:	2447c83a 	sub	r3,r4,r17
   46894:	008003c4 	movi	r2,15
   46898:	10fff70e 	bge	r2,r3,46878 <_malloc_r+0xd0>
   4689c:	31bfffc4 	addi	r6,r6,-1
   468a0:	32400044 	addi	r9,r6,1
   468a4:	02800174 	movhi	r10,5
   468a8:	528a2504 	addi	r10,r10,10388
   468ac:	54000217 	ldw	r16,8(r10)
   468b0:	8280a026 	beq	r16,r10,46b34 <_malloc_r+0x38c>
   468b4:	80800117 	ldw	r2,4(r16)
   468b8:	00ffff04 	movi	r3,-4
   468bc:	10ca703a 	and	r5,r2,r3
   468c0:	2c4dc83a 	sub	r6,r5,r17
   468c4:	008003c4 	movi	r2,15
   468c8:	11808316 	blt	r2,r6,46ad8 <_malloc_r+0x330>
   468cc:	52800315 	stw	r10,12(r10)
   468d0:	52800215 	stw	r10,8(r10)
   468d4:	30002916 	blt	r6,zero,4697c <_malloc_r+0x1d4>
   468d8:	8147883a 	add	r3,r16,r5
   468dc:	18800117 	ldw	r2,4(r3)
   468e0:	9009883a 	mov	r4,r18
   468e4:	10800054 	ori	r2,r2,1
   468e8:	18800115 	stw	r2,4(r3)
   468ec:	004f8640 	call	4f864 <__malloc_unlock>
   468f0:	80c00204 	addi	r3,r16,8
   468f4:	003fc006 	br	467f8 <_malloc_r+0x50>
   468f8:	02c00174 	movhi	r11,5
   468fc:	5aca2304 	addi	r11,r11,10380
   46900:	8ac5883a 	add	r2,r17,r11
   46904:	14000317 	ldw	r16,12(r2)
   46908:	580f883a 	mov	r7,r11
   4690c:	8806d0fa 	srli	r3,r17,3
   46910:	14006c26 	beq	r2,r16,46ac4 <_malloc_r+0x31c>
   46914:	80c00117 	ldw	r3,4(r16)
   46918:	00bfff04 	movi	r2,-4
   4691c:	81800317 	ldw	r6,12(r16)
   46920:	1886703a 	and	r3,r3,r2
   46924:	80c7883a 	add	r3,r16,r3
   46928:	18800117 	ldw	r2,4(r3)
   4692c:	81400217 	ldw	r5,8(r16)
   46930:	9009883a 	mov	r4,r18
   46934:	10800054 	ori	r2,r2,1
   46938:	18800115 	stw	r2,4(r3)
   4693c:	31400215 	stw	r5,8(r6)
   46940:	29800315 	stw	r6,12(r5)
   46944:	004f8640 	call	4f864 <__malloc_unlock>
   46948:	80c00204 	addi	r3,r16,8
   4694c:	003faa06 	br	467f8 <_malloc_r+0x50>
   46950:	00800104 	movi	r2,4
   46954:	10c0052e 	bgeu	r2,r3,4696c <_malloc_r+0x1c4>
   46958:	00800504 	movi	r2,20
   4695c:	10c07836 	bltu	r2,r3,46b40 <_malloc_r+0x398>
   46960:	198016c4 	addi	r6,r3,91
   46964:	300490fa 	slli	r2,r6,3
   46968:	003fbc06 	br	4685c <_malloc_r+0xb4>
   4696c:	8804d1ba 	srli	r2,r17,6
   46970:	11800e04 	addi	r6,r2,56
   46974:	300490fa 	slli	r2,r6,3
   46978:	003fb806 	br	4685c <_malloc_r+0xb4>
   4697c:	00807fc4 	movi	r2,511
   46980:	1140bb36 	bltu	r2,r5,46c70 <_malloc_r+0x4c8>
   46984:	2806d0fa 	srli	r3,r5,3
   46988:	573ffe04 	addi	fp,r10,-8
   4698c:	00800044 	movi	r2,1
   46990:	180890fa 	slli	r4,r3,3
   46994:	1807d0ba 	srai	r3,r3,2
   46998:	e1c00117 	ldw	r7,4(fp)
   4699c:	5909883a 	add	r4,r11,r4
   469a0:	21400217 	ldw	r5,8(r4)
   469a4:	10c4983a 	sll	r2,r2,r3
   469a8:	81000315 	stw	r4,12(r16)
   469ac:	81400215 	stw	r5,8(r16)
   469b0:	388eb03a 	or	r7,r7,r2
   469b4:	2c000315 	stw	r16,12(r5)
   469b8:	24000215 	stw	r16,8(r4)
   469bc:	e1c00115 	stw	r7,4(fp)
   469c0:	4807883a 	mov	r3,r9
   469c4:	4800cd16 	blt	r9,zero,46cfc <_malloc_r+0x554>
   469c8:	1807d0ba 	srai	r3,r3,2
   469cc:	00800044 	movi	r2,1
   469d0:	10c8983a 	sll	r4,r2,r3
   469d4:	39004436 	bltu	r7,r4,46ae8 <_malloc_r+0x340>
   469d8:	21c4703a 	and	r2,r4,r7
   469dc:	10000a1e 	bne	r2,zero,46a08 <_malloc_r+0x260>
   469e0:	2109883a 	add	r4,r4,r4
   469e4:	00bfff04 	movi	r2,-4
   469e8:	4884703a 	and	r2,r9,r2
   469ec:	3906703a 	and	r3,r7,r4
   469f0:	12400104 	addi	r9,r2,4
   469f4:	1800041e 	bne	r3,zero,46a08 <_malloc_r+0x260>
   469f8:	2109883a 	add	r4,r4,r4
   469fc:	3904703a 	and	r2,r7,r4
   46a00:	4a400104 	addi	r9,r9,4
   46a04:	103ffc26 	beq	r2,zero,469f8 <_malloc_r+0x250>
   46a08:	480490fa 	slli	r2,r9,3
   46a0c:	4819883a 	mov	r12,r9
   46a10:	023fff04 	movi	r8,-4
   46a14:	589b883a 	add	r13,r11,r2
   46a18:	6807883a 	mov	r3,r13
   46a1c:	014003c4 	movi	r5,15
   46a20:	1c000317 	ldw	r16,12(r3)
   46a24:	1c00041e 	bne	r3,r16,46a38 <_malloc_r+0x290>
   46a28:	0000a706 	br	46cc8 <_malloc_r+0x520>
   46a2c:	3000ab0e 	bge	r6,zero,46cdc <_malloc_r+0x534>
   46a30:	84000317 	ldw	r16,12(r16)
   46a34:	1c00a426 	beq	r3,r16,46cc8 <_malloc_r+0x520>
   46a38:	80800117 	ldw	r2,4(r16)
   46a3c:	1204703a 	and	r2,r2,r8
   46a40:	144dc83a 	sub	r6,r2,r17
   46a44:	29bff90e 	bge	r5,r6,46a2c <_malloc_r+0x284>
   46a48:	81000317 	ldw	r4,12(r16)
   46a4c:	80c00217 	ldw	r3,8(r16)
   46a50:	89400054 	ori	r5,r17,1
   46a54:	8445883a 	add	r2,r16,r17
   46a58:	20c00215 	stw	r3,8(r4)
   46a5c:	19000315 	stw	r4,12(r3)
   46a60:	81400115 	stw	r5,4(r16)
   46a64:	1187883a 	add	r3,r2,r6
   46a68:	31000054 	ori	r4,r6,1
   46a6c:	50800315 	stw	r2,12(r10)
   46a70:	50800215 	stw	r2,8(r10)
   46a74:	19800015 	stw	r6,0(r3)
   46a78:	11000115 	stw	r4,4(r2)
   46a7c:	12800215 	stw	r10,8(r2)
   46a80:	12800315 	stw	r10,12(r2)
   46a84:	9009883a 	mov	r4,r18
   46a88:	004f8640 	call	4f864 <__malloc_unlock>
   46a8c:	80c00204 	addi	r3,r16,8
   46a90:	003f5906 	br	467f8 <_malloc_r+0x50>
   46a94:	8109883a 	add	r4,r16,r4
   46a98:	20800117 	ldw	r2,4(r4)
   46a9c:	80c00217 	ldw	r3,8(r16)
   46aa0:	81400317 	ldw	r5,12(r16)
   46aa4:	10800054 	ori	r2,r2,1
   46aa8:	20800115 	stw	r2,4(r4)
   46aac:	28c00215 	stw	r3,8(r5)
   46ab0:	19400315 	stw	r5,12(r3)
   46ab4:	9009883a 	mov	r4,r18
   46ab8:	004f8640 	call	4f864 <__malloc_unlock>
   46abc:	80c00204 	addi	r3,r16,8
   46ac0:	003f4d06 	br	467f8 <_malloc_r+0x50>
   46ac4:	80800204 	addi	r2,r16,8
   46ac8:	14000317 	ldw	r16,12(r2)
   46acc:	143f911e 	bne	r2,r16,46914 <_malloc_r+0x16c>
   46ad0:	1a400084 	addi	r9,r3,2
   46ad4:	003f7306 	br	468a4 <_malloc_r+0xfc>
   46ad8:	88c00054 	ori	r3,r17,1
   46adc:	8445883a 	add	r2,r16,r17
   46ae0:	80c00115 	stw	r3,4(r16)
   46ae4:	003fdf06 	br	46a64 <_malloc_r+0x2bc>
   46ae8:	e4000217 	ldw	r16,8(fp)
   46aec:	00bfff04 	movi	r2,-4
   46af0:	80c00117 	ldw	r3,4(r16)
   46af4:	802d883a 	mov	r22,r16
   46af8:	18aa703a 	and	r21,r3,r2
   46afc:	ac401636 	bltu	r21,r17,46b58 <_malloc_r+0x3b0>
   46b00:	ac49c83a 	sub	r4,r21,r17
   46b04:	008003c4 	movi	r2,15
   46b08:	1100130e 	bge	r2,r4,46b58 <_malloc_r+0x3b0>
   46b0c:	88800054 	ori	r2,r17,1
   46b10:	8447883a 	add	r3,r16,r17
   46b14:	80800115 	stw	r2,4(r16)
   46b18:	20800054 	ori	r2,r4,1
   46b1c:	18800115 	stw	r2,4(r3)
   46b20:	e0c00215 	stw	r3,8(fp)
   46b24:	9009883a 	mov	r4,r18
   46b28:	004f8640 	call	4f864 <__malloc_unlock>
   46b2c:	80c00204 	addi	r3,r16,8
   46b30:	003f3106 	br	467f8 <_malloc_r+0x50>
   46b34:	39c00117 	ldw	r7,4(r7)
   46b38:	573ffe04 	addi	fp,r10,-8
   46b3c:	003fa006 	br	469c0 <_malloc_r+0x218>
   46b40:	00801504 	movi	r2,84
   46b44:	10c06736 	bltu	r2,r3,46ce4 <_malloc_r+0x53c>
   46b48:	8804d33a 	srli	r2,r17,12
   46b4c:	11801b84 	addi	r6,r2,110
   46b50:	300490fa 	slli	r2,r6,3
   46b54:	003f4106 	br	4685c <_malloc_r+0xb4>
   46b58:	d0a6b717 	ldw	r2,-25892(gp)
   46b5c:	d0e00617 	ldw	r3,-32744(gp)
   46b60:	053fffc4 	movi	r20,-1
   46b64:	10800404 	addi	r2,r2,16
   46b68:	88a7883a 	add	r19,r17,r2
   46b6c:	1d000326 	beq	r3,r20,46b7c <_malloc_r+0x3d4>
   46b70:	98c3ffc4 	addi	r3,r19,4095
   46b74:	00bc0004 	movi	r2,-4096
   46b78:	18a6703a 	and	r19,r3,r2
   46b7c:	9009883a 	mov	r4,r18
   46b80:	980b883a 	mov	r5,r19
   46b84:	0048bb40 	call	48bb4 <_sbrk_r>
   46b88:	1009883a 	mov	r4,r2
   46b8c:	15000426 	beq	r2,r20,46ba0 <_malloc_r+0x3f8>
   46b90:	854b883a 	add	r5,r16,r21
   46b94:	1029883a 	mov	r20,r2
   46b98:	11405a2e 	bgeu	r2,r5,46d04 <_malloc_r+0x55c>
   46b9c:	87000c26 	beq	r16,fp,46bd0 <_malloc_r+0x428>
   46ba0:	e4000217 	ldw	r16,8(fp)
   46ba4:	80c00117 	ldw	r3,4(r16)
   46ba8:	00bfff04 	movi	r2,-4
   46bac:	1884703a 	and	r2,r3,r2
   46bb0:	14400336 	bltu	r2,r17,46bc0 <_malloc_r+0x418>
   46bb4:	1449c83a 	sub	r4,r2,r17
   46bb8:	008003c4 	movi	r2,15
   46bbc:	113fd316 	blt	r2,r4,46b0c <_malloc_r+0x364>
   46bc0:	9009883a 	mov	r4,r18
   46bc4:	004f8640 	call	4f864 <__malloc_unlock>
   46bc8:	0007883a 	mov	r3,zero
   46bcc:	003f0a06 	br	467f8 <_malloc_r+0x50>
   46bd0:	05c00174 	movhi	r23,5
   46bd4:	bdd67204 	addi	r23,r23,22984
   46bd8:	b8800017 	ldw	r2,0(r23)
   46bdc:	988d883a 	add	r6,r19,r2
   46be0:	b9800015 	stw	r6,0(r23)
   46be4:	d0e00617 	ldw	r3,-32744(gp)
   46be8:	00bfffc4 	movi	r2,-1
   46bec:	18808e26 	beq	r3,r2,46e28 <_malloc_r+0x680>
   46bf0:	2145c83a 	sub	r2,r4,r5
   46bf4:	3085883a 	add	r2,r6,r2
   46bf8:	b8800015 	stw	r2,0(r23)
   46bfc:	20c001cc 	andi	r3,r4,7
   46c00:	18005f1e 	bne	r3,zero,46d80 <_malloc_r+0x5d8>
   46c04:	000b883a 	mov	r5,zero
   46c08:	a4c5883a 	add	r2,r20,r19
   46c0c:	1083ffcc 	andi	r2,r2,4095
   46c10:	00c40004 	movi	r3,4096
   46c14:	1887c83a 	sub	r3,r3,r2
   46c18:	28e7883a 	add	r19,r5,r3
   46c1c:	9009883a 	mov	r4,r18
   46c20:	980b883a 	mov	r5,r19
   46c24:	0048bb40 	call	48bb4 <_sbrk_r>
   46c28:	1007883a 	mov	r3,r2
   46c2c:	00bfffc4 	movi	r2,-1
   46c30:	18807a26 	beq	r3,r2,46e1c <_malloc_r+0x674>
   46c34:	1d05c83a 	sub	r2,r3,r20
   46c38:	9885883a 	add	r2,r19,r2
   46c3c:	10c00054 	ori	r3,r2,1
   46c40:	b8800017 	ldw	r2,0(r23)
   46c44:	a021883a 	mov	r16,r20
   46c48:	a0c00115 	stw	r3,4(r20)
   46c4c:	9885883a 	add	r2,r19,r2
   46c50:	b8800015 	stw	r2,0(r23)
   46c54:	e5000215 	stw	r20,8(fp)
   46c58:	b7003626 	beq	r22,fp,46d34 <_malloc_r+0x58c>
   46c5c:	018003c4 	movi	r6,15
   46c60:	35404b36 	bltu	r6,r21,46d90 <_malloc_r+0x5e8>
   46c64:	00800044 	movi	r2,1
   46c68:	a0800115 	stw	r2,4(r20)
   46c6c:	003fcd06 	br	46ba4 <_malloc_r+0x3fc>
   46c70:	2808d27a 	srli	r4,r5,9
   46c74:	2000371e 	bne	r4,zero,46d54 <_malloc_r+0x5ac>
   46c78:	2808d0fa 	srli	r4,r5,3
   46c7c:	200690fa 	slli	r3,r4,3
   46c80:	1ad1883a 	add	r8,r3,r11
   46c84:	41800217 	ldw	r6,8(r8)
   46c88:	41805b26 	beq	r8,r6,46df8 <_malloc_r+0x650>
   46c8c:	30800117 	ldw	r2,4(r6)
   46c90:	00ffff04 	movi	r3,-4
   46c94:	10c4703a 	and	r2,r2,r3
   46c98:	2880022e 	bgeu	r5,r2,46ca4 <_malloc_r+0x4fc>
   46c9c:	31800217 	ldw	r6,8(r6)
   46ca0:	41bffa1e 	bne	r8,r6,46c8c <_malloc_r+0x4e4>
   46ca4:	32000317 	ldw	r8,12(r6)
   46ca8:	39c00117 	ldw	r7,4(r7)
   46cac:	82000315 	stw	r8,12(r16)
   46cb0:	81800215 	stw	r6,8(r16)
   46cb4:	07000174 	movhi	fp,5
   46cb8:	e70a2304 	addi	fp,fp,10380
   46cbc:	34000315 	stw	r16,12(r6)
   46cc0:	44000215 	stw	r16,8(r8)
   46cc4:	003f3e06 	br	469c0 <_malloc_r+0x218>
   46cc8:	63000044 	addi	r12,r12,1
   46ccc:	608000cc 	andi	r2,r12,3
   46cd0:	10005d26 	beq	r2,zero,46e48 <_malloc_r+0x6a0>
   46cd4:	18c00204 	addi	r3,r3,8
   46cd8:	003f5106 	br	46a20 <_malloc_r+0x278>
   46cdc:	8089883a 	add	r4,r16,r2
   46ce0:	003f6d06 	br	46a98 <_malloc_r+0x2f0>
   46ce4:	00805504 	movi	r2,340
   46ce8:	10c02036 	bltu	r2,r3,46d6c <_malloc_r+0x5c4>
   46cec:	8804d3fa 	srli	r2,r17,15
   46cf0:	11801dc4 	addi	r6,r2,119
   46cf4:	300490fa 	slli	r2,r6,3
   46cf8:	003ed806 	br	4685c <_malloc_r+0xb4>
   46cfc:	48c000c4 	addi	r3,r9,3
   46d00:	003f3106 	br	469c8 <_malloc_r+0x220>
   46d04:	05c00174 	movhi	r23,5
   46d08:	bdd67204 	addi	r23,r23,22984
   46d0c:	b8800017 	ldw	r2,0(r23)
   46d10:	988d883a 	add	r6,r19,r2
   46d14:	b9800015 	stw	r6,0(r23)
   46d18:	293fb21e 	bne	r5,r4,46be4 <_malloc_r+0x43c>
   46d1c:	2083ffcc 	andi	r2,r4,4095
   46d20:	103fb01e 	bne	r2,zero,46be4 <_malloc_r+0x43c>
   46d24:	e4000217 	ldw	r16,8(fp)
   46d28:	9d45883a 	add	r2,r19,r21
   46d2c:	10800054 	ori	r2,r2,1
   46d30:	80800115 	stw	r2,4(r16)
   46d34:	b8c00017 	ldw	r3,0(r23)
   46d38:	d0a6b817 	ldw	r2,-25888(gp)
   46d3c:	10c0012e 	bgeu	r2,r3,46d44 <_malloc_r+0x59c>
   46d40:	d0e6b815 	stw	r3,-25888(gp)
   46d44:	d0a6b917 	ldw	r2,-25884(gp)
   46d48:	10ff962e 	bgeu	r2,r3,46ba4 <_malloc_r+0x3fc>
   46d4c:	d0e6b915 	stw	r3,-25884(gp)
   46d50:	003f9406 	br	46ba4 <_malloc_r+0x3fc>
   46d54:	00800104 	movi	r2,4
   46d58:	11001e36 	bltu	r2,r4,46dd4 <_malloc_r+0x62c>
   46d5c:	2804d1ba 	srli	r2,r5,6
   46d60:	11000e04 	addi	r4,r2,56
   46d64:	200690fa 	slli	r3,r4,3
   46d68:	003fc506 	br	46c80 <_malloc_r+0x4d8>
   46d6c:	00815504 	movi	r2,1364
   46d70:	10c01d2e 	bgeu	r2,r3,46de8 <_malloc_r+0x640>
   46d74:	01801f84 	movi	r6,126
   46d78:	0080fc04 	movi	r2,1008
   46d7c:	003eb706 	br	4685c <_malloc_r+0xb4>
   46d80:	00800204 	movi	r2,8
   46d84:	10cbc83a 	sub	r5,r2,r3
   46d88:	2169883a 	add	r20,r4,r5
   46d8c:	003f9e06 	br	46c08 <_malloc_r+0x460>
   46d90:	00bffe04 	movi	r2,-8
   46d94:	a93ffd04 	addi	r4,r21,-12
   46d98:	2088703a 	and	r4,r4,r2
   46d9c:	b10b883a 	add	r5,r22,r4
   46da0:	00c00144 	movi	r3,5
   46da4:	28c00215 	stw	r3,8(r5)
   46da8:	28c00115 	stw	r3,4(r5)
   46dac:	b0800117 	ldw	r2,4(r22)
   46db0:	1080004c 	andi	r2,r2,1
   46db4:	2084b03a 	or	r2,r4,r2
   46db8:	b0800115 	stw	r2,4(r22)
   46dbc:	313fdd2e 	bgeu	r6,r4,46d34 <_malloc_r+0x58c>
   46dc0:	b1400204 	addi	r5,r22,8
   46dc4:	9009883a 	mov	r4,r18
   46dc8:	0045bf40 	call	45bf4 <_free_r>
   46dcc:	e4000217 	ldw	r16,8(fp)
   46dd0:	003fd806 	br	46d34 <_malloc_r+0x58c>
   46dd4:	00800504 	movi	r2,20
   46dd8:	11001536 	bltu	r2,r4,46e30 <_malloc_r+0x688>
   46ddc:	210016c4 	addi	r4,r4,91
   46de0:	200690fa 	slli	r3,r4,3
   46de4:	003fa606 	br	46c80 <_malloc_r+0x4d8>
   46de8:	8804d4ba 	srli	r2,r17,18
   46dec:	11801f04 	addi	r6,r2,124
   46df0:	300490fa 	slli	r2,r6,3
   46df4:	003e9906 	br	4685c <_malloc_r+0xb4>
   46df8:	2009d0ba 	srai	r4,r4,2
   46dfc:	01400174 	movhi	r5,5
   46e00:	294a2304 	addi	r5,r5,10380
   46e04:	00c00044 	movi	r3,1
   46e08:	28800117 	ldw	r2,4(r5)
   46e0c:	1906983a 	sll	r3,r3,r4
   46e10:	10c4b03a 	or	r2,r2,r3
   46e14:	28800115 	stw	r2,4(r5)
   46e18:	003fa306 	br	46ca8 <_malloc_r+0x500>
   46e1c:	0027883a 	mov	r19,zero
   46e20:	00c00044 	movi	r3,1
   46e24:	003f8606 	br	46c40 <_malloc_r+0x498>
   46e28:	d1200615 	stw	r4,-32744(gp)
   46e2c:	003f7306 	br	46bfc <_malloc_r+0x454>
   46e30:	00801504 	movi	r2,84
   46e34:	11001936 	bltu	r2,r4,46e9c <_malloc_r+0x6f4>
   46e38:	2804d33a 	srli	r2,r5,12
   46e3c:	11001b84 	addi	r4,r2,110
   46e40:	200690fa 	slli	r3,r4,3
   46e44:	003f8e06 	br	46c80 <_malloc_r+0x4d8>
   46e48:	480b883a 	mov	r5,r9
   46e4c:	6807883a 	mov	r3,r13
   46e50:	288000cc 	andi	r2,r5,3
   46e54:	18fffe04 	addi	r3,r3,-8
   46e58:	297fffc4 	addi	r5,r5,-1
   46e5c:	10001526 	beq	r2,zero,46eb4 <_malloc_r+0x70c>
   46e60:	18800217 	ldw	r2,8(r3)
   46e64:	10fffa26 	beq	r2,r3,46e50 <_malloc_r+0x6a8>
   46e68:	2109883a 	add	r4,r4,r4
   46e6c:	393f1e36 	bltu	r7,r4,46ae8 <_malloc_r+0x340>
   46e70:	203f1d26 	beq	r4,zero,46ae8 <_malloc_r+0x340>
   46e74:	21c4703a 	and	r2,r4,r7
   46e78:	10000226 	beq	r2,zero,46e84 <_malloc_r+0x6dc>
   46e7c:	6013883a 	mov	r9,r12
   46e80:	003ee106 	br	46a08 <_malloc_r+0x260>
   46e84:	2109883a 	add	r4,r4,r4
   46e88:	3904703a 	and	r2,r7,r4
   46e8c:	63000104 	addi	r12,r12,4
   46e90:	103ffc26 	beq	r2,zero,46e84 <_malloc_r+0x6dc>
   46e94:	6013883a 	mov	r9,r12
   46e98:	003edb06 	br	46a08 <_malloc_r+0x260>
   46e9c:	00805504 	movi	r2,340
   46ea0:	11000836 	bltu	r2,r4,46ec4 <_malloc_r+0x71c>
   46ea4:	2804d3fa 	srli	r2,r5,15
   46ea8:	11001dc4 	addi	r4,r2,119
   46eac:	200690fa 	slli	r3,r4,3
   46eb0:	003f7306 	br	46c80 <_malloc_r+0x4d8>
   46eb4:	0104303a 	nor	r2,zero,r4
   46eb8:	388e703a 	and	r7,r7,r2
   46ebc:	e1c00115 	stw	r7,4(fp)
   46ec0:	003fe906 	br	46e68 <_malloc_r+0x6c0>
   46ec4:	00815504 	movi	r2,1364
   46ec8:	1100032e 	bgeu	r2,r4,46ed8 <_malloc_r+0x730>
   46ecc:	01001f84 	movi	r4,126
   46ed0:	00c0fc04 	movi	r3,1008
   46ed4:	003f6a06 	br	46c80 <_malloc_r+0x4d8>
   46ed8:	2804d4ba 	srli	r2,r5,18
   46edc:	11001f04 	addi	r4,r2,124
   46ee0:	200690fa 	slli	r3,r4,3
   46ee4:	003f6606 	br	46c80 <_malloc_r+0x4d8>

00046ee8 <_mbrtowc_r>:
   46ee8:	defffc04 	addi	sp,sp,-16
   46eec:	dc400215 	stw	r17,8(sp)
   46ef0:	dc000115 	stw	r16,4(sp)
   46ef4:	dfc00315 	stw	ra,12(sp)
   46ef8:	dc000417 	ldw	r16,16(sp)
   46efc:	2023883a 	mov	r17,r4
   46f00:	30000f26 	beq	r6,zero,46f40 <_mbrtowc_r+0x58>
   46f04:	dc000015 	stw	r16,0(sp)
   46f08:	0046fa80 	call	46fa8 <_mbtowc_r>
   46f0c:	1007883a 	mov	r3,r2
   46f10:	00bfffc4 	movi	r2,-1
   46f14:	1809883a 	mov	r4,r3
   46f18:	1880111e 	bne	r3,r2,46f60 <_mbrtowc_r+0x78>
   46f1c:	80000015 	stw	zero,0(r16)
   46f20:	00802284 	movi	r2,138
   46f24:	88800015 	stw	r2,0(r17)
   46f28:	2005883a 	mov	r2,r4
   46f2c:	dfc00317 	ldw	ra,12(sp)
   46f30:	dc400217 	ldw	r17,8(sp)
   46f34:	dc000117 	ldw	r16,4(sp)
   46f38:	dec00404 	addi	sp,sp,16
   46f3c:	f800283a 	ret
   46f40:	000b883a 	mov	r5,zero
   46f44:	01800174 	movhi	r6,5
   46f48:	31879f04 	addi	r6,r6,7804
   46f4c:	01c00044 	movi	r7,1
   46f50:	dc000015 	stw	r16,0(sp)
   46f54:	0046fa80 	call	46fa8 <_mbtowc_r>
   46f58:	1007883a 	mov	r3,r2
   46f5c:	003fec06 	br	46f10 <_mbrtowc_r+0x28>
   46f60:	1809883a 	mov	r4,r3
   46f64:	003ff006 	br	46f28 <_mbrtowc_r+0x40>

00046f68 <mbrtowc>:
   46f68:	00800174 	movhi	r2,5
   46f6c:	108fb204 	addi	r2,r2,16072
   46f70:	2017883a 	mov	r11,r4
   46f74:	11000017 	ldw	r4,0(r2)
   46f78:	defffe04 	addi	sp,sp,-8
   46f7c:	3013883a 	mov	r9,r6
   46f80:	2805883a 	mov	r2,r5
   46f84:	d9c00015 	stw	r7,0(sp)
   46f88:	580b883a 	mov	r5,r11
   46f8c:	100d883a 	mov	r6,r2
   46f90:	480f883a 	mov	r7,r9
   46f94:	dfc00115 	stw	ra,4(sp)
   46f98:	0046ee80 	call	46ee8 <_mbrtowc_r>
   46f9c:	dfc00117 	ldw	ra,4(sp)
   46fa0:	dec00204 	addi	sp,sp,8
   46fa4:	f800283a 	ret

00046fa8 <_mbtowc_r>:
   46fa8:	deffff04 	addi	sp,sp,-4
   46fac:	0005883a 	mov	r2,zero
   46fb0:	28000326 	beq	r5,zero,46fc0 <_mbtowc_r+0x18>
   46fb4:	3000041e 	bne	r6,zero,46fc8 <_mbtowc_r+0x20>
   46fb8:	dec00104 	addi	sp,sp,4
   46fbc:	f800283a 	ret
   46fc0:	d80b883a 	mov	r5,sp
   46fc4:	303ffc26 	beq	r6,zero,46fb8 <_mbtowc_r+0x10>
   46fc8:	00bfff84 	movi	r2,-2
   46fcc:	383ffa26 	beq	r7,zero,46fb8 <_mbtowc_r+0x10>
   46fd0:	30800003 	ldbu	r2,0(r6)
   46fd4:	28800015 	stw	r2,0(r5)
   46fd8:	30c00003 	ldbu	r3,0(r6)
   46fdc:	1804c03a 	cmpne	r2,r3,zero
   46fe0:	dec00104 	addi	sp,sp,4
   46fe4:	f800283a 	ret

00046fe8 <memchr>:
   46fe8:	008000c4 	movi	r2,3
   46fec:	29403fcc 	andi	r5,r5,255
   46ff0:	2007883a 	mov	r3,r4
   46ff4:	1180022e 	bgeu	r2,r6,47000 <memchr+0x18>
   46ff8:	2084703a 	and	r2,r4,r2
   46ffc:	10000b26 	beq	r2,zero,4702c <memchr+0x44>
   47000:	313fffc4 	addi	r4,r6,-1
   47004:	3000051e 	bne	r6,zero,4701c <memchr+0x34>
   47008:	00002c06 	br	470bc <memchr+0xd4>
   4700c:	213fffc4 	addi	r4,r4,-1
   47010:	00bfffc4 	movi	r2,-1
   47014:	18c00044 	addi	r3,r3,1
   47018:	20802826 	beq	r4,r2,470bc <memchr+0xd4>
   4701c:	18800003 	ldbu	r2,0(r3)
   47020:	28bffa1e 	bne	r5,r2,4700c <memchr+0x24>
   47024:	1805883a 	mov	r2,r3
   47028:	f800283a 	ret
   4702c:	0011883a 	mov	r8,zero
   47030:	0007883a 	mov	r3,zero
   47034:	01c00104 	movi	r7,4
   47038:	4004923a 	slli	r2,r8,8
   4703c:	18c00044 	addi	r3,r3,1
   47040:	1151883a 	add	r8,r2,r5
   47044:	19fffc1e 	bne	r3,r7,47038 <memchr+0x50>
   47048:	02bfbff4 	movhi	r10,65279
   4704c:	52bfbfc4 	addi	r10,r10,-257
   47050:	02602074 	movhi	r9,32897
   47054:	4a602004 	addi	r9,r9,-32640
   47058:	02c000c4 	movi	r11,3
   4705c:	20800017 	ldw	r2,0(r4)
   47060:	31bfff04 	addi	r6,r6,-4
   47064:	200f883a 	mov	r7,r4
   47068:	1204f03a 	xor	r2,r2,r8
   4706c:	1287883a 	add	r3,r2,r10
   47070:	1a46703a 	and	r3,r3,r9
   47074:	0084303a 	nor	r2,zero,r2
   47078:	10c4703a 	and	r2,r2,r3
   4707c:	10000b26 	beq	r2,zero,470ac <memchr+0xc4>
   47080:	20800003 	ldbu	r2,0(r4)
   47084:	28800f26 	beq	r5,r2,470c4 <memchr+0xdc>
   47088:	20800043 	ldbu	r2,1(r4)
   4708c:	21c00044 	addi	r7,r4,1
   47090:	28800c26 	beq	r5,r2,470c4 <memchr+0xdc>
   47094:	20800083 	ldbu	r2,2(r4)
   47098:	21c00084 	addi	r7,r4,2
   4709c:	28800926 	beq	r5,r2,470c4 <memchr+0xdc>
   470a0:	208000c3 	ldbu	r2,3(r4)
   470a4:	21c000c4 	addi	r7,r4,3
   470a8:	28800626 	beq	r5,r2,470c4 <memchr+0xdc>
   470ac:	21000104 	addi	r4,r4,4
   470b0:	59bfea36 	bltu	r11,r6,4705c <memchr+0x74>
   470b4:	2007883a 	mov	r3,r4
   470b8:	003fd106 	br	47000 <memchr+0x18>
   470bc:	0005883a 	mov	r2,zero
   470c0:	f800283a 	ret
   470c4:	3805883a 	mov	r2,r7
   470c8:	f800283a 	ret

000470cc <memcpy>:
   470cc:	01c003c4 	movi	r7,15
   470d0:	2007883a 	mov	r3,r4
   470d4:	3980032e 	bgeu	r7,r6,470e4 <memcpy+0x18>
   470d8:	2904b03a 	or	r2,r5,r4
   470dc:	108000cc 	andi	r2,r2,3
   470e0:	10000926 	beq	r2,zero,47108 <memcpy+0x3c>
   470e4:	30000626 	beq	r6,zero,47100 <memcpy+0x34>
   470e8:	30cd883a 	add	r6,r6,r3
   470ec:	28800003 	ldbu	r2,0(r5)
   470f0:	29400044 	addi	r5,r5,1
   470f4:	18800005 	stb	r2,0(r3)
   470f8:	18c00044 	addi	r3,r3,1
   470fc:	30fffb1e 	bne	r6,r3,470ec <memcpy+0x20>
   47100:	2005883a 	mov	r2,r4
   47104:	f800283a 	ret
   47108:	3811883a 	mov	r8,r7
   4710c:	200f883a 	mov	r7,r4
   47110:	28c00017 	ldw	r3,0(r5)
   47114:	31bffc04 	addi	r6,r6,-16
   47118:	38c00015 	stw	r3,0(r7)
   4711c:	28800117 	ldw	r2,4(r5)
   47120:	38800115 	stw	r2,4(r7)
   47124:	28c00217 	ldw	r3,8(r5)
   47128:	38c00215 	stw	r3,8(r7)
   4712c:	28800317 	ldw	r2,12(r5)
   47130:	29400404 	addi	r5,r5,16
   47134:	38800315 	stw	r2,12(r7)
   47138:	39c00404 	addi	r7,r7,16
   4713c:	41bff436 	bltu	r8,r6,47110 <memcpy+0x44>
   47140:	008000c4 	movi	r2,3
   47144:	1180072e 	bgeu	r2,r6,47164 <memcpy+0x98>
   47148:	1007883a 	mov	r3,r2
   4714c:	28800017 	ldw	r2,0(r5)
   47150:	31bfff04 	addi	r6,r6,-4
   47154:	29400104 	addi	r5,r5,4
   47158:	38800015 	stw	r2,0(r7)
   4715c:	39c00104 	addi	r7,r7,4
   47160:	19bffa36 	bltu	r3,r6,4714c <memcpy+0x80>
   47164:	3807883a 	mov	r3,r7
   47168:	003fde06 	br	470e4 <memcpy+0x18>

0004716c <memmove>:
   4716c:	2807883a 	mov	r3,r5
   47170:	2011883a 	mov	r8,r4
   47174:	29000c2e 	bgeu	r5,r4,471a8 <memmove+0x3c>
   47178:	298f883a 	add	r7,r5,r6
   4717c:	21c00a2e 	bgeu	r4,r7,471a8 <memmove+0x3c>
   47180:	30000726 	beq	r6,zero,471a0 <memmove+0x34>
   47184:	2187883a 	add	r3,r4,r6
   47188:	198dc83a 	sub	r6,r3,r6
   4718c:	39ffffc4 	addi	r7,r7,-1
   47190:	38800003 	ldbu	r2,0(r7)
   47194:	18ffffc4 	addi	r3,r3,-1
   47198:	18800005 	stb	r2,0(r3)
   4719c:	19bffb1e 	bne	r3,r6,4718c <memmove+0x20>
   471a0:	2005883a 	mov	r2,r4
   471a4:	f800283a 	ret
   471a8:	01c003c4 	movi	r7,15
   471ac:	39800a36 	bltu	r7,r6,471d8 <memmove+0x6c>
   471b0:	303ffb26 	beq	r6,zero,471a0 <memmove+0x34>
   471b4:	400f883a 	mov	r7,r8
   471b8:	320d883a 	add	r6,r6,r8
   471bc:	28800003 	ldbu	r2,0(r5)
   471c0:	29400044 	addi	r5,r5,1
   471c4:	38800005 	stb	r2,0(r7)
   471c8:	39c00044 	addi	r7,r7,1
   471cc:	39bffb1e 	bne	r7,r6,471bc <memmove+0x50>
   471d0:	2005883a 	mov	r2,r4
   471d4:	f800283a 	ret
   471d8:	1904b03a 	or	r2,r3,r4
   471dc:	108000cc 	andi	r2,r2,3
   471e0:	103ff31e 	bne	r2,zero,471b0 <memmove+0x44>
   471e4:	3811883a 	mov	r8,r7
   471e8:	180b883a 	mov	r5,r3
   471ec:	200f883a 	mov	r7,r4
   471f0:	28c00017 	ldw	r3,0(r5)
   471f4:	31bffc04 	addi	r6,r6,-16
   471f8:	38c00015 	stw	r3,0(r7)
   471fc:	28800117 	ldw	r2,4(r5)
   47200:	38800115 	stw	r2,4(r7)
   47204:	28c00217 	ldw	r3,8(r5)
   47208:	38c00215 	stw	r3,8(r7)
   4720c:	28800317 	ldw	r2,12(r5)
   47210:	29400404 	addi	r5,r5,16
   47214:	38800315 	stw	r2,12(r7)
   47218:	39c00404 	addi	r7,r7,16
   4721c:	41bff436 	bltu	r8,r6,471f0 <memmove+0x84>
   47220:	008000c4 	movi	r2,3
   47224:	1180072e 	bgeu	r2,r6,47244 <memmove+0xd8>
   47228:	1007883a 	mov	r3,r2
   4722c:	28800017 	ldw	r2,0(r5)
   47230:	31bfff04 	addi	r6,r6,-4
   47234:	29400104 	addi	r5,r5,4
   47238:	38800015 	stw	r2,0(r7)
   4723c:	39c00104 	addi	r7,r7,4
   47240:	19bffa36 	bltu	r3,r6,4722c <memmove+0xc0>
   47244:	3811883a 	mov	r8,r7
   47248:	003fd906 	br	471b0 <memmove+0x44>

0004724c <memset>:
   4724c:	008000c4 	movi	r2,3
   47250:	29403fcc 	andi	r5,r5,255
   47254:	2007883a 	mov	r3,r4
   47258:	1180022e 	bgeu	r2,r6,47264 <memset+0x18>
   4725c:	2084703a 	and	r2,r4,r2
   47260:	10000826 	beq	r2,zero,47284 <memset+0x38>
   47264:	30000526 	beq	r6,zero,4727c <memset+0x30>
   47268:	2805883a 	mov	r2,r5
   4726c:	30cd883a 	add	r6,r6,r3
   47270:	18800005 	stb	r2,0(r3)
   47274:	18c00044 	addi	r3,r3,1
   47278:	19bffd1e 	bne	r3,r6,47270 <memset+0x24>
   4727c:	2005883a 	mov	r2,r4
   47280:	f800283a 	ret
   47284:	2804923a 	slli	r2,r5,8
   47288:	020003c4 	movi	r8,15
   4728c:	200f883a 	mov	r7,r4
   47290:	2884b03a 	or	r2,r5,r2
   47294:	1006943a 	slli	r3,r2,16
   47298:	10c6b03a 	or	r3,r2,r3
   4729c:	41800a2e 	bgeu	r8,r6,472c8 <memset+0x7c>
   472a0:	4005883a 	mov	r2,r8
   472a4:	31bffc04 	addi	r6,r6,-16
   472a8:	38c00015 	stw	r3,0(r7)
   472ac:	38c00115 	stw	r3,4(r7)
   472b0:	38c00215 	stw	r3,8(r7)
   472b4:	38c00315 	stw	r3,12(r7)
   472b8:	39c00404 	addi	r7,r7,16
   472bc:	11bff936 	bltu	r2,r6,472a4 <memset+0x58>
   472c0:	008000c4 	movi	r2,3
   472c4:	1180052e 	bgeu	r2,r6,472dc <memset+0x90>
   472c8:	31bfff04 	addi	r6,r6,-4
   472cc:	008000c4 	movi	r2,3
   472d0:	38c00015 	stw	r3,0(r7)
   472d4:	39c00104 	addi	r7,r7,4
   472d8:	11bffb36 	bltu	r2,r6,472c8 <memset+0x7c>
   472dc:	3807883a 	mov	r3,r7
   472e0:	003fe006 	br	47264 <memset+0x18>

000472e4 <_Bfree>:
   472e4:	28000826 	beq	r5,zero,47308 <_Bfree+0x24>
   472e8:	28800117 	ldw	r2,4(r5)
   472ec:	21001317 	ldw	r4,76(r4)
   472f0:	1085883a 	add	r2,r2,r2
   472f4:	1085883a 	add	r2,r2,r2
   472f8:	1105883a 	add	r2,r2,r4
   472fc:	10c00017 	ldw	r3,0(r2)
   47300:	28c00015 	stw	r3,0(r5)
   47304:	11400015 	stw	r5,0(r2)
   47308:	f800283a 	ret

0004730c <__hi0bits>:
   4730c:	20bfffec 	andhi	r2,r4,65535
   47310:	10001426 	beq	r2,zero,47364 <__hi0bits+0x58>
   47314:	0007883a 	mov	r3,zero
   47318:	20bfc02c 	andhi	r2,r4,65280
   4731c:	1000021e 	bne	r2,zero,47328 <__hi0bits+0x1c>
   47320:	2008923a 	slli	r4,r4,8
   47324:	18c00204 	addi	r3,r3,8
   47328:	20bc002c 	andhi	r2,r4,61440
   4732c:	1000021e 	bne	r2,zero,47338 <__hi0bits+0x2c>
   47330:	2008913a 	slli	r4,r4,4
   47334:	18c00104 	addi	r3,r3,4
   47338:	20b0002c 	andhi	r2,r4,49152
   4733c:	1000031e 	bne	r2,zero,4734c <__hi0bits+0x40>
   47340:	2105883a 	add	r2,r4,r4
   47344:	18c00084 	addi	r3,r3,2
   47348:	1089883a 	add	r4,r2,r2
   4734c:	20000316 	blt	r4,zero,4735c <__hi0bits+0x50>
   47350:	2090002c 	andhi	r2,r4,16384
   47354:	10000626 	beq	r2,zero,47370 <__hi0bits+0x64>
   47358:	18c00044 	addi	r3,r3,1
   4735c:	1805883a 	mov	r2,r3
   47360:	f800283a 	ret
   47364:	2008943a 	slli	r4,r4,16
   47368:	00c00404 	movi	r3,16
   4736c:	003fea06 	br	47318 <__hi0bits+0xc>
   47370:	00c00804 	movi	r3,32
   47374:	1805883a 	mov	r2,r3
   47378:	f800283a 	ret

0004737c <__lo0bits>:
   4737c:	20c00017 	ldw	r3,0(r4)
   47380:	188001cc 	andi	r2,r3,7
   47384:	10000a26 	beq	r2,zero,473b0 <__lo0bits+0x34>
   47388:	1880004c 	andi	r2,r3,1
   4738c:	1005003a 	cmpeq	r2,r2,zero
   47390:	10002126 	beq	r2,zero,47418 <__lo0bits+0x9c>
   47394:	1880008c 	andi	r2,r3,2
   47398:	1000251e 	bne	r2,zero,47430 <__lo0bits+0xb4>
   4739c:	1804d0ba 	srli	r2,r3,2
   473a0:	01400084 	movi	r5,2
   473a4:	20800015 	stw	r2,0(r4)
   473a8:	2805883a 	mov	r2,r5
   473ac:	f800283a 	ret
   473b0:	18bfffcc 	andi	r2,r3,65535
   473b4:	10001526 	beq	r2,zero,4740c <__lo0bits+0x90>
   473b8:	000b883a 	mov	r5,zero
   473bc:	18803fcc 	andi	r2,r3,255
   473c0:	1000021e 	bne	r2,zero,473cc <__lo0bits+0x50>
   473c4:	1806d23a 	srli	r3,r3,8
   473c8:	29400204 	addi	r5,r5,8
   473cc:	188003cc 	andi	r2,r3,15
   473d0:	1000021e 	bne	r2,zero,473dc <__lo0bits+0x60>
   473d4:	1806d13a 	srli	r3,r3,4
   473d8:	29400104 	addi	r5,r5,4
   473dc:	188000cc 	andi	r2,r3,3
   473e0:	1000021e 	bne	r2,zero,473ec <__lo0bits+0x70>
   473e4:	1806d0ba 	srli	r3,r3,2
   473e8:	29400084 	addi	r5,r5,2
   473ec:	1880004c 	andi	r2,r3,1
   473f0:	1000031e 	bne	r2,zero,47400 <__lo0bits+0x84>
   473f4:	1806d07a 	srli	r3,r3,1
   473f8:	18000a26 	beq	r3,zero,47424 <__lo0bits+0xa8>
   473fc:	29400044 	addi	r5,r5,1
   47400:	2805883a 	mov	r2,r5
   47404:	20c00015 	stw	r3,0(r4)
   47408:	f800283a 	ret
   4740c:	1806d43a 	srli	r3,r3,16
   47410:	01400404 	movi	r5,16
   47414:	003fe906 	br	473bc <__lo0bits+0x40>
   47418:	000b883a 	mov	r5,zero
   4741c:	2805883a 	mov	r2,r5
   47420:	f800283a 	ret
   47424:	01400804 	movi	r5,32
   47428:	2805883a 	mov	r2,r5
   4742c:	f800283a 	ret
   47430:	1804d07a 	srli	r2,r3,1
   47434:	01400044 	movi	r5,1
   47438:	20800015 	stw	r2,0(r4)
   4743c:	003fda06 	br	473a8 <__lo0bits+0x2c>

00047440 <__mcmp>:
   47440:	20800417 	ldw	r2,16(r4)
   47444:	28c00417 	ldw	r3,16(r5)
   47448:	10cfc83a 	sub	r7,r2,r3
   4744c:	38000c1e 	bne	r7,zero,47480 <__mcmp+0x40>
   47450:	18c5883a 	add	r2,r3,r3
   47454:	1085883a 	add	r2,r2,r2
   47458:	10c00504 	addi	r3,r2,20
   4745c:	21000504 	addi	r4,r4,20
   47460:	28cb883a 	add	r5,r5,r3
   47464:	2085883a 	add	r2,r4,r2
   47468:	10bfff04 	addi	r2,r2,-4
   4746c:	297fff04 	addi	r5,r5,-4
   47470:	11800017 	ldw	r6,0(r2)
   47474:	28c00017 	ldw	r3,0(r5)
   47478:	30c0031e 	bne	r6,r3,47488 <__mcmp+0x48>
   4747c:	20bffa36 	bltu	r4,r2,47468 <__mcmp+0x28>
   47480:	3805883a 	mov	r2,r7
   47484:	f800283a 	ret
   47488:	30c00336 	bltu	r6,r3,47498 <__mcmp+0x58>
   4748c:	01c00044 	movi	r7,1
   47490:	3805883a 	mov	r2,r7
   47494:	f800283a 	ret
   47498:	01ffffc4 	movi	r7,-1
   4749c:	003ff806 	br	47480 <__mcmp+0x40>

000474a0 <__ulp>:
   474a0:	295ffc2c 	andhi	r5,r5,32752
   474a4:	013f3034 	movhi	r4,64704
   474a8:	290b883a 	add	r5,r5,r4
   474ac:	0145c83a 	sub	r2,zero,r5
   474b0:	1007d53a 	srai	r3,r2,20
   474b4:	000d883a 	mov	r6,zero
   474b8:	0140040e 	bge	zero,r5,474cc <__ulp+0x2c>
   474bc:	280f883a 	mov	r7,r5
   474c0:	3807883a 	mov	r3,r7
   474c4:	3005883a 	mov	r2,r6
   474c8:	f800283a 	ret
   474cc:	008004c4 	movi	r2,19
   474d0:	193ffb04 	addi	r4,r3,-20
   474d4:	10c00c0e 	bge	r2,r3,47508 <__ulp+0x68>
   474d8:	008007c4 	movi	r2,31
   474dc:	1107c83a 	sub	r3,r2,r4
   474e0:	00800784 	movi	r2,30
   474e4:	01400044 	movi	r5,1
   474e8:	11000216 	blt	r2,r4,474f4 <__ulp+0x54>
   474ec:	00800044 	movi	r2,1
   474f0:	10ca983a 	sll	r5,r2,r3
   474f4:	000f883a 	mov	r7,zero
   474f8:	280d883a 	mov	r6,r5
   474fc:	3807883a 	mov	r3,r7
   47500:	3005883a 	mov	r2,r6
   47504:	f800283a 	ret
   47508:	00800234 	movhi	r2,8
   4750c:	10cfd83a 	sra	r7,r2,r3
   47510:	000d883a 	mov	r6,zero
   47514:	3005883a 	mov	r2,r6
   47518:	3807883a 	mov	r3,r7
   4751c:	f800283a 	ret

00047520 <__b2d>:
   47520:	20800417 	ldw	r2,16(r4)
   47524:	defff904 	addi	sp,sp,-28
   47528:	dd000415 	stw	r20,16(sp)
   4752c:	1085883a 	add	r2,r2,r2
   47530:	25000504 	addi	r20,r4,20
   47534:	1085883a 	add	r2,r2,r2
   47538:	dc000015 	stw	r16,0(sp)
   4753c:	a0a1883a 	add	r16,r20,r2
   47540:	dd400515 	stw	r21,20(sp)
   47544:	857fff17 	ldw	r21,-4(r16)
   47548:	dc400115 	stw	r17,4(sp)
   4754c:	dfc00615 	stw	ra,24(sp)
   47550:	a809883a 	mov	r4,r21
   47554:	2823883a 	mov	r17,r5
   47558:	dcc00315 	stw	r19,12(sp)
   4755c:	dc800215 	stw	r18,8(sp)
   47560:	004730c0 	call	4730c <__hi0bits>
   47564:	100b883a 	mov	r5,r2
   47568:	00800804 	movi	r2,32
   4756c:	1145c83a 	sub	r2,r2,r5
   47570:	88800015 	stw	r2,0(r17)
   47574:	00800284 	movi	r2,10
   47578:	80ffff04 	addi	r3,r16,-4
   4757c:	11401416 	blt	r2,r5,475d0 <__b2d+0xb0>
   47580:	008002c4 	movi	r2,11
   47584:	1149c83a 	sub	r4,r2,r5
   47588:	a0c02736 	bltu	r20,r3,47628 <__b2d+0x108>
   4758c:	000d883a 	mov	r6,zero
   47590:	28800544 	addi	r2,r5,21
   47594:	a906d83a 	srl	r3,r21,r4
   47598:	a884983a 	sll	r2,r21,r2
   4759c:	1ccffc34 	orhi	r19,r3,16368
   475a0:	11a4b03a 	or	r18,r2,r6
   475a4:	9005883a 	mov	r2,r18
   475a8:	9807883a 	mov	r3,r19
   475ac:	dfc00617 	ldw	ra,24(sp)
   475b0:	dd400517 	ldw	r21,20(sp)
   475b4:	dd000417 	ldw	r20,16(sp)
   475b8:	dcc00317 	ldw	r19,12(sp)
   475bc:	dc800217 	ldw	r18,8(sp)
   475c0:	dc400117 	ldw	r17,4(sp)
   475c4:	dc000017 	ldw	r16,0(sp)
   475c8:	dec00704 	addi	sp,sp,28
   475cc:	f800283a 	ret
   475d0:	a0c00e36 	bltu	r20,r3,4760c <__b2d+0xec>
   475d4:	293ffd44 	addi	r4,r5,-11
   475d8:	000d883a 	mov	r6,zero
   475dc:	20000f26 	beq	r4,zero,4761c <__b2d+0xfc>
   475e0:	00800804 	movi	r2,32
   475e4:	110bc83a 	sub	r5,r2,r4
   475e8:	a0c01236 	bltu	r20,r3,47634 <__b2d+0x114>
   475ec:	000f883a 	mov	r7,zero
   475f0:	a904983a 	sll	r2,r21,r4
   475f4:	3146d83a 	srl	r3,r6,r5
   475f8:	3108983a 	sll	r4,r6,r4
   475fc:	108ffc34 	orhi	r2,r2,16368
   47600:	18a6b03a 	or	r19,r3,r2
   47604:	3924b03a 	or	r18,r7,r4
   47608:	003fe606 	br	475a4 <__b2d+0x84>
   4760c:	293ffd44 	addi	r4,r5,-11
   47610:	81bffe17 	ldw	r6,-8(r16)
   47614:	80fffe04 	addi	r3,r16,-8
   47618:	203ff11e 	bne	r4,zero,475e0 <__b2d+0xc0>
   4761c:	accffc34 	orhi	r19,r21,16368
   47620:	3025883a 	mov	r18,r6
   47624:	003fdf06 	br	475a4 <__b2d+0x84>
   47628:	18bfff17 	ldw	r2,-4(r3)
   4762c:	110cd83a 	srl	r6,r2,r4
   47630:	003fd706 	br	47590 <__b2d+0x70>
   47634:	18bfff17 	ldw	r2,-4(r3)
   47638:	114ed83a 	srl	r7,r2,r5
   4763c:	003fec06 	br	475f0 <__b2d+0xd0>

00047640 <__ratio>:
   47640:	defff904 	addi	sp,sp,-28
   47644:	dc400215 	stw	r17,8(sp)
   47648:	2823883a 	mov	r17,r5
   4764c:	d80b883a 	mov	r5,sp
   47650:	dfc00615 	stw	ra,24(sp)
   47654:	dd000515 	stw	r20,20(sp)
   47658:	dcc00415 	stw	r19,16(sp)
   4765c:	dc800315 	stw	r18,12(sp)
   47660:	2025883a 	mov	r18,r4
   47664:	00475200 	call	47520 <__b2d>
   47668:	8809883a 	mov	r4,r17
   4766c:	d9400104 	addi	r5,sp,4
   47670:	1027883a 	mov	r19,r2
   47674:	1829883a 	mov	r20,r3
   47678:	00475200 	call	47520 <__b2d>
   4767c:	89000417 	ldw	r4,16(r17)
   47680:	91c00417 	ldw	r7,16(r18)
   47684:	d9800117 	ldw	r6,4(sp)
   47688:	180b883a 	mov	r5,r3
   4768c:	390fc83a 	sub	r7,r7,r4
   47690:	1009883a 	mov	r4,r2
   47694:	d8800017 	ldw	r2,0(sp)
   47698:	380e917a 	slli	r7,r7,5
   4769c:	2011883a 	mov	r8,r4
   476a0:	1185c83a 	sub	r2,r2,r6
   476a4:	11c5883a 	add	r2,r2,r7
   476a8:	1006953a 	slli	r3,r2,20
   476ac:	2813883a 	mov	r9,r5
   476b0:	00800d0e 	bge	zero,r2,476e8 <__ratio+0xa8>
   476b4:	1d29883a 	add	r20,r3,r20
   476b8:	a00b883a 	mov	r5,r20
   476bc:	480f883a 	mov	r7,r9
   476c0:	9809883a 	mov	r4,r19
   476c4:	400d883a 	mov	r6,r8
   476c8:	004de3c0 	call	4de3c <__divdf3>
   476cc:	dfc00617 	ldw	ra,24(sp)
   476d0:	dd000517 	ldw	r20,20(sp)
   476d4:	dcc00417 	ldw	r19,16(sp)
   476d8:	dc800317 	ldw	r18,12(sp)
   476dc:	dc400217 	ldw	r17,8(sp)
   476e0:	dec00704 	addi	sp,sp,28
   476e4:	f800283a 	ret
   476e8:	28d3c83a 	sub	r9,r5,r3
   476ec:	003ff206 	br	476b8 <__ratio+0x78>

000476f0 <_mprec_log10>:
   476f0:	defffe04 	addi	sp,sp,-8
   476f4:	008005c4 	movi	r2,23
   476f8:	dc000015 	stw	r16,0(sp)
   476fc:	dfc00115 	stw	ra,4(sp)
   47700:	2021883a 	mov	r16,r4
   47704:	11000c16 	blt	r2,r4,47738 <_mprec_log10+0x48>
   47708:	200490fa 	slli	r2,r4,3
   4770c:	00c00174 	movhi	r3,5
   47710:	18c87004 	addi	r3,r3,8640
   47714:	10c5883a 	add	r2,r2,r3
   47718:	12400117 	ldw	r9,4(r2)
   4771c:	12000017 	ldw	r8,0(r2)
   47720:	4807883a 	mov	r3,r9
   47724:	4005883a 	mov	r2,r8
   47728:	dfc00117 	ldw	ra,4(sp)
   4772c:	dc000017 	ldw	r16,0(sp)
   47730:	dec00204 	addi	sp,sp,8
   47734:	f800283a 	ret
   47738:	0011883a 	mov	r8,zero
   4773c:	024ffc34 	movhi	r9,16368
   47740:	0005883a 	mov	r2,zero
   47744:	00d00934 	movhi	r3,16420
   47748:	480b883a 	mov	r5,r9
   4774c:	4009883a 	mov	r4,r8
   47750:	180f883a 	mov	r7,r3
   47754:	100d883a 	mov	r6,r2
   47758:	004da780 	call	4da78 <__muldf3>
   4775c:	843fffc4 	addi	r16,r16,-1
   47760:	1011883a 	mov	r8,r2
   47764:	1813883a 	mov	r9,r3
   47768:	803ff51e 	bne	r16,zero,47740 <_mprec_log10+0x50>
   4776c:	4005883a 	mov	r2,r8
   47770:	4807883a 	mov	r3,r9
   47774:	dfc00117 	ldw	ra,4(sp)
   47778:	dc000017 	ldw	r16,0(sp)
   4777c:	dec00204 	addi	sp,sp,8
   47780:	f800283a 	ret

00047784 <__copybits>:
   47784:	297fffc4 	addi	r5,r5,-1
   47788:	30800417 	ldw	r2,16(r6)
   4778c:	280bd17a 	srai	r5,r5,5
   47790:	31800504 	addi	r6,r6,20
   47794:	1085883a 	add	r2,r2,r2
   47798:	294b883a 	add	r5,r5,r5
   4779c:	294b883a 	add	r5,r5,r5
   477a0:	1085883a 	add	r2,r2,r2
   477a4:	290b883a 	add	r5,r5,r4
   477a8:	3087883a 	add	r3,r6,r2
   477ac:	29400104 	addi	r5,r5,4
   477b0:	30c0052e 	bgeu	r6,r3,477c8 <__copybits+0x44>
   477b4:	30800017 	ldw	r2,0(r6)
   477b8:	31800104 	addi	r6,r6,4
   477bc:	20800015 	stw	r2,0(r4)
   477c0:	21000104 	addi	r4,r4,4
   477c4:	30fffb36 	bltu	r6,r3,477b4 <__copybits+0x30>
   477c8:	2140032e 	bgeu	r4,r5,477d8 <__copybits+0x54>
   477cc:	20000015 	stw	zero,0(r4)
   477d0:	21000104 	addi	r4,r4,4
   477d4:	217ffd36 	bltu	r4,r5,477cc <__copybits+0x48>
   477d8:	f800283a 	ret

000477dc <__any_on>:
   477dc:	20800417 	ldw	r2,16(r4)
   477e0:	2807d17a 	srai	r3,r5,5
   477e4:	21000504 	addi	r4,r4,20
   477e8:	10c00d0e 	bge	r2,r3,47820 <__any_on+0x44>
   477ec:	1085883a 	add	r2,r2,r2
   477f0:	1085883a 	add	r2,r2,r2
   477f4:	208d883a 	add	r6,r4,r2
   477f8:	2180182e 	bgeu	r4,r6,4785c <__any_on+0x80>
   477fc:	30bfff17 	ldw	r2,-4(r6)
   47800:	30ffff04 	addi	r3,r6,-4
   47804:	1000041e 	bne	r2,zero,47818 <__any_on+0x3c>
   47808:	20c0142e 	bgeu	r4,r3,4785c <__any_on+0x80>
   4780c:	18ffff04 	addi	r3,r3,-4
   47810:	18800017 	ldw	r2,0(r3)
   47814:	103ffc26 	beq	r2,zero,47808 <__any_on+0x2c>
   47818:	00800044 	movi	r2,1
   4781c:	f800283a 	ret
   47820:	18800a0e 	bge	r3,r2,4784c <__any_on+0x70>
   47824:	294007cc 	andi	r5,r5,31
   47828:	28000826 	beq	r5,zero,4784c <__any_on+0x70>
   4782c:	18c5883a 	add	r2,r3,r3
   47830:	1085883a 	add	r2,r2,r2
   47834:	208d883a 	add	r6,r4,r2
   47838:	30c00017 	ldw	r3,0(r6)
   4783c:	1944d83a 	srl	r2,r3,r5
   47840:	1144983a 	sll	r2,r2,r5
   47844:	18bff41e 	bne	r3,r2,47818 <__any_on+0x3c>
   47848:	003feb06 	br	477f8 <__any_on+0x1c>
   4784c:	18c5883a 	add	r2,r3,r3
   47850:	1085883a 	add	r2,r2,r2
   47854:	208d883a 	add	r6,r4,r2
   47858:	003fe706 	br	477f8 <__any_on+0x1c>
   4785c:	0005883a 	mov	r2,zero
   47860:	f800283a 	ret

00047864 <_Balloc>:
   47864:	20c01317 	ldw	r3,76(r4)
   47868:	defffb04 	addi	sp,sp,-20
   4786c:	dcc00315 	stw	r19,12(sp)
   47870:	dc800215 	stw	r18,8(sp)
   47874:	dfc00415 	stw	ra,16(sp)
   47878:	2825883a 	mov	r18,r5
   4787c:	dc400115 	stw	r17,4(sp)
   47880:	dc000015 	stw	r16,0(sp)
   47884:	2027883a 	mov	r19,r4
   47888:	01800404 	movi	r6,16
   4788c:	01400104 	movi	r5,4
   47890:	18001726 	beq	r3,zero,478f0 <_Balloc+0x8c>
   47894:	01400044 	movi	r5,1
   47898:	9485883a 	add	r2,r18,r18
   4789c:	2ca2983a 	sll	r17,r5,r18
   478a0:	1085883a 	add	r2,r2,r2
   478a4:	10c7883a 	add	r3,r2,r3
   478a8:	1c000017 	ldw	r16,0(r3)
   478ac:	8c4d883a 	add	r6,r17,r17
   478b0:	318d883a 	add	r6,r6,r6
   478b4:	9809883a 	mov	r4,r19
   478b8:	31800504 	addi	r6,r6,20
   478bc:	80001226 	beq	r16,zero,47908 <_Balloc+0xa4>
   478c0:	80800017 	ldw	r2,0(r16)
   478c4:	18800015 	stw	r2,0(r3)
   478c8:	80000415 	stw	zero,16(r16)
   478cc:	80000315 	stw	zero,12(r16)
   478d0:	8005883a 	mov	r2,r16
   478d4:	dfc00417 	ldw	ra,16(sp)
   478d8:	dcc00317 	ldw	r19,12(sp)
   478dc:	dc800217 	ldw	r18,8(sp)
   478e0:	dc400117 	ldw	r17,4(sp)
   478e4:	dc000017 	ldw	r16,0(sp)
   478e8:	dec00504 	addi	sp,sp,20
   478ec:	f800283a 	ret
   478f0:	004b57c0 	call	4b57c <_calloc_r>
   478f4:	1007883a 	mov	r3,r2
   478f8:	0021883a 	mov	r16,zero
   478fc:	98801315 	stw	r2,76(r19)
   47900:	103fe41e 	bne	r2,zero,47894 <_Balloc+0x30>
   47904:	003ff206 	br	478d0 <_Balloc+0x6c>
   47908:	004b57c0 	call	4b57c <_calloc_r>
   4790c:	103ff026 	beq	r2,zero,478d0 <_Balloc+0x6c>
   47910:	1021883a 	mov	r16,r2
   47914:	14800115 	stw	r18,4(r2)
   47918:	14400215 	stw	r17,8(r2)
   4791c:	003fea06 	br	478c8 <_Balloc+0x64>

00047920 <__d2b>:
   47920:	defff504 	addi	sp,sp,-44
   47924:	dcc00515 	stw	r19,20(sp)
   47928:	04c00044 	movi	r19,1
   4792c:	dc000215 	stw	r16,8(sp)
   47930:	2821883a 	mov	r16,r5
   47934:	980b883a 	mov	r5,r19
   47938:	ddc00915 	stw	r23,36(sp)
   4793c:	dd800815 	stw	r22,32(sp)
   47940:	dd400715 	stw	r21,28(sp)
   47944:	dd000615 	stw	r20,24(sp)
   47948:	dc800415 	stw	r18,16(sp)
   4794c:	dc400315 	stw	r17,12(sp)
   47950:	dfc00a15 	stw	ra,40(sp)
   47954:	3023883a 	mov	r17,r6
   47958:	382d883a 	mov	r22,r7
   4795c:	ddc00b17 	ldw	r23,44(sp)
   47960:	00478640 	call	47864 <_Balloc>
   47964:	1025883a 	mov	r18,r2
   47968:	00a00034 	movhi	r2,32768
   4796c:	10bfffc4 	addi	r2,r2,-1
   47970:	8888703a 	and	r4,r17,r2
   47974:	202ad53a 	srli	r21,r4,20
   47978:	00800434 	movhi	r2,16
   4797c:	10bfffc4 	addi	r2,r2,-1
   47980:	8886703a 	and	r3,r17,r2
   47984:	a829003a 	cmpeq	r20,r21,zero
   47988:	800b883a 	mov	r5,r16
   4798c:	d8c00115 	stw	r3,4(sp)
   47990:	94000504 	addi	r16,r18,20
   47994:	a000021e 	bne	r20,zero,479a0 <__d2b+0x80>
   47998:	18c00434 	orhi	r3,r3,16
   4799c:	d8c00115 	stw	r3,4(sp)
   479a0:	28002726 	beq	r5,zero,47a40 <__d2b+0x120>
   479a4:	d809883a 	mov	r4,sp
   479a8:	d9400015 	stw	r5,0(sp)
   479ac:	004737c0 	call	4737c <__lo0bits>
   479b0:	100d883a 	mov	r6,r2
   479b4:	10003526 	beq	r2,zero,47a8c <__d2b+0x16c>
   479b8:	d8c00117 	ldw	r3,4(sp)
   479bc:	00800804 	movi	r2,32
   479c0:	1185c83a 	sub	r2,r2,r6
   479c4:	d9000017 	ldw	r4,0(sp)
   479c8:	1886983a 	sll	r3,r3,r2
   479cc:	1906b03a 	or	r3,r3,r4
   479d0:	90c00515 	stw	r3,20(r18)
   479d4:	d8c00117 	ldw	r3,4(sp)
   479d8:	1986d83a 	srl	r3,r3,r6
   479dc:	d8c00115 	stw	r3,4(sp)
   479e0:	180b003a 	cmpeq	r5,r3,zero
   479e4:	00800084 	movi	r2,2
   479e8:	114bc83a 	sub	r5,r2,r5
   479ec:	80c00115 	stw	r3,4(r16)
   479f0:	91400415 	stw	r5,16(r18)
   479f4:	a0001a1e 	bne	r20,zero,47a60 <__d2b+0x140>
   479f8:	3545883a 	add	r2,r6,r21
   479fc:	10bef344 	addi	r2,r2,-1075
   47a00:	00c00d44 	movi	r3,53
   47a04:	b0800015 	stw	r2,0(r22)
   47a08:	1987c83a 	sub	r3,r3,r6
   47a0c:	b8c00015 	stw	r3,0(r23)
   47a10:	9005883a 	mov	r2,r18
   47a14:	dfc00a17 	ldw	ra,40(sp)
   47a18:	ddc00917 	ldw	r23,36(sp)
   47a1c:	dd800817 	ldw	r22,32(sp)
   47a20:	dd400717 	ldw	r21,28(sp)
   47a24:	dd000617 	ldw	r20,24(sp)
   47a28:	dcc00517 	ldw	r19,20(sp)
   47a2c:	dc800417 	ldw	r18,16(sp)
   47a30:	dc400317 	ldw	r17,12(sp)
   47a34:	dc000217 	ldw	r16,8(sp)
   47a38:	dec00b04 	addi	sp,sp,44
   47a3c:	f800283a 	ret
   47a40:	d9000104 	addi	r4,sp,4
   47a44:	004737c0 	call	4737c <__lo0bits>
   47a48:	11800804 	addi	r6,r2,32
   47a4c:	d8800117 	ldw	r2,4(sp)
   47a50:	94c00415 	stw	r19,16(r18)
   47a54:	980b883a 	mov	r5,r19
   47a58:	90800515 	stw	r2,20(r18)
   47a5c:	a03fe626 	beq	r20,zero,479f8 <__d2b+0xd8>
   47a60:	2945883a 	add	r2,r5,r5
   47a64:	1085883a 	add	r2,r2,r2
   47a68:	1405883a 	add	r2,r2,r16
   47a6c:	113fff17 	ldw	r4,-4(r2)
   47a70:	30fef384 	addi	r3,r6,-1074
   47a74:	2820917a 	slli	r16,r5,5
   47a78:	b0c00015 	stw	r3,0(r22)
   47a7c:	004730c0 	call	4730c <__hi0bits>
   47a80:	80a1c83a 	sub	r16,r16,r2
   47a84:	bc000015 	stw	r16,0(r23)
   47a88:	003fe106 	br	47a10 <__d2b+0xf0>
   47a8c:	d8800017 	ldw	r2,0(sp)
   47a90:	90800515 	stw	r2,20(r18)
   47a94:	d8c00117 	ldw	r3,4(sp)
   47a98:	003fd106 	br	479e0 <__d2b+0xc0>

00047a9c <__mdiff>:
   47a9c:	defffb04 	addi	sp,sp,-20
   47aa0:	dc000015 	stw	r16,0(sp)
   47aa4:	2821883a 	mov	r16,r5
   47aa8:	dc800215 	stw	r18,8(sp)
   47aac:	300b883a 	mov	r5,r6
   47ab0:	2025883a 	mov	r18,r4
   47ab4:	8009883a 	mov	r4,r16
   47ab8:	dc400115 	stw	r17,4(sp)
   47abc:	dfc00415 	stw	ra,16(sp)
   47ac0:	dcc00315 	stw	r19,12(sp)
   47ac4:	3023883a 	mov	r17,r6
   47ac8:	00474400 	call	47440 <__mcmp>
   47acc:	10004226 	beq	r2,zero,47bd8 <__mdiff+0x13c>
   47ad0:	10005016 	blt	r2,zero,47c14 <__mdiff+0x178>
   47ad4:	0027883a 	mov	r19,zero
   47ad8:	81400117 	ldw	r5,4(r16)
   47adc:	9009883a 	mov	r4,r18
   47ae0:	00478640 	call	47864 <_Balloc>
   47ae4:	1019883a 	mov	r12,r2
   47ae8:	82800417 	ldw	r10,16(r16)
   47aec:	88800417 	ldw	r2,16(r17)
   47af0:	81800504 	addi	r6,r16,20
   47af4:	5287883a 	add	r3,r10,r10
   47af8:	1085883a 	add	r2,r2,r2
   47afc:	18c7883a 	add	r3,r3,r3
   47b00:	1085883a 	add	r2,r2,r2
   47b04:	8a000504 	addi	r8,r17,20
   47b08:	64c00315 	stw	r19,12(r12)
   47b0c:	30db883a 	add	r13,r6,r3
   47b10:	4097883a 	add	r11,r8,r2
   47b14:	61c00504 	addi	r7,r12,20
   47b18:	0013883a 	mov	r9,zero
   47b1c:	31000017 	ldw	r4,0(r6)
   47b20:	41400017 	ldw	r5,0(r8)
   47b24:	42000104 	addi	r8,r8,4
   47b28:	20bfffcc 	andi	r2,r4,65535
   47b2c:	28ffffcc 	andi	r3,r5,65535
   47b30:	10c5c83a 	sub	r2,r2,r3
   47b34:	1245883a 	add	r2,r2,r9
   47b38:	2008d43a 	srli	r4,r4,16
   47b3c:	280ad43a 	srli	r5,r5,16
   47b40:	1007d43a 	srai	r3,r2,16
   47b44:	3880000d 	sth	r2,0(r7)
   47b48:	2149c83a 	sub	r4,r4,r5
   47b4c:	20c9883a 	add	r4,r4,r3
   47b50:	3900008d 	sth	r4,2(r7)
   47b54:	31800104 	addi	r6,r6,4
   47b58:	39c00104 	addi	r7,r7,4
   47b5c:	2013d43a 	srai	r9,r4,16
   47b60:	42ffee36 	bltu	r8,r11,47b1c <__mdiff+0x80>
   47b64:	33400c2e 	bgeu	r6,r13,47b98 <__mdiff+0xfc>
   47b68:	30800017 	ldw	r2,0(r6)
   47b6c:	31800104 	addi	r6,r6,4
   47b70:	10ffffcc 	andi	r3,r2,65535
   47b74:	1a47883a 	add	r3,r3,r9
   47b78:	1004d43a 	srli	r2,r2,16
   47b7c:	1809d43a 	srai	r4,r3,16
   47b80:	38c0000d 	sth	r3,0(r7)
   47b84:	1105883a 	add	r2,r2,r4
   47b88:	3880008d 	sth	r2,2(r7)
   47b8c:	1013d43a 	srai	r9,r2,16
   47b90:	39c00104 	addi	r7,r7,4
   47b94:	337ff436 	bltu	r6,r13,47b68 <__mdiff+0xcc>
   47b98:	38bfff17 	ldw	r2,-4(r7)
   47b9c:	38ffff04 	addi	r3,r7,-4
   47ba0:	1000041e 	bne	r2,zero,47bb4 <__mdiff+0x118>
   47ba4:	18ffff04 	addi	r3,r3,-4
   47ba8:	18800017 	ldw	r2,0(r3)
   47bac:	52bfffc4 	addi	r10,r10,-1
   47bb0:	103ffc26 	beq	r2,zero,47ba4 <__mdiff+0x108>
   47bb4:	6005883a 	mov	r2,r12
   47bb8:	62800415 	stw	r10,16(r12)
   47bbc:	dfc00417 	ldw	ra,16(sp)
   47bc0:	dcc00317 	ldw	r19,12(sp)
   47bc4:	dc800217 	ldw	r18,8(sp)
   47bc8:	dc400117 	ldw	r17,4(sp)
   47bcc:	dc000017 	ldw	r16,0(sp)
   47bd0:	dec00504 	addi	sp,sp,20
   47bd4:	f800283a 	ret
   47bd8:	9009883a 	mov	r4,r18
   47bdc:	000b883a 	mov	r5,zero
   47be0:	00478640 	call	47864 <_Balloc>
   47be4:	1019883a 	mov	r12,r2
   47be8:	00800044 	movi	r2,1
   47bec:	60800415 	stw	r2,16(r12)
   47bf0:	6005883a 	mov	r2,r12
   47bf4:	60000515 	stw	zero,20(r12)
   47bf8:	dfc00417 	ldw	ra,16(sp)
   47bfc:	dcc00317 	ldw	r19,12(sp)
   47c00:	dc800217 	ldw	r18,8(sp)
   47c04:	dc400117 	ldw	r17,4(sp)
   47c08:	dc000017 	ldw	r16,0(sp)
   47c0c:	dec00504 	addi	sp,sp,20
   47c10:	f800283a 	ret
   47c14:	880d883a 	mov	r6,r17
   47c18:	04c00044 	movi	r19,1
   47c1c:	8023883a 	mov	r17,r16
   47c20:	3021883a 	mov	r16,r6
   47c24:	003fac06 	br	47ad8 <__mdiff+0x3c>

00047c28 <__lshift>:
   47c28:	defff904 	addi	sp,sp,-28
   47c2c:	28800417 	ldw	r2,16(r5)
   47c30:	dc000015 	stw	r16,0(sp)
   47c34:	3021d17a 	srai	r16,r6,5
   47c38:	28c00217 	ldw	r3,8(r5)
   47c3c:	10800044 	addi	r2,r2,1
   47c40:	dc400115 	stw	r17,4(sp)
   47c44:	80a3883a 	add	r17,r16,r2
   47c48:	dd400515 	stw	r21,20(sp)
   47c4c:	dd000415 	stw	r20,16(sp)
   47c50:	dc800215 	stw	r18,8(sp)
   47c54:	dfc00615 	stw	ra,24(sp)
   47c58:	2825883a 	mov	r18,r5
   47c5c:	dcc00315 	stw	r19,12(sp)
   47c60:	3029883a 	mov	r20,r6
   47c64:	202b883a 	mov	r21,r4
   47c68:	29400117 	ldw	r5,4(r5)
   47c6c:	1c40030e 	bge	r3,r17,47c7c <__lshift+0x54>
   47c70:	18c7883a 	add	r3,r3,r3
   47c74:	29400044 	addi	r5,r5,1
   47c78:	1c7ffd16 	blt	r3,r17,47c70 <__lshift+0x48>
   47c7c:	a809883a 	mov	r4,r21
   47c80:	00478640 	call	47864 <_Balloc>
   47c84:	1027883a 	mov	r19,r2
   47c88:	11400504 	addi	r5,r2,20
   47c8c:	0400090e 	bge	zero,r16,47cb4 <__lshift+0x8c>
   47c90:	2805883a 	mov	r2,r5
   47c94:	0007883a 	mov	r3,zero
   47c98:	18c00044 	addi	r3,r3,1
   47c9c:	10000015 	stw	zero,0(r2)
   47ca0:	10800104 	addi	r2,r2,4
   47ca4:	80fffc1e 	bne	r16,r3,47c98 <__lshift+0x70>
   47ca8:	8405883a 	add	r2,r16,r16
   47cac:	1085883a 	add	r2,r2,r2
   47cb0:	288b883a 	add	r5,r5,r2
   47cb4:	90800417 	ldw	r2,16(r18)
   47cb8:	91000504 	addi	r4,r18,20
   47cbc:	a18007cc 	andi	r6,r20,31
   47cc0:	1085883a 	add	r2,r2,r2
   47cc4:	1085883a 	add	r2,r2,r2
   47cc8:	208f883a 	add	r7,r4,r2
   47ccc:	30001e26 	beq	r6,zero,47d48 <__lshift+0x120>
   47cd0:	00800804 	movi	r2,32
   47cd4:	1191c83a 	sub	r8,r2,r6
   47cd8:	0007883a 	mov	r3,zero
   47cdc:	20800017 	ldw	r2,0(r4)
   47ce0:	1184983a 	sll	r2,r2,r6
   47ce4:	1884b03a 	or	r2,r3,r2
   47ce8:	28800015 	stw	r2,0(r5)
   47cec:	20c00017 	ldw	r3,0(r4)
   47cf0:	21000104 	addi	r4,r4,4
   47cf4:	29400104 	addi	r5,r5,4
   47cf8:	1a06d83a 	srl	r3,r3,r8
   47cfc:	21fff736 	bltu	r4,r7,47cdc <__lshift+0xb4>
   47d00:	28c00015 	stw	r3,0(r5)
   47d04:	18000126 	beq	r3,zero,47d0c <__lshift+0xe4>
   47d08:	8c400044 	addi	r17,r17,1
   47d0c:	88bfffc4 	addi	r2,r17,-1
   47d10:	98800415 	stw	r2,16(r19)
   47d14:	a809883a 	mov	r4,r21
   47d18:	900b883a 	mov	r5,r18
   47d1c:	00472e40 	call	472e4 <_Bfree>
   47d20:	9805883a 	mov	r2,r19
   47d24:	dfc00617 	ldw	ra,24(sp)
   47d28:	dd400517 	ldw	r21,20(sp)
   47d2c:	dd000417 	ldw	r20,16(sp)
   47d30:	dcc00317 	ldw	r19,12(sp)
   47d34:	dc800217 	ldw	r18,8(sp)
   47d38:	dc400117 	ldw	r17,4(sp)
   47d3c:	dc000017 	ldw	r16,0(sp)
   47d40:	dec00704 	addi	sp,sp,28
   47d44:	f800283a 	ret
   47d48:	20800017 	ldw	r2,0(r4)
   47d4c:	21000104 	addi	r4,r4,4
   47d50:	28800015 	stw	r2,0(r5)
   47d54:	29400104 	addi	r5,r5,4
   47d58:	21ffec2e 	bgeu	r4,r7,47d0c <__lshift+0xe4>
   47d5c:	20800017 	ldw	r2,0(r4)
   47d60:	21000104 	addi	r4,r4,4
   47d64:	28800015 	stw	r2,0(r5)
   47d68:	29400104 	addi	r5,r5,4
   47d6c:	21fff636 	bltu	r4,r7,47d48 <__lshift+0x120>
   47d70:	003fe606 	br	47d0c <__lshift+0xe4>

00047d74 <__multiply>:
   47d74:	defff004 	addi	sp,sp,-64
   47d78:	dc800815 	stw	r18,32(sp)
   47d7c:	dc400715 	stw	r17,28(sp)
   47d80:	2c800417 	ldw	r18,16(r5)
   47d84:	34400417 	ldw	r17,16(r6)
   47d88:	dcc00915 	stw	r19,36(sp)
   47d8c:	dc000615 	stw	r16,24(sp)
   47d90:	dfc00f15 	stw	ra,60(sp)
   47d94:	df000e15 	stw	fp,56(sp)
   47d98:	ddc00d15 	stw	r23,52(sp)
   47d9c:	dd800c15 	stw	r22,48(sp)
   47da0:	dd400b15 	stw	r21,44(sp)
   47da4:	dd000a15 	stw	r20,40(sp)
   47da8:	2821883a 	mov	r16,r5
   47dac:	3027883a 	mov	r19,r6
   47db0:	9440040e 	bge	r18,r17,47dc4 <__multiply+0x50>
   47db4:	8825883a 	mov	r18,r17
   47db8:	2c400417 	ldw	r17,16(r5)
   47dbc:	2827883a 	mov	r19,r5
   47dc0:	3021883a 	mov	r16,r6
   47dc4:	80800217 	ldw	r2,8(r16)
   47dc8:	9447883a 	add	r3,r18,r17
   47dcc:	d8c00415 	stw	r3,16(sp)
   47dd0:	81400117 	ldw	r5,4(r16)
   47dd4:	10c0010e 	bge	r2,r3,47ddc <__multiply+0x68>
   47dd8:	29400044 	addi	r5,r5,1
   47ddc:	00478640 	call	47864 <_Balloc>
   47de0:	d8800515 	stw	r2,20(sp)
   47de4:	d9000417 	ldw	r4,16(sp)
   47de8:	d8c00517 	ldw	r3,20(sp)
   47dec:	2105883a 	add	r2,r4,r4
   47df0:	1085883a 	add	r2,r2,r2
   47df4:	19000504 	addi	r4,r3,20
   47df8:	2085883a 	add	r2,r4,r2
   47dfc:	d8800315 	stw	r2,12(sp)
   47e00:	2080052e 	bgeu	r4,r2,47e18 <__multiply+0xa4>
   47e04:	2005883a 	mov	r2,r4
   47e08:	d8c00317 	ldw	r3,12(sp)
   47e0c:	10000015 	stw	zero,0(r2)
   47e10:	10800104 	addi	r2,r2,4
   47e14:	10fffc36 	bltu	r2,r3,47e08 <__multiply+0x94>
   47e18:	8c45883a 	add	r2,r17,r17
   47e1c:	9487883a 	add	r3,r18,r18
   47e20:	9dc00504 	addi	r23,r19,20
   47e24:	1085883a 	add	r2,r2,r2
   47e28:	84000504 	addi	r16,r16,20
   47e2c:	18c7883a 	add	r3,r3,r3
   47e30:	b885883a 	add	r2,r23,r2
   47e34:	dc000015 	stw	r16,0(sp)
   47e38:	d8800215 	stw	r2,8(sp)
   47e3c:	80f9883a 	add	fp,r16,r3
   47e40:	b880432e 	bgeu	r23,r2,47f50 <__multiply+0x1dc>
   47e44:	d9000115 	stw	r4,4(sp)
   47e48:	b9000017 	ldw	r4,0(r23)
   47e4c:	253fffcc 	andi	r20,r4,65535
   47e50:	a0001a26 	beq	r20,zero,47ebc <__multiply+0x148>
   47e54:	dcc00017 	ldw	r19,0(sp)
   47e58:	dc800117 	ldw	r18,4(sp)
   47e5c:	002b883a 	mov	r21,zero
   47e60:	9c400017 	ldw	r17,0(r19)
   47e64:	94000017 	ldw	r16,0(r18)
   47e68:	a009883a 	mov	r4,r20
   47e6c:	897fffcc 	andi	r5,r17,65535
   47e70:	004e8e80 	call	4e8e8 <__mulsi3>
   47e74:	880ad43a 	srli	r5,r17,16
   47e78:	80ffffcc 	andi	r3,r16,65535
   47e7c:	a8c7883a 	add	r3,r21,r3
   47e80:	a009883a 	mov	r4,r20
   47e84:	10e3883a 	add	r17,r2,r3
   47e88:	8020d43a 	srli	r16,r16,16
   47e8c:	004e8e80 	call	4e8e8 <__mulsi3>
   47e90:	8806d43a 	srli	r3,r17,16
   47e94:	1405883a 	add	r2,r2,r16
   47e98:	9cc00104 	addi	r19,r19,4
   47e9c:	1887883a 	add	r3,r3,r2
   47ea0:	90c0008d 	sth	r3,2(r18)
   47ea4:	9440000d 	sth	r17,0(r18)
   47ea8:	182ad43a 	srli	r21,r3,16
   47eac:	94800104 	addi	r18,r18,4
   47eb0:	9f3feb36 	bltu	r19,fp,47e60 <__multiply+0xec>
   47eb4:	95400015 	stw	r21,0(r18)
   47eb8:	b9000017 	ldw	r4,0(r23)
   47ebc:	202ad43a 	srli	r21,r4,16
   47ec0:	a8001c26 	beq	r21,zero,47f34 <__multiply+0x1c0>
   47ec4:	d9000117 	ldw	r4,4(sp)
   47ec8:	dd000017 	ldw	r20,0(sp)
   47ecc:	002d883a 	mov	r22,zero
   47ed0:	24c00017 	ldw	r19,0(r4)
   47ed4:	2025883a 	mov	r18,r4
   47ed8:	9823883a 	mov	r17,r19
   47edc:	a4000017 	ldw	r16,0(r20)
   47ee0:	a809883a 	mov	r4,r21
   47ee4:	a5000104 	addi	r20,r20,4
   47ee8:	817fffcc 	andi	r5,r16,65535
   47eec:	004e8e80 	call	4e8e8 <__mulsi3>
   47ef0:	8806d43a 	srli	r3,r17,16
   47ef4:	800ad43a 	srli	r5,r16,16
   47ef8:	94c0000d 	sth	r19,0(r18)
   47efc:	b0c7883a 	add	r3,r22,r3
   47f00:	10e1883a 	add	r16,r2,r3
   47f04:	9400008d 	sth	r16,2(r18)
   47f08:	a809883a 	mov	r4,r21
   47f0c:	94800104 	addi	r18,r18,4
   47f10:	004e8e80 	call	4e8e8 <__mulsi3>
   47f14:	94400017 	ldw	r17,0(r18)
   47f18:	8020d43a 	srli	r16,r16,16
   47f1c:	88ffffcc 	andi	r3,r17,65535
   47f20:	10c5883a 	add	r2,r2,r3
   47f24:	80a7883a 	add	r19,r16,r2
   47f28:	982cd43a 	srli	r22,r19,16
   47f2c:	a73feb36 	bltu	r20,fp,47edc <__multiply+0x168>
   47f30:	94c00015 	stw	r19,0(r18)
   47f34:	d8800217 	ldw	r2,8(sp)
   47f38:	bdc00104 	addi	r23,r23,4
   47f3c:	b880042e 	bgeu	r23,r2,47f50 <__multiply+0x1dc>
   47f40:	d8c00117 	ldw	r3,4(sp)
   47f44:	18c00104 	addi	r3,r3,4
   47f48:	d8c00115 	stw	r3,4(sp)
   47f4c:	003fbe06 	br	47e48 <__multiply+0xd4>
   47f50:	d9000417 	ldw	r4,16(sp)
   47f54:	01000c0e 	bge	zero,r4,47f88 <__multiply+0x214>
   47f58:	d8c00317 	ldw	r3,12(sp)
   47f5c:	18bfff17 	ldw	r2,-4(r3)
   47f60:	18ffff04 	addi	r3,r3,-4
   47f64:	10000326 	beq	r2,zero,47f74 <__multiply+0x200>
   47f68:	00000706 	br	47f88 <__multiply+0x214>
   47f6c:	18800017 	ldw	r2,0(r3)
   47f70:	1000051e 	bne	r2,zero,47f88 <__multiply+0x214>
   47f74:	d9000417 	ldw	r4,16(sp)
   47f78:	18ffff04 	addi	r3,r3,-4
   47f7c:	213fffc4 	addi	r4,r4,-1
   47f80:	d9000415 	stw	r4,16(sp)
   47f84:	203ff91e 	bne	r4,zero,47f6c <__multiply+0x1f8>
   47f88:	d8800417 	ldw	r2,16(sp)
   47f8c:	d8c00517 	ldw	r3,20(sp)
   47f90:	18800415 	stw	r2,16(r3)
   47f94:	1805883a 	mov	r2,r3
   47f98:	dfc00f17 	ldw	ra,60(sp)
   47f9c:	df000e17 	ldw	fp,56(sp)
   47fa0:	ddc00d17 	ldw	r23,52(sp)
   47fa4:	dd800c17 	ldw	r22,48(sp)
   47fa8:	dd400b17 	ldw	r21,44(sp)
   47fac:	dd000a17 	ldw	r20,40(sp)
   47fb0:	dcc00917 	ldw	r19,36(sp)
   47fb4:	dc800817 	ldw	r18,32(sp)
   47fb8:	dc400717 	ldw	r17,28(sp)
   47fbc:	dc000617 	ldw	r16,24(sp)
   47fc0:	dec01004 	addi	sp,sp,64
   47fc4:	f800283a 	ret

00047fc8 <__i2b>:
   47fc8:	defffd04 	addi	sp,sp,-12
   47fcc:	dc000015 	stw	r16,0(sp)
   47fd0:	04000044 	movi	r16,1
   47fd4:	dc800115 	stw	r18,4(sp)
   47fd8:	2825883a 	mov	r18,r5
   47fdc:	800b883a 	mov	r5,r16
   47fe0:	dfc00215 	stw	ra,8(sp)
   47fe4:	00478640 	call	47864 <_Balloc>
   47fe8:	14000415 	stw	r16,16(r2)
   47fec:	14800515 	stw	r18,20(r2)
   47ff0:	dfc00217 	ldw	ra,8(sp)
   47ff4:	dc800117 	ldw	r18,4(sp)
   47ff8:	dc000017 	ldw	r16,0(sp)
   47ffc:	dec00304 	addi	sp,sp,12
   48000:	f800283a 	ret

00048004 <__multadd>:
   48004:	defff604 	addi	sp,sp,-40
   48008:	dd800615 	stw	r22,24(sp)
   4800c:	2d800417 	ldw	r22,16(r5)
   48010:	df000815 	stw	fp,32(sp)
   48014:	ddc00715 	stw	r23,28(sp)
   48018:	dd400515 	stw	r21,20(sp)
   4801c:	dd000415 	stw	r20,16(sp)
   48020:	dcc00315 	stw	r19,12(sp)
   48024:	dc800215 	stw	r18,8(sp)
   48028:	dfc00915 	stw	ra,36(sp)
   4802c:	dc400115 	stw	r17,4(sp)
   48030:	dc000015 	stw	r16,0(sp)
   48034:	282f883a 	mov	r23,r5
   48038:	2039883a 	mov	fp,r4
   4803c:	302b883a 	mov	r21,r6
   48040:	3829883a 	mov	r20,r7
   48044:	2c800504 	addi	r18,r5,20
   48048:	0027883a 	mov	r19,zero
   4804c:	94400017 	ldw	r17,0(r18)
   48050:	a80b883a 	mov	r5,r21
   48054:	9cc00044 	addi	r19,r19,1
   48058:	893fffcc 	andi	r4,r17,65535
   4805c:	004e8e80 	call	4e8e8 <__mulsi3>
   48060:	8808d43a 	srli	r4,r17,16
   48064:	1521883a 	add	r16,r2,r20
   48068:	a80b883a 	mov	r5,r21
   4806c:	004e8e80 	call	4e8e8 <__mulsi3>
   48070:	8008d43a 	srli	r4,r16,16
   48074:	843fffcc 	andi	r16,r16,65535
   48078:	1105883a 	add	r2,r2,r4
   4807c:	1006943a 	slli	r3,r2,16
   48080:	1028d43a 	srli	r20,r2,16
   48084:	1c07883a 	add	r3,r3,r16
   48088:	90c00015 	stw	r3,0(r18)
   4808c:	94800104 	addi	r18,r18,4
   48090:	9dbfee16 	blt	r19,r22,4804c <__multadd+0x48>
   48094:	a0000826 	beq	r20,zero,480b8 <__multadd+0xb4>
   48098:	b8800217 	ldw	r2,8(r23)
   4809c:	b080130e 	bge	r22,r2,480ec <__multadd+0xe8>
   480a0:	b585883a 	add	r2,r22,r22
   480a4:	1085883a 	add	r2,r2,r2
   480a8:	15c5883a 	add	r2,r2,r23
   480ac:	b0c00044 	addi	r3,r22,1
   480b0:	15000515 	stw	r20,20(r2)
   480b4:	b8c00415 	stw	r3,16(r23)
   480b8:	b805883a 	mov	r2,r23
   480bc:	dfc00917 	ldw	ra,36(sp)
   480c0:	df000817 	ldw	fp,32(sp)
   480c4:	ddc00717 	ldw	r23,28(sp)
   480c8:	dd800617 	ldw	r22,24(sp)
   480cc:	dd400517 	ldw	r21,20(sp)
   480d0:	dd000417 	ldw	r20,16(sp)
   480d4:	dcc00317 	ldw	r19,12(sp)
   480d8:	dc800217 	ldw	r18,8(sp)
   480dc:	dc400117 	ldw	r17,4(sp)
   480e0:	dc000017 	ldw	r16,0(sp)
   480e4:	dec00a04 	addi	sp,sp,40
   480e8:	f800283a 	ret
   480ec:	b9400117 	ldw	r5,4(r23)
   480f0:	e009883a 	mov	r4,fp
   480f4:	29400044 	addi	r5,r5,1
   480f8:	00478640 	call	47864 <_Balloc>
   480fc:	b9800417 	ldw	r6,16(r23)
   48100:	b9400304 	addi	r5,r23,12
   48104:	11000304 	addi	r4,r2,12
   48108:	318d883a 	add	r6,r6,r6
   4810c:	318d883a 	add	r6,r6,r6
   48110:	31800204 	addi	r6,r6,8
   48114:	1023883a 	mov	r17,r2
   48118:	00470cc0 	call	470cc <memcpy>
   4811c:	b80b883a 	mov	r5,r23
   48120:	e009883a 	mov	r4,fp
   48124:	00472e40 	call	472e4 <_Bfree>
   48128:	882f883a 	mov	r23,r17
   4812c:	003fdc06 	br	480a0 <__multadd+0x9c>

00048130 <__pow5mult>:
   48130:	defffa04 	addi	sp,sp,-24
   48134:	308000cc 	andi	r2,r6,3
   48138:	dd000415 	stw	r20,16(sp)
   4813c:	dcc00315 	stw	r19,12(sp)
   48140:	dc000015 	stw	r16,0(sp)
   48144:	dfc00515 	stw	ra,20(sp)
   48148:	dc800215 	stw	r18,8(sp)
   4814c:	dc400115 	stw	r17,4(sp)
   48150:	3021883a 	mov	r16,r6
   48154:	2027883a 	mov	r19,r4
   48158:	2829883a 	mov	r20,r5
   4815c:	10002b1e 	bne	r2,zero,4820c <__pow5mult+0xdc>
   48160:	8025d0ba 	srai	r18,r16,2
   48164:	90001b26 	beq	r18,zero,481d4 <__pow5mult+0xa4>
   48168:	9c001217 	ldw	r16,72(r19)
   4816c:	8000081e 	bne	r16,zero,48190 <__pow5mult+0x60>
   48170:	00003006 	br	48234 <__pow5mult+0x104>
   48174:	800b883a 	mov	r5,r16
   48178:	800d883a 	mov	r6,r16
   4817c:	9809883a 	mov	r4,r19
   48180:	90001426 	beq	r18,zero,481d4 <__pow5mult+0xa4>
   48184:	80800017 	ldw	r2,0(r16)
   48188:	10001b26 	beq	r2,zero,481f8 <__pow5mult+0xc8>
   4818c:	1021883a 	mov	r16,r2
   48190:	9080004c 	andi	r2,r18,1
   48194:	1005003a 	cmpeq	r2,r2,zero
   48198:	9025d07a 	srai	r18,r18,1
   4819c:	800d883a 	mov	r6,r16
   481a0:	9809883a 	mov	r4,r19
   481a4:	a00b883a 	mov	r5,r20
   481a8:	103ff21e 	bne	r2,zero,48174 <__pow5mult+0x44>
   481ac:	0047d740 	call	47d74 <__multiply>
   481b0:	a00b883a 	mov	r5,r20
   481b4:	9809883a 	mov	r4,r19
   481b8:	1023883a 	mov	r17,r2
   481bc:	00472e40 	call	472e4 <_Bfree>
   481c0:	8829883a 	mov	r20,r17
   481c4:	800b883a 	mov	r5,r16
   481c8:	800d883a 	mov	r6,r16
   481cc:	9809883a 	mov	r4,r19
   481d0:	903fec1e 	bne	r18,zero,48184 <__pow5mult+0x54>
   481d4:	a005883a 	mov	r2,r20
   481d8:	dfc00517 	ldw	ra,20(sp)
   481dc:	dd000417 	ldw	r20,16(sp)
   481e0:	dcc00317 	ldw	r19,12(sp)
   481e4:	dc800217 	ldw	r18,8(sp)
   481e8:	dc400117 	ldw	r17,4(sp)
   481ec:	dc000017 	ldw	r16,0(sp)
   481f0:	dec00604 	addi	sp,sp,24
   481f4:	f800283a 	ret
   481f8:	0047d740 	call	47d74 <__multiply>
   481fc:	80800015 	stw	r2,0(r16)
   48200:	1021883a 	mov	r16,r2
   48204:	10000015 	stw	zero,0(r2)
   48208:	003fe106 	br	48190 <__pow5mult+0x60>
   4820c:	1085883a 	add	r2,r2,r2
   48210:	00c00174 	movhi	r3,5
   48214:	18c8b604 	addi	r3,r3,8920
   48218:	1085883a 	add	r2,r2,r2
   4821c:	10c5883a 	add	r2,r2,r3
   48220:	11bfff17 	ldw	r6,-4(r2)
   48224:	000f883a 	mov	r7,zero
   48228:	00480040 	call	48004 <__multadd>
   4822c:	1029883a 	mov	r20,r2
   48230:	003fcb06 	br	48160 <__pow5mult+0x30>
   48234:	9809883a 	mov	r4,r19
   48238:	01409c44 	movi	r5,625
   4823c:	0047fc80 	call	47fc8 <__i2b>
   48240:	98801215 	stw	r2,72(r19)
   48244:	1021883a 	mov	r16,r2
   48248:	10000015 	stw	zero,0(r2)
   4824c:	003fd006 	br	48190 <__pow5mult+0x60>

00048250 <__s2b>:
   48250:	defff904 	addi	sp,sp,-28
   48254:	dcc00315 	stw	r19,12(sp)
   48258:	dc800215 	stw	r18,8(sp)
   4825c:	2827883a 	mov	r19,r5
   48260:	2025883a 	mov	r18,r4
   48264:	01400244 	movi	r5,9
   48268:	39000204 	addi	r4,r7,8
   4826c:	dd000415 	stw	r20,16(sp)
   48270:	dc400115 	stw	r17,4(sp)
   48274:	dfc00615 	stw	ra,24(sp)
   48278:	dd400515 	stw	r21,20(sp)
   4827c:	dc000015 	stw	r16,0(sp)
   48280:	3829883a 	mov	r20,r7
   48284:	3023883a 	mov	r17,r6
   48288:	004e8180 	call	4e818 <__divsi3>
   4828c:	00c00044 	movi	r3,1
   48290:	1880350e 	bge	r3,r2,48368 <__s2b+0x118>
   48294:	000b883a 	mov	r5,zero
   48298:	18c7883a 	add	r3,r3,r3
   4829c:	29400044 	addi	r5,r5,1
   482a0:	18bffd16 	blt	r3,r2,48298 <__s2b+0x48>
   482a4:	9009883a 	mov	r4,r18
   482a8:	00478640 	call	47864 <_Balloc>
   482ac:	1011883a 	mov	r8,r2
   482b0:	d8800717 	ldw	r2,28(sp)
   482b4:	00c00044 	movi	r3,1
   482b8:	01800244 	movi	r6,9
   482bc:	40800515 	stw	r2,20(r8)
   482c0:	40c00415 	stw	r3,16(r8)
   482c4:	3440260e 	bge	r6,r17,48360 <__s2b+0x110>
   482c8:	3021883a 	mov	r16,r6
   482cc:	99ab883a 	add	r21,r19,r6
   482d0:	9c05883a 	add	r2,r19,r16
   482d4:	11c00007 	ldb	r7,0(r2)
   482d8:	400b883a 	mov	r5,r8
   482dc:	9009883a 	mov	r4,r18
   482e0:	39fff404 	addi	r7,r7,-48
   482e4:	01800284 	movi	r6,10
   482e8:	00480040 	call	48004 <__multadd>
   482ec:	84000044 	addi	r16,r16,1
   482f0:	1011883a 	mov	r8,r2
   482f4:	8c3ff61e 	bne	r17,r16,482d0 <__s2b+0x80>
   482f8:	ac45883a 	add	r2,r21,r17
   482fc:	117ffe04 	addi	r5,r2,-8
   48300:	880d883a 	mov	r6,r17
   48304:	35000c0e 	bge	r6,r20,48338 <__s2b+0xe8>
   48308:	a185c83a 	sub	r2,r20,r6
   4830c:	2821883a 	mov	r16,r5
   48310:	28a3883a 	add	r17,r5,r2
   48314:	81c00007 	ldb	r7,0(r16)
   48318:	400b883a 	mov	r5,r8
   4831c:	9009883a 	mov	r4,r18
   48320:	39fff404 	addi	r7,r7,-48
   48324:	01800284 	movi	r6,10
   48328:	00480040 	call	48004 <__multadd>
   4832c:	84000044 	addi	r16,r16,1
   48330:	1011883a 	mov	r8,r2
   48334:	847ff71e 	bne	r16,r17,48314 <__s2b+0xc4>
   48338:	4005883a 	mov	r2,r8
   4833c:	dfc00617 	ldw	ra,24(sp)
   48340:	dd400517 	ldw	r21,20(sp)
   48344:	dd000417 	ldw	r20,16(sp)
   48348:	dcc00317 	ldw	r19,12(sp)
   4834c:	dc800217 	ldw	r18,8(sp)
   48350:	dc400117 	ldw	r17,4(sp)
   48354:	dc000017 	ldw	r16,0(sp)
   48358:	dec00704 	addi	sp,sp,28
   4835c:	f800283a 	ret
   48360:	99400284 	addi	r5,r19,10
   48364:	003fe706 	br	48304 <__s2b+0xb4>
   48368:	000b883a 	mov	r5,zero
   4836c:	003fcd06 	br	482a4 <__s2b+0x54>

00048370 <_realloc_r>:
   48370:	defff404 	addi	sp,sp,-48
   48374:	dd800815 	stw	r22,32(sp)
   48378:	dc800415 	stw	r18,16(sp)
   4837c:	dc400315 	stw	r17,12(sp)
   48380:	dfc00b15 	stw	ra,44(sp)
   48384:	df000a15 	stw	fp,40(sp)
   48388:	ddc00915 	stw	r23,36(sp)
   4838c:	dd400715 	stw	r21,28(sp)
   48390:	dd000615 	stw	r20,24(sp)
   48394:	dcc00515 	stw	r19,20(sp)
   48398:	dc000215 	stw	r16,8(sp)
   4839c:	2825883a 	mov	r18,r5
   483a0:	3023883a 	mov	r17,r6
   483a4:	202d883a 	mov	r22,r4
   483a8:	2800c926 	beq	r5,zero,486d0 <_realloc_r+0x360>
   483ac:	004f8440 	call	4f844 <__malloc_lock>
   483b0:	943ffe04 	addi	r16,r18,-8
   483b4:	88c002c4 	addi	r3,r17,11
   483b8:	00800584 	movi	r2,22
   483bc:	82000117 	ldw	r8,4(r16)
   483c0:	10c01b2e 	bgeu	r2,r3,48430 <_realloc_r+0xc0>
   483c4:	00bffe04 	movi	r2,-8
   483c8:	188e703a 	and	r7,r3,r2
   483cc:	3839883a 	mov	fp,r7
   483d0:	38001a16 	blt	r7,zero,4843c <_realloc_r+0xcc>
   483d4:	e4401936 	bltu	fp,r17,4843c <_realloc_r+0xcc>
   483d8:	013fff04 	movi	r4,-4
   483dc:	4126703a 	and	r19,r8,r4
   483e0:	99c02616 	blt	r19,r7,4847c <_realloc_r+0x10c>
   483e4:	802b883a 	mov	r21,r16
   483e8:	9829883a 	mov	r20,r19
   483ec:	84000204 	addi	r16,r16,8
   483f0:	a80f883a 	mov	r7,r21
   483f4:	a70dc83a 	sub	r6,r20,fp
   483f8:	008003c4 	movi	r2,15
   483fc:	1180c136 	bltu	r2,r6,48704 <_realloc_r+0x394>
   48400:	38800117 	ldw	r2,4(r7)
   48404:	a549883a 	add	r4,r20,r21
   48408:	1080004c 	andi	r2,r2,1
   4840c:	a084b03a 	or	r2,r20,r2
   48410:	38800115 	stw	r2,4(r7)
   48414:	20c00117 	ldw	r3,4(r4)
   48418:	18c00054 	ori	r3,r3,1
   4841c:	20c00115 	stw	r3,4(r4)
   48420:	b009883a 	mov	r4,r22
   48424:	004f8640 	call	4f864 <__malloc_unlock>
   48428:	8023883a 	mov	r17,r16
   4842c:	00000606 	br	48448 <_realloc_r+0xd8>
   48430:	01c00404 	movi	r7,16
   48434:	3839883a 	mov	fp,r7
   48438:	e47fe72e 	bgeu	fp,r17,483d8 <_realloc_r+0x68>
   4843c:	00800304 	movi	r2,12
   48440:	0023883a 	mov	r17,zero
   48444:	b0800015 	stw	r2,0(r22)
   48448:	8805883a 	mov	r2,r17
   4844c:	dfc00b17 	ldw	ra,44(sp)
   48450:	df000a17 	ldw	fp,40(sp)
   48454:	ddc00917 	ldw	r23,36(sp)
   48458:	dd800817 	ldw	r22,32(sp)
   4845c:	dd400717 	ldw	r21,28(sp)
   48460:	dd000617 	ldw	r20,24(sp)
   48464:	dcc00517 	ldw	r19,20(sp)
   48468:	dc800417 	ldw	r18,16(sp)
   4846c:	dc400317 	ldw	r17,12(sp)
   48470:	dc000217 	ldw	r16,8(sp)
   48474:	dec00c04 	addi	sp,sp,48
   48478:	f800283a 	ret
   4847c:	00800174 	movhi	r2,5
   48480:	108a2304 	addi	r2,r2,10380
   48484:	12400217 	ldw	r9,8(r2)
   48488:	84cd883a 	add	r6,r16,r19
   4848c:	802b883a 	mov	r21,r16
   48490:	3240b926 	beq	r6,r9,48778 <_realloc_r+0x408>
   48494:	31400117 	ldw	r5,4(r6)
   48498:	00bfff84 	movi	r2,-2
   4849c:	2884703a 	and	r2,r5,r2
   484a0:	1185883a 	add	r2,r2,r6
   484a4:	10c00117 	ldw	r3,4(r2)
   484a8:	18c0004c 	andi	r3,r3,1
   484ac:	1807003a 	cmpeq	r3,r3,zero
   484b0:	1800a326 	beq	r3,zero,48740 <_realloc_r+0x3d0>
   484b4:	2908703a 	and	r4,r5,r4
   484b8:	9929883a 	add	r20,r19,r4
   484bc:	a1c0a30e 	bge	r20,r7,4874c <_realloc_r+0x3dc>
   484c0:	4080004c 	andi	r2,r8,1
   484c4:	1000551e 	bne	r2,zero,4861c <_realloc_r+0x2ac>
   484c8:	80800017 	ldw	r2,0(r16)
   484cc:	80afc83a 	sub	r23,r16,r2
   484d0:	b8c00117 	ldw	r3,4(r23)
   484d4:	00bfff04 	movi	r2,-4
   484d8:	1884703a 	and	r2,r3,r2
   484dc:	30002e26 	beq	r6,zero,48598 <_realloc_r+0x228>
   484e0:	3240b926 	beq	r6,r9,487c8 <_realloc_r+0x458>
   484e4:	98a9883a 	add	r20,r19,r2
   484e8:	2509883a 	add	r4,r4,r20
   484ec:	d9000015 	stw	r4,0(sp)
   484f0:	21c02a16 	blt	r4,r7,4859c <_realloc_r+0x22c>
   484f4:	30800317 	ldw	r2,12(r6)
   484f8:	30c00217 	ldw	r3,8(r6)
   484fc:	01400904 	movi	r5,36
   48500:	99bfff04 	addi	r6,r19,-4
   48504:	18800315 	stw	r2,12(r3)
   48508:	10c00215 	stw	r3,8(r2)
   4850c:	b9000317 	ldw	r4,12(r23)
   48510:	b8800217 	ldw	r2,8(r23)
   48514:	b82b883a 	mov	r21,r23
   48518:	bc000204 	addi	r16,r23,8
   4851c:	20800215 	stw	r2,8(r4)
   48520:	11000315 	stw	r4,12(r2)
   48524:	2980e436 	bltu	r5,r6,488b8 <_realloc_r+0x548>
   48528:	008004c4 	movi	r2,19
   4852c:	9009883a 	mov	r4,r18
   48530:	8011883a 	mov	r8,r16
   48534:	11800f2e 	bgeu	r2,r6,48574 <_realloc_r+0x204>
   48538:	90800017 	ldw	r2,0(r18)
   4853c:	ba000404 	addi	r8,r23,16
   48540:	91000204 	addi	r4,r18,8
   48544:	b8800215 	stw	r2,8(r23)
   48548:	90c00117 	ldw	r3,4(r18)
   4854c:	008006c4 	movi	r2,27
   48550:	b8c00315 	stw	r3,12(r23)
   48554:	1180072e 	bgeu	r2,r6,48574 <_realloc_r+0x204>
   48558:	90c00217 	ldw	r3,8(r18)
   4855c:	ba000604 	addi	r8,r23,24
   48560:	91000404 	addi	r4,r18,16
   48564:	b8c00415 	stw	r3,16(r23)
   48568:	90800317 	ldw	r2,12(r18)
   4856c:	b8800515 	stw	r2,20(r23)
   48570:	3140e726 	beq	r6,r5,48910 <_realloc_r+0x5a0>
   48574:	20800017 	ldw	r2,0(r4)
   48578:	dd000017 	ldw	r20,0(sp)
   4857c:	b80f883a 	mov	r7,r23
   48580:	40800015 	stw	r2,0(r8)
   48584:	20c00117 	ldw	r3,4(r4)
   48588:	40c00115 	stw	r3,4(r8)
   4858c:	20800217 	ldw	r2,8(r4)
   48590:	40800215 	stw	r2,8(r8)
   48594:	003f9706 	br	483f4 <_realloc_r+0x84>
   48598:	98a9883a 	add	r20,r19,r2
   4859c:	a1c01f16 	blt	r20,r7,4861c <_realloc_r+0x2ac>
   485a0:	b8c00317 	ldw	r3,12(r23)
   485a4:	b8800217 	ldw	r2,8(r23)
   485a8:	99bfff04 	addi	r6,r19,-4
   485ac:	01400904 	movi	r5,36
   485b0:	b82b883a 	mov	r21,r23
   485b4:	18800215 	stw	r2,8(r3)
   485b8:	10c00315 	stw	r3,12(r2)
   485bc:	bc000204 	addi	r16,r23,8
   485c0:	2980c336 	bltu	r5,r6,488d0 <_realloc_r+0x560>
   485c4:	008004c4 	movi	r2,19
   485c8:	9009883a 	mov	r4,r18
   485cc:	8011883a 	mov	r8,r16
   485d0:	11800f2e 	bgeu	r2,r6,48610 <_realloc_r+0x2a0>
   485d4:	90800017 	ldw	r2,0(r18)
   485d8:	ba000404 	addi	r8,r23,16
   485dc:	91000204 	addi	r4,r18,8
   485e0:	b8800215 	stw	r2,8(r23)
   485e4:	90c00117 	ldw	r3,4(r18)
   485e8:	008006c4 	movi	r2,27
   485ec:	b8c00315 	stw	r3,12(r23)
   485f0:	1180072e 	bgeu	r2,r6,48610 <_realloc_r+0x2a0>
   485f4:	90c00217 	ldw	r3,8(r18)
   485f8:	ba000604 	addi	r8,r23,24
   485fc:	91000404 	addi	r4,r18,16
   48600:	b8c00415 	stw	r3,16(r23)
   48604:	90800317 	ldw	r2,12(r18)
   48608:	b8800515 	stw	r2,20(r23)
   4860c:	3140c726 	beq	r6,r5,4892c <_realloc_r+0x5bc>
   48610:	20800017 	ldw	r2,0(r4)
   48614:	b80f883a 	mov	r7,r23
   48618:	003fd906 	br	48580 <_realloc_r+0x210>
   4861c:	880b883a 	mov	r5,r17
   48620:	b009883a 	mov	r4,r22
   48624:	00467a80 	call	467a8 <_malloc_r>
   48628:	1023883a 	mov	r17,r2
   4862c:	10002526 	beq	r2,zero,486c4 <_realloc_r+0x354>
   48630:	80800117 	ldw	r2,4(r16)
   48634:	00ffff84 	movi	r3,-2
   48638:	893ffe04 	addi	r4,r17,-8
   4863c:	10c4703a 	and	r2,r2,r3
   48640:	8085883a 	add	r2,r16,r2
   48644:	20809526 	beq	r4,r2,4889c <_realloc_r+0x52c>
   48648:	99bfff04 	addi	r6,r19,-4
   4864c:	01c00904 	movi	r7,36
   48650:	39804536 	bltu	r7,r6,48768 <_realloc_r+0x3f8>
   48654:	008004c4 	movi	r2,19
   48658:	9009883a 	mov	r4,r18
   4865c:	880b883a 	mov	r5,r17
   48660:	11800f2e 	bgeu	r2,r6,486a0 <_realloc_r+0x330>
   48664:	90800017 	ldw	r2,0(r18)
   48668:	89400204 	addi	r5,r17,8
   4866c:	91000204 	addi	r4,r18,8
   48670:	88800015 	stw	r2,0(r17)
   48674:	90c00117 	ldw	r3,4(r18)
   48678:	008006c4 	movi	r2,27
   4867c:	88c00115 	stw	r3,4(r17)
   48680:	1180072e 	bgeu	r2,r6,486a0 <_realloc_r+0x330>
   48684:	90c00217 	ldw	r3,8(r18)
   48688:	89400404 	addi	r5,r17,16
   4868c:	91000404 	addi	r4,r18,16
   48690:	88c00215 	stw	r3,8(r17)
   48694:	90800317 	ldw	r2,12(r18)
   48698:	88800315 	stw	r2,12(r17)
   4869c:	31c09126 	beq	r6,r7,488e4 <_realloc_r+0x574>
   486a0:	20800017 	ldw	r2,0(r4)
   486a4:	28800015 	stw	r2,0(r5)
   486a8:	20c00117 	ldw	r3,4(r4)
   486ac:	28c00115 	stw	r3,4(r5)
   486b0:	20800217 	ldw	r2,8(r4)
   486b4:	28800215 	stw	r2,8(r5)
   486b8:	900b883a 	mov	r5,r18
   486bc:	b009883a 	mov	r4,r22
   486c0:	0045bf40 	call	45bf4 <_free_r>
   486c4:	b009883a 	mov	r4,r22
   486c8:	004f8640 	call	4f864 <__malloc_unlock>
   486cc:	003f5e06 	br	48448 <_realloc_r+0xd8>
   486d0:	300b883a 	mov	r5,r6
   486d4:	dfc00b17 	ldw	ra,44(sp)
   486d8:	df000a17 	ldw	fp,40(sp)
   486dc:	ddc00917 	ldw	r23,36(sp)
   486e0:	dd800817 	ldw	r22,32(sp)
   486e4:	dd400717 	ldw	r21,28(sp)
   486e8:	dd000617 	ldw	r20,24(sp)
   486ec:	dcc00517 	ldw	r19,20(sp)
   486f0:	dc800417 	ldw	r18,16(sp)
   486f4:	dc400317 	ldw	r17,12(sp)
   486f8:	dc000217 	ldw	r16,8(sp)
   486fc:	dec00c04 	addi	sp,sp,48
   48700:	00467a81 	jmpi	467a8 <_malloc_r>
   48704:	38800117 	ldw	r2,4(r7)
   48708:	e54b883a 	add	r5,fp,r21
   4870c:	31000054 	ori	r4,r6,1
   48710:	1080004c 	andi	r2,r2,1
   48714:	1704b03a 	or	r2,r2,fp
   48718:	38800115 	stw	r2,4(r7)
   4871c:	29000115 	stw	r4,4(r5)
   48720:	2987883a 	add	r3,r5,r6
   48724:	18800117 	ldw	r2,4(r3)
   48728:	29400204 	addi	r5,r5,8
   4872c:	b009883a 	mov	r4,r22
   48730:	10800054 	ori	r2,r2,1
   48734:	18800115 	stw	r2,4(r3)
   48738:	0045bf40 	call	45bf4 <_free_r>
   4873c:	003f3806 	br	48420 <_realloc_r+0xb0>
   48740:	000d883a 	mov	r6,zero
   48744:	0009883a 	mov	r4,zero
   48748:	003f5d06 	br	484c0 <_realloc_r+0x150>
   4874c:	30c00217 	ldw	r3,8(r6)
   48750:	30800317 	ldw	r2,12(r6)
   48754:	800f883a 	mov	r7,r16
   48758:	84000204 	addi	r16,r16,8
   4875c:	10c00215 	stw	r3,8(r2)
   48760:	18800315 	stw	r2,12(r3)
   48764:	003f2306 	br	483f4 <_realloc_r+0x84>
   48768:	8809883a 	mov	r4,r17
   4876c:	900b883a 	mov	r5,r18
   48770:	004716c0 	call	4716c <memmove>
   48774:	003fd006 	br	486b8 <_realloc_r+0x348>
   48778:	30800117 	ldw	r2,4(r6)
   4877c:	e0c00404 	addi	r3,fp,16
   48780:	1108703a 	and	r4,r2,r4
   48784:	9905883a 	add	r2,r19,r4
   48788:	10ff4d16 	blt	r2,r3,484c0 <_realloc_r+0x150>
   4878c:	1705c83a 	sub	r2,r2,fp
   48790:	870b883a 	add	r5,r16,fp
   48794:	10800054 	ori	r2,r2,1
   48798:	28800115 	stw	r2,4(r5)
   4879c:	80c00117 	ldw	r3,4(r16)
   487a0:	00800174 	movhi	r2,5
   487a4:	108a2304 	addi	r2,r2,10380
   487a8:	b009883a 	mov	r4,r22
   487ac:	18c0004c 	andi	r3,r3,1
   487b0:	e0c6b03a 	or	r3,fp,r3
   487b4:	11400215 	stw	r5,8(r2)
   487b8:	80c00115 	stw	r3,4(r16)
   487bc:	004f8640 	call	4f864 <__malloc_unlock>
   487c0:	84400204 	addi	r17,r16,8
   487c4:	003f2006 	br	48448 <_realloc_r+0xd8>
   487c8:	98a9883a 	add	r20,r19,r2
   487cc:	2509883a 	add	r4,r4,r20
   487d0:	e0800404 	addi	r2,fp,16
   487d4:	d9000115 	stw	r4,4(sp)
   487d8:	20bf7016 	blt	r4,r2,4859c <_realloc_r+0x22c>
   487dc:	b8c00317 	ldw	r3,12(r23)
   487e0:	b8800217 	ldw	r2,8(r23)
   487e4:	99bfff04 	addi	r6,r19,-4
   487e8:	01400904 	movi	r5,36
   487ec:	18800215 	stw	r2,8(r3)
   487f0:	10c00315 	stw	r3,12(r2)
   487f4:	bc400204 	addi	r17,r23,8
   487f8:	29804136 	bltu	r5,r6,48900 <_realloc_r+0x590>
   487fc:	008004c4 	movi	r2,19
   48800:	9009883a 	mov	r4,r18
   48804:	880f883a 	mov	r7,r17
   48808:	11800f2e 	bgeu	r2,r6,48848 <_realloc_r+0x4d8>
   4880c:	90800017 	ldw	r2,0(r18)
   48810:	b9c00404 	addi	r7,r23,16
   48814:	91000204 	addi	r4,r18,8
   48818:	b8800215 	stw	r2,8(r23)
   4881c:	90c00117 	ldw	r3,4(r18)
   48820:	008006c4 	movi	r2,27
   48824:	b8c00315 	stw	r3,12(r23)
   48828:	1180072e 	bgeu	r2,r6,48848 <_realloc_r+0x4d8>
   4882c:	90c00217 	ldw	r3,8(r18)
   48830:	b9c00604 	addi	r7,r23,24
   48834:	91000404 	addi	r4,r18,16
   48838:	b8c00415 	stw	r3,16(r23)
   4883c:	90800317 	ldw	r2,12(r18)
   48840:	b8800515 	stw	r2,20(r23)
   48844:	31404026 	beq	r6,r5,48948 <_realloc_r+0x5d8>
   48848:	20800017 	ldw	r2,0(r4)
   4884c:	38800015 	stw	r2,0(r7)
   48850:	20c00117 	ldw	r3,4(r4)
   48854:	38c00115 	stw	r3,4(r7)
   48858:	20800217 	ldw	r2,8(r4)
   4885c:	38800215 	stw	r2,8(r7)
   48860:	d8c00117 	ldw	r3,4(sp)
   48864:	bf0b883a 	add	r5,r23,fp
   48868:	b009883a 	mov	r4,r22
   4886c:	1f05c83a 	sub	r2,r3,fp
   48870:	10800054 	ori	r2,r2,1
   48874:	28800115 	stw	r2,4(r5)
   48878:	b8c00117 	ldw	r3,4(r23)
   4887c:	00800174 	movhi	r2,5
   48880:	108a2304 	addi	r2,r2,10380
   48884:	11400215 	stw	r5,8(r2)
   48888:	18c0004c 	andi	r3,r3,1
   4888c:	e0c6b03a 	or	r3,fp,r3
   48890:	b8c00115 	stw	r3,4(r23)
   48894:	004f8640 	call	4f864 <__malloc_unlock>
   48898:	003eeb06 	br	48448 <_realloc_r+0xd8>
   4889c:	20800117 	ldw	r2,4(r4)
   488a0:	00ffff04 	movi	r3,-4
   488a4:	800f883a 	mov	r7,r16
   488a8:	10c4703a 	and	r2,r2,r3
   488ac:	98a9883a 	add	r20,r19,r2
   488b0:	84000204 	addi	r16,r16,8
   488b4:	003ecf06 	br	483f4 <_realloc_r+0x84>
   488b8:	900b883a 	mov	r5,r18
   488bc:	8009883a 	mov	r4,r16
   488c0:	004716c0 	call	4716c <memmove>
   488c4:	dd000017 	ldw	r20,0(sp)
   488c8:	b80f883a 	mov	r7,r23
   488cc:	003ec906 	br	483f4 <_realloc_r+0x84>
   488d0:	900b883a 	mov	r5,r18
   488d4:	8009883a 	mov	r4,r16
   488d8:	004716c0 	call	4716c <memmove>
   488dc:	b80f883a 	mov	r7,r23
   488e0:	003ec406 	br	483f4 <_realloc_r+0x84>
   488e4:	90c00417 	ldw	r3,16(r18)
   488e8:	89400604 	addi	r5,r17,24
   488ec:	91000604 	addi	r4,r18,24
   488f0:	88c00415 	stw	r3,16(r17)
   488f4:	90800517 	ldw	r2,20(r18)
   488f8:	88800515 	stw	r2,20(r17)
   488fc:	003f6806 	br	486a0 <_realloc_r+0x330>
   48900:	900b883a 	mov	r5,r18
   48904:	8809883a 	mov	r4,r17
   48908:	004716c0 	call	4716c <memmove>
   4890c:	003fd406 	br	48860 <_realloc_r+0x4f0>
   48910:	90c00417 	ldw	r3,16(r18)
   48914:	91000604 	addi	r4,r18,24
   48918:	ba000804 	addi	r8,r23,32
   4891c:	b8c00615 	stw	r3,24(r23)
   48920:	90800517 	ldw	r2,20(r18)
   48924:	b8800715 	stw	r2,28(r23)
   48928:	003f1206 	br	48574 <_realloc_r+0x204>
   4892c:	90c00417 	ldw	r3,16(r18)
   48930:	91000604 	addi	r4,r18,24
   48934:	ba000804 	addi	r8,r23,32
   48938:	b8c00615 	stw	r3,24(r23)
   4893c:	90800517 	ldw	r2,20(r18)
   48940:	b8800715 	stw	r2,28(r23)
   48944:	003f3206 	br	48610 <_realloc_r+0x2a0>
   48948:	90c00417 	ldw	r3,16(r18)
   4894c:	91000604 	addi	r4,r18,24
   48950:	b9c00804 	addi	r7,r23,32
   48954:	b8c00615 	stw	r3,24(r23)
   48958:	90800517 	ldw	r2,20(r18)
   4895c:	b8800715 	stw	r2,28(r23)
   48960:	003fb906 	br	48848 <_realloc_r+0x4d8>

00048964 <__srefill_r>:
   48964:	defffd04 	addi	sp,sp,-12
   48968:	dc400115 	stw	r17,4(sp)
   4896c:	dc000015 	stw	r16,0(sp)
   48970:	dfc00215 	stw	ra,8(sp)
   48974:	2023883a 	mov	r17,r4
   48978:	2821883a 	mov	r16,r5
   4897c:	20000226 	beq	r4,zero,48988 <__srefill_r+0x24>
   48980:	20800e17 	ldw	r2,56(r4)
   48984:	10004126 	beq	r2,zero,48a8c <__srefill_r+0x128>
   48988:	80c0030b 	ldhu	r3,12(r16)
   4898c:	80000115 	stw	zero,4(r16)
   48990:	1880080c 	andi	r2,r3,32
   48994:	1000361e 	bne	r2,zero,48a70 <__srefill_r+0x10c>
   48998:	1880010c 	andi	r2,r3,4
   4899c:	1000211e 	bne	r2,zero,48a24 <__srefill_r+0xc0>
   489a0:	1880040c 	andi	r2,r3,16
   489a4:	10005026 	beq	r2,zero,48ae8 <__srefill_r+0x184>
   489a8:	1880020c 	andi	r2,r3,8
   489ac:	1000541e 	bne	r2,zero,48b00 <__srefill_r+0x19c>
   489b0:	8080030b 	ldhu	r2,12(r16)
   489b4:	10800114 	ori	r2,r2,4
   489b8:	8080030d 	sth	r2,12(r16)
   489bc:	80800417 	ldw	r2,16(r16)
   489c0:	10004526 	beq	r2,zero,48ad8 <__srefill_r+0x174>
   489c4:	8080030b 	ldhu	r2,12(r16)
   489c8:	108000cc 	andi	r2,r2,3
   489cc:	1000361e 	bne	r2,zero,48aa8 <__srefill_r+0x144>
   489d0:	81800417 	ldw	r6,16(r16)
   489d4:	80c00817 	ldw	r3,32(r16)
   489d8:	81400717 	ldw	r5,28(r16)
   489dc:	81c00517 	ldw	r7,20(r16)
   489e0:	8809883a 	mov	r4,r17
   489e4:	81800015 	stw	r6,0(r16)
   489e8:	183ee83a 	callr	r3
   489ec:	80c0030b 	ldhu	r3,12(r16)
   489f0:	1009883a 	mov	r4,r2
   489f4:	80800115 	stw	r2,4(r16)
   489f8:	00b7ffc4 	movi	r2,-8193
   489fc:	1884703a 	and	r2,r3,r2
   48a00:	8080030d 	sth	r2,12(r16)
   48a04:	0100230e 	bge	zero,r4,48a94 <__srefill_r+0x130>
   48a08:	0009883a 	mov	r4,zero
   48a0c:	2005883a 	mov	r2,r4
   48a10:	dfc00217 	ldw	ra,8(sp)
   48a14:	dc400117 	ldw	r17,4(sp)
   48a18:	dc000017 	ldw	r16,0(sp)
   48a1c:	dec00304 	addi	sp,sp,12
   48a20:	f800283a 	ret
   48a24:	81400c17 	ldw	r5,48(r16)
   48a28:	283fe426 	beq	r5,zero,489bc <__srefill_r+0x58>
   48a2c:	80801004 	addi	r2,r16,64
   48a30:	28800226 	beq	r5,r2,48a3c <__srefill_r+0xd8>
   48a34:	8809883a 	mov	r4,r17
   48a38:	0045bf40 	call	45bf4 <_free_r>
   48a3c:	80800f17 	ldw	r2,60(r16)
   48a40:	80000c15 	stw	zero,48(r16)
   48a44:	80800115 	stw	r2,4(r16)
   48a48:	103fdc26 	beq	r2,zero,489bc <__srefill_r+0x58>
   48a4c:	80800e17 	ldw	r2,56(r16)
   48a50:	0009883a 	mov	r4,zero
   48a54:	80800015 	stw	r2,0(r16)
   48a58:	2005883a 	mov	r2,r4
   48a5c:	dfc00217 	ldw	ra,8(sp)
   48a60:	dc400117 	ldw	r17,4(sp)
   48a64:	dc000017 	ldw	r16,0(sp)
   48a68:	dec00304 	addi	sp,sp,12
   48a6c:	f800283a 	ret
   48a70:	013fffc4 	movi	r4,-1
   48a74:	2005883a 	mov	r2,r4
   48a78:	dfc00217 	ldw	ra,8(sp)
   48a7c:	dc400117 	ldw	r17,4(sp)
   48a80:	dc000017 	ldw	r16,0(sp)
   48a84:	dec00304 	addi	sp,sp,12
   48a88:	f800283a 	ret
   48a8c:	00455f00 	call	455f0 <__sinit>
   48a90:	003fbd06 	br	48988 <__srefill_r+0x24>
   48a94:	20000b1e 	bne	r4,zero,48ac4 <__srefill_r+0x160>
   48a98:	10800814 	ori	r2,r2,32
   48a9c:	013fffc4 	movi	r4,-1
   48aa0:	8080030d 	sth	r2,12(r16)
   48aa4:	003fd906 	br	48a0c <__srefill_r+0xa8>
   48aa8:	00800174 	movhi	r2,5
   48aac:	108fb304 	addi	r2,r2,16076
   48ab0:	11000017 	ldw	r4,0(r2)
   48ab4:	01400174 	movhi	r5,5
   48ab8:	2962ca04 	addi	r5,r5,-29912
   48abc:	004646c0 	call	4646c <_fwalk>
   48ac0:	003fc306 	br	489d0 <__srefill_r+0x6c>
   48ac4:	10801014 	ori	r2,r2,64
   48ac8:	013fffc4 	movi	r4,-1
   48acc:	8080030d 	sth	r2,12(r16)
   48ad0:	80000115 	stw	zero,4(r16)
   48ad4:	003fcd06 	br	48a0c <__srefill_r+0xa8>
   48ad8:	8809883a 	mov	r4,r17
   48adc:	800b883a 	mov	r5,r16
   48ae0:	00466140 	call	46614 <__smakebuf_r>
   48ae4:	003fb706 	br	489c4 <__srefill_r+0x60>
   48ae8:	18c01014 	ori	r3,r3,64
   48aec:	00800244 	movi	r2,9
   48af0:	013fffc4 	movi	r4,-1
   48af4:	88800015 	stw	r2,0(r17)
   48af8:	80c0030d 	sth	r3,12(r16)
   48afc:	003fc306 	br	48a0c <__srefill_r+0xa8>
   48b00:	8809883a 	mov	r4,r17
   48b04:	800b883a 	mov	r5,r16
   48b08:	00453580 	call	45358 <_fflush_r>
   48b0c:	103fd81e 	bne	r2,zero,48a70 <__srefill_r+0x10c>
   48b10:	8080030b 	ldhu	r2,12(r16)
   48b14:	80000215 	stw	zero,8(r16)
   48b18:	80000615 	stw	zero,24(r16)
   48b1c:	10bffdcc 	andi	r2,r2,65527
   48b20:	8080030d 	sth	r2,12(r16)
   48b24:	003fa206 	br	489b0 <__srefill_r+0x4c>

00048b28 <lflush>:
   48b28:	20c0030b 	ldhu	r3,12(r4)
   48b2c:	01400244 	movi	r5,9
   48b30:	0005883a 	mov	r2,zero
   48b34:	18c0024c 	andi	r3,r3,9
   48b38:	19400126 	beq	r3,r5,48b40 <lflush+0x18>
   48b3c:	f800283a 	ret
   48b40:	00455541 	jmpi	45554 <fflush>

00048b44 <__isinfd>:
   48b44:	200d883a 	mov	r6,r4
   48b48:	0109c83a 	sub	r4,zero,r4
   48b4c:	2188b03a 	or	r4,r4,r6
   48b50:	2008d7fa 	srli	r4,r4,31
   48b54:	00a00034 	movhi	r2,32768
   48b58:	10bfffc4 	addi	r2,r2,-1
   48b5c:	1144703a 	and	r2,r2,r5
   48b60:	2088b03a 	or	r4,r4,r2
   48b64:	009ffc34 	movhi	r2,32752
   48b68:	1105c83a 	sub	r2,r2,r4
   48b6c:	0087c83a 	sub	r3,zero,r2
   48b70:	10c4b03a 	or	r2,r2,r3
   48b74:	1004d7fa 	srli	r2,r2,31
   48b78:	00c00044 	movi	r3,1
   48b7c:	1885c83a 	sub	r2,r3,r2
   48b80:	f800283a 	ret

00048b84 <__isnand>:
   48b84:	200d883a 	mov	r6,r4
   48b88:	0109c83a 	sub	r4,zero,r4
   48b8c:	2188b03a 	or	r4,r4,r6
   48b90:	2008d7fa 	srli	r4,r4,31
   48b94:	00a00034 	movhi	r2,32768
   48b98:	10bfffc4 	addi	r2,r2,-1
   48b9c:	1144703a 	and	r2,r2,r5
   48ba0:	2088b03a 	or	r4,r4,r2
   48ba4:	009ffc34 	movhi	r2,32752
   48ba8:	1105c83a 	sub	r2,r2,r4
   48bac:	1004d7fa 	srli	r2,r2,31
   48bb0:	f800283a 	ret

00048bb4 <_sbrk_r>:
   48bb4:	defffd04 	addi	sp,sp,-12
   48bb8:	dc000015 	stw	r16,0(sp)
   48bbc:	04000174 	movhi	r16,5
   48bc0:	84166b04 	addi	r16,r16,22956
   48bc4:	dc400115 	stw	r17,4(sp)
   48bc8:	80000015 	stw	zero,0(r16)
   48bcc:	2023883a 	mov	r17,r4
   48bd0:	2809883a 	mov	r4,r5
   48bd4:	dfc00215 	stw	ra,8(sp)
   48bd8:	004fa800 	call	4fa80 <sbrk>
   48bdc:	1007883a 	mov	r3,r2
   48be0:	00bfffc4 	movi	r2,-1
   48be4:	18800626 	beq	r3,r2,48c00 <_sbrk_r+0x4c>
   48be8:	1805883a 	mov	r2,r3
   48bec:	dfc00217 	ldw	ra,8(sp)
   48bf0:	dc400117 	ldw	r17,4(sp)
   48bf4:	dc000017 	ldw	r16,0(sp)
   48bf8:	dec00304 	addi	sp,sp,12
   48bfc:	f800283a 	ret
   48c00:	80800017 	ldw	r2,0(r16)
   48c04:	103ff826 	beq	r2,zero,48be8 <_sbrk_r+0x34>
   48c08:	88800015 	stw	r2,0(r17)
   48c0c:	1805883a 	mov	r2,r3
   48c10:	dfc00217 	ldw	ra,8(sp)
   48c14:	dc400117 	ldw	r17,4(sp)
   48c18:	dc000017 	ldw	r16,0(sp)
   48c1c:	dec00304 	addi	sp,sp,12
   48c20:	f800283a 	ret

00048c24 <__sccl>:
   48c24:	28c00003 	ldbu	r3,0(r5)
   48c28:	00801784 	movi	r2,94
   48c2c:	2a000044 	addi	r8,r5,1
   48c30:	18802526 	beq	r3,r2,48cc8 <__sccl+0xa4>
   48c34:	180f883a 	mov	r7,r3
   48c38:	0013883a 	mov	r9,zero
   48c3c:	000d883a 	mov	r6,zero
   48c40:	0007883a 	mov	r3,zero
   48c44:	01404004 	movi	r5,256
   48c48:	1905883a 	add	r2,r3,r4
   48c4c:	18c00044 	addi	r3,r3,1
   48c50:	11800005 	stb	r6,0(r2)
   48c54:	197ffc1e 	bne	r3,r5,48c48 <__sccl+0x24>
   48c58:	38000c26 	beq	r7,zero,48c8c <__sccl+0x68>
   48c5c:	00800044 	movi	r2,1
   48c60:	124dc83a 	sub	r6,r2,r9
   48c64:	3905883a 	add	r2,r7,r4
   48c68:	11800005 	stb	r6,0(r2)
   48c6c:	41400044 	addi	r5,r8,1
   48c70:	02400b44 	movi	r9,45
   48c74:	02801744 	movi	r10,93
   48c78:	28bfffc3 	ldbu	r2,-1(r5)
   48c7c:	2811883a 	mov	r8,r5
   48c80:	12400726 	beq	r2,r9,48ca0 <__sccl+0x7c>
   48c84:	12800226 	beq	r2,r10,48c90 <__sccl+0x6c>
   48c88:	1000031e 	bne	r2,zero,48c98 <__sccl+0x74>
   48c8c:	423fffc4 	addi	r8,r8,-1
   48c90:	4005883a 	mov	r2,r8
   48c94:	f800283a 	ret
   48c98:	100f883a 	mov	r7,r2
   48c9c:	003ff106 	br	48c64 <__sccl+0x40>
   48ca0:	28c00003 	ldbu	r3,0(r5)
   48ca4:	1a800d26 	beq	r3,r10,48cdc <__sccl+0xb8>
   48ca8:	19c00c16 	blt	r3,r7,48cdc <__sccl+0xb8>
   48cac:	21c5883a 	add	r2,r4,r7
   48cb0:	39c00044 	addi	r7,r7,1
   48cb4:	11800045 	stb	r6,1(r2)
   48cb8:	10800044 	addi	r2,r2,1
   48cbc:	38fffc16 	blt	r7,r3,48cb0 <__sccl+0x8c>
   48cc0:	29400084 	addi	r5,r5,2
   48cc4:	003fec06 	br	48c78 <__sccl+0x54>
   48cc8:	29c00043 	ldbu	r7,1(r5)
   48ccc:	02400044 	movi	r9,1
   48cd0:	2a000084 	addi	r8,r5,2
   48cd4:	480d883a 	mov	r6,r9
   48cd8:	003fd906 	br	48c40 <__sccl+0x1c>
   48cdc:	01c00b44 	movi	r7,45
   48ce0:	003fe006 	br	48c64 <__sccl+0x40>

00048ce4 <nanf>:
   48ce4:	009ff034 	movhi	r2,32704
   48ce8:	f800283a 	ret

00048cec <sprintf>:
   48cec:	deffe504 	addi	sp,sp,-108
   48cf0:	2013883a 	mov	r9,r4
   48cf4:	dfc01815 	stw	ra,96(sp)
   48cf8:	d9801915 	stw	r6,100(sp)
   48cfc:	d9c01a15 	stw	r7,104(sp)
   48d00:	d8801904 	addi	r2,sp,100
   48d04:	d8800015 	stw	r2,0(sp)
   48d08:	00800174 	movhi	r2,5
   48d0c:	108fb204 	addi	r2,r2,16072
   48d10:	11000017 	ldw	r4,0(r2)
   48d14:	d9c00017 	ldw	r7,0(sp)
   48d18:	00808204 	movi	r2,520
   48d1c:	00e00034 	movhi	r3,32768
   48d20:	18ffffc4 	addi	r3,r3,-1
   48d24:	280d883a 	mov	r6,r5
   48d28:	d880040d 	sth	r2,16(sp)
   48d2c:	d9400104 	addi	r5,sp,4
   48d30:	00bfffc4 	movi	r2,-1
   48d34:	d8c00615 	stw	r3,24(sp)
   48d38:	d8c00315 	stw	r3,12(sp)
   48d3c:	da400515 	stw	r9,20(sp)
   48d40:	d880048d 	sth	r2,18(sp)
   48d44:	da400115 	stw	r9,4(sp)
   48d48:	00403b40 	call	403b4 <___vfprintf_internal_r>
   48d4c:	d8c00117 	ldw	r3,4(sp)
   48d50:	18000005 	stb	zero,0(r3)
   48d54:	dfc01817 	ldw	ra,96(sp)
   48d58:	dec01b04 	addi	sp,sp,108
   48d5c:	f800283a 	ret

00048d60 <_sprintf_r>:
   48d60:	deffe604 	addi	sp,sp,-104
   48d64:	2813883a 	mov	r9,r5
   48d68:	dfc01815 	stw	ra,96(sp)
   48d6c:	d9c01915 	stw	r7,100(sp)
   48d70:	d8801904 	addi	r2,sp,100
   48d74:	d8800015 	stw	r2,0(sp)
   48d78:	100f883a 	mov	r7,r2
   48d7c:	00808204 	movi	r2,520
   48d80:	00e00034 	movhi	r3,32768
   48d84:	18ffffc4 	addi	r3,r3,-1
   48d88:	d880040d 	sth	r2,16(sp)
   48d8c:	d9400104 	addi	r5,sp,4
   48d90:	00bfffc4 	movi	r2,-1
   48d94:	d8c00615 	stw	r3,24(sp)
   48d98:	d8c00315 	stw	r3,12(sp)
   48d9c:	da400515 	stw	r9,20(sp)
   48da0:	d880048d 	sth	r2,18(sp)
   48da4:	da400115 	stw	r9,4(sp)
   48da8:	00403b40 	call	403b4 <___vfprintf_internal_r>
   48dac:	d8c00117 	ldw	r3,4(sp)
   48db0:	18000005 	stb	zero,0(r3)
   48db4:	dfc01817 	ldw	ra,96(sp)
   48db8:	dec01a04 	addi	sp,sp,104
   48dbc:	f800283a 	ret

00048dc0 <__sclose>:
   48dc0:	2940038f 	ldh	r5,14(r5)
   48dc4:	004b6441 	jmpi	4b644 <_close_r>

00048dc8 <__sseek>:
   48dc8:	defffe04 	addi	sp,sp,-8
   48dcc:	dc000015 	stw	r16,0(sp)
   48dd0:	2821883a 	mov	r16,r5
   48dd4:	2940038f 	ldh	r5,14(r5)
   48dd8:	dfc00115 	stw	ra,4(sp)
   48ddc:	004c4880 	call	4c488 <_lseek_r>
   48de0:	1007883a 	mov	r3,r2
   48de4:	00bfffc4 	movi	r2,-1
   48de8:	18800926 	beq	r3,r2,48e10 <__sseek+0x48>
   48dec:	8080030b 	ldhu	r2,12(r16)
   48df0:	80c01415 	stw	r3,80(r16)
   48df4:	10840014 	ori	r2,r2,4096
   48df8:	8080030d 	sth	r2,12(r16)
   48dfc:	1805883a 	mov	r2,r3
   48e00:	dfc00117 	ldw	ra,4(sp)
   48e04:	dc000017 	ldw	r16,0(sp)
   48e08:	dec00204 	addi	sp,sp,8
   48e0c:	f800283a 	ret
   48e10:	8080030b 	ldhu	r2,12(r16)
   48e14:	10bbffcc 	andi	r2,r2,61439
   48e18:	8080030d 	sth	r2,12(r16)
   48e1c:	1805883a 	mov	r2,r3
   48e20:	dfc00117 	ldw	ra,4(sp)
   48e24:	dc000017 	ldw	r16,0(sp)
   48e28:	dec00204 	addi	sp,sp,8
   48e2c:	f800283a 	ret

00048e30 <__swrite>:
   48e30:	2880030b 	ldhu	r2,12(r5)
   48e34:	defffb04 	addi	sp,sp,-20
   48e38:	dcc00315 	stw	r19,12(sp)
   48e3c:	1080400c 	andi	r2,r2,256
   48e40:	dc800215 	stw	r18,8(sp)
   48e44:	dc400115 	stw	r17,4(sp)
   48e48:	dc000015 	stw	r16,0(sp)
   48e4c:	3027883a 	mov	r19,r6
   48e50:	3825883a 	mov	r18,r7
   48e54:	dfc00415 	stw	ra,16(sp)
   48e58:	2821883a 	mov	r16,r5
   48e5c:	000d883a 	mov	r6,zero
   48e60:	01c00084 	movi	r7,2
   48e64:	2023883a 	mov	r17,r4
   48e68:	10000226 	beq	r2,zero,48e74 <__swrite+0x44>
   48e6c:	2940038f 	ldh	r5,14(r5)
   48e70:	004c4880 	call	4c488 <_lseek_r>
   48e74:	8080030b 	ldhu	r2,12(r16)
   48e78:	8140038f 	ldh	r5,14(r16)
   48e7c:	8809883a 	mov	r4,r17
   48e80:	10bbffcc 	andi	r2,r2,61439
   48e84:	980d883a 	mov	r6,r19
   48e88:	900f883a 	mov	r7,r18
   48e8c:	8080030d 	sth	r2,12(r16)
   48e90:	dfc00417 	ldw	ra,16(sp)
   48e94:	dcc00317 	ldw	r19,12(sp)
   48e98:	dc800217 	ldw	r18,8(sp)
   48e9c:	dc400117 	ldw	r17,4(sp)
   48ea0:	dc000017 	ldw	r16,0(sp)
   48ea4:	dec00504 	addi	sp,sp,20
   48ea8:	004b5041 	jmpi	4b504 <_write_r>

00048eac <__sread>:
   48eac:	defffe04 	addi	sp,sp,-8
   48eb0:	dc000015 	stw	r16,0(sp)
   48eb4:	2821883a 	mov	r16,r5
   48eb8:	2940038f 	ldh	r5,14(r5)
   48ebc:	dfc00115 	stw	ra,4(sp)
   48ec0:	004c5000 	call	4c500 <_read_r>
   48ec4:	1007883a 	mov	r3,r2
   48ec8:	10000816 	blt	r2,zero,48eec <__sread+0x40>
   48ecc:	80801417 	ldw	r2,80(r16)
   48ed0:	10c5883a 	add	r2,r2,r3
   48ed4:	80801415 	stw	r2,80(r16)
   48ed8:	1805883a 	mov	r2,r3
   48edc:	dfc00117 	ldw	ra,4(sp)
   48ee0:	dc000017 	ldw	r16,0(sp)
   48ee4:	dec00204 	addi	sp,sp,8
   48ee8:	f800283a 	ret
   48eec:	8080030b 	ldhu	r2,12(r16)
   48ef0:	10bbffcc 	andi	r2,r2,61439
   48ef4:	8080030d 	sth	r2,12(r16)
   48ef8:	1805883a 	mov	r2,r3
   48efc:	dfc00117 	ldw	ra,4(sp)
   48f00:	dc000017 	ldw	r16,0(sp)
   48f04:	dec00204 	addi	sp,sp,8
   48f08:	f800283a 	ret

00048f0c <strcmp>:
   48f0c:	2144b03a 	or	r2,r4,r5
   48f10:	108000cc 	andi	r2,r2,3
   48f14:	10001d1e 	bne	r2,zero,48f8c <strcmp+0x80>
   48f18:	200f883a 	mov	r7,r4
   48f1c:	28800017 	ldw	r2,0(r5)
   48f20:	21000017 	ldw	r4,0(r4)
   48f24:	280d883a 	mov	r6,r5
   48f28:	2080161e 	bne	r4,r2,48f84 <strcmp+0x78>
   48f2c:	023fbff4 	movhi	r8,65279
   48f30:	423fbfc4 	addi	r8,r8,-257
   48f34:	2207883a 	add	r3,r4,r8
   48f38:	01602074 	movhi	r5,32897
   48f3c:	29602004 	addi	r5,r5,-32640
   48f40:	1946703a 	and	r3,r3,r5
   48f44:	0104303a 	nor	r2,zero,r4
   48f48:	10c4703a 	and	r2,r2,r3
   48f4c:	10001c1e 	bne	r2,zero,48fc0 <strcmp+0xb4>
   48f50:	4013883a 	mov	r9,r8
   48f54:	2811883a 	mov	r8,r5
   48f58:	00000106 	br	48f60 <strcmp+0x54>
   48f5c:	1800181e 	bne	r3,zero,48fc0 <strcmp+0xb4>
   48f60:	39c00104 	addi	r7,r7,4
   48f64:	39000017 	ldw	r4,0(r7)
   48f68:	31800104 	addi	r6,r6,4
   48f6c:	31400017 	ldw	r5,0(r6)
   48f70:	2245883a 	add	r2,r4,r9
   48f74:	1204703a 	and	r2,r2,r8
   48f78:	0106303a 	nor	r3,zero,r4
   48f7c:	1886703a 	and	r3,r3,r2
   48f80:	217ff626 	beq	r4,r5,48f5c <strcmp+0x50>
   48f84:	3809883a 	mov	r4,r7
   48f88:	300b883a 	mov	r5,r6
   48f8c:	20c00007 	ldb	r3,0(r4)
   48f90:	1800051e 	bne	r3,zero,48fa8 <strcmp+0x9c>
   48f94:	00000606 	br	48fb0 <strcmp+0xa4>
   48f98:	21000044 	addi	r4,r4,1
   48f9c:	20c00007 	ldb	r3,0(r4)
   48fa0:	29400044 	addi	r5,r5,1
   48fa4:	18000226 	beq	r3,zero,48fb0 <strcmp+0xa4>
   48fa8:	28800007 	ldb	r2,0(r5)
   48fac:	18bffa26 	beq	r3,r2,48f98 <strcmp+0x8c>
   48fb0:	20c00003 	ldbu	r3,0(r4)
   48fb4:	28800003 	ldbu	r2,0(r5)
   48fb8:	1885c83a 	sub	r2,r3,r2
   48fbc:	f800283a 	ret
   48fc0:	0005883a 	mov	r2,zero
   48fc4:	f800283a 	ret

00048fc8 <strlen>:
   48fc8:	208000cc 	andi	r2,r4,3
   48fcc:	2011883a 	mov	r8,r4
   48fd0:	1000161e 	bne	r2,zero,4902c <strlen+0x64>
   48fd4:	20c00017 	ldw	r3,0(r4)
   48fd8:	017fbff4 	movhi	r5,65279
   48fdc:	297fbfc4 	addi	r5,r5,-257
   48fe0:	01e02074 	movhi	r7,32897
   48fe4:	39e02004 	addi	r7,r7,-32640
   48fe8:	1945883a 	add	r2,r3,r5
   48fec:	11c4703a 	and	r2,r2,r7
   48ff0:	00c6303a 	nor	r3,zero,r3
   48ff4:	1886703a 	and	r3,r3,r2
   48ff8:	18000c1e 	bne	r3,zero,4902c <strlen+0x64>
   48ffc:	280d883a 	mov	r6,r5
   49000:	380b883a 	mov	r5,r7
   49004:	21000104 	addi	r4,r4,4
   49008:	20800017 	ldw	r2,0(r4)
   4900c:	1187883a 	add	r3,r2,r6
   49010:	1946703a 	and	r3,r3,r5
   49014:	0084303a 	nor	r2,zero,r2
   49018:	10c4703a 	and	r2,r2,r3
   4901c:	103ff926 	beq	r2,zero,49004 <strlen+0x3c>
   49020:	20800007 	ldb	r2,0(r4)
   49024:	10000326 	beq	r2,zero,49034 <strlen+0x6c>
   49028:	21000044 	addi	r4,r4,1
   4902c:	20800007 	ldb	r2,0(r4)
   49030:	103ffd1e 	bne	r2,zero,49028 <strlen+0x60>
   49034:	2205c83a 	sub	r2,r4,r8
   49038:	f800283a 	ret

0004903c <match>:
   4903c:	21800017 	ldw	r6,0(r4)
   49040:	01c01004 	movi	r7,64
   49044:	02001684 	movi	r8,90
   49048:	28800007 	ldb	r2,0(r5)
   4904c:	29400044 	addi	r5,r5,1
   49050:	10000826 	beq	r2,zero,49074 <match+0x38>
   49054:	31800044 	addi	r6,r6,1
   49058:	30c00007 	ldb	r3,0(r6)
   4905c:	38c0020e 	bge	r7,r3,49068 <match+0x2c>
   49060:	40c00116 	blt	r8,r3,49068 <match+0x2c>
   49064:	18c00804 	addi	r3,r3,32
   49068:	18bff726 	beq	r3,r2,49048 <match+0xc>
   4906c:	0005883a 	mov	r2,zero
   49070:	f800283a 	ret
   49074:	30800044 	addi	r2,r6,1
   49078:	20800015 	stw	r2,0(r4)
   4907c:	00800044 	movi	r2,1
   49080:	f800283a 	ret

00049084 <_strtod_r>:
   49084:	deffd504 	addi	sp,sp,-172
   49088:	df002915 	stw	fp,164(sp)
   4908c:	dd402615 	stw	r21,152(sp)
   49090:	dd002515 	stw	r20,148(sp)
   49094:	dfc02a15 	stw	ra,168(sp)
   49098:	ddc02815 	stw	r23,160(sp)
   4909c:	dd802715 	stw	r22,156(sp)
   490a0:	dcc02415 	stw	r19,144(sp)
   490a4:	dc802315 	stw	r18,140(sp)
   490a8:	dc402215 	stw	r17,136(sp)
   490ac:	dc002115 	stw	r16,132(sp)
   490b0:	2829883a 	mov	r20,r5
   490b4:	202b883a 	mov	r21,r4
   490b8:	d9801d15 	stw	r6,116(sp)
   490bc:	d8000915 	stw	zero,36(sp)
   490c0:	d8000a15 	stw	zero,40(sp)
   490c4:	d9400415 	stw	r5,16(sp)
   490c8:	df000904 	addi	fp,sp,36
   490cc:	dc000417 	ldw	r16,16(sp)
   490d0:	00800b44 	movi	r2,45
   490d4:	80c00003 	ldbu	r3,0(r16)
   490d8:	10c03536 	bltu	r2,r3,491b0 <_strtod_r+0x12c>
   490dc:	18c5883a 	add	r2,r3,r3
   490e0:	1085883a 	add	r2,r2,r2
   490e4:	00c00174 	movhi	r3,5
   490e8:	18e43e04 	addi	r3,r3,-28424
   490ec:	10c5883a 	add	r2,r2,r3
   490f0:	11000017 	ldw	r4,0(r2)
   490f4:	2000683a 	jmp	r4
   490f8:	00049330 	cmpltui	zero,zero,4684
   490fc:	000491b0 	cmpltui	zero,zero,4678
   49100:	000491b0 	cmpltui	zero,zero,4678
   49104:	000491b0 	cmpltui	zero,zero,4678
   49108:	000491b0 	cmpltui	zero,zero,4678
   4910c:	000491b0 	cmpltui	zero,zero,4678
   49110:	000491b0 	cmpltui	zero,zero,4678
   49114:	000491b0 	cmpltui	zero,zero,4678
   49118:	000491b0 	cmpltui	zero,zero,4678
   4911c:	00049678 	rdprs	zero,zero,4697
   49120:	00049678 	rdprs	zero,zero,4697
   49124:	00049678 	rdprs	zero,zero,4697
   49128:	00049678 	rdprs	zero,zero,4697
   4912c:	00049678 	rdprs	zero,zero,4697
   49130:	000491b0 	cmpltui	zero,zero,4678
   49134:	000491b0 	cmpltui	zero,zero,4678
   49138:	000491b0 	cmpltui	zero,zero,4678
   4913c:	000491b0 	cmpltui	zero,zero,4678
   49140:	000491b0 	cmpltui	zero,zero,4678
   49144:	000491b0 	cmpltui	zero,zero,4678
   49148:	000491b0 	cmpltui	zero,zero,4678
   4914c:	000491b0 	cmpltui	zero,zero,4678
   49150:	000491b0 	cmpltui	zero,zero,4678
   49154:	000491b0 	cmpltui	zero,zero,4678
   49158:	000491b0 	cmpltui	zero,zero,4678
   4915c:	000491b0 	cmpltui	zero,zero,4678
   49160:	000491b0 	cmpltui	zero,zero,4678
   49164:	000491b0 	cmpltui	zero,zero,4678
   49168:	000491b0 	cmpltui	zero,zero,4678
   4916c:	000491b0 	cmpltui	zero,zero,4678
   49170:	000491b0 	cmpltui	zero,zero,4678
   49174:	000491b0 	cmpltui	zero,zero,4678
   49178:	00049678 	rdprs	zero,zero,4697
   4917c:	000491b0 	cmpltui	zero,zero,4678
   49180:	000491b0 	cmpltui	zero,zero,4678
   49184:	000491b0 	cmpltui	zero,zero,4678
   49188:	000491b0 	cmpltui	zero,zero,4678
   4918c:	000491b0 	cmpltui	zero,zero,4678
   49190:	000491b0 	cmpltui	zero,zero,4678
   49194:	000491b0 	cmpltui	zero,zero,4678
   49198:	000491b0 	cmpltui	zero,zero,4678
   4919c:	000491b0 	cmpltui	zero,zero,4678
   491a0:	000491b0 	cmpltui	zero,zero,4678
   491a4:	00049658 	cmpnei	zero,zero,4697
   491a8:	000491b0 	cmpltui	zero,zero,4678
   491ac:	00049684 	movi	zero,4698
   491b0:	d8001515 	stw	zero,84(sp)
   491b4:	80c00007 	ldb	r3,0(r16)
   491b8:	00800c04 	movi	r2,48
   491bc:	1880e926 	beq	r3,r2,49564 <_strtod_r+0x4e0>
   491c0:	d8001615 	stw	zero,88(sp)
   491c4:	dc001415 	stw	r16,80(sp)
   491c8:	84400007 	ldb	r17,0(r16)
   491cc:	00800bc4 	movi	r2,47
   491d0:	1443760e 	bge	r2,r17,49fac <_strtod_r+0xf28>
   491d4:	00800e44 	movi	r2,57
   491d8:	14437416 	blt	r2,r17,49fac <_strtod_r+0xf28>
   491dc:	8025883a 	mov	r18,r16
   491e0:	0027883a 	mov	r19,zero
   491e4:	d8001215 	stw	zero,72(sp)
   491e8:	d8001115 	stw	zero,68(sp)
   491ec:	00000f06 	br	4922c <_strtod_r+0x1a8>
   491f0:	d9001217 	ldw	r4,72(sp)
   491f4:	01400284 	movi	r5,10
   491f8:	004e8e80 	call	4e8e8 <__mulsi3>
   491fc:	1445883a 	add	r2,r2,r17
   49200:	10bff404 	addi	r2,r2,-48
   49204:	d8801215 	stw	r2,72(sp)
   49208:	94000044 	addi	r16,r18,1
   4920c:	dc000415 	stw	r16,16(sp)
   49210:	84400007 	ldb	r17,0(r16)
   49214:	00800bc4 	movi	r2,47
   49218:	9cc00044 	addi	r19,r19,1
   4921c:	8025883a 	mov	r18,r16
   49220:	1440130e 	bge	r2,r17,49270 <_strtod_r+0x1ec>
   49224:	00800e44 	movi	r2,57
   49228:	14401116 	blt	r2,r17,49270 <_strtod_r+0x1ec>
   4922c:	00800204 	movi	r2,8
   49230:	14ffef0e 	bge	r2,r19,491f0 <_strtod_r+0x16c>
   49234:	008003c4 	movi	r2,15
   49238:	14fff316 	blt	r2,r19,49208 <_strtod_r+0x184>
   4923c:	d9001117 	ldw	r4,68(sp)
   49240:	01400284 	movi	r5,10
   49244:	94000044 	addi	r16,r18,1
   49248:	004e8e80 	call	4e8e8 <__mulsi3>
   4924c:	1445883a 	add	r2,r2,r17
   49250:	10bff404 	addi	r2,r2,-48
   49254:	d8801115 	stw	r2,68(sp)
   49258:	dc000415 	stw	r16,16(sp)
   4925c:	84400007 	ldb	r17,0(r16)
   49260:	00800bc4 	movi	r2,47
   49264:	9cc00044 	addi	r19,r19,1
   49268:	8025883a 	mov	r18,r16
   4926c:	147fed16 	blt	r2,r17,49224 <_strtod_r+0x1a0>
   49270:	00800b84 	movi	r2,46
   49274:	8880c926 	beq	r17,r2,4959c <_strtod_r+0x518>
   49278:	dcc01815 	stw	r19,96(sp)
   4927c:	d8001b15 	stw	zero,108(sp)
   49280:	d8001715 	stw	zero,92(sp)
   49284:	000d883a 	mov	r6,zero
   49288:	00801944 	movi	r2,101
   4928c:	88802126 	beq	r17,r2,49314 <_strtod_r+0x290>
   49290:	00801144 	movi	r2,69
   49294:	88801f26 	beq	r17,r2,49314 <_strtod_r+0x290>
   49298:	d9001817 	ldw	r4,96(sp)
   4929c:	2024c03a 	cmpne	r18,r4,zero
   492a0:	0009883a 	mov	r4,zero
   492a4:	9000651e 	bne	r18,zero,4943c <_strtod_r+0x3b8>
   492a8:	3000c926 	beq	r6,zero,495d0 <_strtod_r+0x54c>
   492ac:	d8801d17 	ldw	r2,116(sp)
   492b0:	10000326 	beq	r2,zero,492c0 <_strtod_r+0x23c>
   492b4:	d8800417 	ldw	r2,16(sp)
   492b8:	d8c01d17 	ldw	r3,116(sp)
   492bc:	18800015 	stw	r2,0(r3)
   492c0:	d9001517 	ldw	r4,84(sp)
   492c4:	2005003a 	cmpeq	r2,r4,zero
   492c8:	10001c1e 	bne	r2,zero,4933c <_strtod_r+0x2b8>
   492cc:	e0800017 	ldw	r2,0(fp)
   492d0:	e0c00117 	ldw	r3,4(fp)
   492d4:	1009883a 	mov	r4,r2
   492d8:	1960003c 	xorhi	r5,r3,32768
   492dc:	2005883a 	mov	r2,r4
   492e0:	2807883a 	mov	r3,r5
   492e4:	dfc02a17 	ldw	ra,168(sp)
   492e8:	df002917 	ldw	fp,164(sp)
   492ec:	ddc02817 	ldw	r23,160(sp)
   492f0:	dd802717 	ldw	r22,156(sp)
   492f4:	dd402617 	ldw	r21,152(sp)
   492f8:	dd002517 	ldw	r20,148(sp)
   492fc:	dcc02417 	ldw	r19,144(sp)
   49300:	dc802317 	ldw	r18,140(sp)
   49304:	dc402217 	ldw	r17,136(sp)
   49308:	dc002117 	ldw	r16,132(sp)
   4930c:	dec02b04 	addi	sp,sp,172
   49310:	f800283a 	ret
   49314:	d8801817 	ldw	r2,96(sp)
   49318:	1024c03a 	cmpne	r18,r2,zero
   4931c:	90000a1e 	bne	r18,zero,49348 <_strtod_r+0x2c4>
   49320:	3000091e 	bne	r6,zero,49348 <_strtod_r+0x2c4>
   49324:	d8c01617 	ldw	r3,88(sp)
   49328:	1805003a 	cmpeq	r2,r3,zero
   4932c:	10000626 	beq	r2,zero,49348 <_strtod_r+0x2c4>
   49330:	d8001515 	stw	zero,84(sp)
   49334:	dd000415 	stw	r20,16(sp)
   49338:	003fdc06 	br	492ac <_strtod_r+0x228>
   4933c:	e1000017 	ldw	r4,0(fp)
   49340:	e1400117 	ldw	r5,4(fp)
   49344:	003fe506 	br	492dc <_strtod_r+0x258>
   49348:	dd000417 	ldw	r20,16(sp)
   4934c:	00800ac4 	movi	r2,43
   49350:	a4000044 	addi	r16,r20,1
   49354:	dc000415 	stw	r16,16(sp)
   49358:	a0c00047 	ldb	r3,1(r20)
   4935c:	8009883a 	mov	r4,r16
   49360:	1880cb26 	beq	r3,r2,49690 <_strtod_r+0x60c>
   49364:	00800b44 	movi	r2,45
   49368:	18838326 	beq	r3,r2,4a178 <_strtod_r+0x10f4>
   4936c:	1823883a 	mov	r17,r3
   49370:	88fff404 	addi	r3,r17,-48
   49374:	00800244 	movi	r2,9
   49378:	d8001915 	stw	zero,100(sp)
   4937c:	10c0cb36 	bltu	r2,r3,496ac <_strtod_r+0x628>
   49380:	00800c04 	movi	r2,48
   49384:	8880061e 	bne	r17,r2,493a0 <_strtod_r+0x31c>
   49388:	dc000417 	ldw	r16,16(sp)
   4938c:	8805883a 	mov	r2,r17
   49390:	84000044 	addi	r16,r16,1
   49394:	dc000415 	stw	r16,16(sp)
   49398:	84400007 	ldb	r17,0(r16)
   4939c:	88bffc26 	beq	r17,r2,49390 <_strtod_r+0x30c>
   493a0:	88fff3c4 	addi	r3,r17,-49
   493a4:	00800204 	movi	r2,8
   493a8:	10ffbd36 	bltu	r2,r3,492a0 <_strtod_r+0x21c>
   493ac:	dc000417 	ldw	r16,16(sp)
   493b0:	893ff404 	addi	r4,r17,-48
   493b4:	00c00bc4 	movi	r3,47
   493b8:	dc001315 	stw	r16,76(sp)
   493bc:	84000044 	addi	r16,r16,1
   493c0:	dc000415 	stw	r16,16(sp)
   493c4:	84400007 	ldb	r17,0(r16)
   493c8:	1c40100e 	bge	r3,r17,4940c <_strtod_r+0x388>
   493cc:	00800e44 	movi	r2,57
   493d0:	14400e16 	blt	r2,r17,4940c <_strtod_r+0x388>
   493d4:	182f883a 	mov	r23,r3
   493d8:	102d883a 	mov	r22,r2
   493dc:	00000106 	br	493e4 <_strtod_r+0x360>
   493e0:	b4400a16 	blt	r22,r17,4940c <_strtod_r+0x388>
   493e4:	84000044 	addi	r16,r16,1
   493e8:	01400284 	movi	r5,10
   493ec:	d9802015 	stw	r6,128(sp)
   493f0:	004e8e80 	call	4e8e8 <__mulsi3>
   493f4:	dc000415 	stw	r16,16(sp)
   493f8:	8885883a 	add	r2,r17,r2
   493fc:	84400007 	ldb	r17,0(r16)
   49400:	113ff404 	addi	r4,r2,-48
   49404:	d9802017 	ldw	r6,128(sp)
   49408:	bc7ff516 	blt	r23,r17,493e0 <_strtod_r+0x35c>
   4940c:	d8801317 	ldw	r2,76(sp)
   49410:	8087c83a 	sub	r3,r16,r2
   49414:	00800204 	movi	r2,8
   49418:	10c2ff16 	blt	r2,r3,4a018 <_strtod_r+0xf94>
   4941c:	009387c4 	movi	r2,19999
   49420:	1100010e 	bge	r2,r4,49428 <_strtod_r+0x3a4>
   49424:	1009883a 	mov	r4,r2
   49428:	d8c01917 	ldw	r3,100(sp)
   4942c:	1805003a 	cmpeq	r2,r3,zero
   49430:	103f9c1e 	bne	r2,zero,492a4 <_strtod_r+0x220>
   49434:	0109c83a 	sub	r4,zero,r4
   49438:	903f9b26 	beq	r18,zero,492a8 <_strtod_r+0x224>
   4943c:	d8801717 	ldw	r2,92(sp)
   49440:	2089c83a 	sub	r4,r4,r2
   49444:	d9000f15 	stw	r4,60(sp)
   49448:	9800811e 	bne	r19,zero,49650 <_strtod_r+0x5cc>
   4944c:	dd001817 	ldw	r20,96(sp)
   49450:	dc801817 	ldw	r18,96(sp)
   49454:	00800404 	movi	r2,16
   49458:	1480010e 	bge	r2,r18,49460 <_strtod_r+0x3dc>
   4945c:	1025883a 	mov	r18,r2
   49460:	d9001217 	ldw	r4,72(sp)
   49464:	004e6080 	call	4e608 <__floatunsidf>
   49468:	100f883a 	mov	r7,r2
   4946c:	e0800015 	stw	r2,0(fp)
   49470:	00800244 	movi	r2,9
   49474:	e0c00115 	stw	r3,4(fp)
   49478:	1480160e 	bge	r2,r18,494d4 <_strtod_r+0x450>
   4947c:	900c90fa 	slli	r6,r18,3
   49480:	01000174 	movhi	r4,5
   49484:	21087004 	addi	r4,r4,8640
   49488:	180b883a 	mov	r5,r3
   4948c:	310d883a 	add	r6,r6,r4
   49490:	30ffef17 	ldw	r3,-68(r6)
   49494:	30bfee17 	ldw	r2,-72(r6)
   49498:	3809883a 	mov	r4,r7
   4949c:	180f883a 	mov	r7,r3
   494a0:	100d883a 	mov	r6,r2
   494a4:	004da780 	call	4da78 <__muldf3>
   494a8:	d9001117 	ldw	r4,68(sp)
   494ac:	1021883a 	mov	r16,r2
   494b0:	1823883a 	mov	r17,r3
   494b4:	004e6080 	call	4e608 <__floatunsidf>
   494b8:	880b883a 	mov	r5,r17
   494bc:	180f883a 	mov	r7,r3
   494c0:	8009883a 	mov	r4,r16
   494c4:	100d883a 	mov	r6,r2
   494c8:	004da040 	call	4da04 <__adddf3>
   494cc:	e0c00115 	stw	r3,4(fp)
   494d0:	e0800015 	stw	r2,0(fp)
   494d4:	d8c01817 	ldw	r3,96(sp)
   494d8:	010003c4 	movi	r4,15
   494dc:	20c09e16 	blt	r4,r3,49758 <_strtod_r+0x6d4>
   494e0:	d8800f17 	ldw	r2,60(sp)
   494e4:	103f7126 	beq	r2,zero,492ac <_strtod_r+0x228>
   494e8:	0083d90e 	bge	zero,r2,4a450 <_strtod_r+0x13cc>
   494ec:	d8c00f17 	ldw	r3,60(sp)
   494f0:	00800584 	movi	r2,22
   494f4:	10c2ca0e 	bge	r2,r3,4a020 <_strtod_r+0xf9c>
   494f8:	d8801817 	ldw	r2,96(sp)
   494fc:	d8c00f17 	ldw	r3,60(sp)
   49500:	20a3c83a 	sub	r17,r4,r2
   49504:	88800584 	addi	r2,r17,22
   49508:	10c09316 	blt	r2,r3,49758 <_strtod_r+0x6d4>
   4950c:	880890fa 	slli	r4,r17,3
   49510:	04000174 	movhi	r16,5
   49514:	84087004 	addi	r16,r16,8640
   49518:	e0800017 	ldw	r2,0(fp)
   4951c:	2409883a 	add	r4,r4,r16
   49520:	22000017 	ldw	r8,0(r4)
   49524:	22400117 	ldw	r9,4(r4)
   49528:	e0c00117 	ldw	r3,4(fp)
   4952c:	1009883a 	mov	r4,r2
   49530:	480f883a 	mov	r7,r9
   49534:	180b883a 	mov	r5,r3
   49538:	400d883a 	mov	r6,r8
   4953c:	004da780 	call	4da78 <__muldf3>
   49540:	d9000f17 	ldw	r4,60(sp)
   49544:	180b883a 	mov	r5,r3
   49548:	2455c83a 	sub	r10,r4,r17
   4954c:	501490fa 	slli	r10,r10,3
   49550:	1009883a 	mov	r4,r2
   49554:	5415883a 	add	r10,r10,r16
   49558:	52000017 	ldw	r8,0(r10)
   4955c:	52400117 	ldw	r9,4(r10)
   49560:	0002b906 	br	4a048 <_strtod_r+0xfc4>
   49564:	80c00047 	ldb	r3,1(r16)
   49568:	00801604 	movi	r2,88
   4956c:	18805226 	beq	r3,r2,496b8 <_strtod_r+0x634>
   49570:	00801e04 	movi	r2,120
   49574:	18805026 	beq	r3,r2,496b8 <_strtod_r+0x634>
   49578:	84000044 	addi	r16,r16,1
   4957c:	dc000415 	stw	r16,16(sp)
   49580:	80c00007 	ldb	r3,0(r16)
   49584:	00800c04 	movi	r2,48
   49588:	18bffb26 	beq	r3,r2,49578 <_strtod_r+0x4f4>
   4958c:	183f4726 	beq	r3,zero,492ac <_strtod_r+0x228>
   49590:	01000044 	movi	r4,1
   49594:	d9001615 	stw	r4,88(sp)
   49598:	003f0a06 	br	491c4 <_strtod_r+0x140>
   4959c:	84000044 	addi	r16,r16,1
   495a0:	dc000415 	stw	r16,16(sp)
   495a4:	94400047 	ldb	r17,1(r18)
   495a8:	9800ba26 	beq	r19,zero,49894 <_strtod_r+0x810>
   495ac:	dcc01815 	stw	r19,96(sp)
   495b0:	d8001715 	stw	zero,92(sp)
   495b4:	000d883a 	mov	r6,zero
   495b8:	8dbff404 	addi	r22,r17,-48
   495bc:	00800244 	movi	r2,9
   495c0:	15826e2e 	bgeu	r2,r22,49f7c <_strtod_r+0xef8>
   495c4:	01000044 	movi	r4,1
   495c8:	d9001b15 	stw	r4,108(sp)
   495cc:	003f2e06 	br	49288 <_strtod_r+0x204>
   495d0:	d8c01617 	ldw	r3,88(sp)
   495d4:	1804c03a 	cmpne	r2,r3,zero
   495d8:	103f341e 	bne	r2,zero,492ac <_strtod_r+0x228>
   495dc:	d9001b17 	ldw	r4,108(sp)
   495e0:	2004c03a 	cmpne	r2,r4,zero
   495e4:	103f521e 	bne	r2,zero,49330 <_strtod_r+0x2ac>
   495e8:	00801384 	movi	r2,78
   495ec:	8883b526 	beq	r17,r2,4a4c4 <_strtod_r+0x1440>
   495f0:	1443b016 	blt	r2,r17,4a4b4 <_strtod_r+0x1430>
   495f4:	00801244 	movi	r2,73
   495f8:	88bf4d1e 	bne	r17,r2,49330 <_strtod_r+0x2ac>
   495fc:	dc000404 	addi	r16,sp,16
   49600:	8009883a 	mov	r4,r16
   49604:	01400174 	movhi	r5,5
   49608:	2948b904 	addi	r5,r5,8932
   4960c:	004903c0 	call	4903c <match>
   49610:	103f4726 	beq	r2,zero,49330 <_strtod_r+0x2ac>
   49614:	d8800417 	ldw	r2,16(sp)
   49618:	8009883a 	mov	r4,r16
   4961c:	01400174 	movhi	r5,5
   49620:	2948ba04 	addi	r5,r5,8936
   49624:	143fffc4 	addi	r16,r2,-1
   49628:	dc000415 	stw	r16,16(sp)
   4962c:	004903c0 	call	4903c <match>
   49630:	1000031e 	bne	r2,zero,49640 <_strtod_r+0x5bc>
   49634:	d8800417 	ldw	r2,16(sp)
   49638:	14000044 	addi	r16,r2,1
   4963c:	dc000415 	stw	r16,16(sp)
   49640:	019ffc34 	movhi	r6,32752
   49644:	e1800115 	stw	r6,4(fp)
   49648:	e0000015 	stw	zero,0(fp)
   4964c:	003f1706 	br	492ac <_strtod_r+0x228>
   49650:	9829883a 	mov	r20,r19
   49654:	003f7e06 	br	49450 <_strtod_r+0x3cc>
   49658:	d8001515 	stw	zero,84(sp)
   4965c:	84000044 	addi	r16,r16,1
   49660:	dc000415 	stw	r16,16(sp)
   49664:	80800007 	ldb	r2,0(r16)
   49668:	103ed21e 	bne	r2,zero,491b4 <_strtod_r+0x130>
   4966c:	d8001515 	stw	zero,84(sp)
   49670:	dd000415 	stw	r20,16(sp)
   49674:	003f0d06 	br	492ac <_strtod_r+0x228>
   49678:	84000044 	addi	r16,r16,1
   4967c:	dc000415 	stw	r16,16(sp)
   49680:	003e9206 	br	490cc <_strtod_r+0x48>
   49684:	00800044 	movi	r2,1
   49688:	d8801515 	stw	r2,84(sp)
   4968c:	003ff306 	br	4965c <_strtod_r+0x5d8>
   49690:	d8001915 	stw	zero,100(sp)
   49694:	84000044 	addi	r16,r16,1
   49698:	dc000415 	stw	r16,16(sp)
   4969c:	24400047 	ldb	r17,1(r4)
   496a0:	00800244 	movi	r2,9
   496a4:	88fff404 	addi	r3,r17,-48
   496a8:	10ff352e 	bgeu	r2,r3,49380 <_strtod_r+0x2fc>
   496ac:	0009883a 	mov	r4,zero
   496b0:	dd000415 	stw	r20,16(sp)
   496b4:	003efb06 	br	492a4 <_strtod_r+0x220>
   496b8:	d8c01517 	ldw	r3,84(sp)
   496bc:	04400174 	movhi	r17,5
   496c0:	8c4b2a04 	addi	r17,r17,11432
   496c4:	d8800504 	addi	r2,sp,20
   496c8:	a809883a 	mov	r4,r21
   496cc:	d9400404 	addi	r5,sp,16
   496d0:	880d883a 	mov	r6,r17
   496d4:	d9c00604 	addi	r7,sp,24
   496d8:	d8800015 	stw	r2,0(sp)
   496dc:	d8c00115 	stw	r3,4(sp)
   496e0:	004b9880 	call	4b988 <__gethex>
   496e4:	140001cc 	andi	r16,r2,7
   496e8:	1025883a 	mov	r18,r2
   496ec:	803eef26 	beq	r16,zero,492ac <_strtod_r+0x228>
   496f0:	04c00184 	movi	r19,6
   496f4:	84ff0e26 	beq	r16,r19,49330 <_strtod_r+0x2ac>
   496f8:	d9800517 	ldw	r6,20(sp)
   496fc:	30000626 	beq	r6,zero,49718 <_strtod_r+0x694>
   49700:	89400017 	ldw	r5,0(r17)
   49704:	d9000d04 	addi	r4,sp,52
   49708:	00477840 	call	47784 <__copybits>
   4970c:	d9400517 	ldw	r5,20(sp)
   49710:	a809883a 	mov	r4,r21
   49714:	00472e40 	call	472e4 <_Bfree>
   49718:	d9400617 	ldw	r5,24(sp)
   4971c:	9c025436 	bltu	r19,r16,4a070 <_strtod_r+0xfec>
   49720:	8405883a 	add	r2,r16,r16
   49724:	1085883a 	add	r2,r2,r2
   49728:	00c00174 	movhi	r3,5
   4972c:	18e5cf04 	addi	r3,r3,-26820
   49730:	10c5883a 	add	r2,r2,r3
   49734:	11000017 	ldw	r4,0(r2)
   49738:	2000683a 	jmp	r4
   4973c:	0004a0b0 	cmpltui	zero,zero,4738
   49740:	0004a0bc 	xorhi	zero,zero,4738
   49744:	0004a060 	cmpeqi	zero,zero,4737
   49748:	0004a088 	cmpgei	zero,zero,4738
   4974c:	0004a098 	cmpnei	zero,zero,4738
   49750:	0004a0bc 	xorhi	zero,zero,4738
   49754:	0004a0b0 	cmpltui	zero,zero,4738
   49758:	d9001817 	ldw	r4,96(sp)
   4975c:	d8c00f17 	ldw	r3,60(sp)
   49760:	2485c83a 	sub	r2,r4,r18
   49764:	18a1883a 	add	r16,r3,r2
   49768:	0402e80e 	bge	zero,r16,4a30c <_strtod_r+0x1288>
   4976c:	814003cc 	andi	r5,r16,15
   49770:	28000f26 	beq	r5,zero,497b0 <_strtod_r+0x72c>
   49774:	280a90fa 	slli	r5,r5,3
   49778:	01000174 	movhi	r4,5
   4977c:	21087004 	addi	r4,r4,8640
   49780:	e0800017 	ldw	r2,0(fp)
   49784:	290b883a 	add	r5,r5,r4
   49788:	2a000017 	ldw	r8,0(r5)
   4978c:	e0c00117 	ldw	r3,4(fp)
   49790:	2a400117 	ldw	r9,4(r5)
   49794:	1009883a 	mov	r4,r2
   49798:	180b883a 	mov	r5,r3
   4979c:	480f883a 	mov	r7,r9
   497a0:	400d883a 	mov	r6,r8
   497a4:	004da780 	call	4da78 <__muldf3>
   497a8:	e0c00115 	stw	r3,4(fp)
   497ac:	e0800015 	stw	r2,0(fp)
   497b0:	00bffc04 	movi	r2,-16
   497b4:	808c703a 	and	r6,r16,r2
   497b8:	30006726 	beq	r6,zero,49958 <_strtod_r+0x8d4>
   497bc:	00804d04 	movi	r2,308
   497c0:	11820f16 	blt	r2,r6,4a000 <_strtod_r+0xf7c>
   497c4:	3021d13a 	srai	r16,r6,4
   497c8:	00800044 	movi	r2,1
   497cc:	14037f0e 	bge	r2,r16,4a5cc <_strtod_r+0x1548>
   497d0:	05800174 	movhi	r22,5
   497d4:	b588a204 	addi	r22,r22,8840
   497d8:	1027883a 	mov	r19,r2
   497dc:	0025883a 	mov	r18,zero
   497e0:	b023883a 	mov	r17,r22
   497e4:	8080004c 	andi	r2,r16,1
   497e8:	1005003a 	cmpeq	r2,r2,zero
   497ec:	1000091e 	bne	r2,zero,49814 <_strtod_r+0x790>
   497f0:	e0800017 	ldw	r2,0(fp)
   497f4:	e0c00117 	ldw	r3,4(fp)
   497f8:	89800017 	ldw	r6,0(r17)
   497fc:	89c00117 	ldw	r7,4(r17)
   49800:	180b883a 	mov	r5,r3
   49804:	1009883a 	mov	r4,r2
   49808:	004da780 	call	4da78 <__muldf3>
   4980c:	e0c00115 	stw	r3,4(fp)
   49810:	e0800015 	stw	r2,0(fp)
   49814:	8021d07a 	srai	r16,r16,1
   49818:	94800044 	addi	r18,r18,1
   4981c:	8c400204 	addi	r17,r17,8
   49820:	9c3ff016 	blt	r19,r16,497e4 <_strtod_r+0x760>
   49824:	900e90fa 	slli	r7,r18,3
   49828:	e2000117 	ldw	r8,4(fp)
   4982c:	e1000017 	ldw	r4,0(fp)
   49830:	3d8f883a 	add	r7,r7,r22
   49834:	38800017 	ldw	r2,0(r7)
   49838:	38c00117 	ldw	r3,4(r7)
   4983c:	01bf2c34 	movhi	r6,64688
   49840:	418d883a 	add	r6,r8,r6
   49844:	300b883a 	mov	r5,r6
   49848:	180f883a 	mov	r7,r3
   4984c:	100d883a 	mov	r6,r2
   49850:	004da780 	call	4da78 <__muldf3>
   49854:	1009883a 	mov	r4,r2
   49858:	180b883a 	mov	r5,r3
   4985c:	199ffc2c 	andhi	r6,r3,32752
   49860:	009f2834 	movhi	r2,31904
   49864:	e1000015 	stw	r4,0(fp)
   49868:	e1400115 	stw	r5,4(fp)
   4986c:	1181e436 	bltu	r2,r6,4a000 <_strtod_r+0xf7c>
   49870:	009f2434 	movhi	r2,31888
   49874:	11833f2e 	bgeu	r2,r6,4a574 <_strtod_r+0x14f0>
   49878:	d8001c15 	stw	zero,112(sp)
   4987c:	019ffc34 	movhi	r6,32752
   49880:	31bfffc4 	addi	r6,r6,-1
   49884:	01ffffc4 	movi	r7,-1
   49888:	e1800115 	stw	r6,4(fp)
   4988c:	e1c00015 	stw	r7,0(fp)
   49890:	00003206 	br	4995c <_strtod_r+0x8d8>
   49894:	00800c04 	movi	r2,48
   49898:	8883221e 	bne	r17,r2,4a524 <_strtod_r+0x14a0>
   4989c:	8805883a 	mov	r2,r17
   498a0:	000d883a 	mov	r6,zero
   498a4:	84000044 	addi	r16,r16,1
   498a8:	dc000415 	stw	r16,16(sp)
   498ac:	84400007 	ldb	r17,0(r16)
   498b0:	31800044 	addi	r6,r6,1
   498b4:	88bffb26 	beq	r17,r2,498a4 <_strtod_r+0x820>
   498b8:	88fff3c4 	addi	r3,r17,-49
   498bc:	00800204 	movi	r2,8
   498c0:	10c1ca36 	bltu	r2,r3,49fec <_strtod_r+0xf68>
   498c4:	d8c00417 	ldw	r3,16(sp)
   498c8:	d9801715 	stw	r6,92(sp)
   498cc:	8dbff404 	addi	r22,r17,-48
   498d0:	d8c01415 	stw	r3,80(sp)
   498d4:	1821883a 	mov	r16,r3
   498d8:	d8001815 	stw	zero,96(sp)
   498dc:	01800044 	movi	r6,1
   498e0:	b0023526 	beq	r22,zero,4a1b8 <_strtod_r+0x1134>
   498e4:	d9001717 	ldw	r4,92(sp)
   498e8:	00800044 	movi	r2,1
   498ec:	2189883a 	add	r4,r4,r6
   498f0:	d9001715 	stw	r4,92(sp)
   498f4:	1183390e 	bge	r2,r6,4a5dc <_strtod_r+0x1558>
   498f8:	dc401817 	ldw	r17,96(sp)
   498fc:	1025883a 	mov	r18,r2
   49900:	05c00204 	movi	r23,8
   49904:	00000806 	br	49928 <_strtod_r+0x8a4>
   49908:	d9001217 	ldw	r4,72(sp)
   4990c:	01400284 	movi	r5,10
   49910:	d9802015 	stw	r6,128(sp)
   49914:	004e8e80 	call	4e8e8 <__mulsi3>
   49918:	d9802017 	ldw	r6,128(sp)
   4991c:	d8801215 	stw	r2,72(sp)
   49920:	94800044 	addi	r18,r18,1
   49924:	91821726 	beq	r18,r6,4a184 <_strtod_r+0x1100>
   49928:	8c400044 	addi	r17,r17,1
   4992c:	88bfffc4 	addi	r2,r17,-1
   49930:	b8bff50e 	bge	r23,r2,49908 <_strtod_r+0x884>
   49934:	00800404 	movi	r2,16
   49938:	147ff916 	blt	r2,r17,49920 <_strtod_r+0x89c>
   4993c:	d9001117 	ldw	r4,68(sp)
   49940:	01400284 	movi	r5,10
   49944:	d9802015 	stw	r6,128(sp)
   49948:	004e8e80 	call	4e8e8 <__mulsi3>
   4994c:	d9802017 	ldw	r6,128(sp)
   49950:	d8801115 	stw	r2,68(sp)
   49954:	003ff206 	br	49920 <_strtod_r+0x89c>
   49958:	d8001c15 	stw	zero,112(sp)
   4995c:	d8c01217 	ldw	r3,72(sp)
   49960:	d9401417 	ldw	r5,80(sp)
   49964:	d9c01817 	ldw	r7,96(sp)
   49968:	a809883a 	mov	r4,r21
   4996c:	a00d883a 	mov	r6,r20
   49970:	d8c00015 	stw	r3,0(sp)
   49974:	00482500 	call	48250 <__s2b>
   49978:	11000304 	addi	r4,r2,12
   4997c:	d8801015 	stw	r2,64(sp)
   49980:	d8800f17 	ldw	r2,60(sp)
   49984:	d9001f15 	stw	r4,124(sp)
   49988:	1004803a 	cmplt	r2,r2,zero
   4998c:	d8801e15 	stw	r2,120(sp)
   49990:	d8c01017 	ldw	r3,64(sp)
   49994:	a809883a 	mov	r4,r21
   49998:	19400117 	ldw	r5,4(r3)
   4999c:	00478640 	call	47864 <_Balloc>
   499a0:	d9001017 	ldw	r4,64(sp)
   499a4:	d9401f17 	ldw	r5,124(sp)
   499a8:	102f883a 	mov	r23,r2
   499ac:	21800417 	ldw	r6,16(r4)
   499b0:	11000304 	addi	r4,r2,12
   499b4:	318d883a 	add	r6,r6,r6
   499b8:	318d883a 	add	r6,r6,r6
   499bc:	31800204 	addi	r6,r6,8
   499c0:	00470cc0 	call	470cc <memcpy>
   499c4:	e2000017 	ldw	r8,0(fp)
   499c8:	e2400117 	ldw	r9,4(fp)
   499cc:	a809883a 	mov	r4,r21
   499d0:	400b883a 	mov	r5,r8
   499d4:	d9c00204 	addi	r7,sp,8
   499d8:	d8800304 	addi	r2,sp,12
   499dc:	480d883a 	mov	r6,r9
   499e0:	d8800015 	stw	r2,0(sp)
   499e4:	00479200 	call	47920 <__d2b>
   499e8:	a809883a 	mov	r4,r21
   499ec:	01400044 	movi	r5,1
   499f0:	d8800515 	stw	r2,20(sp)
   499f4:	0047fc80 	call	47fc8 <__i2b>
   499f8:	d8c01e17 	ldw	r3,120(sp)
   499fc:	102d883a 	mov	r22,r2
   49a00:	1801091e 	bne	r3,zero,49e28 <_strtod_r+0xda4>
   49a04:	dd000f17 	ldw	r20,60(sp)
   49a08:	000f883a 	mov	r7,zero
   49a0c:	0013883a 	mov	r9,zero
   49a10:	a011883a 	mov	r8,r20
   49a14:	d8800217 	ldw	r2,8(sp)
   49a18:	10010116 	blt	r2,zero,49e20 <_strtod_r+0xd9c>
   49a1c:	388f883a 	add	r7,r7,r2
   49a20:	d8c01c17 	ldw	r3,112(sp)
   49a24:	d9400317 	ldw	r5,12(sp)
   49a28:	10c9c83a 	sub	r4,r2,r3
   49a2c:	2145883a 	add	r2,r4,r5
   49a30:	10bfffc4 	addi	r2,r2,-1
   49a34:	00ff0084 	movi	r3,-1022
   49a38:	10c09f0e 	bge	r2,r3,49cb8 <_strtod_r+0xc34>
   49a3c:	21810cc4 	addi	r6,r4,1075
   49a40:	d9001c17 	ldw	r4,112(sp)
   49a44:	4185883a 	add	r2,r8,r6
   49a48:	39a1883a 	add	r16,r7,r6
   49a4c:	20a5883a 	add	r18,r4,r2
   49a50:	3807883a 	mov	r3,r7
   49a54:	81c0010e 	bge	r16,r7,49a5c <_strtod_r+0x9d8>
   49a58:	8007883a 	mov	r3,r16
   49a5c:	9005883a 	mov	r2,r18
   49a60:	1c80010e 	bge	r3,r18,49a68 <_strtod_r+0x9e4>
   49a64:	1805883a 	mov	r2,r3
   49a68:	0080eb0e 	bge	zero,r2,49e18 <_strtod_r+0xd94>
   49a6c:	38a7c83a 	sub	r19,r7,r2
   49a70:	80a1c83a 	sub	r16,r16,r2
   49a74:	90a5c83a 	sub	r18,r18,r2
   49a78:	02400e0e 	bge	zero,r9,49ab4 <_strtod_r+0xa30>
   49a7c:	480d883a 	mov	r6,r9
   49a80:	b00b883a 	mov	r5,r22
   49a84:	a809883a 	mov	r4,r21
   49a88:	00481300 	call	48130 <__pow5mult>
   49a8c:	d9800517 	ldw	r6,20(sp)
   49a90:	a809883a 	mov	r4,r21
   49a94:	100b883a 	mov	r5,r2
   49a98:	102d883a 	mov	r22,r2
   49a9c:	0047d740 	call	47d74 <__multiply>
   49aa0:	d9400517 	ldw	r5,20(sp)
   49aa4:	1023883a 	mov	r17,r2
   49aa8:	a809883a 	mov	r4,r21
   49aac:	00472e40 	call	472e4 <_Bfree>
   49ab0:	dc400515 	stw	r17,20(sp)
   49ab4:	0400050e 	bge	zero,r16,49acc <_strtod_r+0xa48>
   49ab8:	d9400517 	ldw	r5,20(sp)
   49abc:	800d883a 	mov	r6,r16
   49ac0:	a809883a 	mov	r4,r21
   49ac4:	0047c280 	call	47c28 <__lshift>
   49ac8:	d8800515 	stw	r2,20(sp)
   49acc:	a000741e 	bne	r20,zero,49ca0 <_strtod_r+0xc1c>
   49ad0:	0480050e 	bge	zero,r18,49ae8 <_strtod_r+0xa64>
   49ad4:	b80b883a 	mov	r5,r23
   49ad8:	900d883a 	mov	r6,r18
   49adc:	a809883a 	mov	r4,r21
   49ae0:	0047c280 	call	47c28 <__lshift>
   49ae4:	102f883a 	mov	r23,r2
   49ae8:	04c0050e 	bge	zero,r19,49b00 <_strtod_r+0xa7c>
   49aec:	b00b883a 	mov	r5,r22
   49af0:	980d883a 	mov	r6,r19
   49af4:	a809883a 	mov	r4,r21
   49af8:	0047c280 	call	47c28 <__lshift>
   49afc:	102d883a 	mov	r22,r2
   49b00:	d9400517 	ldw	r5,20(sp)
   49b04:	a809883a 	mov	r4,r21
   49b08:	b80d883a 	mov	r6,r23
   49b0c:	0047a9c0 	call	47a9c <__mdiff>
   49b10:	1029883a 	mov	r20,r2
   49b14:	10800317 	ldw	r2,12(r2)
   49b18:	a009883a 	mov	r4,r20
   49b1c:	a0000315 	stw	zero,12(r20)
   49b20:	b00b883a 	mov	r5,r22
   49b24:	d8801a15 	stw	r2,104(sp)
   49b28:	00474400 	call	47440 <__mcmp>
   49b2c:	1001a616 	blt	r2,zero,4a1c8 <_strtod_r+0x1144>
   49b30:	10016d26 	beq	r2,zero,4a0e8 <_strtod_r+0x1064>
   49b34:	a009883a 	mov	r4,r20
   49b38:	b00b883a 	mov	r5,r22
   49b3c:	00476400 	call	47640 <__ratio>
   49b40:	0011883a 	mov	r8,zero
   49b44:	02500034 	movhi	r9,16384
   49b48:	480f883a 	mov	r7,r9
   49b4c:	1009883a 	mov	r4,r2
   49b50:	180b883a 	mov	r5,r3
   49b54:	400d883a 	mov	r6,r8
   49b58:	1021883a 	mov	r16,r2
   49b5c:	1823883a 	mov	r17,r3
   49b60:	004e33c0 	call	4e33c <__ledf2>
   49b64:	00805716 	blt	zero,r2,49cc4 <_strtod_r+0xc40>
   49b68:	d8801a17 	ldw	r2,104(sp)
   49b6c:	1025003a 	cmpeq	r18,r2,zero
   49b70:	90008c1e 	bne	r18,zero,49da4 <_strtod_r+0xd20>
   49b74:	008ffc34 	movhi	r2,16368
   49b78:	0021883a 	mov	r16,zero
   49b7c:	1023883a 	mov	r17,r2
   49b80:	d8000715 	stw	zero,28(sp)
   49b84:	d8800815 	stw	r2,32(sp)
   49b88:	e1c00117 	ldw	r7,4(fp)
   49b8c:	009ff834 	movhi	r2,32736
   49b90:	3cdffc2c 	andhi	r19,r7,32752
   49b94:	98805f26 	beq	r19,r2,49d14 <_strtod_r+0xc90>
   49b98:	d8c01c17 	ldw	r3,112(sp)
   49b9c:	18001b26 	beq	r3,zero,49c0c <_strtod_r+0xb88>
   49ba0:	0081a834 	movhi	r2,1696
   49ba4:	14c01936 	bltu	r2,r19,49c0c <_strtod_r+0xb88>
   49ba8:	00bff034 	movhi	r2,65472
   49bac:	00d07834 	movhi	r3,16864
   49bb0:	18ffffc4 	addi	r3,r3,-1
   49bb4:	180f883a 	mov	r7,r3
   49bb8:	8009883a 	mov	r4,r16
   49bbc:	880b883a 	mov	r5,r17
   49bc0:	100d883a 	mov	r6,r2
   49bc4:	004e33c0 	call	4e33c <__ledf2>
   49bc8:	00800b16 	blt	zero,r2,49bf8 <_strtod_r+0xb74>
   49bcc:	880b883a 	mov	r5,r17
   49bd0:	8009883a 	mov	r4,r16
   49bd4:	004c69c0 	call	4c69c <__fixunsdfsi>
   49bd8:	1000e31e 	bne	r2,zero,49f68 <_strtod_r+0xee4>
   49bdc:	0021883a 	mov	r16,zero
   49be0:	044ffc34 	movhi	r17,16368
   49be4:	9000dd1e 	bne	r18,zero,49f5c <_strtod_r+0xed8>
   49be8:	8005883a 	mov	r2,r16
   49bec:	8807883a 	mov	r3,r17
   49bf0:	d8c00815 	stw	r3,32(sp)
   49bf4:	d8800715 	stw	r2,28(sp)
   49bf8:	d8800817 	ldw	r2,32(sp)
   49bfc:	00c1ac34 	movhi	r3,1712
   49c00:	14c5c83a 	sub	r2,r2,r19
   49c04:	10c5883a 	add	r2,r2,r3
   49c08:	d8800815 	stw	r2,32(sp)
   49c0c:	e0800017 	ldw	r2,0(fp)
   49c10:	e0c00117 	ldw	r3,4(fp)
   49c14:	1009883a 	mov	r4,r2
   49c18:	180b883a 	mov	r5,r3
   49c1c:	00474a00 	call	474a0 <__ulp>
   49c20:	d9800717 	ldw	r6,28(sp)
   49c24:	d9c00817 	ldw	r7,32(sp)
   49c28:	180b883a 	mov	r5,r3
   49c2c:	1009883a 	mov	r4,r2
   49c30:	004da780 	call	4da78 <__muldf3>
   49c34:	e2000017 	ldw	r8,0(fp)
   49c38:	e2400117 	ldw	r9,4(fp)
   49c3c:	180b883a 	mov	r5,r3
   49c40:	1009883a 	mov	r4,r2
   49c44:	480f883a 	mov	r7,r9
   49c48:	400d883a 	mov	r6,r8
   49c4c:	004da040 	call	4da04 <__adddf3>
   49c50:	e0c00115 	stw	r3,4(fp)
   49c54:	e0800015 	stw	r2,0(fp)
   49c58:	d9001c17 	ldw	r4,112(sp)
   49c5c:	e4800117 	ldw	r18,4(fp)
   49c60:	2000021e 	bne	r4,zero,49c6c <_strtod_r+0xbe8>
   49c64:	909ffc2c 	andhi	r2,r18,32752
   49c68:	98807f26 	beq	r19,r2,49e68 <_strtod_r+0xde4>
   49c6c:	d9400517 	ldw	r5,20(sp)
   49c70:	a809883a 	mov	r4,r21
   49c74:	00472e40 	call	472e4 <_Bfree>
   49c78:	a809883a 	mov	r4,r21
   49c7c:	b80b883a 	mov	r5,r23
   49c80:	00472e40 	call	472e4 <_Bfree>
   49c84:	a809883a 	mov	r4,r21
   49c88:	b00b883a 	mov	r5,r22
   49c8c:	00472e40 	call	472e4 <_Bfree>
   49c90:	a809883a 	mov	r4,r21
   49c94:	a00b883a 	mov	r5,r20
   49c98:	00472e40 	call	472e4 <_Bfree>
   49c9c:	003f3c06 	br	49990 <_strtod_r+0x90c>
   49ca0:	b80b883a 	mov	r5,r23
   49ca4:	a00d883a 	mov	r6,r20
   49ca8:	a809883a 	mov	r4,r21
   49cac:	00481300 	call	48130 <__pow5mult>
   49cb0:	102f883a 	mov	r23,r2
   49cb4:	003f8606 	br	49ad0 <_strtod_r+0xa4c>
   49cb8:	00800d84 	movi	r2,54
   49cbc:	114dc83a 	sub	r6,r2,r5
   49cc0:	003f5f06 	br	49a40 <_strtod_r+0x9bc>
   49cc4:	0005883a 	mov	r2,zero
   49cc8:	00cff834 	movhi	r3,16352
   49ccc:	8009883a 	mov	r4,r16
   49cd0:	880b883a 	mov	r5,r17
   49cd4:	180f883a 	mov	r7,r3
   49cd8:	100d883a 	mov	r6,r2
   49cdc:	004da780 	call	4da78 <__muldf3>
   49ce0:	1009883a 	mov	r4,r2
   49ce4:	d8801a17 	ldw	r2,104(sp)
   49ce8:	2021883a 	mov	r16,r4
   49cec:	1823883a 	mov	r17,r3
   49cf0:	1025003a 	cmpeq	r18,r2,zero
   49cf4:	9000451e 	bne	r18,zero,49e0c <_strtod_r+0xd88>
   49cf8:	2005883a 	mov	r2,r4
   49cfc:	d8800715 	stw	r2,28(sp)
   49d00:	d8c00815 	stw	r3,32(sp)
   49d04:	e1c00117 	ldw	r7,4(fp)
   49d08:	009ff834 	movhi	r2,32736
   49d0c:	3cdffc2c 	andhi	r19,r7,32752
   49d10:	98bfa11e 	bne	r19,r2,49b98 <_strtod_r+0xb14>
   49d14:	e1000017 	ldw	r4,0(fp)
   49d18:	01bf2c34 	movhi	r6,64688
   49d1c:	398d883a 	add	r6,r7,r6
   49d20:	d9000b15 	stw	r4,44(sp)
   49d24:	d9c00c15 	stw	r7,48(sp)
   49d28:	300b883a 	mov	r5,r6
   49d2c:	e1800115 	stw	r6,4(fp)
   49d30:	00474a00 	call	474a0 <__ulp>
   49d34:	d9800717 	ldw	r6,28(sp)
   49d38:	d9c00817 	ldw	r7,32(sp)
   49d3c:	180b883a 	mov	r5,r3
   49d40:	1009883a 	mov	r4,r2
   49d44:	004da780 	call	4da78 <__muldf3>
   49d48:	e2000017 	ldw	r8,0(fp)
   49d4c:	e2400117 	ldw	r9,4(fp)
   49d50:	180b883a 	mov	r5,r3
   49d54:	1009883a 	mov	r4,r2
   49d58:	480f883a 	mov	r7,r9
   49d5c:	400d883a 	mov	r6,r8
   49d60:	004da040 	call	4da04 <__adddf3>
   49d64:	1009883a 	mov	r4,r2
   49d68:	180b883a 	mov	r5,r3
   49d6c:	009f2834 	movhi	r2,31904
   49d70:	10bfffc4 	addi	r2,r2,-1
   49d74:	18dffc2c 	andhi	r3,r3,32752
   49d78:	e1000015 	stw	r4,0(fp)
   49d7c:	e1400115 	stw	r5,4(fp)
   49d80:	10c0722e 	bgeu	r2,r3,49f4c <_strtod_r+0xec8>
   49d84:	d8800c17 	ldw	r2,48(sp)
   49d88:	011ffc34 	movhi	r4,32752
   49d8c:	213fffc4 	addi	r4,r4,-1
   49d90:	11007d26 	beq	r2,r4,49f88 <_strtod_r+0xf04>
   49d94:	01ffffc4 	movi	r7,-1
   49d98:	e1000115 	stw	r4,4(fp)
   49d9c:	e1c00015 	stw	r7,0(fp)
   49da0:	003fb206 	br	49c6c <_strtod_r+0xbe8>
   49da4:	e0c00017 	ldw	r3,0(fp)
   49da8:	1800251e 	bne	r3,zero,49e40 <_strtod_r+0xdbc>
   49dac:	e0800117 	ldw	r2,4(fp)
   49db0:	00c00434 	movhi	r3,16
   49db4:	18ffffc4 	addi	r3,r3,-1
   49db8:	10c4703a 	and	r2,r2,r3
   49dbc:	1000241e 	bne	r2,zero,49e50 <_strtod_r+0xdcc>
   49dc0:	0005883a 	mov	r2,zero
   49dc4:	00cffc34 	movhi	r3,16368
   49dc8:	180f883a 	mov	r7,r3
   49dcc:	8009883a 	mov	r4,r16
   49dd0:	880b883a 	mov	r5,r17
   49dd4:	100d883a 	mov	r6,r2
   49dd8:	004e2b40 	call	4e2b4 <__ltdf2>
   49ddc:	10014616 	blt	r2,zero,4a2f8 <_strtod_r+0x1274>
   49de0:	0005883a 	mov	r2,zero
   49de4:	00cff834 	movhi	r3,16352
   49de8:	880b883a 	mov	r5,r17
   49dec:	8009883a 	mov	r4,r16
   49df0:	180f883a 	mov	r7,r3
   49df4:	100d883a 	mov	r6,r2
   49df8:	004da780 	call	4da78 <__muldf3>
   49dfc:	1823883a 	mov	r17,r3
   49e00:	1021883a 	mov	r16,r2
   49e04:	18e0003c 	xorhi	r3,r3,32768
   49e08:	003fbc06 	br	49cfc <_strtod_r+0xc78>
   49e0c:	2005883a 	mov	r2,r4
   49e10:	18e0003c 	xorhi	r3,r3,32768
   49e14:	003fb906 	br	49cfc <_strtod_r+0xc78>
   49e18:	3827883a 	mov	r19,r7
   49e1c:	003f1606 	br	49a78 <_strtod_r+0x9f4>
   49e20:	4091c83a 	sub	r8,r8,r2
   49e24:	003efe06 	br	49a20 <_strtod_r+0x99c>
   49e28:	d9000f17 	ldw	r4,60(sp)
   49e2c:	0011883a 	mov	r8,zero
   49e30:	0029883a 	mov	r20,zero
   49e34:	0113c83a 	sub	r9,zero,r4
   49e38:	480f883a 	mov	r7,r9
   49e3c:	003ef506 	br	49a14 <_strtod_r+0x990>
   49e40:	00800044 	movi	r2,1
   49e44:	1880021e 	bne	r3,r2,49e50 <_strtod_r+0xdcc>
   49e48:	e0800117 	ldw	r2,4(fp)
   49e4c:	1000c526 	beq	r2,zero,4a164 <_strtod_r+0x10e0>
   49e50:	00affc34 	movhi	r2,49136
   49e54:	0021883a 	mov	r16,zero
   49e58:	044ffc34 	movhi	r17,16368
   49e5c:	d8800815 	stw	r2,32(sp)
   49e60:	d8000715 	stw	zero,28(sp)
   49e64:	003f4806 	br	49b88 <_strtod_r+0xb04>
   49e68:	880b883a 	mov	r5,r17
   49e6c:	8009883a 	mov	r4,r16
   49e70:	004e4bc0 	call	4e4bc <__fixdfsi>
   49e74:	1009883a 	mov	r4,r2
   49e78:	004e3c40 	call	4e3c4 <__floatsidf>
   49e7c:	880b883a 	mov	r5,r17
   49e80:	8009883a 	mov	r4,r16
   49e84:	100d883a 	mov	r6,r2
   49e88:	180f883a 	mov	r7,r3
   49e8c:	004d9840 	call	4d984 <__subdf3>
   49e90:	100b883a 	mov	r5,r2
   49e94:	1021883a 	mov	r16,r2
   49e98:	d8801a17 	ldw	r2,104(sp)
   49e9c:	180d883a 	mov	r6,r3
   49ea0:	1823883a 	mov	r17,r3
   49ea4:	1000061e 	bne	r2,zero,49ec0 <_strtod_r+0xe3c>
   49ea8:	e0800017 	ldw	r2,0(fp)
   49eac:	1000041e 	bne	r2,zero,49ec0 <_strtod_r+0xe3c>
   49eb0:	00c00434 	movhi	r3,16
   49eb4:	18ffffc4 	addi	r3,r3,-1
   49eb8:	90c4703a 	and	r2,r18,r3
   49ebc:	10004026 	beq	r2,zero,49fc0 <_strtod_r+0xf3c>
   49ec0:	00a52834 	movhi	r2,38048
   49ec4:	108d6544 	addi	r2,r2,13717
   49ec8:	00cff834 	movhi	r3,16352
   49ecc:	18ffffc4 	addi	r3,r3,-1
   49ed0:	180f883a 	mov	r7,r3
   49ed4:	8009883a 	mov	r4,r16
   49ed8:	880b883a 	mov	r5,r17
   49edc:	100d883a 	mov	r6,r2
   49ee0:	004e2b40 	call	4e2b4 <__ltdf2>
   49ee4:	10000916 	blt	r2,zero,49f0c <_strtod_r+0xe88>
   49ee8:	008d6c34 	movhi	r2,13744
   49eec:	10b94d44 	addi	r2,r2,-6859
   49ef0:	00cff834 	movhi	r3,16352
   49ef4:	880b883a 	mov	r5,r17
   49ef8:	180f883a 	mov	r7,r3
   49efc:	8009883a 	mov	r4,r16
   49f00:	100d883a 	mov	r6,r2
   49f04:	004e1a40 	call	4e1a4 <__gtdf2>
   49f08:	00bf580e 	bge	zero,r2,49c6c <_strtod_r+0xbe8>
   49f0c:	d9400517 	ldw	r5,20(sp)
   49f10:	a809883a 	mov	r4,r21
   49f14:	00472e40 	call	472e4 <_Bfree>
   49f18:	a809883a 	mov	r4,r21
   49f1c:	b80b883a 	mov	r5,r23
   49f20:	00472e40 	call	472e4 <_Bfree>
   49f24:	a809883a 	mov	r4,r21
   49f28:	b00b883a 	mov	r5,r22
   49f2c:	00472e40 	call	472e4 <_Bfree>
   49f30:	d9401017 	ldw	r5,64(sp)
   49f34:	a809883a 	mov	r4,r21
   49f38:	00472e40 	call	472e4 <_Bfree>
   49f3c:	a809883a 	mov	r4,r21
   49f40:	a00b883a 	mov	r5,r20
   49f44:	00472e40 	call	472e4 <_Bfree>
   49f48:	003cd806 	br	492ac <_strtod_r+0x228>
   49f4c:	0080d434 	movhi	r2,848
   49f50:	288d883a 	add	r6,r5,r2
   49f54:	e1800115 	stw	r6,4(fp)
   49f58:	003f3f06 	br	49c58 <_strtod_r+0xbd4>
   49f5c:	8005883a 	mov	r2,r16
   49f60:	88e0003c 	xorhi	r3,r17,32768
   49f64:	003f2206 	br	49bf0 <_strtod_r+0xb6c>
   49f68:	1009883a 	mov	r4,r2
   49f6c:	004e6080 	call	4e608 <__floatunsidf>
   49f70:	1021883a 	mov	r16,r2
   49f74:	1823883a 	mov	r17,r3
   49f78:	003f1a06 	br	49be4 <_strtod_r+0xb60>
   49f7c:	dc000417 	ldw	r16,16(sp)
   49f80:	31800044 	addi	r6,r6,1
   49f84:	003e5606 	br	498e0 <_strtod_r+0x85c>
   49f88:	d8c00b17 	ldw	r3,44(sp)
   49f8c:	00bfffc4 	movi	r2,-1
   49f90:	18bf801e 	bne	r3,r2,49d94 <_strtod_r+0xd10>
   49f94:	00c00884 	movi	r3,34
   49f98:	a8c00015 	stw	r3,0(r21)
   49f9c:	009ffc34 	movhi	r2,32752
   49fa0:	e0800115 	stw	r2,4(fp)
   49fa4:	e0000015 	stw	zero,0(fp)
   49fa8:	003fd806 	br	49f0c <_strtod_r+0xe88>
   49fac:	8025883a 	mov	r18,r16
   49fb0:	0027883a 	mov	r19,zero
   49fb4:	d8001215 	stw	zero,72(sp)
   49fb8:	d8001115 	stw	zero,68(sp)
   49fbc:	003cac06 	br	49270 <_strtod_r+0x1ec>
   49fc0:	00a52834 	movhi	r2,38048
   49fc4:	108d6544 	addi	r2,r2,13717
   49fc8:	00cff434 	movhi	r3,16336
   49fcc:	18ffffc4 	addi	r3,r3,-1
   49fd0:	2809883a 	mov	r4,r5
   49fd4:	180f883a 	mov	r7,r3
   49fd8:	300b883a 	mov	r5,r6
   49fdc:	100d883a 	mov	r6,r2
   49fe0:	004e2b40 	call	4e2b4 <__ltdf2>
   49fe4:	103f210e 	bge	r2,zero,49c6c <_strtod_r+0xbe8>
   49fe8:	003fc806 	br	49f0c <_strtod_r+0xe88>
   49fec:	00800044 	movi	r2,1
   49ff0:	d8001815 	stw	zero,96(sp)
   49ff4:	d8801b15 	stw	r2,108(sp)
   49ff8:	d8001715 	stw	zero,92(sp)
   49ffc:	003ca206 	br	49288 <_strtod_r+0x204>
   4a000:	00800884 	movi	r2,34
   4a004:	a8800015 	stw	r2,0(r21)
   4a008:	019ffc34 	movhi	r6,32752
   4a00c:	e1800115 	stw	r6,4(fp)
   4a010:	e0000015 	stw	zero,0(fp)
   4a014:	003ca506 	br	492ac <_strtod_r+0x228>
   4a018:	011387c4 	movi	r4,19999
   4a01c:	003d0206 	br	49428 <_strtod_r+0x3a4>
   4a020:	180a90fa 	slli	r5,r3,3
   4a024:	e0800017 	ldw	r2,0(fp)
   4a028:	e0c00117 	ldw	r3,4(fp)
   4a02c:	01000174 	movhi	r4,5
   4a030:	21087004 	addi	r4,r4,8640
   4a034:	290b883a 	add	r5,r5,r4
   4a038:	2a000017 	ldw	r8,0(r5)
   4a03c:	2a400117 	ldw	r9,4(r5)
   4a040:	1009883a 	mov	r4,r2
   4a044:	180b883a 	mov	r5,r3
   4a048:	480f883a 	mov	r7,r9
   4a04c:	400d883a 	mov	r6,r8
   4a050:	004da780 	call	4da78 <__muldf3>
   4a054:	e0c00115 	stw	r3,4(fp)
   4a058:	e0800015 	stw	r2,0(fp)
   4a05c:	003c9306 	br	492ac <_strtod_r+0x228>
   4a060:	d8800d17 	ldw	r2,52(sp)
   4a064:	e0800015 	stw	r2,0(fp)
   4a068:	d8c00e17 	ldw	r3,56(sp)
   4a06c:	e0c00115 	stw	r3,4(fp)
   4a070:	9080020c 	andi	r2,r18,8
   4a074:	103c8d26 	beq	r2,zero,492ac <_strtod_r+0x228>
   4a078:	e0800117 	ldw	r2,4(fp)
   4a07c:	10a00034 	orhi	r2,r2,32768
   4a080:	e0800115 	stw	r2,4(fp)
   4a084:	003c8906 	br	492ac <_strtod_r+0x228>
   4a088:	009ffc34 	movhi	r2,32752
   4a08c:	e0800115 	stw	r2,4(fp)
   4a090:	e0000015 	stw	zero,0(fp)
   4a094:	003ff606 	br	4a070 <_strtod_r+0xfec>
   4a098:	00a00034 	movhi	r2,32768
   4a09c:	10bfffc4 	addi	r2,r2,-1
   4a0a0:	00ffffc4 	movi	r3,-1
   4a0a4:	e0800115 	stw	r2,4(fp)
   4a0a8:	e0c00015 	stw	r3,0(fp)
   4a0ac:	003ff006 	br	4a070 <_strtod_r+0xfec>
   4a0b0:	e0000115 	stw	zero,4(fp)
   4a0b4:	e0000015 	stw	zero,0(fp)
   4a0b8:	003fed06 	br	4a070 <_strtod_r+0xfec>
   4a0bc:	d8800e17 	ldw	r2,56(sp)
   4a0c0:	29010cc4 	addi	r4,r5,1075
   4a0c4:	00fffc34 	movhi	r3,65520
   4a0c8:	18ffffc4 	addi	r3,r3,-1
   4a0cc:	2008953a 	slli	r4,r4,20
   4a0d0:	10c4703a 	and	r2,r2,r3
   4a0d4:	d8c00d17 	ldw	r3,52(sp)
   4a0d8:	1104b03a 	or	r2,r2,r4
   4a0dc:	e0800115 	stw	r2,4(fp)
   4a0e0:	e0c00015 	stw	r3,0(fp)
   4a0e4:	003fe206 	br	4a070 <_strtod_r+0xfec>
   4a0e8:	d8c01a17 	ldw	r3,104(sp)
   4a0ec:	1825003a 	cmpeq	r18,r3,zero
   4a0f0:	9000cf1e 	bne	r18,zero,4a430 <_strtod_r+0x13ac>
   4a0f4:	e1400117 	ldw	r5,4(fp)
   4a0f8:	01000434 	movhi	r4,16
   4a0fc:	213fffc4 	addi	r4,r4,-1
   4a100:	2904703a 	and	r2,r5,r4
   4a104:	11006826 	beq	r2,r4,4a2a8 <_strtod_r+0x1224>
   4a108:	e1c00017 	ldw	r7,0(fp)
   4a10c:	3880004c 	andi	r2,r7,1
   4a110:	1005003a 	cmpeq	r2,r2,zero
   4a114:	1000601e 	bne	r2,zero,4a298 <_strtod_r+0x1214>
   4a118:	90010426 	beq	r18,zero,4a52c <_strtod_r+0x14a8>
   4a11c:	e4400117 	ldw	r17,4(fp)
   4a120:	3809883a 	mov	r4,r7
   4a124:	3821883a 	mov	r16,r7
   4a128:	880b883a 	mov	r5,r17
   4a12c:	00474a00 	call	474a0 <__ulp>
   4a130:	180f883a 	mov	r7,r3
   4a134:	880b883a 	mov	r5,r17
   4a138:	8009883a 	mov	r4,r16
   4a13c:	100d883a 	mov	r6,r2
   4a140:	004d9840 	call	4d984 <__subdf3>
   4a144:	1009883a 	mov	r4,r2
   4a148:	000d883a 	mov	r6,zero
   4a14c:	000f883a 	mov	r7,zero
   4a150:	180b883a 	mov	r5,r3
   4a154:	e0800015 	stw	r2,0(fp)
   4a158:	e0c00115 	stw	r3,4(fp)
   4a15c:	004e11c0 	call	4e11c <__nedf2>
   4a160:	10004d1e 	bne	r2,zero,4a298 <_strtod_r+0x1214>
   4a164:	00800884 	movi	r2,34
   4a168:	a8800015 	stw	r2,0(r21)
   4a16c:	e0000015 	stw	zero,0(fp)
   4a170:	e0000115 	stw	zero,4(fp)
   4a174:	003f6506 	br	49f0c <_strtod_r+0xe88>
   4a178:	00800044 	movi	r2,1
   4a17c:	d8801915 	stw	r2,100(sp)
   4a180:	003d4406 	br	49694 <_strtod_r+0x610>
   4a184:	d8c01817 	ldw	r3,96(sp)
   4a188:	1985883a 	add	r2,r3,r6
   4a18c:	11ffffc4 	addi	r7,r2,-1
   4a190:	39000044 	addi	r4,r7,1
   4a194:	00800204 	movi	r2,8
   4a198:	d9001815 	stw	r4,96(sp)
   4a19c:	11c0d716 	blt	r2,r7,4a4fc <_strtod_r+0x1478>
   4a1a0:	d9001217 	ldw	r4,72(sp)
   4a1a4:	01400284 	movi	r5,10
   4a1a8:	004e8e80 	call	4e8e8 <__mulsi3>
   4a1ac:	1585883a 	add	r2,r2,r22
   4a1b0:	d8801215 	stw	r2,72(sp)
   4a1b4:	000d883a 	mov	r6,zero
   4a1b8:	84000044 	addi	r16,r16,1
   4a1bc:	dc000415 	stw	r16,16(sp)
   4a1c0:	84400007 	ldb	r17,0(r16)
   4a1c4:	003cfc06 	br	495b8 <_strtod_r+0x534>
   4a1c8:	d8c01a17 	ldw	r3,104(sp)
   4a1cc:	1800321e 	bne	r3,zero,4a298 <_strtod_r+0x1214>
   4a1d0:	e0800017 	ldw	r2,0(fp)
   4a1d4:	1000b31e 	bne	r2,zero,4a4a4 <_strtod_r+0x1420>
   4a1d8:	e0c00117 	ldw	r3,4(fp)
   4a1dc:	01000434 	movhi	r4,16
   4a1e0:	213fffc4 	addi	r4,r4,-1
   4a1e4:	1904703a 	and	r2,r3,r4
   4a1e8:	1000e71e 	bne	r2,zero,4a588 <_strtod_r+0x1504>
   4a1ec:	18dffc2c 	andhi	r3,r3,32752
   4a1f0:	0081ac34 	movhi	r2,1712
   4a1f4:	10c0282e 	bgeu	r2,r3,4a298 <_strtod_r+0x1214>
   4a1f8:	a0800517 	ldw	r2,20(r20)
   4a1fc:	1000031e 	bne	r2,zero,4a20c <_strtod_r+0x1188>
   4a200:	a0c00417 	ldw	r3,16(r20)
   4a204:	00800044 	movi	r2,1
   4a208:	10c0a60e 	bge	r2,r3,4a4a4 <_strtod_r+0x1420>
   4a20c:	a00b883a 	mov	r5,r20
   4a210:	a809883a 	mov	r4,r21
   4a214:	01800044 	movi	r6,1
   4a218:	0047c280 	call	47c28 <__lshift>
   4a21c:	1009883a 	mov	r4,r2
   4a220:	b00b883a 	mov	r5,r22
   4a224:	1029883a 	mov	r20,r2
   4a228:	00474400 	call	47440 <__mcmp>
   4a22c:	00809d0e 	bge	zero,r2,4a4a4 <_strtod_r+0x1420>
   4a230:	e1800117 	ldw	r6,4(fp)
   4a234:	d9001c17 	ldw	r4,112(sp)
   4a238:	2013003a 	cmpeq	r9,r4,zero
   4a23c:	4800d61e 	bne	r9,zero,4a598 <_strtod_r+0x1514>
   4a240:	30dffc2c 	andhi	r3,r6,32752
   4a244:	0081ac34 	movhi	r2,1712
   4a248:	10c0d336 	bltu	r2,r3,4a598 <_strtod_r+0x1514>
   4a24c:	0080dc34 	movhi	r2,880
   4a250:	10ffc42e 	bgeu	r2,r3,4a164 <_strtod_r+0x10e0>
   4a254:	e0800017 	ldw	r2,0(fp)
   4a258:	e0c00117 	ldw	r3,4(fp)
   4a25c:	020e5434 	movhi	r8,14672
   4a260:	000d883a 	mov	r6,zero
   4a264:	400f883a 	mov	r7,r8
   4a268:	180b883a 	mov	r5,r3
   4a26c:	1009883a 	mov	r4,r2
   4a270:	da000c15 	stw	r8,48(sp)
   4a274:	d8000b15 	stw	zero,44(sp)
   4a278:	004da780 	call	4da78 <__muldf3>
   4a27c:	e0800015 	stw	r2,0(fp)
   4a280:	e0c00115 	stw	r3,4(fp)
   4a284:	183f211e 	bne	r3,zero,49f0c <_strtod_r+0xe88>
   4a288:	103f201e 	bne	r2,zero,49f0c <_strtod_r+0xe88>
   4a28c:	00800884 	movi	r2,34
   4a290:	a8800015 	stw	r2,0(r21)
   4a294:	003f1d06 	br	49f0c <_strtod_r+0xe88>
   4a298:	d9001c17 	ldw	r4,112(sp)
   4a29c:	2013003a 	cmpeq	r9,r4,zero
   4a2a0:	483f1a1e 	bne	r9,zero,49f0c <_strtod_r+0xe88>
   4a2a4:	003feb06 	br	4a254 <_strtod_r+0x11d0>
   4a2a8:	d8801c17 	ldw	r2,112(sp)
   4a2ac:	e1c00017 	ldw	r7,0(fp)
   4a2b0:	1013003a 	cmpeq	r9,r2,zero
   4a2b4:	4800c31e 	bne	r9,zero,4a5c4 <_strtod_r+0x1540>
   4a2b8:	28dffc2c 	andhi	r3,r5,32752
   4a2bc:	0081a834 	movhi	r2,1696
   4a2c0:	10c0c036 	bltu	r2,r3,4a5c4 <_strtod_r+0x1540>
   4a2c4:	1804d53a 	srli	r2,r3,20
   4a2c8:	00c01ac4 	movi	r3,107
   4a2cc:	013fffc4 	movi	r4,-1
   4a2d0:	1887c83a 	sub	r3,r3,r2
   4a2d4:	20c4983a 	sll	r2,r4,r3
   4a2d8:	11ff8c1e 	bne	r2,r7,4a10c <_strtod_r+0x1088>
   4a2dc:	28dffc2c 	andhi	r3,r5,32752
   4a2e0:	00800434 	movhi	r2,16
   4a2e4:	188d883a 	add	r6,r3,r2
   4a2e8:	e1800115 	stw	r6,4(fp)
   4a2ec:	e0000015 	stw	zero,0(fp)
   4a2f0:	483f061e 	bne	r9,zero,49f0c <_strtod_r+0xe88>
   4a2f4:	003fd706 	br	4a254 <_strtod_r+0x11d0>
   4a2f8:	0021883a 	mov	r16,zero
   4a2fc:	0005883a 	mov	r2,zero
   4a300:	044ff834 	movhi	r17,16352
   4a304:	00eff834 	movhi	r3,49120
   4a308:	003e7c06 	br	49cfc <_strtod_r+0xc78>
   4a30c:	803d9226 	beq	r16,zero,49958 <_strtod_r+0x8d4>
   4a310:	0421c83a 	sub	r16,zero,r16
   4a314:	814003cc 	andi	r5,r16,15
   4a318:	28000f26 	beq	r5,zero,4a358 <_strtod_r+0x12d4>
   4a31c:	280a90fa 	slli	r5,r5,3
   4a320:	01000174 	movhi	r4,5
   4a324:	21087004 	addi	r4,r4,8640
   4a328:	e0800017 	ldw	r2,0(fp)
   4a32c:	290b883a 	add	r5,r5,r4
   4a330:	2a000017 	ldw	r8,0(r5)
   4a334:	e0c00117 	ldw	r3,4(fp)
   4a338:	2a400117 	ldw	r9,4(r5)
   4a33c:	1009883a 	mov	r4,r2
   4a340:	180b883a 	mov	r5,r3
   4a344:	480f883a 	mov	r7,r9
   4a348:	400d883a 	mov	r6,r8
   4a34c:	004de3c0 	call	4de3c <__divdf3>
   4a350:	e0c00115 	stw	r3,4(fp)
   4a354:	e0800015 	stw	r2,0(fp)
   4a358:	8021d13a 	srai	r16,r16,4
   4a35c:	803d7e26 	beq	r16,zero,49958 <_strtod_r+0x8d4>
   4a360:	008007c4 	movi	r2,31
   4a364:	14002d16 	blt	r2,r16,4a41c <_strtod_r+0x1398>
   4a368:	8080040c 	andi	r2,r16,16
   4a36c:	10009d26 	beq	r2,zero,4a5e4 <_strtod_r+0x1560>
   4a370:	01001a84 	movi	r4,106
   4a374:	d9001c15 	stw	r4,112(sp)
   4a378:	0400110e 	bge	zero,r16,4a3c0 <_strtod_r+0x133c>
   4a37c:	04400174 	movhi	r17,5
   4a380:	8c48bd04 	addi	r17,r17,8948
   4a384:	8080004c 	andi	r2,r16,1
   4a388:	1005003a 	cmpeq	r2,r2,zero
   4a38c:	1000091e 	bne	r2,zero,4a3b4 <_strtod_r+0x1330>
   4a390:	e0800017 	ldw	r2,0(fp)
   4a394:	e0c00117 	ldw	r3,4(fp)
   4a398:	89800017 	ldw	r6,0(r17)
   4a39c:	89c00117 	ldw	r7,4(r17)
   4a3a0:	180b883a 	mov	r5,r3
   4a3a4:	1009883a 	mov	r4,r2
   4a3a8:	004da780 	call	4da78 <__muldf3>
   4a3ac:	e0c00115 	stw	r3,4(fp)
   4a3b0:	e0800015 	stw	r2,0(fp)
   4a3b4:	8021d07a 	srai	r16,r16,1
   4a3b8:	8c400204 	addi	r17,r17,8
   4a3bc:	043ff116 	blt	zero,r16,4a384 <_strtod_r+0x1300>
   4a3c0:	d8801c17 	ldw	r2,112(sp)
   4a3c4:	10000d26 	beq	r2,zero,4a3fc <_strtod_r+0x1378>
   4a3c8:	e1000117 	ldw	r4,4(fp)
   4a3cc:	00c01ac4 	movi	r3,107
   4a3d0:	209ffc2c 	andhi	r2,r4,32752
   4a3d4:	1004d53a 	srli	r2,r2,20
   4a3d8:	1887c83a 	sub	r3,r3,r2
   4a3dc:	00c0070e 	bge	zero,r3,4a3fc <_strtod_r+0x1378>
   4a3e0:	008007c4 	movi	r2,31
   4a3e4:	10c0940e 	bge	r2,r3,4a638 <_strtod_r+0x15b4>
   4a3e8:	00800d04 	movi	r2,52
   4a3ec:	e0000015 	stw	zero,0(fp)
   4a3f0:	10c08b0e 	bge	r2,r3,4a620 <_strtod_r+0x159c>
   4a3f4:	0180dc34 	movhi	r6,880
   4a3f8:	e1800115 	stw	r6,4(fp)
   4a3fc:	e0800017 	ldw	r2,0(fp)
   4a400:	e0c00117 	ldw	r3,4(fp)
   4a404:	000d883a 	mov	r6,zero
   4a408:	000f883a 	mov	r7,zero
   4a40c:	180b883a 	mov	r5,r3
   4a410:	1009883a 	mov	r4,r2
   4a414:	004e11c0 	call	4e11c <__nedf2>
   4a418:	103d501e 	bne	r2,zero,4995c <_strtod_r+0x8d8>
   4a41c:	00800884 	movi	r2,34
   4a420:	a8800015 	stw	r2,0(r21)
   4a424:	e0000015 	stw	zero,0(fp)
   4a428:	e0000115 	stw	zero,4(fp)
   4a42c:	003b9f06 	br	492ac <_strtod_r+0x228>
   4a430:	e1800117 	ldw	r6,4(fp)
   4a434:	00c00434 	movhi	r3,16
   4a438:	18ffffc4 	addi	r3,r3,-1
   4a43c:	30c4703a 	and	r2,r6,r3
   4a440:	103f311e 	bne	r2,zero,4a108 <_strtod_r+0x1084>
   4a444:	e1c00017 	ldw	r7,0(fp)
   4a448:	383f301e 	bne	r7,zero,4a10c <_strtod_r+0x1088>
   4a44c:	003f7906 	br	4a234 <_strtod_r+0x11b0>
   4a450:	d8c00f17 	ldw	r3,60(sp)
   4a454:	00bffa84 	movi	r2,-22
   4a458:	18bcbf16 	blt	r3,r2,49758 <_strtod_r+0x6d4>
   4a45c:	1809883a 	mov	r4,r3
   4a460:	017ffe04 	movi	r5,-8
   4a464:	004e8e80 	call	4e8e8 <__mulsi3>
   4a468:	00c00174 	movhi	r3,5
   4a46c:	18c87004 	addi	r3,r3,8640
   4a470:	10c5883a 	add	r2,r2,r3
   4a474:	e2000017 	ldw	r8,0(fp)
   4a478:	e2400117 	ldw	r9,4(fp)
   4a47c:	12800017 	ldw	r10,0(r2)
   4a480:	12c00117 	ldw	r11,4(r2)
   4a484:	480b883a 	mov	r5,r9
   4a488:	4009883a 	mov	r4,r8
   4a48c:	580f883a 	mov	r7,r11
   4a490:	500d883a 	mov	r6,r10
   4a494:	004de3c0 	call	4de3c <__divdf3>
   4a498:	e0c00115 	stw	r3,4(fp)
   4a49c:	e0800015 	stw	r2,0(fp)
   4a4a0:	003b8206 	br	492ac <_strtod_r+0x228>
   4a4a4:	d8801c17 	ldw	r2,112(sp)
   4a4a8:	1013003a 	cmpeq	r9,r2,zero
   4a4ac:	483e971e 	bne	r9,zero,49f0c <_strtod_r+0xe88>
   4a4b0:	003f6806 	br	4a254 <_strtod_r+0x11d0>
   4a4b4:	00801a44 	movi	r2,105
   4a4b8:	88bc5026 	beq	r17,r2,495fc <_strtod_r+0x578>
   4a4bc:	00801b84 	movi	r2,110
   4a4c0:	88bb9b1e 	bne	r17,r2,49330 <_strtod_r+0x2ac>
   4a4c4:	dc000404 	addi	r16,sp,16
   4a4c8:	8009883a 	mov	r4,r16
   4a4cc:	01400174 	movhi	r5,5
   4a4d0:	2948bc04 	addi	r5,r5,8944
   4a4d4:	004903c0 	call	4903c <match>
   4a4d8:	103b9526 	beq	r2,zero,49330 <_strtod_r+0x2ac>
   4a4dc:	d8800417 	ldw	r2,16(sp)
   4a4e0:	00c00a04 	movi	r3,40
   4a4e4:	11000007 	ldb	r4,0(r2)
   4a4e8:	20c04026 	beq	r4,r3,4a5ec <_strtod_r+0x1568>
   4a4ec:	01bffe34 	movhi	r6,65528
   4a4f0:	e1800115 	stw	r6,4(fp)
   4a4f4:	e0000015 	stw	zero,0(fp)
   4a4f8:	003b6c06 	br	492ac <_strtod_r+0x228>
   4a4fc:	d8c01817 	ldw	r3,96(sp)
   4a500:	00800404 	movi	r2,16
   4a504:	10c00516 	blt	r2,r3,4a51c <_strtod_r+0x1498>
   4a508:	d9001117 	ldw	r4,68(sp)
   4a50c:	01400284 	movi	r5,10
   4a510:	004e8e80 	call	4e8e8 <__mulsi3>
   4a514:	1585883a 	add	r2,r2,r22
   4a518:	d8801115 	stw	r2,68(sp)
   4a51c:	000d883a 	mov	r6,zero
   4a520:	003f2506 	br	4a1b8 <_strtod_r+0x1134>
   4a524:	000d883a 	mov	r6,zero
   4a528:	003ce306 	br	498b8 <_strtod_r+0x834>
   4a52c:	e4400117 	ldw	r17,4(fp)
   4a530:	3809883a 	mov	r4,r7
   4a534:	3821883a 	mov	r16,r7
   4a538:	880b883a 	mov	r5,r17
   4a53c:	00474a00 	call	474a0 <__ulp>
   4a540:	180f883a 	mov	r7,r3
   4a544:	880b883a 	mov	r5,r17
   4a548:	8009883a 	mov	r4,r16
   4a54c:	100d883a 	mov	r6,r2
   4a550:	004da040 	call	4da04 <__adddf3>
   4a554:	180b883a 	mov	r5,r3
   4a558:	d8c01c17 	ldw	r3,112(sp)
   4a55c:	1009883a 	mov	r4,r2
   4a560:	e1400115 	stw	r5,4(fp)
   4a564:	1813003a 	cmpeq	r9,r3,zero
   4a568:	e1000015 	stw	r4,0(fp)
   4a56c:	483e671e 	bne	r9,zero,49f0c <_strtod_r+0xe88>
   4a570:	003f3806 	br	4a254 <_strtod_r+0x11d0>
   4a574:	0080d434 	movhi	r2,848
   4a578:	188d883a 	add	r6,r3,r2
   4a57c:	d8001c15 	stw	zero,112(sp)
   4a580:	e1800115 	stw	r6,4(fp)
   4a584:	003cf506 	br	4995c <_strtod_r+0x8d8>
   4a588:	d8c01c17 	ldw	r3,112(sp)
   4a58c:	1813003a 	cmpeq	r9,r3,zero
   4a590:	483e5e1e 	bne	r9,zero,49f0c <_strtod_r+0xe88>
   4a594:	003f2f06 	br	4a254 <_strtod_r+0x11d0>
   4a598:	309ffc2c 	andhi	r2,r6,32752
   4a59c:	00fffc34 	movhi	r3,65520
   4a5a0:	10c5883a 	add	r2,r2,r3
   4a5a4:	00c00434 	movhi	r3,16
   4a5a8:	18ffffc4 	addi	r3,r3,-1
   4a5ac:	10ccb03a 	or	r6,r2,r3
   4a5b0:	01ffffc4 	movi	r7,-1
   4a5b4:	e1800115 	stw	r6,4(fp)
   4a5b8:	e1c00015 	stw	r7,0(fp)
   4a5bc:	483e531e 	bne	r9,zero,49f0c <_strtod_r+0xe88>
   4a5c0:	003f2406 	br	4a254 <_strtod_r+0x11d0>
   4a5c4:	00bfffc4 	movi	r2,-1
   4a5c8:	003f4306 	br	4a2d8 <_strtod_r+0x1254>
   4a5cc:	0025883a 	mov	r18,zero
   4a5d0:	05800174 	movhi	r22,5
   4a5d4:	b588a204 	addi	r22,r22,8840
   4a5d8:	003c9206 	br	49824 <_strtod_r+0x7a0>
   4a5dc:	d9c01817 	ldw	r7,96(sp)
   4a5e0:	003eeb06 	br	4a190 <_strtod_r+0x110c>
   4a5e4:	d8001c15 	stw	zero,112(sp)
   4a5e8:	003f6306 	br	4a378 <_strtod_r+0x12f4>
   4a5ec:	8009883a 	mov	r4,r16
   4a5f0:	01400174 	movhi	r5,5
   4a5f4:	294b2504 	addi	r5,r5,11412
   4a5f8:	d9800d04 	addi	r6,sp,52
   4a5fc:	004c1d00 	call	4c1d0 <__hexnan>
   4a600:	00c00144 	movi	r3,5
   4a604:	10ffb91e 	bne	r2,r3,4a4ec <_strtod_r+0x1468>
   4a608:	d8800e17 	ldw	r2,56(sp)
   4a60c:	d9c00d17 	ldw	r7,52(sp)
   4a610:	119ffc34 	orhi	r6,r2,32752
   4a614:	e1800115 	stw	r6,4(fp)
   4a618:	e1c00015 	stw	r7,0(fp)
   4a61c:	003b2306 	br	492ac <_strtod_r+0x228>
   4a620:	18fff804 	addi	r3,r3,-32
   4a624:	00bfffc4 	movi	r2,-1
   4a628:	10c4983a 	sll	r2,r2,r3
   4a62c:	208c703a 	and	r6,r4,r2
   4a630:	e1800115 	stw	r6,4(fp)
   4a634:	003f7106 	br	4a3fc <_strtod_r+0x1378>
   4a638:	00bfffc4 	movi	r2,-1
   4a63c:	10c4983a 	sll	r2,r2,r3
   4a640:	e0c00017 	ldw	r3,0(fp)
   4a644:	188e703a 	and	r7,r3,r2
   4a648:	e1c00015 	stw	r7,0(fp)
   4a64c:	003f6b06 	br	4a3fc <_strtod_r+0x1378>

0004a650 <strtof>:
   4a650:	defffa04 	addi	sp,sp,-24
   4a654:	dd000415 	stw	r20,16(sp)
   4a658:	05000174 	movhi	r20,5
   4a65c:	a50fb204 	addi	r20,r20,16072
   4a660:	2007883a 	mov	r3,r4
   4a664:	a1000017 	ldw	r4,0(r20)
   4a668:	280d883a 	mov	r6,r5
   4a66c:	180b883a 	mov	r5,r3
   4a670:	dfc00515 	stw	ra,20(sp)
   4a674:	dcc00315 	stw	r19,12(sp)
   4a678:	dc800215 	stw	r18,8(sp)
   4a67c:	dc400115 	stw	r17,4(sp)
   4a680:	dc000015 	stw	r16,0(sp)
   4a684:	00490840 	call	49084 <_strtod_r>
   4a688:	180b883a 	mov	r5,r3
   4a68c:	1009883a 	mov	r4,r2
   4a690:	1823883a 	mov	r17,r3
   4a694:	1021883a 	mov	r16,r2
   4a698:	004e5940 	call	4e594 <__truncdfsf2>
   4a69c:	1009883a 	mov	r4,r2
   4a6a0:	000b883a 	mov	r5,zero
   4a6a4:	1025883a 	mov	r18,r2
   4a6a8:	1027883a 	mov	r19,r2
   4a6ac:	004d40c0 	call	4d40c <__nesf2>
   4a6b0:	000d883a 	mov	r6,zero
   4a6b4:	000f883a 	mov	r7,zero
   4a6b8:	8009883a 	mov	r4,r16
   4a6bc:	880b883a 	mov	r5,r17
   4a6c0:	10000e1e 	bne	r2,zero,4a6fc <strtof+0xac>
   4a6c4:	004e11c0 	call	4e11c <__nedf2>
   4a6c8:	10000c26 	beq	r2,zero,4a6fc <strtof+0xac>
   4a6cc:	a0c00017 	ldw	r3,0(r20)
   4a6d0:	00800884 	movi	r2,34
   4a6d4:	18800015 	stw	r2,0(r3)
   4a6d8:	9805883a 	mov	r2,r19
   4a6dc:	dfc00517 	ldw	ra,20(sp)
   4a6e0:	dd000417 	ldw	r20,16(sp)
   4a6e4:	dcc00317 	ldw	r19,12(sp)
   4a6e8:	dc800217 	ldw	r18,8(sp)
   4a6ec:	dc400117 	ldw	r17,4(sp)
   4a6f0:	dc000017 	ldw	r16,0(sp)
   4a6f4:	dec00604 	addi	sp,sp,24
   4a6f8:	f800283a 	ret
   4a6fc:	9009883a 	mov	r4,r18
   4a700:	015fe034 	movhi	r5,32640
   4a704:	297fffc4 	addi	r5,r5,-1
   4a708:	004d4840 	call	4d484 <__gtsf2>
   4a70c:	00ffffc4 	movi	r3,-1
   4a710:	011ffc34 	movhi	r4,32752
   4a714:	213fffc4 	addi	r4,r4,-1
   4a718:	200f883a 	mov	r7,r4
   4a71c:	180d883a 	mov	r6,r3
   4a720:	8009883a 	mov	r4,r16
   4a724:	880b883a 	mov	r5,r17
   4a728:	00800f16 	blt	zero,r2,4a768 <strtof+0x118>
   4a72c:	9009883a 	mov	r4,r18
   4a730:	017fe034 	movhi	r5,65408
   4a734:	297fffc4 	addi	r5,r5,-1
   4a738:	004d4fc0 	call	4d4fc <__ltsf2>
   4a73c:	023fffc4 	movi	r8,-1
   4a740:	027ffc34 	movhi	r9,65520
   4a744:	4a7fffc4 	addi	r9,r9,-1
   4a748:	880b883a 	mov	r5,r17
   4a74c:	480f883a 	mov	r7,r9
   4a750:	8009883a 	mov	r4,r16
   4a754:	400d883a 	mov	r6,r8
   4a758:	103fdf0e 	bge	r2,zero,4a6d8 <strtof+0x88>
   4a75c:	004e2b40 	call	4e2b4 <__ltdf2>
   4a760:	103fda0e 	bge	r2,zero,4a6cc <strtof+0x7c>
   4a764:	003fdc06 	br	4a6d8 <strtof+0x88>
   4a768:	004e1a40 	call	4e1a4 <__gtdf2>
   4a76c:	00bfd70e 	bge	zero,r2,4a6cc <strtof+0x7c>
   4a770:	003fee06 	br	4a72c <strtof+0xdc>

0004a774 <strtod>:
   4a774:	01800174 	movhi	r6,5
   4a778:	318fb204 	addi	r6,r6,16072
   4a77c:	2007883a 	mov	r3,r4
   4a780:	31000017 	ldw	r4,0(r6)
   4a784:	280d883a 	mov	r6,r5
   4a788:	180b883a 	mov	r5,r3
   4a78c:	00490841 	jmpi	49084 <_strtod_r>

0004a790 <_strtol_r>:
   4a790:	defff304 	addi	sp,sp,-52
   4a794:	00800174 	movhi	r2,5
   4a798:	108fb104 	addi	r2,r2,16068
   4a79c:	dd000715 	stw	r20,28(sp)
   4a7a0:	15000017 	ldw	r20,0(r2)
   4a7a4:	ddc00a15 	stw	r23,40(sp)
   4a7a8:	dc800515 	stw	r18,20(sp)
   4a7ac:	dc400415 	stw	r17,16(sp)
   4a7b0:	dfc00c15 	stw	ra,48(sp)
   4a7b4:	df000b15 	stw	fp,44(sp)
   4a7b8:	dd800915 	stw	r22,36(sp)
   4a7bc:	dd400815 	stw	r21,32(sp)
   4a7c0:	dcc00615 	stw	r19,24(sp)
   4a7c4:	dc000315 	stw	r16,12(sp)
   4a7c8:	282f883a 	mov	r23,r5
   4a7cc:	d9000115 	stw	r4,4(sp)
   4a7d0:	d9800215 	stw	r6,8(sp)
   4a7d4:	3825883a 	mov	r18,r7
   4a7d8:	2823883a 	mov	r17,r5
   4a7dc:	8c000007 	ldb	r16,0(r17)
   4a7e0:	8c400044 	addi	r17,r17,1
   4a7e4:	a407883a 	add	r3,r20,r16
   4a7e8:	18800003 	ldbu	r2,0(r3)
   4a7ec:	1080020c 	andi	r2,r2,8
   4a7f0:	103ffa1e 	bne	r2,zero,4a7dc <_strtol_r+0x4c>
   4a7f4:	00800b44 	movi	r2,45
   4a7f8:	80805c26 	beq	r16,r2,4a96c <_strtol_r+0x1dc>
   4a7fc:	00800ac4 	movi	r2,43
   4a800:	80805726 	beq	r16,r2,4a960 <_strtol_r+0x1d0>
   4a804:	d8000015 	stw	zero,0(sp)
   4a808:	9007003a 	cmpeq	r3,r18,zero
   4a80c:	1800431e 	bne	r3,zero,4a91c <_strtol_r+0x18c>
   4a810:	00800404 	movi	r2,16
   4a814:	90804126 	beq	r18,r2,4a91c <_strtol_r+0x18c>
   4a818:	902b883a 	mov	r21,r18
   4a81c:	d8c00017 	ldw	r3,0(sp)
   4a820:	1838c03a 	cmpne	fp,r3,zero
   4a824:	e0004a1e 	bne	fp,zero,4a950 <_strtol_r+0x1c0>
   4a828:	04e00034 	movhi	r19,32768
   4a82c:	9cffffc4 	addi	r19,r19,-1
   4a830:	9809883a 	mov	r4,r19
   4a834:	a80b883a 	mov	r5,r21
   4a838:	004e8e00 	call	4e8e0 <__umodsi3>
   4a83c:	9809883a 	mov	r4,r19
   4a840:	a80b883a 	mov	r5,r21
   4a844:	102d883a 	mov	r22,r2
   4a848:	004e8d80 	call	4e8d8 <__udivsi3>
   4a84c:	1027883a 	mov	r19,r2
   4a850:	a405883a 	add	r2,r20,r16
   4a854:	11400003 	ldbu	r5,0(r2)
   4a858:	0009883a 	mov	r4,zero
   4a85c:	000d883a 	mov	r6,zero
   4a860:	28c0010c 	andi	r3,r5,4
   4a864:	18000f26 	beq	r3,zero,4a8a4 <_strtol_r+0x114>
   4a868:	843ff404 	addi	r16,r16,-48
   4a86c:	8480150e 	bge	r16,r18,4a8c4 <_strtol_r+0x134>
   4a870:	30003216 	blt	r6,zero,4a93c <_strtol_r+0x1ac>
   4a874:	99003136 	bltu	r19,r4,4a93c <_strtol_r+0x1ac>
   4a878:	24c02f26 	beq	r4,r19,4a938 <_strtol_r+0x1a8>
   4a87c:	a80b883a 	mov	r5,r21
   4a880:	004e8e80 	call	4e8e8 <__mulsi3>
   4a884:	1409883a 	add	r4,r2,r16
   4a888:	01800044 	movi	r6,1
   4a88c:	8c000007 	ldb	r16,0(r17)
   4a890:	8c400044 	addi	r17,r17,1
   4a894:	a405883a 	add	r2,r20,r16
   4a898:	11400003 	ldbu	r5,0(r2)
   4a89c:	28c0010c 	andi	r3,r5,4
   4a8a0:	183ff11e 	bne	r3,zero,4a868 <_strtol_r+0xd8>
   4a8a4:	288000cc 	andi	r2,r5,3
   4a8a8:	10000626 	beq	r2,zero,4a8c4 <_strtol_r+0x134>
   4a8ac:	2880004c 	andi	r2,r5,1
   4a8b0:	1005003a 	cmpeq	r2,r2,zero
   4a8b4:	1000231e 	bne	r2,zero,4a944 <_strtol_r+0x1b4>
   4a8b8:	00800dc4 	movi	r2,55
   4a8bc:	80a1c83a 	sub	r16,r16,r2
   4a8c0:	84bfeb16 	blt	r16,r18,4a870 <_strtol_r+0xe0>
   4a8c4:	30002e16 	blt	r6,zero,4a980 <_strtol_r+0x1f0>
   4a8c8:	e000231e 	bne	fp,zero,4a958 <_strtol_r+0x1c8>
   4a8cc:	2007883a 	mov	r3,r4
   4a8d0:	d8800217 	ldw	r2,8(sp)
   4a8d4:	10000426 	beq	r2,zero,4a8e8 <_strtol_r+0x158>
   4a8d8:	30000126 	beq	r6,zero,4a8e0 <_strtol_r+0x150>
   4a8dc:	8dffffc4 	addi	r23,r17,-1
   4a8e0:	d9000217 	ldw	r4,8(sp)
   4a8e4:	25c00015 	stw	r23,0(r4)
   4a8e8:	1805883a 	mov	r2,r3
   4a8ec:	dfc00c17 	ldw	ra,48(sp)
   4a8f0:	df000b17 	ldw	fp,44(sp)
   4a8f4:	ddc00a17 	ldw	r23,40(sp)
   4a8f8:	dd800917 	ldw	r22,36(sp)
   4a8fc:	dd400817 	ldw	r21,32(sp)
   4a900:	dd000717 	ldw	r20,28(sp)
   4a904:	dcc00617 	ldw	r19,24(sp)
   4a908:	dc800517 	ldw	r18,20(sp)
   4a90c:	dc400417 	ldw	r17,16(sp)
   4a910:	dc000317 	ldw	r16,12(sp)
   4a914:	dec00d04 	addi	sp,sp,52
   4a918:	f800283a 	ret
   4a91c:	00800c04 	movi	r2,48
   4a920:	80801f26 	beq	r16,r2,4a9a0 <_strtol_r+0x210>
   4a924:	183fbc26 	beq	r3,zero,4a818 <_strtol_r+0x88>
   4a928:	00800c04 	movi	r2,48
   4a92c:	80802926 	beq	r16,r2,4a9d4 <_strtol_r+0x244>
   4a930:	04800284 	movi	r18,10
   4a934:	003fb806 	br	4a818 <_strtol_r+0x88>
   4a938:	b43fd00e 	bge	r22,r16,4a87c <_strtol_r+0xec>
   4a93c:	01bfffc4 	movi	r6,-1
   4a940:	003fd206 	br	4a88c <_strtol_r+0xfc>
   4a944:	008015c4 	movi	r2,87
   4a948:	80a1c83a 	sub	r16,r16,r2
   4a94c:	003fdc06 	br	4a8c0 <_strtol_r+0x130>
   4a950:	04e00034 	movhi	r19,32768
   4a954:	003fb606 	br	4a830 <_strtol_r+0xa0>
   4a958:	0107c83a 	sub	r3,zero,r4
   4a95c:	003fdc06 	br	4a8d0 <_strtol_r+0x140>
   4a960:	8c000007 	ldb	r16,0(r17)
   4a964:	8c400044 	addi	r17,r17,1
   4a968:	003fa606 	br	4a804 <_strtol_r+0x74>
   4a96c:	8c000007 	ldb	r16,0(r17)
   4a970:	00800044 	movi	r2,1
   4a974:	8c400044 	addi	r17,r17,1
   4a978:	d8800015 	stw	r2,0(sp)
   4a97c:	003fa206 	br	4a808 <_strtol_r+0x78>
   4a980:	d9000017 	ldw	r4,0(sp)
   4a984:	2005003a 	cmpeq	r2,r4,zero
   4a988:	10000f1e 	bne	r2,zero,4a9c8 <_strtol_r+0x238>
   4a98c:	00e00034 	movhi	r3,32768
   4a990:	d9000117 	ldw	r4,4(sp)
   4a994:	00800884 	movi	r2,34
   4a998:	20800015 	stw	r2,0(r4)
   4a99c:	003fcc06 	br	4a8d0 <_strtol_r+0x140>
   4a9a0:	89000007 	ldb	r4,0(r17)
   4a9a4:	00801e04 	movi	r2,120
   4a9a8:	20800226 	beq	r4,r2,4a9b4 <_strtol_r+0x224>
   4a9ac:	00801604 	movi	r2,88
   4a9b0:	20bfdc1e 	bne	r4,r2,4a924 <_strtol_r+0x194>
   4a9b4:	8c000047 	ldb	r16,1(r17)
   4a9b8:	04800404 	movi	r18,16
   4a9bc:	8c400084 	addi	r17,r17,2
   4a9c0:	902b883a 	mov	r21,r18
   4a9c4:	003f9506 	br	4a81c <_strtol_r+0x8c>
   4a9c8:	00e00034 	movhi	r3,32768
   4a9cc:	18ffffc4 	addi	r3,r3,-1
   4a9d0:	003fef06 	br	4a990 <_strtol_r+0x200>
   4a9d4:	04800204 	movi	r18,8
   4a9d8:	902b883a 	mov	r21,r18
   4a9dc:	003f8f06 	br	4a81c <_strtol_r+0x8c>

0004a9e0 <strtol>:
   4a9e0:	00800174 	movhi	r2,5
   4a9e4:	108fb204 	addi	r2,r2,16072
   4a9e8:	2013883a 	mov	r9,r4
   4a9ec:	11000017 	ldw	r4,0(r2)
   4a9f0:	2805883a 	mov	r2,r5
   4a9f4:	300f883a 	mov	r7,r6
   4a9f8:	480b883a 	mov	r5,r9
   4a9fc:	100d883a 	mov	r6,r2
   4aa00:	004a7901 	jmpi	4a790 <_strtol_r>

0004aa04 <_strtoll_r>:
   4aa04:	defff004 	addi	sp,sp,-64
   4aa08:	00800174 	movhi	r2,5
   4aa0c:	108fb104 	addi	r2,r2,16068
   4aa10:	df000e15 	stw	fp,56(sp)
   4aa14:	17000017 	ldw	fp,0(r2)
   4aa18:	ddc00d15 	stw	r23,52(sp)
   4aa1c:	dd000a15 	stw	r20,40(sp)
   4aa20:	dfc00f15 	stw	ra,60(sp)
   4aa24:	dd800c15 	stw	r22,48(sp)
   4aa28:	dd400b15 	stw	r21,44(sp)
   4aa2c:	dcc00915 	stw	r19,36(sp)
   4aa30:	dc800815 	stw	r18,32(sp)
   4aa34:	dc400715 	stw	r17,28(sp)
   4aa38:	dc000615 	stw	r16,24(sp)
   4aa3c:	d9400315 	stw	r5,12(sp)
   4aa40:	d9000215 	stw	r4,8(sp)
   4aa44:	d9800415 	stw	r6,16(sp)
   4aa48:	382f883a 	mov	r23,r7
   4aa4c:	2829883a 	mov	r20,r5
   4aa50:	a4c00007 	ldb	r19,0(r20)
   4aa54:	a5000044 	addi	r20,r20,1
   4aa58:	e4c7883a 	add	r3,fp,r19
   4aa5c:	18800003 	ldbu	r2,0(r3)
   4aa60:	1080020c 	andi	r2,r2,8
   4aa64:	103ffa1e 	bne	r2,zero,4aa50 <_strtoll_r+0x4c>
   4aa68:	00800b44 	movi	r2,45
   4aa6c:	98808826 	beq	r19,r2,4ac90 <_strtoll_r+0x28c>
   4aa70:	00800ac4 	movi	r2,43
   4aa74:	98808326 	beq	r19,r2,4ac84 <_strtoll_r+0x280>
   4aa78:	d8000115 	stw	zero,4(sp)
   4aa7c:	b807003a 	cmpeq	r3,r23,zero
   4aa80:	18005f1e 	bne	r3,zero,4ac00 <_strtoll_r+0x1fc>
   4aa84:	00800404 	movi	r2,16
   4aa88:	b8805d26 	beq	r23,r2,4ac00 <_strtoll_r+0x1fc>
   4aa8c:	b82dd7fa 	srai	r22,r23,31
   4aa90:	b82b883a 	mov	r21,r23
   4aa94:	d8c00117 	ldw	r3,4(sp)
   4aa98:	1806c03a 	cmpne	r3,r3,zero
   4aa9c:	d8c00515 	stw	r3,20(sp)
   4aaa0:	1800631e 	bne	r3,zero,4ac30 <_strtoll_r+0x22c>
   4aaa4:	043fffc4 	movi	r16,-1
   4aaa8:	04600034 	movhi	r17,32768
   4aaac:	8c7fffc4 	addi	r17,r17,-1
   4aab0:	880b883a 	mov	r5,r17
   4aab4:	8009883a 	mov	r4,r16
   4aab8:	a80d883a 	mov	r6,r21
   4aabc:	b00f883a 	mov	r7,r22
   4aac0:	004cdac0 	call	4cdac <__umoddi3>
   4aac4:	880b883a 	mov	r5,r17
   4aac8:	8009883a 	mov	r4,r16
   4aacc:	b00f883a 	mov	r7,r22
   4aad0:	a80d883a 	mov	r6,r21
   4aad4:	d8800015 	stw	r2,0(sp)
   4aad8:	004c7400 	call	4c740 <__udivdi3>
   4aadc:	1023883a 	mov	r17,r2
   4aae0:	e4c5883a 	add	r2,fp,r19
   4aae4:	11000003 	ldbu	r4,0(r2)
   4aae8:	1825883a 	mov	r18,r3
   4aaec:	0015883a 	mov	r10,zero
   4aaf0:	20c0010c 	andi	r3,r4,4
   4aaf4:	0017883a 	mov	r11,zero
   4aaf8:	000f883a 	mov	r7,zero
   4aafc:	18001a26 	beq	r3,zero,4ab68 <_strtoll_r+0x164>
   4ab00:	9c3ff404 	addi	r16,r19,-48
   4ab04:	85c0200e 	bge	r16,r23,4ab88 <_strtoll_r+0x184>
   4ab08:	38003b16 	blt	r7,zero,4abf8 <_strtoll_r+0x1f4>
   4ab0c:	92c03a36 	bltu	r18,r11,4abf8 <_strtoll_r+0x1f4>
   4ab10:	5c803826 	beq	r11,r18,4abf4 <_strtoll_r+0x1f0>
   4ab14:	54404c26 	beq	r10,r17,4ac48 <_strtoll_r+0x244>
   4ab18:	580b883a 	mov	r5,r11
   4ab1c:	5009883a 	mov	r4,r10
   4ab20:	a80d883a 	mov	r6,r21
   4ab24:	b00f883a 	mov	r7,r22
   4ab28:	004c5780 	call	4c578 <__muldi3>
   4ab2c:	8013d7fa 	srai	r9,r16,31
   4ab30:	100d883a 	mov	r6,r2
   4ab34:	1405883a 	add	r2,r2,r16
   4ab38:	118d803a 	cmpltu	r6,r2,r6
   4ab3c:	1a47883a 	add	r3,r3,r9
   4ab40:	30cd883a 	add	r6,r6,r3
   4ab44:	1015883a 	mov	r10,r2
   4ab48:	3017883a 	mov	r11,r6
   4ab4c:	01c00044 	movi	r7,1
   4ab50:	a4c00007 	ldb	r19,0(r20)
   4ab54:	a5000044 	addi	r20,r20,1
   4ab58:	e4c5883a 	add	r2,fp,r19
   4ab5c:	11000003 	ldbu	r4,0(r2)
   4ab60:	20c0010c 	andi	r3,r4,4
   4ab64:	183fe61e 	bne	r3,zero,4ab00 <_strtoll_r+0xfc>
   4ab68:	208000cc 	andi	r2,r4,3
   4ab6c:	10000626 	beq	r2,zero,4ab88 <_strtoll_r+0x184>
   4ab70:	2080004c 	andi	r2,r4,1
   4ab74:	1005003a 	cmpeq	r2,r2,zero
   4ab78:	1000301e 	bne	r2,zero,4ac3c <_strtoll_r+0x238>
   4ab7c:	02000dc4 	movi	r8,55
   4ab80:	9a21c83a 	sub	r16,r19,r8
   4ab84:	85ffe016 	blt	r16,r23,4ab08 <_strtoll_r+0x104>
   4ab88:	38004616 	blt	r7,zero,4aca4 <_strtoll_r+0x2a0>
   4ab8c:	d8800517 	ldw	r2,20(sp)
   4ab90:	1000341e 	bne	r2,zero,4ac64 <_strtoll_r+0x260>
   4ab94:	500b883a 	mov	r5,r10
   4ab98:	580d883a 	mov	r6,r11
   4ab9c:	d8c00417 	ldw	r3,16(sp)
   4aba0:	18000626 	beq	r3,zero,4abbc <_strtoll_r+0x1b8>
   4aba4:	38000226 	beq	r7,zero,4abb0 <_strtoll_r+0x1ac>
   4aba8:	a53fffc4 	addi	r20,r20,-1
   4abac:	dd000315 	stw	r20,12(sp)
   4abb0:	d8c00317 	ldw	r3,12(sp)
   4abb4:	d8800417 	ldw	r2,16(sp)
   4abb8:	10c00015 	stw	r3,0(r2)
   4abbc:	2805883a 	mov	r2,r5
   4abc0:	3007883a 	mov	r3,r6
   4abc4:	dfc00f17 	ldw	ra,60(sp)
   4abc8:	df000e17 	ldw	fp,56(sp)
   4abcc:	ddc00d17 	ldw	r23,52(sp)
   4abd0:	dd800c17 	ldw	r22,48(sp)
   4abd4:	dd400b17 	ldw	r21,44(sp)
   4abd8:	dd000a17 	ldw	r20,40(sp)
   4abdc:	dcc00917 	ldw	r19,36(sp)
   4abe0:	dc800817 	ldw	r18,32(sp)
   4abe4:	dc400717 	ldw	r17,28(sp)
   4abe8:	dc000617 	ldw	r16,24(sp)
   4abec:	dec01004 	addi	sp,sp,64
   4abf0:	f800283a 	ret
   4abf4:	8abfc72e 	bgeu	r17,r10,4ab14 <_strtoll_r+0x110>
   4abf8:	01ffffc4 	movi	r7,-1
   4abfc:	003fd406 	br	4ab50 <_strtoll_r+0x14c>
   4ac00:	00800c04 	movi	r2,48
   4ac04:	98803226 	beq	r19,r2,4acd0 <_strtoll_r+0x2cc>
   4ac08:	183fa026 	beq	r3,zero,4aa8c <_strtoll_r+0x88>
   4ac0c:	00800c04 	movi	r2,48
   4ac10:	98803e26 	beq	r19,r2,4ad0c <_strtoll_r+0x308>
   4ac14:	d8c00117 	ldw	r3,4(sp)
   4ac18:	05c00284 	movi	r23,10
   4ac1c:	b82b883a 	mov	r21,r23
   4ac20:	1806c03a 	cmpne	r3,r3,zero
   4ac24:	002d883a 	mov	r22,zero
   4ac28:	d8c00515 	stw	r3,20(sp)
   4ac2c:	183f9d26 	beq	r3,zero,4aaa4 <_strtoll_r+0xa0>
   4ac30:	0021883a 	mov	r16,zero
   4ac34:	04600034 	movhi	r17,32768
   4ac38:	003f9d06 	br	4aab0 <_strtoll_r+0xac>
   4ac3c:	020015c4 	movi	r8,87
   4ac40:	9a21c83a 	sub	r16,r19,r8
   4ac44:	003fcf06 	br	4ab84 <_strtoll_r+0x180>
   4ac48:	5cbfb31e 	bne	r11,r18,4ab18 <_strtoll_r+0x114>
   4ac4c:	d8800017 	ldw	r2,0(sp)
   4ac50:	143fb10e 	bge	r2,r16,4ab18 <_strtoll_r+0x114>
   4ac54:	8815883a 	mov	r10,r17
   4ac58:	9017883a 	mov	r11,r18
   4ac5c:	01ffffc4 	movi	r7,-1
   4ac60:	003fbb06 	br	4ab50 <_strtoll_r+0x14c>
   4ac64:	0009883a 	mov	r4,zero
   4ac68:	2285c83a 	sub	r2,r4,r10
   4ac6c:	2089803a 	cmpltu	r4,r4,r2
   4ac70:	02c7c83a 	sub	r3,zero,r11
   4ac74:	1909c83a 	sub	r4,r3,r4
   4ac78:	100b883a 	mov	r5,r2
   4ac7c:	200d883a 	mov	r6,r4
   4ac80:	003fc606 	br	4ab9c <_strtoll_r+0x198>
   4ac84:	a4c00007 	ldb	r19,0(r20)
   4ac88:	a5000044 	addi	r20,r20,1
   4ac8c:	003f7a06 	br	4aa78 <_strtoll_r+0x74>
   4ac90:	a4c00007 	ldb	r19,0(r20)
   4ac94:	00800044 	movi	r2,1
   4ac98:	a5000044 	addi	r20,r20,1
   4ac9c:	d8800115 	stw	r2,4(sp)
   4aca0:	003f7606 	br	4aa7c <_strtoll_r+0x78>
   4aca4:	d8c00117 	ldw	r3,4(sp)
   4aca8:	1805003a 	cmpeq	r2,r3,zero
   4acac:	1000131e 	bne	r2,zero,4acfc <_strtoll_r+0x2f8>
   4acb0:	0005883a 	mov	r2,zero
   4acb4:	00e00034 	movhi	r3,32768
   4acb8:	100b883a 	mov	r5,r2
   4acbc:	180d883a 	mov	r6,r3
   4acc0:	d8c00217 	ldw	r3,8(sp)
   4acc4:	00800884 	movi	r2,34
   4acc8:	18800015 	stw	r2,0(r3)
   4accc:	003fb306 	br	4ab9c <_strtoll_r+0x198>
   4acd0:	a1000007 	ldb	r4,0(r20)
   4acd4:	00801e04 	movi	r2,120
   4acd8:	20800226 	beq	r4,r2,4ace4 <_strtoll_r+0x2e0>
   4acdc:	00801604 	movi	r2,88
   4ace0:	20bfc91e 	bne	r4,r2,4ac08 <_strtoll_r+0x204>
   4ace4:	a4c00047 	ldb	r19,1(r20)
   4ace8:	05c00404 	movi	r23,16
   4acec:	b82b883a 	mov	r21,r23
   4acf0:	a5000084 	addi	r20,r20,2
   4acf4:	002d883a 	mov	r22,zero
   4acf8:	003f6606 	br	4aa94 <_strtoll_r+0x90>
   4acfc:	017fffc4 	movi	r5,-1
   4ad00:	01a00034 	movhi	r6,32768
   4ad04:	31bfffc4 	addi	r6,r6,-1
   4ad08:	003fed06 	br	4acc0 <_strtoll_r+0x2bc>
   4ad0c:	05c00204 	movi	r23,8
   4ad10:	b82b883a 	mov	r21,r23
   4ad14:	002d883a 	mov	r22,zero
   4ad18:	003f5e06 	br	4aa94 <_strtoll_r+0x90>

0004ad1c <_strtoul_r>:
   4ad1c:	defff404 	addi	sp,sp,-48
   4ad20:	00800174 	movhi	r2,5
   4ad24:	108fb104 	addi	r2,r2,16068
   4ad28:	dd000615 	stw	r20,24(sp)
   4ad2c:	15000017 	ldw	r20,0(r2)
   4ad30:	df000a15 	stw	fp,40(sp)
   4ad34:	ddc00915 	stw	r23,36(sp)
   4ad38:	dc800415 	stw	r18,16(sp)
   4ad3c:	dc400315 	stw	r17,12(sp)
   4ad40:	dfc00b15 	stw	ra,44(sp)
   4ad44:	dd800815 	stw	r22,32(sp)
   4ad48:	dd400715 	stw	r21,28(sp)
   4ad4c:	dcc00515 	stw	r19,20(sp)
   4ad50:	dc000215 	stw	r16,8(sp)
   4ad54:	282f883a 	mov	r23,r5
   4ad58:	d9000115 	stw	r4,4(sp)
   4ad5c:	3039883a 	mov	fp,r6
   4ad60:	3825883a 	mov	r18,r7
   4ad64:	2823883a 	mov	r17,r5
   4ad68:	8c000007 	ldb	r16,0(r17)
   4ad6c:	8c400044 	addi	r17,r17,1
   4ad70:	a407883a 	add	r3,r20,r16
   4ad74:	18800003 	ldbu	r2,0(r3)
   4ad78:	1080020c 	andi	r2,r2,8
   4ad7c:	103ffa1e 	bne	r2,zero,4ad68 <_strtoul_r+0x4c>
   4ad80:	00800b44 	movi	r2,45
   4ad84:	80805826 	beq	r16,r2,4aee8 <_strtoul_r+0x1cc>
   4ad88:	00800ac4 	movi	r2,43
   4ad8c:	80805326 	beq	r16,r2,4aedc <_strtoul_r+0x1c0>
   4ad90:	d8000015 	stw	zero,0(sp)
   4ad94:	9007003a 	cmpeq	r3,r18,zero
   4ad98:	18003d1e 	bne	r3,zero,4ae90 <_strtoul_r+0x174>
   4ad9c:	00800404 	movi	r2,16
   4ada0:	90803b26 	beq	r18,r2,4ae90 <_strtoul_r+0x174>
   4ada4:	013fffc4 	movi	r4,-1
   4ada8:	900b883a 	mov	r5,r18
   4adac:	004e8d80 	call	4e8d8 <__udivsi3>
   4adb0:	013fffc4 	movi	r4,-1
   4adb4:	900b883a 	mov	r5,r18
   4adb8:	1027883a 	mov	r19,r2
   4adbc:	004e8e00 	call	4e8e0 <__umodsi3>
   4adc0:	102d883a 	mov	r22,r2
   4adc4:	902b883a 	mov	r21,r18
   4adc8:	a405883a 	add	r2,r20,r16
   4adcc:	11400003 	ldbu	r5,0(r2)
   4add0:	0009883a 	mov	r4,zero
   4add4:	000d883a 	mov	r6,zero
   4add8:	28c0010c 	andi	r3,r5,4
   4addc:	18000f26 	beq	r3,zero,4ae1c <_strtoul_r+0x100>
   4ade0:	843ff404 	addi	r16,r16,-48
   4ade4:	8480150e 	bge	r16,r18,4ae3c <_strtoul_r+0x120>
   4ade8:	30003516 	blt	r6,zero,4aec0 <_strtoul_r+0x1a4>
   4adec:	99003436 	bltu	r19,r4,4aec0 <_strtoul_r+0x1a4>
   4adf0:	24c03226 	beq	r4,r19,4aebc <_strtoul_r+0x1a0>
   4adf4:	a80b883a 	mov	r5,r21
   4adf8:	004e8e80 	call	4e8e8 <__mulsi3>
   4adfc:	1409883a 	add	r4,r2,r16
   4ae00:	01800044 	movi	r6,1
   4ae04:	8c000007 	ldb	r16,0(r17)
   4ae08:	8c400044 	addi	r17,r17,1
   4ae0c:	a405883a 	add	r2,r20,r16
   4ae10:	11400003 	ldbu	r5,0(r2)
   4ae14:	28c0010c 	andi	r3,r5,4
   4ae18:	183ff11e 	bne	r3,zero,4ade0 <_strtoul_r+0xc4>
   4ae1c:	288000cc 	andi	r2,r5,3
   4ae20:	10000626 	beq	r2,zero,4ae3c <_strtoul_r+0x120>
   4ae24:	2880004c 	andi	r2,r5,1
   4ae28:	1005003a 	cmpeq	r2,r2,zero
   4ae2c:	1000261e 	bne	r2,zero,4aec8 <_strtoul_r+0x1ac>
   4ae30:	00800dc4 	movi	r2,55
   4ae34:	80a1c83a 	sub	r16,r16,r2
   4ae38:	84bfeb16 	blt	r16,r18,4ade8 <_strtoul_r+0xcc>
   4ae3c:	3000420e 	bge	r6,zero,4af48 <_strtoul_r+0x22c>
   4ae40:	d8c00117 	ldw	r3,4(sp)
   4ae44:	00800884 	movi	r2,34
   4ae48:	013fffc4 	movi	r4,-1
   4ae4c:	18800015 	stw	r2,0(r3)
   4ae50:	e0000226 	beq	fp,zero,4ae5c <_strtoul_r+0x140>
   4ae54:	30001f1e 	bne	r6,zero,4aed4 <_strtoul_r+0x1b8>
   4ae58:	e5c00015 	stw	r23,0(fp)
   4ae5c:	2005883a 	mov	r2,r4
   4ae60:	dfc00b17 	ldw	ra,44(sp)
   4ae64:	df000a17 	ldw	fp,40(sp)
   4ae68:	ddc00917 	ldw	r23,36(sp)
   4ae6c:	dd800817 	ldw	r22,32(sp)
   4ae70:	dd400717 	ldw	r21,28(sp)
   4ae74:	dd000617 	ldw	r20,24(sp)
   4ae78:	dcc00517 	ldw	r19,20(sp)
   4ae7c:	dc800417 	ldw	r18,16(sp)
   4ae80:	dc400317 	ldw	r17,12(sp)
   4ae84:	dc000217 	ldw	r16,8(sp)
   4ae88:	dec00c04 	addi	sp,sp,48
   4ae8c:	f800283a 	ret
   4ae90:	00800c04 	movi	r2,48
   4ae94:	80801926 	beq	r16,r2,4aefc <_strtoul_r+0x1e0>
   4ae98:	183fc226 	beq	r3,zero,4ada4 <_strtoul_r+0x88>
   4ae9c:	00800c04 	movi	r2,48
   4aea0:	80802326 	beq	r16,r2,4af30 <_strtoul_r+0x214>
   4aea4:	04800284 	movi	r18,10
   4aea8:	902b883a 	mov	r21,r18
   4aeac:	04c666b4 	movhi	r19,6554
   4aeb0:	9ce66644 	addi	r19,r19,-26215
   4aeb4:	05800144 	movi	r22,5
   4aeb8:	003fc306 	br	4adc8 <_strtoul_r+0xac>
   4aebc:	b43fcd0e 	bge	r22,r16,4adf4 <_strtoul_r+0xd8>
   4aec0:	01bfffc4 	movi	r6,-1
   4aec4:	003fcf06 	br	4ae04 <_strtoul_r+0xe8>
   4aec8:	008015c4 	movi	r2,87
   4aecc:	80a1c83a 	sub	r16,r16,r2
   4aed0:	003fd906 	br	4ae38 <_strtoul_r+0x11c>
   4aed4:	8dffffc4 	addi	r23,r17,-1
   4aed8:	003fdf06 	br	4ae58 <_strtoul_r+0x13c>
   4aedc:	8c000007 	ldb	r16,0(r17)
   4aee0:	8c400044 	addi	r17,r17,1
   4aee4:	003faa06 	br	4ad90 <_strtoul_r+0x74>
   4aee8:	8c000007 	ldb	r16,0(r17)
   4aeec:	00800044 	movi	r2,1
   4aef0:	8c400044 	addi	r17,r17,1
   4aef4:	d8800015 	stw	r2,0(sp)
   4aef8:	003fa606 	br	4ad94 <_strtoul_r+0x78>
   4aefc:	89000007 	ldb	r4,0(r17)
   4af00:	00801e04 	movi	r2,120
   4af04:	20800226 	beq	r4,r2,4af10 <_strtoul_r+0x1f4>
   4af08:	00801604 	movi	r2,88
   4af0c:	20bfe21e 	bne	r4,r2,4ae98 <_strtoul_r+0x17c>
   4af10:	8c000047 	ldb	r16,1(r17)
   4af14:	04800404 	movi	r18,16
   4af18:	8c400084 	addi	r17,r17,2
   4af1c:	902b883a 	mov	r21,r18
   4af20:	04c40034 	movhi	r19,4096
   4af24:	9cffffc4 	addi	r19,r19,-1
   4af28:	058003c4 	movi	r22,15
   4af2c:	003fa606 	br	4adc8 <_strtoul_r+0xac>
   4af30:	04800204 	movi	r18,8
   4af34:	902b883a 	mov	r21,r18
   4af38:	04c80034 	movhi	r19,8192
   4af3c:	9cffffc4 	addi	r19,r19,-1
   4af40:	058001c4 	movi	r22,7
   4af44:	003fa006 	br	4adc8 <_strtoul_r+0xac>
   4af48:	d8c00017 	ldw	r3,0(sp)
   4af4c:	1805003a 	cmpeq	r2,r3,zero
   4af50:	103fbf1e 	bne	r2,zero,4ae50 <_strtoul_r+0x134>
   4af54:	0109c83a 	sub	r4,zero,r4
   4af58:	003fbd06 	br	4ae50 <_strtoul_r+0x134>

0004af5c <strtoul>:
   4af5c:	00800174 	movhi	r2,5
   4af60:	108fb204 	addi	r2,r2,16072
   4af64:	2013883a 	mov	r9,r4
   4af68:	11000017 	ldw	r4,0(r2)
   4af6c:	2805883a 	mov	r2,r5
   4af70:	300f883a 	mov	r7,r6
   4af74:	480b883a 	mov	r5,r9
   4af78:	100d883a 	mov	r6,r2
   4af7c:	004ad1c1 	jmpi	4ad1c <_strtoul_r>

0004af80 <_strtoull_r>:
   4af80:	defff104 	addi	sp,sp,-60
   4af84:	00800174 	movhi	r2,5
   4af88:	108fb104 	addi	r2,r2,16068
   4af8c:	df000d15 	stw	fp,52(sp)
   4af90:	17000017 	ldw	fp,0(r2)
   4af94:	ddc00c15 	stw	r23,48(sp)
   4af98:	dcc00815 	stw	r19,32(sp)
   4af9c:	dfc00e15 	stw	ra,56(sp)
   4afa0:	dd800b15 	stw	r22,44(sp)
   4afa4:	dd400a15 	stw	r21,40(sp)
   4afa8:	dd000915 	stw	r20,36(sp)
   4afac:	dc800715 	stw	r18,28(sp)
   4afb0:	dc400615 	stw	r17,24(sp)
   4afb4:	dc000515 	stw	r16,20(sp)
   4afb8:	d9400215 	stw	r5,8(sp)
   4afbc:	d9000115 	stw	r4,4(sp)
   4afc0:	d9800315 	stw	r6,12(sp)
   4afc4:	382f883a 	mov	r23,r7
   4afc8:	2827883a 	mov	r19,r5
   4afcc:	9d000007 	ldb	r20,0(r19)
   4afd0:	9cc00044 	addi	r19,r19,1
   4afd4:	e507883a 	add	r3,fp,r20
   4afd8:	18800003 	ldbu	r2,0(r3)
   4afdc:	1080020c 	andi	r2,r2,8
   4afe0:	103ffa1e 	bne	r2,zero,4afcc <_strtoull_r+0x4c>
   4afe4:	00800b44 	movi	r2,45
   4afe8:	a0807a26 	beq	r20,r2,4b1d4 <_strtoull_r+0x254>
   4afec:	00800ac4 	movi	r2,43
   4aff0:	a0807526 	beq	r20,r2,4b1c8 <_strtoull_r+0x248>
   4aff4:	d8000015 	stw	zero,0(sp)
   4aff8:	b807003a 	cmpeq	r3,r23,zero
   4affc:	18005a1e 	bne	r3,zero,4b168 <_strtoull_r+0x1e8>
   4b000:	00800404 	movi	r2,16
   4b004:	b8805826 	beq	r23,r2,4b168 <_strtoull_r+0x1e8>
   4b008:	b82dd7fa 	srai	r22,r23,31
   4b00c:	043fffc4 	movi	r16,-1
   4b010:	8009883a 	mov	r4,r16
   4b014:	800b883a 	mov	r5,r16
   4b018:	b80d883a 	mov	r6,r23
   4b01c:	b00f883a 	mov	r7,r22
   4b020:	004c7400 	call	4c740 <__udivdi3>
   4b024:	8009883a 	mov	r4,r16
   4b028:	800b883a 	mov	r5,r16
   4b02c:	b80d883a 	mov	r6,r23
   4b030:	b00f883a 	mov	r7,r22
   4b034:	1023883a 	mov	r17,r2
   4b038:	1825883a 	mov	r18,r3
   4b03c:	004cdac0 	call	4cdac <__umoddi3>
   4b040:	b82b883a 	mov	r21,r23
   4b044:	1019883a 	mov	r12,r2
   4b048:	e505883a 	add	r2,fp,r20
   4b04c:	11000003 	ldbu	r4,0(r2)
   4b050:	0015883a 	mov	r10,zero
   4b054:	0017883a 	mov	r11,zero
   4b058:	20c0010c 	andi	r3,r4,4
   4b05c:	000d883a 	mov	r6,zero
   4b060:	18001c26 	beq	r3,zero,4b0d4 <_strtoull_r+0x154>
   4b064:	a43ff404 	addi	r16,r20,-48
   4b068:	85c0220e 	bge	r16,r23,4b0f4 <_strtoull_r+0x174>
   4b06c:	30003c16 	blt	r6,zero,4b160 <_strtoull_r+0x1e0>
   4b070:	92c03b36 	bltu	r18,r11,4b160 <_strtoull_r+0x1e0>
   4b074:	5c803926 	beq	r11,r18,4b15c <_strtoull_r+0x1dc>
   4b078:	54404c26 	beq	r10,r17,4b1ac <_strtoull_r+0x22c>
   4b07c:	580b883a 	mov	r5,r11
   4b080:	5009883a 	mov	r4,r10
   4b084:	a80d883a 	mov	r6,r21
   4b088:	b00f883a 	mov	r7,r22
   4b08c:	db000415 	stw	r12,16(sp)
   4b090:	004c5780 	call	4c578 <__muldi3>
   4b094:	8013d7fa 	srai	r9,r16,31
   4b098:	100d883a 	mov	r6,r2
   4b09c:	1405883a 	add	r2,r2,r16
   4b0a0:	118d803a 	cmpltu	r6,r2,r6
   4b0a4:	1a47883a 	add	r3,r3,r9
   4b0a8:	db000417 	ldw	r12,16(sp)
   4b0ac:	30cd883a 	add	r6,r6,r3
   4b0b0:	3017883a 	mov	r11,r6
   4b0b4:	1015883a 	mov	r10,r2
   4b0b8:	01800044 	movi	r6,1
   4b0bc:	9d000007 	ldb	r20,0(r19)
   4b0c0:	9cc00044 	addi	r19,r19,1
   4b0c4:	e505883a 	add	r2,fp,r20
   4b0c8:	11000003 	ldbu	r4,0(r2)
   4b0cc:	20c0010c 	andi	r3,r4,4
   4b0d0:	183fe41e 	bne	r3,zero,4b064 <_strtoull_r+0xe4>
   4b0d4:	208000cc 	andi	r2,r4,3
   4b0d8:	10000626 	beq	r2,zero,4b0f4 <_strtoull_r+0x174>
   4b0dc:	2080004c 	andi	r2,r4,1
   4b0e0:	1005003a 	cmpeq	r2,r2,zero
   4b0e4:	10002e1e 	bne	r2,zero,4b1a0 <_strtoull_r+0x220>
   4b0e8:	02000dc4 	movi	r8,55
   4b0ec:	a221c83a 	sub	r16,r20,r8
   4b0f0:	85ffde16 	blt	r16,r23,4b06c <_strtoull_r+0xec>
   4b0f4:	3000530e 	bge	r6,zero,4b244 <_strtoull_r+0x2c4>
   4b0f8:	d8c00117 	ldw	r3,4(sp)
   4b0fc:	02bfffc4 	movi	r10,-1
   4b100:	00800884 	movi	r2,34
   4b104:	5017883a 	mov	r11,r10
   4b108:	18800015 	stw	r2,0(r3)
   4b10c:	d8800317 	ldw	r2,12(sp)
   4b110:	10000426 	beq	r2,zero,4b124 <_strtoull_r+0x1a4>
   4b114:	3000291e 	bne	r6,zero,4b1bc <_strtoull_r+0x23c>
   4b118:	d8800217 	ldw	r2,8(sp)
   4b11c:	d8c00317 	ldw	r3,12(sp)
   4b120:	18800015 	stw	r2,0(r3)
   4b124:	5005883a 	mov	r2,r10
   4b128:	5807883a 	mov	r3,r11
   4b12c:	dfc00e17 	ldw	ra,56(sp)
   4b130:	df000d17 	ldw	fp,52(sp)
   4b134:	ddc00c17 	ldw	r23,48(sp)
   4b138:	dd800b17 	ldw	r22,44(sp)
   4b13c:	dd400a17 	ldw	r21,40(sp)
   4b140:	dd000917 	ldw	r20,36(sp)
   4b144:	dcc00817 	ldw	r19,32(sp)
   4b148:	dc800717 	ldw	r18,28(sp)
   4b14c:	dc400617 	ldw	r17,24(sp)
   4b150:	dc000517 	ldw	r16,20(sp)
   4b154:	dec00f04 	addi	sp,sp,60
   4b158:	f800283a 	ret
   4b15c:	8abfc62e 	bgeu	r17,r10,4b078 <_strtoull_r+0xf8>
   4b160:	01bfffc4 	movi	r6,-1
   4b164:	003fd506 	br	4b0bc <_strtoull_r+0x13c>
   4b168:	00800c04 	movi	r2,48
   4b16c:	a0801e26 	beq	r20,r2,4b1e8 <_strtoull_r+0x268>
   4b170:	183fa526 	beq	r3,zero,4b008 <_strtoull_r+0x88>
   4b174:	00800c04 	movi	r2,48
   4b178:	a0802a26 	beq	r20,r2,4b224 <_strtoull_r+0x2a4>
   4b17c:	05c00284 	movi	r23,10
   4b180:	b82b883a 	mov	r21,r23
   4b184:	046666b4 	movhi	r17,39322
   4b188:	8c666644 	addi	r17,r17,-26215
   4b18c:	002d883a 	mov	r22,zero
   4b190:	048666b4 	movhi	r18,6554
   4b194:	94a66644 	addi	r18,r18,-26215
   4b198:	03000144 	movi	r12,5
   4b19c:	003faa06 	br	4b048 <_strtoull_r+0xc8>
   4b1a0:	020015c4 	movi	r8,87
   4b1a4:	a221c83a 	sub	r16,r20,r8
   4b1a8:	003fd106 	br	4b0f0 <_strtoull_r+0x170>
   4b1ac:	5cbfb31e 	bne	r11,r18,4b07c <_strtoull_r+0xfc>
   4b1b0:	643fb20e 	bge	r12,r16,4b07c <_strtoull_r+0xfc>
   4b1b4:	01bfffc4 	movi	r6,-1
   4b1b8:	003fc006 	br	4b0bc <_strtoull_r+0x13c>
   4b1bc:	9cffffc4 	addi	r19,r19,-1
   4b1c0:	dcc00215 	stw	r19,8(sp)
   4b1c4:	003fd406 	br	4b118 <_strtoull_r+0x198>
   4b1c8:	9d000007 	ldb	r20,0(r19)
   4b1cc:	9cc00044 	addi	r19,r19,1
   4b1d0:	003f8806 	br	4aff4 <_strtoull_r+0x74>
   4b1d4:	9d000007 	ldb	r20,0(r19)
   4b1d8:	00800044 	movi	r2,1
   4b1dc:	9cc00044 	addi	r19,r19,1
   4b1e0:	d8800015 	stw	r2,0(sp)
   4b1e4:	003f8406 	br	4aff8 <_strtoull_r+0x78>
   4b1e8:	99000007 	ldb	r4,0(r19)
   4b1ec:	00801e04 	movi	r2,120
   4b1f0:	20800226 	beq	r4,r2,4b1fc <_strtoull_r+0x27c>
   4b1f4:	00801604 	movi	r2,88
   4b1f8:	20bfdd1e 	bne	r4,r2,4b170 <_strtoull_r+0x1f0>
   4b1fc:	9d000047 	ldb	r20,1(r19)
   4b200:	05c00404 	movi	r23,16
   4b204:	b82b883a 	mov	r21,r23
   4b208:	047fffc4 	movi	r17,-1
   4b20c:	9cc00084 	addi	r19,r19,2
   4b210:	002d883a 	mov	r22,zero
   4b214:	04840034 	movhi	r18,4096
   4b218:	94bfffc4 	addi	r18,r18,-1
   4b21c:	030003c4 	movi	r12,15
   4b220:	003f8906 	br	4b048 <_strtoull_r+0xc8>
   4b224:	05c00204 	movi	r23,8
   4b228:	b82b883a 	mov	r21,r23
   4b22c:	047fffc4 	movi	r17,-1
   4b230:	002d883a 	mov	r22,zero
   4b234:	04880034 	movhi	r18,8192
   4b238:	94bfffc4 	addi	r18,r18,-1
   4b23c:	030001c4 	movi	r12,7
   4b240:	003f8106 	br	4b048 <_strtoull_r+0xc8>
   4b244:	d8c00017 	ldw	r3,0(sp)
   4b248:	1805003a 	cmpeq	r2,r3,zero
   4b24c:	103faf1e 	bne	r2,zero,4b10c <_strtoull_r+0x18c>
   4b250:	0009883a 	mov	r4,zero
   4b254:	2285c83a 	sub	r2,r4,r10
   4b258:	02c7c83a 	sub	r3,zero,r11
   4b25c:	2089803a 	cmpltu	r4,r4,r2
   4b260:	1909c83a 	sub	r4,r3,r4
   4b264:	1015883a 	mov	r10,r2
   4b268:	2017883a 	mov	r11,r4
   4b26c:	003fa706 	br	4b10c <_strtoull_r+0x18c>

0004b270 <__submore>:
   4b270:	defffa04 	addi	sp,sp,-24
   4b274:	28c00c17 	ldw	r3,48(r5)
   4b278:	dc800215 	stw	r18,8(sp)
   4b27c:	2825883a 	mov	r18,r5
   4b280:	dc000015 	stw	r16,0(sp)
   4b284:	90801004 	addi	r2,r18,64
   4b288:	04010004 	movi	r16,1024
   4b28c:	dfc00515 	stw	ra,20(sp)
   4b290:	dd000415 	stw	r20,16(sp)
   4b294:	dcc00315 	stw	r19,12(sp)
   4b298:	dc400115 	stw	r17,4(sp)
   4b29c:	800b883a 	mov	r5,r16
   4b2a0:	18801b26 	beq	r3,r2,4b310 <__submore+0xa0>
   4b2a4:	94400d17 	ldw	r17,52(r18)
   4b2a8:	180b883a 	mov	r5,r3
   4b2ac:	8c69883a 	add	r20,r17,r17
   4b2b0:	a00d883a 	mov	r6,r20
   4b2b4:	00483700 	call	48370 <_realloc_r>
   4b2b8:	1467883a 	add	r19,r2,r17
   4b2bc:	1021883a 	mov	r16,r2
   4b2c0:	880d883a 	mov	r6,r17
   4b2c4:	9809883a 	mov	r4,r19
   4b2c8:	100b883a 	mov	r5,r2
   4b2cc:	10000e26 	beq	r2,zero,4b308 <__submore+0x98>
   4b2d0:	00470cc0 	call	470cc <memcpy>
   4b2d4:	000d883a 	mov	r6,zero
   4b2d8:	95000d15 	stw	r20,52(r18)
   4b2dc:	94c00015 	stw	r19,0(r18)
   4b2e0:	94000c15 	stw	r16,48(r18)
   4b2e4:	3005883a 	mov	r2,r6
   4b2e8:	dfc00517 	ldw	ra,20(sp)
   4b2ec:	dd000417 	ldw	r20,16(sp)
   4b2f0:	dcc00317 	ldw	r19,12(sp)
   4b2f4:	dc800217 	ldw	r18,8(sp)
   4b2f8:	dc400117 	ldw	r17,4(sp)
   4b2fc:	dc000017 	ldw	r16,0(sp)
   4b300:	dec00604 	addi	sp,sp,24
   4b304:	f800283a 	ret
   4b308:	01bfffc4 	movi	r6,-1
   4b30c:	003ff506 	br	4b2e4 <__submore+0x74>
   4b310:	00467a80 	call	467a8 <_malloc_r>
   4b314:	1009883a 	mov	r4,r2
   4b318:	1140ff44 	addi	r5,r2,1021
   4b31c:	000d883a 	mov	r6,zero
   4b320:	103ff926 	beq	r2,zero,4b308 <__submore+0x98>
   4b324:	90801083 	ldbu	r2,66(r18)
   4b328:	94000d15 	stw	r16,52(r18)
   4b32c:	91000c15 	stw	r4,48(r18)
   4b330:	28800085 	stb	r2,2(r5)
   4b334:	90c01043 	ldbu	r3,65(r18)
   4b338:	28c00045 	stb	r3,1(r5)
   4b33c:	90801003 	ldbu	r2,64(r18)
   4b340:	2080ff45 	stb	r2,1021(r4)
   4b344:	91400015 	stw	r5,0(r18)
   4b348:	003fe606 	br	4b2e4 <__submore+0x74>

0004b34c <_ungetc_r>:
   4b34c:	defffc04 	addi	sp,sp,-16
   4b350:	00bfffc4 	movi	r2,-1
   4b354:	dc400215 	stw	r17,8(sp)
   4b358:	dc000115 	stw	r16,4(sp)
   4b35c:	dfc00315 	stw	ra,12(sp)
   4b360:	2821883a 	mov	r16,r5
   4b364:	2023883a 	mov	r17,r4
   4b368:	28801826 	beq	r5,r2,4b3cc <_ungetc_r+0x80>
   4b36c:	20000226 	beq	r4,zero,4b378 <_ungetc_r+0x2c>
   4b370:	20800e17 	ldw	r2,56(r4)
   4b374:	10001b26 	beq	r2,zero,4b3e4 <_ungetc_r+0x98>
   4b378:	3100030b 	ldhu	r4,12(r6)
   4b37c:	00bff7c4 	movi	r2,-33
   4b380:	2084703a 	and	r2,r4,r2
   4b384:	117fffcc 	andi	r5,r2,65535
   4b388:	28c0010c 	andi	r3,r5,4
   4b38c:	1009883a 	mov	r4,r2
   4b390:	3080030d 	sth	r2,12(r6)
   4b394:	18003526 	beq	r3,zero,4b46c <_ungetc_r+0x120>
   4b398:	30800c17 	ldw	r2,48(r6)
   4b39c:	84003fcc 	andi	r16,r16,255
   4b3a0:	10001426 	beq	r2,zero,4b3f4 <_ungetc_r+0xa8>
   4b3a4:	30c00117 	ldw	r3,4(r6)
   4b3a8:	30800d17 	ldw	r2,52(r6)
   4b3ac:	1880380e 	bge	r3,r2,4b490 <_ungetc_r+0x144>
   4b3b0:	30c00017 	ldw	r3,0(r6)
   4b3b4:	19ffffc4 	addi	r7,r3,-1
   4b3b8:	31c00015 	stw	r7,0(r6)
   4b3bc:	1c3fffc5 	stb	r16,-1(r3)
   4b3c0:	30800117 	ldw	r2,4(r6)
   4b3c4:	10800044 	addi	r2,r2,1
   4b3c8:	30800115 	stw	r2,4(r6)
   4b3cc:	8005883a 	mov	r2,r16
   4b3d0:	dfc00317 	ldw	ra,12(sp)
   4b3d4:	dc400217 	ldw	r17,8(sp)
   4b3d8:	dc000117 	ldw	r16,4(sp)
   4b3dc:	dec00404 	addi	sp,sp,16
   4b3e0:	f800283a 	ret
   4b3e4:	d9800015 	stw	r6,0(sp)
   4b3e8:	00455f00 	call	455f0 <__sinit>
   4b3ec:	d9800017 	ldw	r6,0(sp)
   4b3f0:	003fe106 	br	4b378 <_ungetc_r+0x2c>
   4b3f4:	30800417 	ldw	r2,16(r6)
   4b3f8:	10002326 	beq	r2,zero,4b488 <_ungetc_r+0x13c>
   4b3fc:	31c00017 	ldw	r7,0(r6)
   4b400:	11c0022e 	bgeu	r2,r7,4b40c <_ungetc_r+0xc0>
   4b404:	38bfffc3 	ldbu	r2,-1(r7)
   4b408:	80801226 	beq	r16,r2,4b454 <_ungetc_r+0x108>
   4b40c:	30c00117 	ldw	r3,4(r6)
   4b410:	00800044 	movi	r2,1
   4b414:	30800115 	stw	r2,4(r6)
   4b418:	008000c4 	movi	r2,3
   4b41c:	31001004 	addi	r4,r6,64
   4b420:	31401084 	addi	r5,r6,66
   4b424:	30800d15 	stw	r2,52(r6)
   4b428:	8005883a 	mov	r2,r16
   4b42c:	30c00f15 	stw	r3,60(r6)
   4b430:	31c00e15 	stw	r7,56(r6)
   4b434:	31000c15 	stw	r4,48(r6)
   4b438:	31400015 	stw	r5,0(r6)
   4b43c:	34001085 	stb	r16,66(r6)
   4b440:	dfc00317 	ldw	ra,12(sp)
   4b444:	dc400217 	ldw	r17,8(sp)
   4b448:	dc000117 	ldw	r16,4(sp)
   4b44c:	dec00404 	addi	sp,sp,16
   4b450:	f800283a 	ret
   4b454:	30800117 	ldw	r2,4(r6)
   4b458:	39ffffc4 	addi	r7,r7,-1
   4b45c:	31c00015 	stw	r7,0(r6)
   4b460:	10800044 	addi	r2,r2,1
   4b464:	30800115 	stw	r2,4(r6)
   4b468:	003fd806 	br	4b3cc <_ungetc_r+0x80>
   4b46c:	2880040c 	andi	r2,r5,16
   4b470:	10000d26 	beq	r2,zero,4b4a8 <_ungetc_r+0x15c>
   4b474:	2880020c 	andi	r2,r5,8
   4b478:	10000d1e 	bne	r2,zero,4b4b0 <_ungetc_r+0x164>
   4b47c:	20800114 	ori	r2,r4,4
   4b480:	3080030d 	sth	r2,12(r6)
   4b484:	003fc406 	br	4b398 <_ungetc_r+0x4c>
   4b488:	31c00017 	ldw	r7,0(r6)
   4b48c:	003fdf06 	br	4b40c <_ungetc_r+0xc0>
   4b490:	300b883a 	mov	r5,r6
   4b494:	8809883a 	mov	r4,r17
   4b498:	d9800015 	stw	r6,0(sp)
   4b49c:	004b2700 	call	4b270 <__submore>
   4b4a0:	d9800017 	ldw	r6,0(sp)
   4b4a4:	103fc226 	beq	r2,zero,4b3b0 <_ungetc_r+0x64>
   4b4a8:	043fffc4 	movi	r16,-1
   4b4ac:	003fc706 	br	4b3cc <_ungetc_r+0x80>
   4b4b0:	300b883a 	mov	r5,r6
   4b4b4:	8809883a 	mov	r4,r17
   4b4b8:	d9800015 	stw	r6,0(sp)
   4b4bc:	00453580 	call	45358 <_fflush_r>
   4b4c0:	d9800017 	ldw	r6,0(sp)
   4b4c4:	103ff81e 	bne	r2,zero,4b4a8 <_ungetc_r+0x15c>
   4b4c8:	3100030b 	ldhu	r4,12(r6)
   4b4cc:	00bffdc4 	movi	r2,-9
   4b4d0:	30000215 	stw	zero,8(r6)
   4b4d4:	2084703a 	and	r2,r4,r2
   4b4d8:	1009883a 	mov	r4,r2
   4b4dc:	3080030d 	sth	r2,12(r6)
   4b4e0:	30000615 	stw	zero,24(r6)
   4b4e4:	003fe506 	br	4b47c <_ungetc_r+0x130>

0004b4e8 <ungetc>:
   4b4e8:	01800174 	movhi	r6,5
   4b4ec:	318fb204 	addi	r6,r6,16072
   4b4f0:	2007883a 	mov	r3,r4
   4b4f4:	31000017 	ldw	r4,0(r6)
   4b4f8:	280d883a 	mov	r6,r5
   4b4fc:	180b883a 	mov	r5,r3
   4b500:	004b34c1 	jmpi	4b34c <_ungetc_r>

0004b504 <_write_r>:
   4b504:	defffd04 	addi	sp,sp,-12
   4b508:	dc000015 	stw	r16,0(sp)
   4b50c:	04000174 	movhi	r16,5
   4b510:	84166b04 	addi	r16,r16,22956
   4b514:	dc400115 	stw	r17,4(sp)
   4b518:	80000015 	stw	zero,0(r16)
   4b51c:	2023883a 	mov	r17,r4
   4b520:	2809883a 	mov	r4,r5
   4b524:	300b883a 	mov	r5,r6
   4b528:	380d883a 	mov	r6,r7
   4b52c:	dfc00215 	stw	ra,8(sp)
   4b530:	004fb6c0 	call	4fb6c <write>
   4b534:	1007883a 	mov	r3,r2
   4b538:	00bfffc4 	movi	r2,-1
   4b53c:	18800626 	beq	r3,r2,4b558 <_write_r+0x54>
   4b540:	1805883a 	mov	r2,r3
   4b544:	dfc00217 	ldw	ra,8(sp)
   4b548:	dc400117 	ldw	r17,4(sp)
   4b54c:	dc000017 	ldw	r16,0(sp)
   4b550:	dec00304 	addi	sp,sp,12
   4b554:	f800283a 	ret
   4b558:	80800017 	ldw	r2,0(r16)
   4b55c:	103ff826 	beq	r2,zero,4b540 <_write_r+0x3c>
   4b560:	88800015 	stw	r2,0(r17)
   4b564:	1805883a 	mov	r2,r3
   4b568:	dfc00217 	ldw	ra,8(sp)
   4b56c:	dc400117 	ldw	r17,4(sp)
   4b570:	dc000017 	ldw	r16,0(sp)
   4b574:	dec00304 	addi	sp,sp,12
   4b578:	f800283a 	ret

0004b57c <_calloc_r>:
   4b57c:	defffe04 	addi	sp,sp,-8
   4b580:	dc400015 	stw	r17,0(sp)
   4b584:	2023883a 	mov	r17,r4
   4b588:	2809883a 	mov	r4,r5
   4b58c:	300b883a 	mov	r5,r6
   4b590:	dfc00115 	stw	ra,4(sp)
   4b594:	004e8e80 	call	4e8e8 <__mulsi3>
   4b598:	100b883a 	mov	r5,r2
   4b59c:	8809883a 	mov	r4,r17
   4b5a0:	00467a80 	call	467a8 <_malloc_r>
   4b5a4:	1023883a 	mov	r17,r2
   4b5a8:	01c00904 	movi	r7,36
   4b5ac:	10000d26 	beq	r2,zero,4b5e4 <_calloc_r+0x68>
   4b5b0:	10ffff17 	ldw	r3,-4(r2)
   4b5b4:	1009883a 	mov	r4,r2
   4b5b8:	00bfff04 	movi	r2,-4
   4b5bc:	1886703a 	and	r3,r3,r2
   4b5c0:	1887883a 	add	r3,r3,r2
   4b5c4:	180d883a 	mov	r6,r3
   4b5c8:	000b883a 	mov	r5,zero
   4b5cc:	38c01736 	bltu	r7,r3,4b62c <_calloc_r+0xb0>
   4b5d0:	008004c4 	movi	r2,19
   4b5d4:	10c00836 	bltu	r2,r3,4b5f8 <_calloc_r+0x7c>
   4b5d8:	20000215 	stw	zero,8(r4)
   4b5dc:	20000015 	stw	zero,0(r4)
   4b5e0:	20000115 	stw	zero,4(r4)
   4b5e4:	8805883a 	mov	r2,r17
   4b5e8:	dfc00117 	ldw	ra,4(sp)
   4b5ec:	dc400017 	ldw	r17,0(sp)
   4b5f0:	dec00204 	addi	sp,sp,8
   4b5f4:	f800283a 	ret
   4b5f8:	008006c4 	movi	r2,27
   4b5fc:	88000015 	stw	zero,0(r17)
   4b600:	88000115 	stw	zero,4(r17)
   4b604:	89000204 	addi	r4,r17,8
   4b608:	10fff32e 	bgeu	r2,r3,4b5d8 <_calloc_r+0x5c>
   4b60c:	88000215 	stw	zero,8(r17)
   4b610:	88000315 	stw	zero,12(r17)
   4b614:	89000404 	addi	r4,r17,16
   4b618:	19ffef1e 	bne	r3,r7,4b5d8 <_calloc_r+0x5c>
   4b61c:	89000604 	addi	r4,r17,24
   4b620:	88000415 	stw	zero,16(r17)
   4b624:	88000515 	stw	zero,20(r17)
   4b628:	003feb06 	br	4b5d8 <_calloc_r+0x5c>
   4b62c:	004724c0 	call	4724c <memset>
   4b630:	8805883a 	mov	r2,r17
   4b634:	dfc00117 	ldw	ra,4(sp)
   4b638:	dc400017 	ldw	r17,0(sp)
   4b63c:	dec00204 	addi	sp,sp,8
   4b640:	f800283a 	ret

0004b644 <_close_r>:
   4b644:	defffd04 	addi	sp,sp,-12
   4b648:	dc000015 	stw	r16,0(sp)
   4b64c:	04000174 	movhi	r16,5
   4b650:	84166b04 	addi	r16,r16,22956
   4b654:	dc400115 	stw	r17,4(sp)
   4b658:	80000015 	stw	zero,0(r16)
   4b65c:	2023883a 	mov	r17,r4
   4b660:	2809883a 	mov	r4,r5
   4b664:	dfc00215 	stw	ra,8(sp)
   4b668:	004f1b00 	call	4f1b0 <close>
   4b66c:	1007883a 	mov	r3,r2
   4b670:	00bfffc4 	movi	r2,-1
   4b674:	18800626 	beq	r3,r2,4b690 <_close_r+0x4c>
   4b678:	1805883a 	mov	r2,r3
   4b67c:	dfc00217 	ldw	ra,8(sp)
   4b680:	dc400117 	ldw	r17,4(sp)
   4b684:	dc000017 	ldw	r16,0(sp)
   4b688:	dec00304 	addi	sp,sp,12
   4b68c:	f800283a 	ret
   4b690:	80800017 	ldw	r2,0(r16)
   4b694:	103ff826 	beq	r2,zero,4b678 <_close_r+0x34>
   4b698:	88800015 	stw	r2,0(r17)
   4b69c:	1805883a 	mov	r2,r3
   4b6a0:	dfc00217 	ldw	ra,8(sp)
   4b6a4:	dc400117 	ldw	r17,4(sp)
   4b6a8:	dc000017 	ldw	r16,0(sp)
   4b6ac:	dec00304 	addi	sp,sp,12
   4b6b0:	f800283a 	ret

0004b6b4 <_fclose_r>:
   4b6b4:	defffc04 	addi	sp,sp,-16
   4b6b8:	dc400115 	stw	r17,4(sp)
   4b6bc:	dc000015 	stw	r16,0(sp)
   4b6c0:	dfc00315 	stw	ra,12(sp)
   4b6c4:	dc800215 	stw	r18,8(sp)
   4b6c8:	2821883a 	mov	r16,r5
   4b6cc:	2023883a 	mov	r17,r4
   4b6d0:	28002926 	beq	r5,zero,4b778 <_fclose_r+0xc4>
   4b6d4:	00455e00 	call	455e0 <__sfp_lock_acquire>
   4b6d8:	88000226 	beq	r17,zero,4b6e4 <_fclose_r+0x30>
   4b6dc:	88800e17 	ldw	r2,56(r17)
   4b6e0:	10002d26 	beq	r2,zero,4b798 <_fclose_r+0xe4>
   4b6e4:	8080030f 	ldh	r2,12(r16)
   4b6e8:	10002226 	beq	r2,zero,4b774 <_fclose_r+0xc0>
   4b6ec:	8809883a 	mov	r4,r17
   4b6f0:	800b883a 	mov	r5,r16
   4b6f4:	00453580 	call	45358 <_fflush_r>
   4b6f8:	1025883a 	mov	r18,r2
   4b6fc:	80800b17 	ldw	r2,44(r16)
   4b700:	10000426 	beq	r2,zero,4b714 <_fclose_r+0x60>
   4b704:	81400717 	ldw	r5,28(r16)
   4b708:	8809883a 	mov	r4,r17
   4b70c:	103ee83a 	callr	r2
   4b710:	10002a16 	blt	r2,zero,4b7bc <_fclose_r+0x108>
   4b714:	8080030b 	ldhu	r2,12(r16)
   4b718:	1080200c 	andi	r2,r2,128
   4b71c:	1000231e 	bne	r2,zero,4b7ac <_fclose_r+0xf8>
   4b720:	81400c17 	ldw	r5,48(r16)
   4b724:	28000526 	beq	r5,zero,4b73c <_fclose_r+0x88>
   4b728:	80801004 	addi	r2,r16,64
   4b72c:	28800226 	beq	r5,r2,4b738 <_fclose_r+0x84>
   4b730:	8809883a 	mov	r4,r17
   4b734:	0045bf40 	call	45bf4 <_free_r>
   4b738:	80000c15 	stw	zero,48(r16)
   4b73c:	81401117 	ldw	r5,68(r16)
   4b740:	28000326 	beq	r5,zero,4b750 <_fclose_r+0x9c>
   4b744:	8809883a 	mov	r4,r17
   4b748:	0045bf40 	call	45bf4 <_free_r>
   4b74c:	80001115 	stw	zero,68(r16)
   4b750:	8000030d 	sth	zero,12(r16)
   4b754:	00455e40 	call	455e4 <__sfp_lock_release>
   4b758:	9005883a 	mov	r2,r18
   4b75c:	dfc00317 	ldw	ra,12(sp)
   4b760:	dc800217 	ldw	r18,8(sp)
   4b764:	dc400117 	ldw	r17,4(sp)
   4b768:	dc000017 	ldw	r16,0(sp)
   4b76c:	dec00404 	addi	sp,sp,16
   4b770:	f800283a 	ret
   4b774:	00455e40 	call	455e4 <__sfp_lock_release>
   4b778:	0025883a 	mov	r18,zero
   4b77c:	9005883a 	mov	r2,r18
   4b780:	dfc00317 	ldw	ra,12(sp)
   4b784:	dc800217 	ldw	r18,8(sp)
   4b788:	dc400117 	ldw	r17,4(sp)
   4b78c:	dc000017 	ldw	r16,0(sp)
   4b790:	dec00404 	addi	sp,sp,16
   4b794:	f800283a 	ret
   4b798:	8809883a 	mov	r4,r17
   4b79c:	00455f00 	call	455f0 <__sinit>
   4b7a0:	8080030f 	ldh	r2,12(r16)
   4b7a4:	103fd11e 	bne	r2,zero,4b6ec <_fclose_r+0x38>
   4b7a8:	003ff206 	br	4b774 <_fclose_r+0xc0>
   4b7ac:	81400417 	ldw	r5,16(r16)
   4b7b0:	8809883a 	mov	r4,r17
   4b7b4:	0045bf40 	call	45bf4 <_free_r>
   4b7b8:	003fd906 	br	4b720 <_fclose_r+0x6c>
   4b7bc:	04bfffc4 	movi	r18,-1
   4b7c0:	003fd406 	br	4b714 <_fclose_r+0x60>

0004b7c4 <fclose>:
   4b7c4:	00800174 	movhi	r2,5
   4b7c8:	108fb204 	addi	r2,r2,16072
   4b7cc:	200b883a 	mov	r5,r4
   4b7d0:	11000017 	ldw	r4,0(r2)
   4b7d4:	004b6b41 	jmpi	4b6b4 <_fclose_r>

0004b7d8 <_fstat_r>:
   4b7d8:	defffd04 	addi	sp,sp,-12
   4b7dc:	dc000015 	stw	r16,0(sp)
   4b7e0:	04000174 	movhi	r16,5
   4b7e4:	84166b04 	addi	r16,r16,22956
   4b7e8:	dc400115 	stw	r17,4(sp)
   4b7ec:	80000015 	stw	zero,0(r16)
   4b7f0:	2023883a 	mov	r17,r4
   4b7f4:	2809883a 	mov	r4,r5
   4b7f8:	300b883a 	mov	r5,r6
   4b7fc:	dfc00215 	stw	ra,8(sp)
   4b800:	004f33c0 	call	4f33c <fstat>
   4b804:	1007883a 	mov	r3,r2
   4b808:	00bfffc4 	movi	r2,-1
   4b80c:	18800626 	beq	r3,r2,4b828 <_fstat_r+0x50>
   4b810:	1805883a 	mov	r2,r3
   4b814:	dfc00217 	ldw	ra,8(sp)
   4b818:	dc400117 	ldw	r17,4(sp)
   4b81c:	dc000017 	ldw	r16,0(sp)
   4b820:	dec00304 	addi	sp,sp,12
   4b824:	f800283a 	ret
   4b828:	80800017 	ldw	r2,0(r16)
   4b82c:	103ff826 	beq	r2,zero,4b810 <_fstat_r+0x38>
   4b830:	88800015 	stw	r2,0(r17)
   4b834:	1805883a 	mov	r2,r3
   4b838:	dfc00217 	ldw	ra,8(sp)
   4b83c:	dc400117 	ldw	r17,4(sp)
   4b840:	dc000017 	ldw	r16,0(sp)
   4b844:	dec00304 	addi	sp,sp,12
   4b848:	f800283a 	ret

0004b84c <htinit>:
   4b84c:	28800003 	ldbu	r2,0(r5)
   4b850:	10000626 	beq	r2,zero,4b86c <htinit+0x20>
   4b854:	1105883a 	add	r2,r2,r4
   4b858:	11800005 	stb	r6,0(r2)
   4b85c:	28800043 	ldbu	r2,1(r5)
   4b860:	31800044 	addi	r6,r6,1
   4b864:	29400044 	addi	r5,r5,1
   4b868:	103ffa1e 	bne	r2,zero,4b854 <htinit+0x8>
   4b86c:	f800283a 	ret

0004b870 <__hexdig_init>:
   4b870:	defffd04 	addi	sp,sp,-12
   4b874:	dc400015 	stw	r17,0(sp)
   4b878:	04400174 	movhi	r17,5
   4b87c:	8c567c04 	addi	r17,r17,23024
   4b880:	dcc00115 	stw	r19,4(sp)
   4b884:	8809883a 	mov	r4,r17
   4b888:	04c00684 	movi	r19,26
   4b88c:	01400174 	movhi	r5,5
   4b890:	2948c704 	addi	r5,r5,8988
   4b894:	01800404 	movi	r6,16
   4b898:	dfc00215 	stw	ra,8(sp)
   4b89c:	004b84c0 	call	4b84c <htinit>
   4b8a0:	980d883a 	mov	r6,r19
   4b8a4:	8809883a 	mov	r4,r17
   4b8a8:	01400174 	movhi	r5,5
   4b8ac:	2948ca04 	addi	r5,r5,9000
   4b8b0:	004b84c0 	call	4b84c <htinit>
   4b8b4:	8809883a 	mov	r4,r17
   4b8b8:	980d883a 	mov	r6,r19
   4b8bc:	01400174 	movhi	r5,5
   4b8c0:	2948cc04 	addi	r5,r5,9008
   4b8c4:	dfc00217 	ldw	ra,8(sp)
   4b8c8:	dcc00117 	ldw	r19,4(sp)
   4b8cc:	dc400017 	ldw	r17,0(sp)
   4b8d0:	dec00304 	addi	sp,sp,12
   4b8d4:	004b84c1 	jmpi	4b84c <htinit>

0004b8d8 <rshift>:
   4b8d8:	2807d17a 	srai	r3,r5,5
   4b8dc:	20800417 	ldw	r2,16(r4)
   4b8e0:	22400504 	addi	r9,r4,20
   4b8e4:	480f883a 	mov	r7,r9
   4b8e8:	1880190e 	bge	r3,r2,4b950 <rshift+0x78>
   4b8ec:	1085883a 	add	r2,r2,r2
   4b8f0:	18c7883a 	add	r3,r3,r3
   4b8f4:	1085883a 	add	r2,r2,r2
   4b8f8:	18c7883a 	add	r3,r3,r3
   4b8fc:	294007cc 	andi	r5,r5,31
   4b900:	4891883a 	add	r8,r9,r2
   4b904:	48cd883a 	add	r6,r9,r3
   4b908:	28001726 	beq	r5,zero,4b968 <rshift+0x90>
   4b90c:	30c00017 	ldw	r3,0(r6)
   4b910:	00800804 	movi	r2,32
   4b914:	31800104 	addi	r6,r6,4
   4b918:	1155c83a 	sub	r10,r2,r5
   4b91c:	1946d83a 	srl	r3,r3,r5
   4b920:	3200092e 	bgeu	r6,r8,4b948 <rshift+0x70>
   4b924:	30800017 	ldw	r2,0(r6)
   4b928:	1284983a 	sll	r2,r2,r10
   4b92c:	10c4b03a 	or	r2,r2,r3
   4b930:	38800015 	stw	r2,0(r7)
   4b934:	30c00017 	ldw	r3,0(r6)
   4b938:	31800104 	addi	r6,r6,4
   4b93c:	39c00104 	addi	r7,r7,4
   4b940:	1946d83a 	srl	r3,r3,r5
   4b944:	323ff736 	bltu	r6,r8,4b924 <rshift+0x4c>
   4b948:	38c00015 	stw	r3,0(r7)
   4b94c:	18000c1e 	bne	r3,zero,4b980 <rshift+0xa8>
   4b950:	3a45c83a 	sub	r2,r7,r9
   4b954:	1005d0ba 	srai	r2,r2,2
   4b958:	20800415 	stw	r2,16(r4)
   4b95c:	1000011e 	bne	r2,zero,4b964 <rshift+0x8c>
   4b960:	20000515 	stw	zero,20(r4)
   4b964:	f800283a 	ret
   4b968:	323ff92e 	bgeu	r6,r8,4b950 <rshift+0x78>
   4b96c:	30800017 	ldw	r2,0(r6)
   4b970:	31800104 	addi	r6,r6,4
   4b974:	38800015 	stw	r2,0(r7)
   4b978:	39c00104 	addi	r7,r7,4
   4b97c:	003ffa06 	br	4b968 <rshift+0x90>
   4b980:	39c00104 	addi	r7,r7,4
   4b984:	003ff206 	br	4b950 <rshift+0x78>

0004b988 <__gethex>:
   4b988:	defff104 	addi	sp,sp,-60
   4b98c:	df000d15 	stw	fp,52(sp)
   4b990:	dcc00815 	stw	r19,32(sp)
   4b994:	dfc00e15 	stw	ra,56(sp)
   4b998:	ddc00c15 	stw	r23,48(sp)
   4b99c:	dd800b15 	stw	r22,44(sp)
   4b9a0:	dd400a15 	stw	r21,40(sp)
   4b9a4:	dd000915 	stw	r20,36(sp)
   4b9a8:	dc800715 	stw	r18,28(sp)
   4b9ac:	dc400615 	stw	r17,24(sp)
   4b9b0:	dc000515 	stw	r16,20(sp)
   4b9b4:	04c00174 	movhi	r19,5
   4b9b8:	9cd67c04 	addi	r19,r19,23024
   4b9bc:	98800c03 	ldbu	r2,48(r19)
   4b9c0:	d9000115 	stw	r4,4(sp)
   4b9c4:	2839883a 	mov	fp,r5
   4b9c8:	d9800215 	stw	r6,8(sp)
   4b9cc:	d9c00315 	stw	r7,12(sp)
   4b9d0:	10007526 	beq	r2,zero,4bba8 <__gethex+0x220>
   4b9d4:	e1800017 	ldw	r6,0(fp)
   4b9d8:	00800c04 	movi	r2,48
   4b9dc:	31000083 	ldbu	r4,2(r6)
   4b9e0:	30c00084 	addi	r3,r6,2
   4b9e4:	2080761e 	bne	r4,r2,4bbc0 <__gethex+0x238>
   4b9e8:	200b883a 	mov	r5,r4
   4b9ec:	3007883a 	mov	r3,r6
   4b9f0:	188000c3 	ldbu	r2,3(r3)
   4b9f4:	18c00044 	addi	r3,r3,1
   4b9f8:	1009883a 	mov	r4,r2
   4b9fc:	117ffc26 	beq	r2,r5,4b9f0 <__gethex+0x68>
   4ba00:	198fc83a 	sub	r7,r3,r6
   4ba04:	19400084 	addi	r5,r3,2
   4ba08:	24c5883a 	add	r2,r4,r19
   4ba0c:	10c00003 	ldbu	r3,0(r2)
   4ba10:	18002e26 	beq	r3,zero,4bacc <__gethex+0x144>
   4ba14:	29000003 	ldbu	r4,0(r5)
   4ba18:	282b883a 	mov	r21,r5
   4ba1c:	000d883a 	mov	r6,zero
   4ba20:	002d883a 	mov	r22,zero
   4ba24:	21003fcc 	andi	r4,r4,255
   4ba28:	24c5883a 	add	r2,r4,r19
   4ba2c:	10c00003 	ldbu	r3,0(r2)
   4ba30:	18000526 	beq	r3,zero,4ba48 <__gethex+0xc0>
   4ba34:	29400044 	addi	r5,r5,1
   4ba38:	29000003 	ldbu	r4,0(r5)
   4ba3c:	24c5883a 	add	r2,r4,r19
   4ba40:	10c00003 	ldbu	r3,0(r2)
   4ba44:	183ffb1e 	bne	r3,zero,4ba34 <__gethex+0xac>
   4ba48:	00800b84 	movi	r2,46
   4ba4c:	20805f26 	beq	r4,r2,4bbcc <__gethex+0x244>
   4ba50:	30008226 	beq	r6,zero,4bc5c <__gethex+0x2d4>
   4ba54:	2985c83a 	sub	r2,r5,r6
   4ba58:	1085883a 	add	r2,r2,r2
   4ba5c:	1085883a 	add	r2,r2,r2
   4ba60:	0085c83a 	sub	r2,zero,r2
   4ba64:	d8800015 	stw	r2,0(sp)
   4ba68:	2825883a 	mov	r18,r5
   4ba6c:	90c00003 	ldbu	r3,0(r18)
   4ba70:	00801404 	movi	r2,80
   4ba74:	18801e26 	beq	r3,r2,4baf0 <__gethex+0x168>
   4ba78:	00801c04 	movi	r2,112
   4ba7c:	18801c26 	beq	r3,r2,4baf0 <__gethex+0x168>
   4ba80:	9023883a 	mov	r17,r18
   4ba84:	b005003a 	cmpeq	r2,r22,zero
   4ba88:	e4400015 	stw	r17,0(fp)
   4ba8c:	10008d1e 	bne	r2,zero,4bcc4 <__gethex+0x33c>
   4ba90:	38004326 	beq	r7,zero,4bba0 <__gethex+0x218>
   4ba94:	0025883a 	mov	r18,zero
   4ba98:	9005883a 	mov	r2,r18
   4ba9c:	dfc00e17 	ldw	ra,56(sp)
   4baa0:	df000d17 	ldw	fp,52(sp)
   4baa4:	ddc00c17 	ldw	r23,48(sp)
   4baa8:	dd800b17 	ldw	r22,44(sp)
   4baac:	dd400a17 	ldw	r21,40(sp)
   4bab0:	dd000917 	ldw	r20,36(sp)
   4bab4:	dcc00817 	ldw	r19,32(sp)
   4bab8:	dc800717 	ldw	r18,28(sp)
   4babc:	dc400617 	ldw	r17,24(sp)
   4bac0:	dc000517 	ldw	r16,20(sp)
   4bac4:	dec00f04 	addi	sp,sp,60
   4bac8:	f800283a 	ret
   4bacc:	00800b84 	movi	r2,46
   4bad0:	20805126 	beq	r4,r2,4bc18 <__gethex+0x290>
   4bad4:	2825883a 	mov	r18,r5
   4bad8:	d8000015 	stw	zero,0(sp)
   4badc:	90c00003 	ldbu	r3,0(r18)
   4bae0:	00801404 	movi	r2,80
   4bae4:	282b883a 	mov	r21,r5
   4bae8:	05800044 	movi	r22,1
   4baec:	18bfe21e 	bne	r3,r2,4ba78 <__gethex+0xf0>
   4baf0:	90c00043 	ldbu	r3,1(r18)
   4baf4:	00800ac4 	movi	r2,43
   4baf8:	91400044 	addi	r5,r18,1
   4bafc:	18805126 	beq	r3,r2,4bc44 <__gethex+0x2bc>
   4bb00:	00800b44 	movi	r2,45
   4bb04:	18805326 	beq	r3,r2,4bc54 <__gethex+0x2cc>
   4bb08:	002f883a 	mov	r23,zero
   4bb0c:	1cc5883a 	add	r2,r3,r19
   4bb10:	10800003 	ldbu	r2,0(r2)
   4bb14:	103fda26 	beq	r2,zero,4ba80 <__gethex+0xf8>
   4bb18:	01800644 	movi	r6,25
   4bb1c:	30bfd816 	blt	r6,r2,4ba80 <__gethex+0xf8>
   4bb20:	28c00043 	ldbu	r3,1(r5)
   4bb24:	113ffc04 	addi	r4,r2,-16
   4bb28:	00800174 	movhi	r2,5
   4bb2c:	10967c04 	addi	r2,r2,23024
   4bb30:	1887883a 	add	r3,r3,r2
   4bb34:	18800003 	ldbu	r2,0(r3)
   4bb38:	2c400044 	addi	r17,r5,1
   4bb3c:	10001126 	beq	r2,zero,4bb84 <__gethex+0x1fc>
   4bb40:	1021883a 	mov	r16,r2
   4bb44:	30800f16 	blt	r6,r2,4bb84 <__gethex+0x1fc>
   4bb48:	3029883a 	mov	r20,r6
   4bb4c:	00000106 	br	4bb54 <__gethex+0x1cc>
   4bb50:	a0800c16 	blt	r20,r2,4bb84 <__gethex+0x1fc>
   4bb54:	8c400044 	addi	r17,r17,1
   4bb58:	01400284 	movi	r5,10
   4bb5c:	d9c00415 	stw	r7,16(sp)
   4bb60:	004e8e80 	call	4e8e8 <__mulsi3>
   4bb64:	88c00003 	ldbu	r3,0(r17)
   4bb68:	1405883a 	add	r2,r2,r16
   4bb6c:	113ffc04 	addi	r4,r2,-16
   4bb70:	1cc7883a 	add	r3,r3,r19
   4bb74:	18800003 	ldbu	r2,0(r3)
   4bb78:	d9c00417 	ldw	r7,16(sp)
   4bb7c:	1021883a 	mov	r16,r2
   4bb80:	103ff31e 	bne	r2,zero,4bb50 <__gethex+0x1c8>
   4bb84:	b805003a 	cmpeq	r2,r23,zero
   4bb88:	1000011e 	bne	r2,zero,4bb90 <__gethex+0x208>
   4bb8c:	0109c83a 	sub	r4,zero,r4
   4bb90:	d8800017 	ldw	r2,0(sp)
   4bb94:	1105883a 	add	r2,r2,r4
   4bb98:	d8800015 	stw	r2,0(sp)
   4bb9c:	003fb906 	br	4ba84 <__gethex+0xfc>
   4bba0:	04800184 	movi	r18,6
   4bba4:	003fbc06 	br	4ba98 <__gethex+0x110>
   4bba8:	004b8700 	call	4b870 <__hexdig_init>
   4bbac:	e1800017 	ldw	r6,0(fp)
   4bbb0:	00800c04 	movi	r2,48
   4bbb4:	31000083 	ldbu	r4,2(r6)
   4bbb8:	30c00084 	addi	r3,r6,2
   4bbbc:	20bf8a26 	beq	r4,r2,4b9e8 <__gethex+0x60>
   4bbc0:	180b883a 	mov	r5,r3
   4bbc4:	000f883a 	mov	r7,zero
   4bbc8:	003f8f06 	br	4ba08 <__gethex+0x80>
   4bbcc:	303fa11e 	bne	r6,zero,4ba54 <__gethex+0xcc>
   4bbd0:	29400044 	addi	r5,r5,1
   4bbd4:	28800003 	ldbu	r2,0(r5)
   4bbd8:	14c5883a 	add	r2,r2,r19
   4bbdc:	10c00003 	ldbu	r3,0(r2)
   4bbe0:	1800b526 	beq	r3,zero,4beb8 <__gethex+0x530>
   4bbe4:	2809883a 	mov	r4,r5
   4bbe8:	21000044 	addi	r4,r4,1
   4bbec:	20800003 	ldbu	r2,0(r4)
   4bbf0:	14c5883a 	add	r2,r2,r19
   4bbf4:	10c00003 	ldbu	r3,0(r2)
   4bbf8:	183ffb1e 	bne	r3,zero,4bbe8 <__gethex+0x260>
   4bbfc:	2145c83a 	sub	r2,r4,r5
   4bc00:	1085883a 	add	r2,r2,r2
   4bc04:	1085883a 	add	r2,r2,r2
   4bc08:	0085c83a 	sub	r2,zero,r2
   4bc0c:	200b883a 	mov	r5,r4
   4bc10:	d8800015 	stw	r2,0(sp)
   4bc14:	003f9406 	br	4ba68 <__gethex+0xe0>
   4bc18:	29000043 	ldbu	r4,1(r5)
   4bc1c:	00800174 	movhi	r2,5
   4bc20:	10967c04 	addi	r2,r2,23024
   4bc24:	2c800044 	addi	r18,r5,1
   4bc28:	2085883a 	add	r2,r4,r2
   4bc2c:	10c00003 	ldbu	r3,0(r2)
   4bc30:	18000d1e 	bne	r3,zero,4bc68 <__gethex+0x2e0>
   4bc34:	282b883a 	mov	r21,r5
   4bc38:	05800044 	movi	r22,1
   4bc3c:	d8000015 	stw	zero,0(sp)
   4bc40:	003f8a06 	br	4ba6c <__gethex+0xe4>
   4bc44:	002f883a 	mov	r23,zero
   4bc48:	29400044 	addi	r5,r5,1
   4bc4c:	28c00003 	ldbu	r3,0(r5)
   4bc50:	003fae06 	br	4bb0c <__gethex+0x184>
   4bc54:	05c00044 	movi	r23,1
   4bc58:	003ffb06 	br	4bc48 <__gethex+0x2c0>
   4bc5c:	2825883a 	mov	r18,r5
   4bc60:	d8000015 	stw	zero,0(sp)
   4bc64:	003f8106 	br	4ba6c <__gethex+0xe4>
   4bc68:	00800c04 	movi	r2,48
   4bc6c:	20800e1e 	bne	r4,r2,4bca8 <__gethex+0x320>
   4bc70:	2007883a 	mov	r3,r4
   4bc74:	900b883a 	mov	r5,r18
   4bc78:	29400044 	addi	r5,r5,1
   4bc7c:	29000003 	ldbu	r4,0(r5)
   4bc80:	20803fcc 	andi	r2,r4,255
   4bc84:	10fffc26 	beq	r2,r3,4bc78 <__gethex+0x2f0>
   4bc88:	14c5883a 	add	r2,r2,r19
   4bc8c:	10c00003 	ldbu	r3,0(r2)
   4bc90:	1800071e 	bne	r3,zero,4bcb0 <__gethex+0x328>
   4bc94:	01c00044 	movi	r7,1
   4bc98:	900d883a 	mov	r6,r18
   4bc9c:	282b883a 	mov	r21,r5
   4bca0:	382d883a 	mov	r22,r7
   4bca4:	003f5f06 	br	4ba24 <__gethex+0x9c>
   4bca8:	91000003 	ldbu	r4,0(r18)
   4bcac:	900b883a 	mov	r5,r18
   4bcb0:	900d883a 	mov	r6,r18
   4bcb4:	282b883a 	mov	r21,r5
   4bcb8:	01c00044 	movi	r7,1
   4bcbc:	002d883a 	mov	r22,zero
   4bcc0:	003f5806 	br	4ba24 <__gethex+0x9c>
   4bcc4:	9545c83a 	sub	r2,r18,r21
   4bcc8:	10bfffc4 	addi	r2,r2,-1
   4bccc:	00c001c4 	movi	r3,7
   4bcd0:	1880770e 	bge	r3,r2,4beb0 <__gethex+0x528>
   4bcd4:	000b883a 	mov	r5,zero
   4bcd8:	1005d07a 	srai	r2,r2,1
   4bcdc:	29400044 	addi	r5,r5,1
   4bce0:	18bffd16 	blt	r3,r2,4bcd8 <__gethex+0x350>
   4bce4:	d9000117 	ldw	r4,4(sp)
   4bce8:	00478640 	call	47864 <_Balloc>
   4bcec:	1029883a 	mov	r20,r2
   4bcf0:	15800504 	addi	r22,r2,20
   4bcf4:	ac80562e 	bgeu	r21,r18,4be50 <__gethex+0x4c8>
   4bcf8:	900b883a 	mov	r5,r18
   4bcfc:	b011883a 	mov	r8,r22
   4bd00:	000f883a 	mov	r7,zero
   4bd04:	0009883a 	mov	r4,zero
   4bd08:	02400b84 	movi	r9,46
   4bd0c:	02800804 	movi	r10,32
   4bd10:	297fffc4 	addi	r5,r5,-1
   4bd14:	28c00003 	ldbu	r3,0(r5)
   4bd18:	1a400826 	beq	r3,r9,4bd3c <__gethex+0x3b4>
   4bd1c:	380d883a 	mov	r6,r7
   4bd20:	3a802a26 	beq	r7,r10,4bdcc <__gethex+0x444>
   4bd24:	39c00104 	addi	r7,r7,4
   4bd28:	1cc7883a 	add	r3,r3,r19
   4bd2c:	18800003 	ldbu	r2,0(r3)
   4bd30:	108003cc 	andi	r2,r2,15
   4bd34:	1184983a 	sll	r2,r2,r6
   4bd38:	2088b03a 	or	r4,r4,r2
   4bd3c:	a97ff436 	bltu	r21,r5,4bd10 <__gethex+0x388>
   4bd40:	40800104 	addi	r2,r8,4
   4bd44:	1585c83a 	sub	r2,r2,r22
   4bd48:	1021d0ba 	srai	r16,r2,2
   4bd4c:	41000015 	stw	r4,0(r8)
   4bd50:	a4000415 	stw	r16,16(r20)
   4bd54:	004730c0 	call	4730c <__hi0bits>
   4bd58:	d9000217 	ldw	r4,8(sp)
   4bd5c:	8006917a 	slli	r3,r16,5
   4bd60:	24c00017 	ldw	r19,0(r4)
   4bd64:	1885c83a 	sub	r2,r3,r2
   4bd68:	98801f16 	blt	r19,r2,4bde8 <__gethex+0x460>
   4bd6c:	14c00c16 	blt	r2,r19,4bda0 <__gethex+0x418>
   4bd70:	002b883a 	mov	r21,zero
   4bd74:	d9000217 	ldw	r4,8(sp)
   4bd78:	d8c00017 	ldw	r3,0(sp)
   4bd7c:	20800217 	ldw	r2,8(r4)
   4bd80:	10c0360e 	bge	r2,r3,4be5c <__gethex+0x4d4>
   4bd84:	d9000117 	ldw	r4,4(sp)
   4bd88:	a00b883a 	mov	r5,r20
   4bd8c:	048028c4 	movi	r18,163
   4bd90:	00472e40 	call	472e4 <_Bfree>
   4bd94:	d9000f17 	ldw	r4,60(sp)
   4bd98:	20000015 	stw	zero,0(r4)
   4bd9c:	003f3e06 	br	4ba98 <__gethex+0x110>
   4bda0:	d9000117 	ldw	r4,4(sp)
   4bda4:	98a1c83a 	sub	r16,r19,r2
   4bda8:	a00b883a 	mov	r5,r20
   4bdac:	800d883a 	mov	r6,r16
   4bdb0:	0047c280 	call	47c28 <__lshift>
   4bdb4:	d8c00017 	ldw	r3,0(sp)
   4bdb8:	1029883a 	mov	r20,r2
   4bdbc:	15800504 	addi	r22,r2,20
   4bdc0:	1c07c83a 	sub	r3,r3,r16
   4bdc4:	d8c00015 	stw	r3,0(sp)
   4bdc8:	003fe906 	br	4bd70 <__gethex+0x3e8>
   4bdcc:	41000015 	stw	r4,0(r8)
   4bdd0:	28c00003 	ldbu	r3,0(r5)
   4bdd4:	01c00104 	movi	r7,4
   4bdd8:	000d883a 	mov	r6,zero
   4bddc:	41d1883a 	add	r8,r8,r7
   4bde0:	0009883a 	mov	r4,zero
   4bde4:	003fd006 	br	4bd28 <__gethex+0x3a0>
   4bde8:	14e1c83a 	sub	r16,r2,r19
   4bdec:	a009883a 	mov	r4,r20
   4bdf0:	800b883a 	mov	r5,r16
   4bdf4:	00477dc0 	call	477dc <__any_on>
   4bdf8:	1000081e 	bne	r2,zero,4be1c <__gethex+0x494>
   4bdfc:	002b883a 	mov	r21,zero
   4be00:	a009883a 	mov	r4,r20
   4be04:	800b883a 	mov	r5,r16
   4be08:	004b8d80 	call	4b8d8 <rshift>
   4be0c:	d8800017 	ldw	r2,0(sp)
   4be10:	1405883a 	add	r2,r2,r16
   4be14:	d8800015 	stw	r2,0(sp)
   4be18:	003fd606 	br	4bd74 <__gethex+0x3ec>
   4be1c:	817fffc4 	addi	r5,r16,-1
   4be20:	2805d17a 	srai	r2,r5,5
   4be24:	290007cc 	andi	r4,r5,31
   4be28:	01800044 	movi	r6,1
   4be2c:	1085883a 	add	r2,r2,r2
   4be30:	1085883a 	add	r2,r2,r2
   4be34:	1585883a 	add	r2,r2,r22
   4be38:	3108983a 	sll	r4,r6,r4
   4be3c:	10c00017 	ldw	r3,0(r2)
   4be40:	20c8703a 	and	r4,r4,r3
   4be44:	20001e1e 	bne	r4,zero,4bec0 <__gethex+0x538>
   4be48:	302b883a 	mov	r21,r6
   4be4c:	003fec06 	br	4be00 <__gethex+0x478>
   4be50:	b011883a 	mov	r8,r22
   4be54:	0009883a 	mov	r4,zero
   4be58:	003fb906 	br	4bd40 <__gethex+0x3b8>
   4be5c:	d8800217 	ldw	r2,8(sp)
   4be60:	d8c00017 	ldw	r3,0(sp)
   4be64:	11000117 	ldw	r4,4(r2)
   4be68:	19001c16 	blt	r3,r4,4bedc <__gethex+0x554>
   4be6c:	04800044 	movi	r18,1
   4be70:	a8000926 	beq	r21,zero,4be98 <__gethex+0x510>
   4be74:	d8c00217 	ldw	r3,8(sp)
   4be78:	00800084 	movi	r2,2
   4be7c:	19000317 	ldw	r4,12(r3)
   4be80:	20809826 	beq	r4,r2,4c0e4 <__gethex+0x75c>
   4be84:	008000c4 	movi	r2,3
   4be88:	20805b26 	beq	r4,r2,4bff8 <__gethex+0x670>
   4be8c:	00800044 	movi	r2,1
   4be90:	20804326 	beq	r4,r2,4bfa0 <__gethex+0x618>
   4be94:	94800414 	ori	r18,r18,16
   4be98:	d9000f17 	ldw	r4,60(sp)
   4be9c:	d8800017 	ldw	r2,0(sp)
   4bea0:	d8c00317 	ldw	r3,12(sp)
   4bea4:	25000015 	stw	r20,0(r4)
   4bea8:	18800015 	stw	r2,0(r3)
   4beac:	003efa06 	br	4ba98 <__gethex+0x110>
   4beb0:	000b883a 	mov	r5,zero
   4beb4:	003f8b06 	br	4bce4 <__gethex+0x35c>
   4beb8:	d8000015 	stw	zero,0(sp)
   4bebc:	003eea06 	br	4ba68 <__gethex+0xe0>
   4bec0:	3140180e 	bge	r6,r5,4bf24 <__gethex+0x59c>
   4bec4:	a009883a 	mov	r4,r20
   4bec8:	817fff84 	addi	r5,r16,-2
   4becc:	00477dc0 	call	477dc <__any_on>
   4bed0:	10001426 	beq	r2,zero,4bf24 <__gethex+0x59c>
   4bed4:	054000c4 	movi	r21,3
   4bed8:	003fc906 	br	4be00 <__gethex+0x478>
   4bedc:	d8800017 	ldw	r2,0(sp)
   4bee0:	20a3c83a 	sub	r17,r4,r2
   4bee4:	8cc01116 	blt	r17,r19,4bf2c <__gethex+0x5a4>
   4bee8:	d8800217 	ldw	r2,8(sp)
   4beec:	10c00317 	ldw	r3,12(r2)
   4bef0:	00800084 	movi	r2,2
   4bef4:	18809426 	beq	r3,r2,4c148 <__gethex+0x7c0>
   4bef8:	008000c4 	movi	r2,3
   4befc:	18808f26 	beq	r3,r2,4c13c <__gethex+0x7b4>
   4bf00:	00800044 	movi	r2,1
   4bf04:	18807c26 	beq	r3,r2,4c0f8 <__gethex+0x770>
   4bf08:	d9000117 	ldw	r4,4(sp)
   4bf0c:	a00b883a 	mov	r5,r20
   4bf10:	04801404 	movi	r18,80
   4bf14:	00472e40 	call	472e4 <_Bfree>
   4bf18:	d9000f17 	ldw	r4,60(sp)
   4bf1c:	20000015 	stw	zero,0(r4)
   4bf20:	003edd06 	br	4ba98 <__gethex+0x110>
   4bf24:	05400084 	movi	r21,2
   4bf28:	003fb506 	br	4be00 <__gethex+0x478>
   4bf2c:	8c3fffc4 	addi	r16,r17,-1
   4bf30:	a8001526 	beq	r21,zero,4bf88 <__gethex+0x600>
   4bf34:	05400044 	movi	r21,1
   4bf38:	8005d17a 	srai	r2,r16,5
   4bf3c:	814007cc 	andi	r5,r16,31
   4bf40:	00c00044 	movi	r3,1
   4bf44:	1085883a 	add	r2,r2,r2
   4bf48:	1085883a 	add	r2,r2,r2
   4bf4c:	1585883a 	add	r2,r2,r22
   4bf50:	1946983a 	sll	r3,r3,r5
   4bf54:	11000017 	ldw	r4,0(r2)
   4bf58:	1906703a 	and	r3,r3,r4
   4bf5c:	18000126 	beq	r3,zero,4bf64 <__gethex+0x5dc>
   4bf60:	ad400094 	ori	r21,r21,2
   4bf64:	880b883a 	mov	r5,r17
   4bf68:	a009883a 	mov	r4,r20
   4bf6c:	004b8d80 	call	4b8d8 <rshift>
   4bf70:	d8800217 	ldw	r2,8(sp)
   4bf74:	9c67c83a 	sub	r19,r19,r17
   4bf78:	04800084 	movi	r18,2
   4bf7c:	10800117 	ldw	r2,4(r2)
   4bf80:	d8800015 	stw	r2,0(sp)
   4bf84:	003fba06 	br	4be70 <__gethex+0x4e8>
   4bf88:	043feb0e 	bge	zero,r16,4bf38 <__gethex+0x5b0>
   4bf8c:	a009883a 	mov	r4,r20
   4bf90:	800b883a 	mov	r5,r16
   4bf94:	00477dc0 	call	477dc <__any_on>
   4bf98:	102b883a 	mov	r21,r2
   4bf9c:	003fe606 	br	4bf38 <__gethex+0x5b0>
   4bfa0:	a880008c 	andi	r2,r21,2
   4bfa4:	103fbb26 	beq	r2,zero,4be94 <__gethex+0x50c>
   4bfa8:	b0800017 	ldw	r2,0(r22)
   4bfac:	a884b03a 	or	r2,r21,r2
   4bfb0:	1104703a 	and	r2,r2,r4
   4bfb4:	103fb726 	beq	r2,zero,4be94 <__gethex+0x50c>
   4bfb8:	a4000417 	ldw	r16,16(r20)
   4bfbc:	b007883a 	mov	r3,r22
   4bfc0:	017fffc4 	movi	r5,-1
   4bfc4:	8405883a 	add	r2,r16,r16
   4bfc8:	10ab883a 	add	r21,r2,r2
   4bfcc:	802f883a 	mov	r23,r16
   4bfd0:	b549883a 	add	r4,r22,r21
   4bfd4:	00000306 	br	4bfe4 <__gethex+0x65c>
   4bfd8:	18000015 	stw	zero,0(r3)
   4bfdc:	18c00104 	addi	r3,r3,4
   4bfe0:	1900082e 	bgeu	r3,r4,4c004 <__gethex+0x67c>
   4bfe4:	18800017 	ldw	r2,0(r3)
   4bfe8:	117ffb26 	beq	r2,r5,4bfd8 <__gethex+0x650>
   4bfec:	10800044 	addi	r2,r2,1
   4bff0:	18800015 	stw	r2,0(r3)
   4bff4:	00001e06 	br	4c070 <__gethex+0x6e8>
   4bff8:	d8801017 	ldw	r2,64(sp)
   4bffc:	103fa526 	beq	r2,zero,4be94 <__gethex+0x50c>
   4c000:	003fed06 	br	4bfb8 <__gethex+0x630>
   4c004:	a0800217 	ldw	r2,8(r20)
   4c008:	80801216 	blt	r16,r2,4c054 <__gethex+0x6cc>
   4c00c:	a1400117 	ldw	r5,4(r20)
   4c010:	d9000117 	ldw	r4,4(sp)
   4c014:	29400044 	addi	r5,r5,1
   4c018:	00478640 	call	47864 <_Balloc>
   4c01c:	a1800417 	ldw	r6,16(r20)
   4c020:	a1400304 	addi	r5,r20,12
   4c024:	11000304 	addi	r4,r2,12
   4c028:	318d883a 	add	r6,r6,r6
   4c02c:	318d883a 	add	r6,r6,r6
   4c030:	31800204 	addi	r6,r6,8
   4c034:	1023883a 	mov	r17,r2
   4c038:	00470cc0 	call	470cc <memcpy>
   4c03c:	d9000117 	ldw	r4,4(sp)
   4c040:	a00b883a 	mov	r5,r20
   4c044:	8d800504 	addi	r22,r17,20
   4c048:	00472e40 	call	472e4 <_Bfree>
   4c04c:	8c000417 	ldw	r16,16(r17)
   4c050:	8829883a 	mov	r20,r17
   4c054:	8405883a 	add	r2,r16,r16
   4c058:	1085883a 	add	r2,r2,r2
   4c05c:	1505883a 	add	r2,r2,r20
   4c060:	84000044 	addi	r16,r16,1
   4c064:	00c00044 	movi	r3,1
   4c068:	10c00515 	stw	r3,20(r2)
   4c06c:	a4000415 	stw	r16,16(r20)
   4c070:	00800084 	movi	r2,2
   4c074:	90801526 	beq	r18,r2,4c0cc <__gethex+0x744>
   4c078:	bc000a16 	blt	r23,r16,4c0a4 <__gethex+0x71c>
   4c07c:	9c0007cc 	andi	r16,r19,31
   4c080:	8000021e 	bne	r16,zero,4c08c <__gethex+0x704>
   4c084:	94800814 	ori	r18,r18,32
   4c088:	003f8306 	br	4be98 <__gethex+0x510>
   4c08c:	b545883a 	add	r2,r22,r21
   4c090:	113fff17 	ldw	r4,-4(r2)
   4c094:	004730c0 	call	4730c <__hi0bits>
   4c098:	00c00804 	movi	r3,32
   4c09c:	1c07c83a 	sub	r3,r3,r16
   4c0a0:	10fff80e 	bge	r2,r3,4c084 <__gethex+0x6fc>
   4c0a4:	a009883a 	mov	r4,r20
   4c0a8:	01400044 	movi	r5,1
   4c0ac:	004b8d80 	call	4b8d8 <rshift>
   4c0b0:	d9000217 	ldw	r4,8(sp)
   4c0b4:	d8c00017 	ldw	r3,0(sp)
   4c0b8:	20800217 	ldw	r2,8(r4)
   4c0bc:	18c00044 	addi	r3,r3,1
   4c0c0:	d8c00015 	stw	r3,0(sp)
   4c0c4:	10ff2f16 	blt	r2,r3,4bd84 <__gethex+0x3fc>
   4c0c8:	003fee06 	br	4c084 <__gethex+0x6fc>
   4c0cc:	d8c00217 	ldw	r3,8(sp)
   4c0d0:	18800017 	ldw	r2,0(r3)
   4c0d4:	10bfffc4 	addi	r2,r2,-1
   4c0d8:	98801e26 	beq	r19,r2,4c154 <__gethex+0x7cc>
   4c0dc:	04800884 	movi	r18,34
   4c0e0:	003f6d06 	br	4be98 <__gethex+0x510>
   4c0e4:	d9001017 	ldw	r4,64(sp)
   4c0e8:	00800044 	movi	r2,1
   4c0ec:	1105c83a 	sub	r2,r2,r4
   4c0f0:	103f6826 	beq	r2,zero,4be94 <__gethex+0x50c>
   4c0f4:	003fb006 	br	4bfb8 <__gethex+0x630>
   4c0f8:	9c7f831e 	bne	r19,r17,4bf08 <__gethex+0x580>
   4c0fc:	1cc0060e 	bge	r3,r19,4c118 <__gethex+0x790>
   4c100:	98cbc83a 	sub	r5,r19,r3
   4c104:	a009883a 	mov	r4,r20
   4c108:	00477dc0 	call	477dc <__any_on>
   4c10c:	103f7e26 	beq	r2,zero,4bf08 <__gethex+0x580>
   4c110:	d8c00217 	ldw	r3,8(sp)
   4c114:	19000117 	ldw	r4,4(r3)
   4c118:	d8800317 	ldw	r2,12(sp)
   4c11c:	d8c00f17 	ldw	r3,60(sp)
   4c120:	04000044 	movi	r16,1
   4c124:	11000015 	stw	r4,0(r2)
   4c128:	04801884 	movi	r18,98
   4c12c:	b4000015 	stw	r16,0(r22)
   4c130:	1d000015 	stw	r20,0(r3)
   4c134:	a4000415 	stw	r16,16(r20)
   4c138:	003e5706 	br	4ba98 <__gethex+0x110>
   4c13c:	d8801017 	ldw	r2,64(sp)
   4c140:	103f7126 	beq	r2,zero,4bf08 <__gethex+0x580>
   4c144:	003ff406 	br	4c118 <__gethex+0x790>
   4c148:	d8c01017 	ldw	r3,64(sp)
   4c14c:	183ff226 	beq	r3,zero,4c118 <__gethex+0x790>
   4c150:	003f6d06 	br	4bf08 <__gethex+0x580>
   4c154:	9805d17a 	srai	r2,r19,5
   4c158:	994007cc 	andi	r5,r19,31
   4c15c:	00c00044 	movi	r3,1
   4c160:	1085883a 	add	r2,r2,r2
   4c164:	1085883a 	add	r2,r2,r2
   4c168:	1585883a 	add	r2,r2,r22
   4c16c:	1946983a 	sll	r3,r3,r5
   4c170:	11000017 	ldw	r4,0(r2)
   4c174:	1906703a 	and	r3,r3,r4
   4c178:	183fd826 	beq	r3,zero,4c0dc <__gethex+0x754>
   4c17c:	04800844 	movi	r18,33
   4c180:	003f4506 	br	4be98 <__gethex+0x510>

0004c184 <L_shift>:
   4c184:	00800204 	movi	r2,8
   4c188:	1185c83a 	sub	r2,r2,r6
   4c18c:	1085883a 	add	r2,r2,r2
   4c190:	21c00017 	ldw	r7,0(r4)
   4c194:	1093883a 	add	r9,r2,r2
   4c198:	00800804 	movi	r2,32
   4c19c:	200d883a 	mov	r6,r4
   4c1a0:	1251c83a 	sub	r8,r2,r9
   4c1a4:	31800104 	addi	r6,r6,4
   4c1a8:	3805883a 	mov	r2,r7
   4c1ac:	31c00017 	ldw	r7,0(r6)
   4c1b0:	3a08983a 	sll	r4,r7,r8
   4c1b4:	3a46d83a 	srl	r3,r7,r9
   4c1b8:	1104b03a 	or	r2,r2,r4
   4c1bc:	180f883a 	mov	r7,r3
   4c1c0:	30bfff15 	stw	r2,-4(r6)
   4c1c4:	30c00015 	stw	r3,0(r6)
   4c1c8:	317ff636 	bltu	r6,r5,4c1a4 <L_shift+0x20>
   4c1cc:	f800283a 	ret

0004c1d0 <__hexnan>:
   4c1d0:	defff404 	addi	sp,sp,-48
   4c1d4:	dd800815 	stw	r22,32(sp)
   4c1d8:	05800174 	movhi	r22,5
   4c1dc:	b5967c04 	addi	r22,r22,23024
   4c1e0:	b0800c03 	ldbu	r2,48(r22)
   4c1e4:	dcc00515 	stw	r19,20(sp)
   4c1e8:	dc000215 	stw	r16,8(sp)
   4c1ec:	dfc00b15 	stw	ra,44(sp)
   4c1f0:	df000a15 	stw	fp,40(sp)
   4c1f4:	ddc00915 	stw	r23,36(sp)
   4c1f8:	dd400715 	stw	r21,28(sp)
   4c1fc:	dd000615 	stw	r20,24(sp)
   4c200:	dc800415 	stw	r18,16(sp)
   4c204:	dc400315 	stw	r17,12(sp)
   4c208:	d9000115 	stw	r4,4(sp)
   4c20c:	2821883a 	mov	r16,r5
   4c210:	3027883a 	mov	r19,r6
   4c214:	10007426 	beq	r2,zero,4c3e8 <__hexnan+0x218>
   4c218:	80c00017 	ldw	r3,0(r16)
   4c21c:	1805d17a 	srai	r2,r3,5
   4c220:	18c007cc 	andi	r3,r3,31
   4c224:	1839003a 	cmpeq	fp,r3,zero
   4c228:	1085883a 	add	r2,r2,r2
   4c22c:	1085883a 	add	r2,r2,r2
   4c230:	d8c00015 	stw	r3,0(sp)
   4c234:	14c5883a 	add	r2,r2,r19
   4c238:	e000011e 	bne	fp,zero,4c240 <__hexnan+0x70>
   4c23c:	10800104 	addi	r2,r2,4
   4c240:	d8c00117 	ldw	r3,4(sp)
   4c244:	153fff04 	addi	r20,r2,-4
   4c248:	a021883a 	mov	r16,r20
   4c24c:	1c400017 	ldw	r17,0(r3)
   4c250:	a02b883a 	mov	r21,r20
   4c254:	0025883a 	mov	r18,zero
   4c258:	002f883a 	mov	r23,zero
   4c25c:	000d883a 	mov	r6,zero
   4c260:	103fff15 	stw	zero,-4(r2)
   4c264:	8c400044 	addi	r17,r17,1
   4c268:	89000003 	ldbu	r4,0(r17)
   4c26c:	20000e26 	beq	r4,zero,4c2a8 <__hexnan+0xd8>
   4c270:	2585883a 	add	r2,r4,r22
   4c274:	10c00003 	ldbu	r3,0(r2)
   4c278:	18002e1e 	bne	r3,zero,4c334 <__hexnan+0x164>
   4c27c:	00800804 	movi	r2,32
   4c280:	11005536 	bltu	r2,r4,4c3d8 <__hexnan+0x208>
   4c284:	bcbff70e 	bge	r23,r18,4c264 <__hexnan+0x94>
   4c288:	8540022e 	bgeu	r16,r21,4c294 <__hexnan+0xc4>
   4c28c:	008001c4 	movi	r2,7
   4c290:	11803c0e 	bge	r2,r6,4c384 <__hexnan+0x1b4>
   4c294:	9c003536 	bltu	r19,r16,4c36c <__hexnan+0x19c>
   4c298:	8c400044 	addi	r17,r17,1
   4c29c:	89000003 	ldbu	r4,0(r17)
   4c2a0:	01800204 	movi	r6,8
   4c2a4:	203ff21e 	bne	r4,zero,4c270 <__hexnan+0xa0>
   4c2a8:	90004d26 	beq	r18,zero,4c3e0 <__hexnan+0x210>
   4c2ac:	85404336 	bltu	r16,r21,4c3bc <__hexnan+0x1ec>
   4c2b0:	9c00382e 	bgeu	r19,r16,4c394 <__hexnan+0x1c4>
   4c2b4:	9807883a 	mov	r3,r19
   4c2b8:	80800017 	ldw	r2,0(r16)
   4c2bc:	84000104 	addi	r16,r16,4
   4c2c0:	18800015 	stw	r2,0(r3)
   4c2c4:	18c00104 	addi	r3,r3,4
   4c2c8:	a43ffb2e 	bgeu	r20,r16,4c2b8 <__hexnan+0xe8>
   4c2cc:	18000015 	stw	zero,0(r3)
   4c2d0:	18c00104 	addi	r3,r3,4
   4c2d4:	a0fffd2e 	bgeu	r20,r3,4c2cc <__hexnan+0xfc>
   4c2d8:	a0800017 	ldw	r2,0(r20)
   4c2dc:	1000071e 	bne	r2,zero,4c2fc <__hexnan+0x12c>
   4c2e0:	9d004326 	beq	r19,r20,4c3f0 <__hexnan+0x220>
   4c2e4:	a007883a 	mov	r3,r20
   4c2e8:	00000106 	br	4c2f0 <__hexnan+0x120>
   4c2ec:	98c04026 	beq	r19,r3,4c3f0 <__hexnan+0x220>
   4c2f0:	18ffff04 	addi	r3,r3,-4
   4c2f4:	18800017 	ldw	r2,0(r3)
   4c2f8:	103ffc26 	beq	r2,zero,4c2ec <__hexnan+0x11c>
   4c2fc:	00c00144 	movi	r3,5
   4c300:	1805883a 	mov	r2,r3
   4c304:	dfc00b17 	ldw	ra,44(sp)
   4c308:	df000a17 	ldw	fp,40(sp)
   4c30c:	ddc00917 	ldw	r23,36(sp)
   4c310:	dd800817 	ldw	r22,32(sp)
   4c314:	dd400717 	ldw	r21,28(sp)
   4c318:	dd000617 	ldw	r20,24(sp)
   4c31c:	dcc00517 	ldw	r19,20(sp)
   4c320:	dc800417 	ldw	r18,16(sp)
   4c324:	dc400317 	ldw	r17,12(sp)
   4c328:	dc000217 	ldw	r16,8(sp)
   4c32c:	dec00c04 	addi	sp,sp,48
   4c330:	f800283a 	ret
   4c334:	31800044 	addi	r6,r6,1
   4c338:	00800204 	movi	r2,8
   4c33c:	94800044 	addi	r18,r18,1
   4c340:	1180040e 	bge	r2,r6,4c354 <__hexnan+0x184>
   4c344:	9c3fc72e 	bgeu	r19,r16,4c264 <__hexnan+0x94>
   4c348:	843fff04 	addi	r16,r16,-4
   4c34c:	80000015 	stw	zero,0(r16)
   4c350:	01800044 	movi	r6,1
   4c354:	80800017 	ldw	r2,0(r16)
   4c358:	18c003cc 	andi	r3,r3,15
   4c35c:	1004913a 	slli	r2,r2,4
   4c360:	10c4b03a 	or	r2,r2,r3
   4c364:	80800015 	stw	r2,0(r16)
   4c368:	003fbe06 	br	4c264 <__hexnan+0x94>
   4c36c:	843fff04 	addi	r16,r16,-4
   4c370:	802b883a 	mov	r21,r16
   4c374:	902f883a 	mov	r23,r18
   4c378:	000d883a 	mov	r6,zero
   4c37c:	80000015 	stw	zero,0(r16)
   4c380:	003fb806 	br	4c264 <__hexnan+0x94>
   4c384:	8009883a 	mov	r4,r16
   4c388:	a80b883a 	mov	r5,r21
   4c38c:	004c1840 	call	4c184 <L_shift>
   4c390:	003fc006 	br	4c294 <__hexnan+0xc4>
   4c394:	e03fd01e 	bne	fp,zero,4c2d8 <__hexnan+0x108>
   4c398:	d8c00017 	ldw	r3,0(sp)
   4c39c:	00800804 	movi	r2,32
   4c3a0:	10c5c83a 	sub	r2,r2,r3
   4c3a4:	00ffffc4 	movi	r3,-1
   4c3a8:	1886d83a 	srl	r3,r3,r2
   4c3ac:	a0800017 	ldw	r2,0(r20)
   4c3b0:	10c4703a 	and	r2,r2,r3
   4c3b4:	a0800015 	stw	r2,0(r20)
   4c3b8:	003fc806 	br	4c2dc <__hexnan+0x10c>
   4c3bc:	008001c4 	movi	r2,7
   4c3c0:	11bfbb16 	blt	r2,r6,4c2b0 <__hexnan+0xe0>
   4c3c4:	a80b883a 	mov	r5,r21
   4c3c8:	8009883a 	mov	r4,r16
   4c3cc:	004c1840 	call	4c184 <L_shift>
   4c3d0:	9c3ff02e 	bgeu	r19,r16,4c394 <__hexnan+0x1c4>
   4c3d4:	003fb706 	br	4c2b4 <__hexnan+0xe4>
   4c3d8:	00800a44 	movi	r2,41
   4c3dc:	20800826 	beq	r4,r2,4c400 <__hexnan+0x230>
   4c3e0:	00c00104 	movi	r3,4
   4c3e4:	003fc606 	br	4c300 <__hexnan+0x130>
   4c3e8:	004b8700 	call	4b870 <__hexdig_init>
   4c3ec:	003f8a06 	br	4c218 <__hexnan+0x48>
   4c3f0:	00800044 	movi	r2,1
   4c3f4:	00c00144 	movi	r3,5
   4c3f8:	98800015 	stw	r2,0(r19)
   4c3fc:	003fc006 	br	4c300 <__hexnan+0x130>
   4c400:	903ff726 	beq	r18,zero,4c3e0 <__hexnan+0x210>
   4c404:	d8c00117 	ldw	r3,4(sp)
   4c408:	88800044 	addi	r2,r17,1
   4c40c:	18800015 	stw	r2,0(r3)
   4c410:	857fa72e 	bgeu	r16,r21,4c2b0 <__hexnan+0xe0>
   4c414:	003fe906 	br	4c3bc <__hexnan+0x1ec>

0004c418 <_isatty_r>:
   4c418:	defffd04 	addi	sp,sp,-12
   4c41c:	dc000015 	stw	r16,0(sp)
   4c420:	04000174 	movhi	r16,5
   4c424:	84166b04 	addi	r16,r16,22956
   4c428:	dc400115 	stw	r17,4(sp)
   4c42c:	80000015 	stw	zero,0(r16)
   4c430:	2023883a 	mov	r17,r4
   4c434:	2809883a 	mov	r4,r5
   4c438:	dfc00215 	stw	ra,8(sp)
   4c43c:	004f4740 	call	4f474 <isatty>
   4c440:	1007883a 	mov	r3,r2
   4c444:	00bfffc4 	movi	r2,-1
   4c448:	18800626 	beq	r3,r2,4c464 <_isatty_r+0x4c>
   4c44c:	1805883a 	mov	r2,r3
   4c450:	dfc00217 	ldw	ra,8(sp)
   4c454:	dc400117 	ldw	r17,4(sp)
   4c458:	dc000017 	ldw	r16,0(sp)
   4c45c:	dec00304 	addi	sp,sp,12
   4c460:	f800283a 	ret
   4c464:	80800017 	ldw	r2,0(r16)
   4c468:	103ff826 	beq	r2,zero,4c44c <_isatty_r+0x34>
   4c46c:	88800015 	stw	r2,0(r17)
   4c470:	1805883a 	mov	r2,r3
   4c474:	dfc00217 	ldw	ra,8(sp)
   4c478:	dc400117 	ldw	r17,4(sp)
   4c47c:	dc000017 	ldw	r16,0(sp)
   4c480:	dec00304 	addi	sp,sp,12
   4c484:	f800283a 	ret

0004c488 <_lseek_r>:
   4c488:	defffd04 	addi	sp,sp,-12
   4c48c:	dc000015 	stw	r16,0(sp)
   4c490:	04000174 	movhi	r16,5
   4c494:	84166b04 	addi	r16,r16,22956
   4c498:	dc400115 	stw	r17,4(sp)
   4c49c:	80000015 	stw	zero,0(r16)
   4c4a0:	2023883a 	mov	r17,r4
   4c4a4:	2809883a 	mov	r4,r5
   4c4a8:	300b883a 	mov	r5,r6
   4c4ac:	380d883a 	mov	r6,r7
   4c4b0:	dfc00215 	stw	ra,8(sp)
   4c4b4:	004f6840 	call	4f684 <lseek>
   4c4b8:	1007883a 	mov	r3,r2
   4c4bc:	00bfffc4 	movi	r2,-1
   4c4c0:	18800626 	beq	r3,r2,4c4dc <_lseek_r+0x54>
   4c4c4:	1805883a 	mov	r2,r3
   4c4c8:	dfc00217 	ldw	ra,8(sp)
   4c4cc:	dc400117 	ldw	r17,4(sp)
   4c4d0:	dc000017 	ldw	r16,0(sp)
   4c4d4:	dec00304 	addi	sp,sp,12
   4c4d8:	f800283a 	ret
   4c4dc:	80800017 	ldw	r2,0(r16)
   4c4e0:	103ff826 	beq	r2,zero,4c4c4 <_lseek_r+0x3c>
   4c4e4:	88800015 	stw	r2,0(r17)
   4c4e8:	1805883a 	mov	r2,r3
   4c4ec:	dfc00217 	ldw	ra,8(sp)
   4c4f0:	dc400117 	ldw	r17,4(sp)
   4c4f4:	dc000017 	ldw	r16,0(sp)
   4c4f8:	dec00304 	addi	sp,sp,12
   4c4fc:	f800283a 	ret

0004c500 <_read_r>:
   4c500:	defffd04 	addi	sp,sp,-12
   4c504:	dc000015 	stw	r16,0(sp)
   4c508:	04000174 	movhi	r16,5
   4c50c:	84166b04 	addi	r16,r16,22956
   4c510:	dc400115 	stw	r17,4(sp)
   4c514:	80000015 	stw	zero,0(r16)
   4c518:	2023883a 	mov	r17,r4
   4c51c:	2809883a 	mov	r4,r5
   4c520:	300b883a 	mov	r5,r6
   4c524:	380d883a 	mov	r6,r7
   4c528:	dfc00215 	stw	ra,8(sp)
   4c52c:	004f8840 	call	4f884 <read>
   4c530:	1007883a 	mov	r3,r2
   4c534:	00bfffc4 	movi	r2,-1
   4c538:	18800626 	beq	r3,r2,4c554 <_read_r+0x54>
   4c53c:	1805883a 	mov	r2,r3
   4c540:	dfc00217 	ldw	ra,8(sp)
   4c544:	dc400117 	ldw	r17,4(sp)
   4c548:	dc000017 	ldw	r16,0(sp)
   4c54c:	dec00304 	addi	sp,sp,12
   4c550:	f800283a 	ret
   4c554:	80800017 	ldw	r2,0(r16)
   4c558:	103ff826 	beq	r2,zero,4c53c <_read_r+0x3c>
   4c55c:	88800015 	stw	r2,0(r17)
   4c560:	1805883a 	mov	r2,r3
   4c564:	dfc00217 	ldw	ra,8(sp)
   4c568:	dc400117 	ldw	r17,4(sp)
   4c56c:	dc000017 	ldw	r16,0(sp)
   4c570:	dec00304 	addi	sp,sp,12
   4c574:	f800283a 	ret

0004c578 <__muldi3>:
   4c578:	defff204 	addi	sp,sp,-56
   4c57c:	df000c15 	stw	fp,48(sp)
   4c580:	3038d43a 	srli	fp,r6,16
   4c584:	dd000815 	stw	r20,32(sp)
   4c588:	dc400515 	stw	r17,20(sp)
   4c58c:	2028d43a 	srli	r20,r4,16
   4c590:	247fffcc 	andi	r17,r4,65535
   4c594:	dc000415 	stw	r16,16(sp)
   4c598:	343fffcc 	andi	r16,r6,65535
   4c59c:	dcc00715 	stw	r19,28(sp)
   4c5a0:	d9000015 	stw	r4,0(sp)
   4c5a4:	2827883a 	mov	r19,r5
   4c5a8:	8809883a 	mov	r4,r17
   4c5ac:	d9400115 	stw	r5,4(sp)
   4c5b0:	800b883a 	mov	r5,r16
   4c5b4:	d9800215 	stw	r6,8(sp)
   4c5b8:	dfc00d15 	stw	ra,52(sp)
   4c5bc:	d9c00315 	stw	r7,12(sp)
   4c5c0:	dd800a15 	stw	r22,40(sp)
   4c5c4:	dd400915 	stw	r21,36(sp)
   4c5c8:	302d883a 	mov	r22,r6
   4c5cc:	ddc00b15 	stw	r23,44(sp)
   4c5d0:	dc800615 	stw	r18,24(sp)
   4c5d4:	004e8e80 	call	4e8e8 <__mulsi3>
   4c5d8:	8809883a 	mov	r4,r17
   4c5dc:	e00b883a 	mov	r5,fp
   4c5e0:	102b883a 	mov	r21,r2
   4c5e4:	004e8e80 	call	4e8e8 <__mulsi3>
   4c5e8:	800b883a 	mov	r5,r16
   4c5ec:	a009883a 	mov	r4,r20
   4c5f0:	1023883a 	mov	r17,r2
   4c5f4:	004e8e80 	call	4e8e8 <__mulsi3>
   4c5f8:	a009883a 	mov	r4,r20
   4c5fc:	e00b883a 	mov	r5,fp
   4c600:	1021883a 	mov	r16,r2
   4c604:	004e8e80 	call	4e8e8 <__mulsi3>
   4c608:	a8ffffcc 	andi	r3,r21,65535
   4c60c:	a82ad43a 	srli	r21,r21,16
   4c610:	8c23883a 	add	r17,r17,r16
   4c614:	1011883a 	mov	r8,r2
   4c618:	ac6b883a 	add	r21,r21,r17
   4c61c:	a804943a 	slli	r2,r21,16
   4c620:	b009883a 	mov	r4,r22
   4c624:	980b883a 	mov	r5,r19
   4c628:	10c7883a 	add	r3,r2,r3
   4c62c:	a812d43a 	srli	r9,r21,16
   4c630:	180d883a 	mov	r6,r3
   4c634:	ac00022e 	bgeu	r21,r16,4c640 <__muldi3+0xc8>
   4c638:	00800074 	movhi	r2,1
   4c63c:	4091883a 	add	r8,r8,r2
   4c640:	4267883a 	add	r19,r8,r9
   4c644:	302d883a 	mov	r22,r6
   4c648:	004e8e80 	call	4e8e8 <__mulsi3>
   4c64c:	d9400317 	ldw	r5,12(sp)
   4c650:	d9000017 	ldw	r4,0(sp)
   4c654:	1023883a 	mov	r17,r2
   4c658:	004e8e80 	call	4e8e8 <__mulsi3>
   4c65c:	14cb883a 	add	r5,r2,r19
   4c660:	894b883a 	add	r5,r17,r5
   4c664:	b005883a 	mov	r2,r22
   4c668:	2807883a 	mov	r3,r5
   4c66c:	dfc00d17 	ldw	ra,52(sp)
   4c670:	df000c17 	ldw	fp,48(sp)
   4c674:	ddc00b17 	ldw	r23,44(sp)
   4c678:	dd800a17 	ldw	r22,40(sp)
   4c67c:	dd400917 	ldw	r21,36(sp)
   4c680:	dd000817 	ldw	r20,32(sp)
   4c684:	dcc00717 	ldw	r19,28(sp)
   4c688:	dc800617 	ldw	r18,24(sp)
   4c68c:	dc400517 	ldw	r17,20(sp)
   4c690:	dc000417 	ldw	r16,16(sp)
   4c694:	dec00e04 	addi	sp,sp,56
   4c698:	f800283a 	ret

0004c69c <__fixunsdfsi>:
   4c69c:	defffb04 	addi	sp,sp,-20
   4c6a0:	dc400115 	stw	r17,4(sp)
   4c6a4:	dc000015 	stw	r16,0(sp)
   4c6a8:	04507834 	movhi	r17,16864
   4c6ac:	0021883a 	mov	r16,zero
   4c6b0:	800d883a 	mov	r6,r16
   4c6b4:	880f883a 	mov	r7,r17
   4c6b8:	dcc00315 	stw	r19,12(sp)
   4c6bc:	dc800215 	stw	r18,8(sp)
   4c6c0:	2827883a 	mov	r19,r5
   4c6c4:	2025883a 	mov	r18,r4
   4c6c8:	dfc00415 	stw	ra,16(sp)
   4c6cc:	004e22c0 	call	4e22c <__gedf2>
   4c6d0:	000d883a 	mov	r6,zero
   4c6d4:	880f883a 	mov	r7,r17
   4c6d8:	980b883a 	mov	r5,r19
   4c6dc:	9009883a 	mov	r4,r18
   4c6e0:	10000d16 	blt	r2,zero,4c718 <__fixunsdfsi+0x7c>
   4c6e4:	004d9840 	call	4d984 <__subdf3>
   4c6e8:	180b883a 	mov	r5,r3
   4c6ec:	1009883a 	mov	r4,r2
   4c6f0:	004e4bc0 	call	4e4bc <__fixdfsi>
   4c6f4:	00e00034 	movhi	r3,32768
   4c6f8:	10c5883a 	add	r2,r2,r3
   4c6fc:	dfc00417 	ldw	ra,16(sp)
   4c700:	dcc00317 	ldw	r19,12(sp)
   4c704:	dc800217 	ldw	r18,8(sp)
   4c708:	dc400117 	ldw	r17,4(sp)
   4c70c:	dc000017 	ldw	r16,0(sp)
   4c710:	dec00504 	addi	sp,sp,20
   4c714:	f800283a 	ret
   4c718:	980b883a 	mov	r5,r19
   4c71c:	9009883a 	mov	r4,r18
   4c720:	004e4bc0 	call	4e4bc <__fixdfsi>
   4c724:	dfc00417 	ldw	ra,16(sp)
   4c728:	dcc00317 	ldw	r19,12(sp)
   4c72c:	dc800217 	ldw	r18,8(sp)
   4c730:	dc400117 	ldw	r17,4(sp)
   4c734:	dc000017 	ldw	r16,0(sp)
   4c738:	dec00504 	addi	sp,sp,20
   4c73c:	f800283a 	ret

0004c740 <__udivdi3>:
   4c740:	defff104 	addi	sp,sp,-60
   4c744:	0015883a 	mov	r10,zero
   4c748:	2005883a 	mov	r2,r4
   4c74c:	3011883a 	mov	r8,r6
   4c750:	df000d15 	stw	fp,52(sp)
   4c754:	dd400a15 	stw	r21,40(sp)
   4c758:	dcc00815 	stw	r19,32(sp)
   4c75c:	dfc00e15 	stw	ra,56(sp)
   4c760:	ddc00c15 	stw	r23,48(sp)
   4c764:	dd800b15 	stw	r22,44(sp)
   4c768:	dd000915 	stw	r20,36(sp)
   4c76c:	dc800715 	stw	r18,28(sp)
   4c770:	dc400615 	stw	r17,24(sp)
   4c774:	dc000515 	stw	r16,20(sp)
   4c778:	da800315 	stw	r10,12(sp)
   4c77c:	4027883a 	mov	r19,r8
   4c780:	1039883a 	mov	fp,r2
   4c784:	282b883a 	mov	r21,r5
   4c788:	da800415 	stw	r10,16(sp)
   4c78c:	3800401e 	bne	r7,zero,4c890 <__udivdi3+0x150>
   4c790:	2a006536 	bltu	r5,r8,4c928 <__udivdi3+0x1e8>
   4c794:	4000b526 	beq	r8,zero,4ca6c <__udivdi3+0x32c>
   4c798:	00bfffd4 	movui	r2,65535
   4c79c:	14c0ad36 	bltu	r2,r19,4ca54 <__udivdi3+0x314>
   4c7a0:	00803fc4 	movi	r2,255
   4c7a4:	14c15e36 	bltu	r2,r19,4cd20 <__udivdi3+0x5e0>
   4c7a8:	000b883a 	mov	r5,zero
   4c7ac:	0005883a 	mov	r2,zero
   4c7b0:	9884d83a 	srl	r2,r19,r2
   4c7b4:	01000174 	movhi	r4,5
   4c7b8:	2108d304 	addi	r4,r4,9036
   4c7bc:	01800804 	movi	r6,32
   4c7c0:	1105883a 	add	r2,r2,r4
   4c7c4:	10c00003 	ldbu	r3,0(r2)
   4c7c8:	28c7883a 	add	r3,r5,r3
   4c7cc:	30e9c83a 	sub	r20,r6,r3
   4c7d0:	a0010a1e 	bne	r20,zero,4cbfc <__udivdi3+0x4bc>
   4c7d4:	982ed43a 	srli	r23,r19,16
   4c7d8:	acebc83a 	sub	r21,r21,r19
   4c7dc:	9dbfffcc 	andi	r22,r19,65535
   4c7e0:	05000044 	movi	r20,1
   4c7e4:	a809883a 	mov	r4,r21
   4c7e8:	b80b883a 	mov	r5,r23
   4c7ec:	004e8d80 	call	4e8d8 <__udivsi3>
   4c7f0:	100b883a 	mov	r5,r2
   4c7f4:	b009883a 	mov	r4,r22
   4c7f8:	1021883a 	mov	r16,r2
   4c7fc:	004e8e80 	call	4e8e8 <__mulsi3>
   4c800:	a809883a 	mov	r4,r21
   4c804:	b80b883a 	mov	r5,r23
   4c808:	1023883a 	mov	r17,r2
   4c80c:	004e8e00 	call	4e8e0 <__umodsi3>
   4c810:	1004943a 	slli	r2,r2,16
   4c814:	e006d43a 	srli	r3,fp,16
   4c818:	10c4b03a 	or	r2,r2,r3
   4c81c:	1440042e 	bgeu	r2,r17,4c830 <__udivdi3+0xf0>
   4c820:	14c5883a 	add	r2,r2,r19
   4c824:	843fffc4 	addi	r16,r16,-1
   4c828:	14c00136 	bltu	r2,r19,4c830 <__udivdi3+0xf0>
   4c82c:	14415c36 	bltu	r2,r17,4cda0 <__udivdi3+0x660>
   4c830:	1463c83a 	sub	r17,r2,r17
   4c834:	8809883a 	mov	r4,r17
   4c838:	b80b883a 	mov	r5,r23
   4c83c:	004e8d80 	call	4e8d8 <__udivsi3>
   4c840:	100b883a 	mov	r5,r2
   4c844:	b009883a 	mov	r4,r22
   4c848:	102b883a 	mov	r21,r2
   4c84c:	004e8e80 	call	4e8e8 <__mulsi3>
   4c850:	8809883a 	mov	r4,r17
   4c854:	b80b883a 	mov	r5,r23
   4c858:	1025883a 	mov	r18,r2
   4c85c:	004e8e00 	call	4e8e0 <__umodsi3>
   4c860:	1004943a 	slli	r2,r2,16
   4c864:	e0ffffcc 	andi	r3,fp,65535
   4c868:	10c4b03a 	or	r2,r2,r3
   4c86c:	1480042e 	bgeu	r2,r18,4c880 <__udivdi3+0x140>
   4c870:	9885883a 	add	r2,r19,r2
   4c874:	ad7fffc4 	addi	r21,r21,-1
   4c878:	14c00136 	bltu	r2,r19,4c880 <__udivdi3+0x140>
   4c87c:	14813c36 	bltu	r2,r18,4cd70 <__udivdi3+0x630>
   4c880:	8004943a 	slli	r2,r16,16
   4c884:	a009883a 	mov	r4,r20
   4c888:	a884b03a 	or	r2,r21,r2
   4c88c:	00001506 	br	4c8e4 <__udivdi3+0x1a4>
   4c890:	380d883a 	mov	r6,r7
   4c894:	29c06c36 	bltu	r5,r7,4ca48 <__udivdi3+0x308>
   4c898:	00bfffd4 	movui	r2,65535
   4c89c:	11c06436 	bltu	r2,r7,4ca30 <__udivdi3+0x2f0>
   4c8a0:	00803fc4 	movi	r2,255
   4c8a4:	11c11836 	bltu	r2,r7,4cd08 <__udivdi3+0x5c8>
   4c8a8:	000b883a 	mov	r5,zero
   4c8ac:	0005883a 	mov	r2,zero
   4c8b0:	3084d83a 	srl	r2,r6,r2
   4c8b4:	01000174 	movhi	r4,5
   4c8b8:	2108d304 	addi	r4,r4,9036
   4c8bc:	01c00804 	movi	r7,32
   4c8c0:	1105883a 	add	r2,r2,r4
   4c8c4:	10c00003 	ldbu	r3,0(r2)
   4c8c8:	28c7883a 	add	r3,r5,r3
   4c8cc:	38edc83a 	sub	r22,r7,r3
   4c8d0:	b000731e 	bne	r22,zero,4caa0 <__udivdi3+0x360>
   4c8d4:	35400136 	bltu	r6,r21,4c8dc <__udivdi3+0x19c>
   4c8d8:	e4c05b36 	bltu	fp,r19,4ca48 <__udivdi3+0x308>
   4c8dc:	00800044 	movi	r2,1
   4c8e0:	0009883a 	mov	r4,zero
   4c8e4:	d8800315 	stw	r2,12(sp)
   4c8e8:	d9400317 	ldw	r5,12(sp)
   4c8ec:	2007883a 	mov	r3,r4
   4c8f0:	d9000415 	stw	r4,16(sp)
   4c8f4:	2805883a 	mov	r2,r5
   4c8f8:	dfc00e17 	ldw	ra,56(sp)
   4c8fc:	df000d17 	ldw	fp,52(sp)
   4c900:	ddc00c17 	ldw	r23,48(sp)
   4c904:	dd800b17 	ldw	r22,44(sp)
   4c908:	dd400a17 	ldw	r21,40(sp)
   4c90c:	dd000917 	ldw	r20,36(sp)
   4c910:	dcc00817 	ldw	r19,32(sp)
   4c914:	dc800717 	ldw	r18,28(sp)
   4c918:	dc400617 	ldw	r17,24(sp)
   4c91c:	dc000517 	ldw	r16,20(sp)
   4c920:	dec00f04 	addi	sp,sp,60
   4c924:	f800283a 	ret
   4c928:	00bfffd4 	movui	r2,65535
   4c92c:	12005636 	bltu	r2,r8,4ca88 <__udivdi3+0x348>
   4c930:	00803fc4 	movi	r2,255
   4c934:	12010036 	bltu	r2,r8,4cd38 <__udivdi3+0x5f8>
   4c938:	000b883a 	mov	r5,zero
   4c93c:	0005883a 	mov	r2,zero
   4c940:	9884d83a 	srl	r2,r19,r2
   4c944:	01000174 	movhi	r4,5
   4c948:	2108d304 	addi	r4,r4,9036
   4c94c:	01800804 	movi	r6,32
   4c950:	1105883a 	add	r2,r2,r4
   4c954:	10c00003 	ldbu	r3,0(r2)
   4c958:	28c7883a 	add	r3,r5,r3
   4c95c:	30cbc83a 	sub	r5,r6,r3
   4c960:	28000626 	beq	r5,zero,4c97c <__udivdi3+0x23c>
   4c964:	3145c83a 	sub	r2,r6,r5
   4c968:	e084d83a 	srl	r2,fp,r2
   4c96c:	a946983a 	sll	r3,r21,r5
   4c970:	e178983a 	sll	fp,fp,r5
   4c974:	9966983a 	sll	r19,r19,r5
   4c978:	18aab03a 	or	r21,r3,r2
   4c97c:	982ed43a 	srli	r23,r19,16
   4c980:	a809883a 	mov	r4,r21
   4c984:	9cbfffcc 	andi	r18,r19,65535
   4c988:	b80b883a 	mov	r5,r23
   4c98c:	004e8d80 	call	4e8d8 <__udivsi3>
   4c990:	100b883a 	mov	r5,r2
   4c994:	9009883a 	mov	r4,r18
   4c998:	1021883a 	mov	r16,r2
   4c99c:	004e8e80 	call	4e8e8 <__mulsi3>
   4c9a0:	a809883a 	mov	r4,r21
   4c9a4:	b80b883a 	mov	r5,r23
   4c9a8:	1023883a 	mov	r17,r2
   4c9ac:	004e8e00 	call	4e8e0 <__umodsi3>
   4c9b0:	1004943a 	slli	r2,r2,16
   4c9b4:	e006d43a 	srli	r3,fp,16
   4c9b8:	10c4b03a 	or	r2,r2,r3
   4c9bc:	1440042e 	bgeu	r2,r17,4c9d0 <__udivdi3+0x290>
   4c9c0:	14c5883a 	add	r2,r2,r19
   4c9c4:	843fffc4 	addi	r16,r16,-1
   4c9c8:	14c00136 	bltu	r2,r19,4c9d0 <__udivdi3+0x290>
   4c9cc:	1440ea36 	bltu	r2,r17,4cd78 <__udivdi3+0x638>
   4c9d0:	1463c83a 	sub	r17,r2,r17
   4c9d4:	8809883a 	mov	r4,r17
   4c9d8:	b80b883a 	mov	r5,r23
   4c9dc:	004e8d80 	call	4e8d8 <__udivsi3>
   4c9e0:	100b883a 	mov	r5,r2
   4c9e4:	9009883a 	mov	r4,r18
   4c9e8:	102b883a 	mov	r21,r2
   4c9ec:	004e8e80 	call	4e8e8 <__mulsi3>
   4c9f0:	8809883a 	mov	r4,r17
   4c9f4:	b80b883a 	mov	r5,r23
   4c9f8:	1025883a 	mov	r18,r2
   4c9fc:	004e8e00 	call	4e8e0 <__umodsi3>
   4ca00:	1004943a 	slli	r2,r2,16
   4ca04:	e0ffffcc 	andi	r3,fp,65535
   4ca08:	10c4b03a 	or	r2,r2,r3
   4ca0c:	1480042e 	bgeu	r2,r18,4ca20 <__udivdi3+0x2e0>
   4ca10:	9885883a 	add	r2,r19,r2
   4ca14:	ad7fffc4 	addi	r21,r21,-1
   4ca18:	14c00136 	bltu	r2,r19,4ca20 <__udivdi3+0x2e0>
   4ca1c:	1480d936 	bltu	r2,r18,4cd84 <__udivdi3+0x644>
   4ca20:	8004943a 	slli	r2,r16,16
   4ca24:	0009883a 	mov	r4,zero
   4ca28:	a884b03a 	or	r2,r21,r2
   4ca2c:	003fad06 	br	4c8e4 <__udivdi3+0x1a4>
   4ca30:	00804034 	movhi	r2,256
   4ca34:	10bfffc4 	addi	r2,r2,-1
   4ca38:	11c0b636 	bltu	r2,r7,4cd14 <__udivdi3+0x5d4>
   4ca3c:	01400404 	movi	r5,16
   4ca40:	2805883a 	mov	r2,r5
   4ca44:	003f9a06 	br	4c8b0 <__udivdi3+0x170>
   4ca48:	0005883a 	mov	r2,zero
   4ca4c:	0009883a 	mov	r4,zero
   4ca50:	003fa406 	br	4c8e4 <__udivdi3+0x1a4>
   4ca54:	00804034 	movhi	r2,256
   4ca58:	10bfffc4 	addi	r2,r2,-1
   4ca5c:	14c0b336 	bltu	r2,r19,4cd2c <__udivdi3+0x5ec>
   4ca60:	01400404 	movi	r5,16
   4ca64:	2805883a 	mov	r2,r5
   4ca68:	003f5106 	br	4c7b0 <__udivdi3+0x70>
   4ca6c:	01000044 	movi	r4,1
   4ca70:	000b883a 	mov	r5,zero
   4ca74:	004e8d80 	call	4e8d8 <__udivsi3>
   4ca78:	1027883a 	mov	r19,r2
   4ca7c:	00bfffd4 	movui	r2,65535
   4ca80:	14fff436 	bltu	r2,r19,4ca54 <__udivdi3+0x314>
   4ca84:	003f4606 	br	4c7a0 <__udivdi3+0x60>
   4ca88:	00804034 	movhi	r2,256
   4ca8c:	10bfffc4 	addi	r2,r2,-1
   4ca90:	1200ac36 	bltu	r2,r8,4cd44 <__udivdi3+0x604>
   4ca94:	01400404 	movi	r5,16
   4ca98:	2805883a 	mov	r2,r5
   4ca9c:	003fa806 	br	4c940 <__udivdi3+0x200>
   4caa0:	3d85c83a 	sub	r2,r7,r22
   4caa4:	3588983a 	sll	r4,r6,r22
   4caa8:	9886d83a 	srl	r3,r19,r2
   4caac:	a8a2d83a 	srl	r17,r21,r2
   4cab0:	e084d83a 	srl	r2,fp,r2
   4cab4:	20eeb03a 	or	r23,r4,r3
   4cab8:	b824d43a 	srli	r18,r23,16
   4cabc:	ad86983a 	sll	r3,r21,r22
   4cac0:	8809883a 	mov	r4,r17
   4cac4:	900b883a 	mov	r5,r18
   4cac8:	1886b03a 	or	r3,r3,r2
   4cacc:	d8c00115 	stw	r3,4(sp)
   4cad0:	bc3fffcc 	andi	r16,r23,65535
   4cad4:	004e8d80 	call	4e8d8 <__udivsi3>
   4cad8:	100b883a 	mov	r5,r2
   4cadc:	8009883a 	mov	r4,r16
   4cae0:	1029883a 	mov	r20,r2
   4cae4:	004e8e80 	call	4e8e8 <__mulsi3>
   4cae8:	900b883a 	mov	r5,r18
   4caec:	8809883a 	mov	r4,r17
   4caf0:	102b883a 	mov	r21,r2
   4caf4:	004e8e00 	call	4e8e0 <__umodsi3>
   4caf8:	d9400117 	ldw	r5,4(sp)
   4cafc:	1004943a 	slli	r2,r2,16
   4cb00:	9da6983a 	sll	r19,r19,r22
   4cb04:	2806d43a 	srli	r3,r5,16
   4cb08:	10c4b03a 	or	r2,r2,r3
   4cb0c:	1540032e 	bgeu	r2,r21,4cb1c <__udivdi3+0x3dc>
   4cb10:	15c5883a 	add	r2,r2,r23
   4cb14:	a53fffc4 	addi	r20,r20,-1
   4cb18:	15c0912e 	bgeu	r2,r23,4cd60 <__udivdi3+0x620>
   4cb1c:	1563c83a 	sub	r17,r2,r21
   4cb20:	8809883a 	mov	r4,r17
   4cb24:	900b883a 	mov	r5,r18
   4cb28:	004e8d80 	call	4e8d8 <__udivsi3>
   4cb2c:	100b883a 	mov	r5,r2
   4cb30:	8009883a 	mov	r4,r16
   4cb34:	102b883a 	mov	r21,r2
   4cb38:	004e8e80 	call	4e8e8 <__mulsi3>
   4cb3c:	8809883a 	mov	r4,r17
   4cb40:	900b883a 	mov	r5,r18
   4cb44:	1021883a 	mov	r16,r2
   4cb48:	004e8e00 	call	4e8e0 <__umodsi3>
   4cb4c:	da800117 	ldw	r10,4(sp)
   4cb50:	1004943a 	slli	r2,r2,16
   4cb54:	50ffffcc 	andi	r3,r10,65535
   4cb58:	10c6b03a 	or	r3,r2,r3
   4cb5c:	1c00032e 	bgeu	r3,r16,4cb6c <__udivdi3+0x42c>
   4cb60:	1dc7883a 	add	r3,r3,r23
   4cb64:	ad7fffc4 	addi	r21,r21,-1
   4cb68:	1dc0792e 	bgeu	r3,r23,4cd50 <__udivdi3+0x610>
   4cb6c:	a004943a 	slli	r2,r20,16
   4cb70:	982ed43a 	srli	r23,r19,16
   4cb74:	9cffffcc 	andi	r19,r19,65535
   4cb78:	a8a4b03a 	or	r18,r21,r2
   4cb7c:	947fffcc 	andi	r17,r18,65535
   4cb80:	902ad43a 	srli	r21,r18,16
   4cb84:	8809883a 	mov	r4,r17
   4cb88:	980b883a 	mov	r5,r19
   4cb8c:	1c21c83a 	sub	r16,r3,r16
   4cb90:	004e8e80 	call	4e8e8 <__mulsi3>
   4cb94:	8809883a 	mov	r4,r17
   4cb98:	b80b883a 	mov	r5,r23
   4cb9c:	1029883a 	mov	r20,r2
   4cba0:	004e8e80 	call	4e8e8 <__mulsi3>
   4cba4:	980b883a 	mov	r5,r19
   4cba8:	a809883a 	mov	r4,r21
   4cbac:	1023883a 	mov	r17,r2
   4cbb0:	004e8e80 	call	4e8e8 <__mulsi3>
   4cbb4:	a809883a 	mov	r4,r21
   4cbb8:	b80b883a 	mov	r5,r23
   4cbbc:	1027883a 	mov	r19,r2
   4cbc0:	004e8e80 	call	4e8e8 <__mulsi3>
   4cbc4:	1009883a 	mov	r4,r2
   4cbc8:	a004d43a 	srli	r2,r20,16
   4cbcc:	8ce3883a 	add	r17,r17,r19
   4cbd0:	1447883a 	add	r3,r2,r17
   4cbd4:	1cc0022e 	bgeu	r3,r19,4cbe0 <__udivdi3+0x4a0>
   4cbd8:	00800074 	movhi	r2,1
   4cbdc:	2089883a 	add	r4,r4,r2
   4cbe0:	1804d43a 	srli	r2,r3,16
   4cbe4:	2085883a 	add	r2,r4,r2
   4cbe8:	80804436 	bltu	r16,r2,4ccfc <__udivdi3+0x5bc>
   4cbec:	80803e26 	beq	r16,r2,4cce8 <__udivdi3+0x5a8>
   4cbf0:	9005883a 	mov	r2,r18
   4cbf4:	0009883a 	mov	r4,zero
   4cbf8:	003f3a06 	br	4c8e4 <__udivdi3+0x1a4>
   4cbfc:	9d26983a 	sll	r19,r19,r20
   4cc00:	3505c83a 	sub	r2,r6,r20
   4cc04:	a8a2d83a 	srl	r17,r21,r2
   4cc08:	982ed43a 	srli	r23,r19,16
   4cc0c:	e084d83a 	srl	r2,fp,r2
   4cc10:	ad06983a 	sll	r3,r21,r20
   4cc14:	8809883a 	mov	r4,r17
   4cc18:	b80b883a 	mov	r5,r23
   4cc1c:	1886b03a 	or	r3,r3,r2
   4cc20:	d8c00015 	stw	r3,0(sp)
   4cc24:	9dbfffcc 	andi	r22,r19,65535
   4cc28:	004e8d80 	call	4e8d8 <__udivsi3>
   4cc2c:	100b883a 	mov	r5,r2
   4cc30:	b009883a 	mov	r4,r22
   4cc34:	d8800215 	stw	r2,8(sp)
   4cc38:	004e8e80 	call	4e8e8 <__mulsi3>
   4cc3c:	8809883a 	mov	r4,r17
   4cc40:	b80b883a 	mov	r5,r23
   4cc44:	102b883a 	mov	r21,r2
   4cc48:	004e8e00 	call	4e8e0 <__umodsi3>
   4cc4c:	d9000017 	ldw	r4,0(sp)
   4cc50:	1004943a 	slli	r2,r2,16
   4cc54:	2006d43a 	srli	r3,r4,16
   4cc58:	10c4b03a 	or	r2,r2,r3
   4cc5c:	1540052e 	bgeu	r2,r21,4cc74 <__udivdi3+0x534>
   4cc60:	d9400217 	ldw	r5,8(sp)
   4cc64:	14c5883a 	add	r2,r2,r19
   4cc68:	297fffc4 	addi	r5,r5,-1
   4cc6c:	d9400215 	stw	r5,8(sp)
   4cc70:	14c0462e 	bgeu	r2,r19,4cd8c <__udivdi3+0x64c>
   4cc74:	1563c83a 	sub	r17,r2,r21
   4cc78:	8809883a 	mov	r4,r17
   4cc7c:	b80b883a 	mov	r5,r23
   4cc80:	004e8d80 	call	4e8d8 <__udivsi3>
   4cc84:	100b883a 	mov	r5,r2
   4cc88:	b009883a 	mov	r4,r22
   4cc8c:	1025883a 	mov	r18,r2
   4cc90:	004e8e80 	call	4e8e8 <__mulsi3>
   4cc94:	8809883a 	mov	r4,r17
   4cc98:	b80b883a 	mov	r5,r23
   4cc9c:	1021883a 	mov	r16,r2
   4cca0:	004e8e00 	call	4e8e0 <__umodsi3>
   4cca4:	da800017 	ldw	r10,0(sp)
   4cca8:	1004943a 	slli	r2,r2,16
   4ccac:	50ffffcc 	andi	r3,r10,65535
   4ccb0:	10c6b03a 	or	r3,r2,r3
   4ccb4:	1c00062e 	bgeu	r3,r16,4ccd0 <__udivdi3+0x590>
   4ccb8:	1cc7883a 	add	r3,r3,r19
   4ccbc:	94bfffc4 	addi	r18,r18,-1
   4ccc0:	1cc00336 	bltu	r3,r19,4ccd0 <__udivdi3+0x590>
   4ccc4:	1c00022e 	bgeu	r3,r16,4ccd0 <__udivdi3+0x590>
   4ccc8:	94bfffc4 	addi	r18,r18,-1
   4cccc:	1cc7883a 	add	r3,r3,r19
   4ccd0:	d9000217 	ldw	r4,8(sp)
   4ccd4:	e538983a 	sll	fp,fp,r20
   4ccd8:	1c2bc83a 	sub	r21,r3,r16
   4ccdc:	2004943a 	slli	r2,r4,16
   4cce0:	90a8b03a 	or	r20,r18,r2
   4cce4:	003ebf06 	br	4c7e4 <__udivdi3+0xa4>
   4cce8:	1804943a 	slli	r2,r3,16
   4ccec:	e588983a 	sll	r4,fp,r22
   4ccf0:	a0ffffcc 	andi	r3,r20,65535
   4ccf4:	10c5883a 	add	r2,r2,r3
   4ccf8:	20bfbd2e 	bgeu	r4,r2,4cbf0 <__udivdi3+0x4b0>
   4ccfc:	90bfffc4 	addi	r2,r18,-1
   4cd00:	0009883a 	mov	r4,zero
   4cd04:	003ef706 	br	4c8e4 <__udivdi3+0x1a4>
   4cd08:	01400204 	movi	r5,8
   4cd0c:	2805883a 	mov	r2,r5
   4cd10:	003ee706 	br	4c8b0 <__udivdi3+0x170>
   4cd14:	01400604 	movi	r5,24
   4cd18:	2805883a 	mov	r2,r5
   4cd1c:	003ee406 	br	4c8b0 <__udivdi3+0x170>
   4cd20:	01400204 	movi	r5,8
   4cd24:	2805883a 	mov	r2,r5
   4cd28:	003ea106 	br	4c7b0 <__udivdi3+0x70>
   4cd2c:	01400604 	movi	r5,24
   4cd30:	2805883a 	mov	r2,r5
   4cd34:	003e9e06 	br	4c7b0 <__udivdi3+0x70>
   4cd38:	01400204 	movi	r5,8
   4cd3c:	2805883a 	mov	r2,r5
   4cd40:	003eff06 	br	4c940 <__udivdi3+0x200>
   4cd44:	01400604 	movi	r5,24
   4cd48:	2805883a 	mov	r2,r5
   4cd4c:	003efc06 	br	4c940 <__udivdi3+0x200>
   4cd50:	1c3f862e 	bgeu	r3,r16,4cb6c <__udivdi3+0x42c>
   4cd54:	1dc7883a 	add	r3,r3,r23
   4cd58:	ad7fffc4 	addi	r21,r21,-1
   4cd5c:	003f8306 	br	4cb6c <__udivdi3+0x42c>
   4cd60:	157f6e2e 	bgeu	r2,r21,4cb1c <__udivdi3+0x3dc>
   4cd64:	a53fffc4 	addi	r20,r20,-1
   4cd68:	15c5883a 	add	r2,r2,r23
   4cd6c:	003f6b06 	br	4cb1c <__udivdi3+0x3dc>
   4cd70:	ad7fffc4 	addi	r21,r21,-1
   4cd74:	003ec206 	br	4c880 <__udivdi3+0x140>
   4cd78:	843fffc4 	addi	r16,r16,-1
   4cd7c:	14c5883a 	add	r2,r2,r19
   4cd80:	003f1306 	br	4c9d0 <__udivdi3+0x290>
   4cd84:	ad7fffc4 	addi	r21,r21,-1
   4cd88:	003f2506 	br	4ca20 <__udivdi3+0x2e0>
   4cd8c:	157fb92e 	bgeu	r2,r21,4cc74 <__udivdi3+0x534>
   4cd90:	297fffc4 	addi	r5,r5,-1
   4cd94:	14c5883a 	add	r2,r2,r19
   4cd98:	d9400215 	stw	r5,8(sp)
   4cd9c:	003fb506 	br	4cc74 <__udivdi3+0x534>
   4cda0:	843fffc4 	addi	r16,r16,-1
   4cda4:	14c5883a 	add	r2,r2,r19
   4cda8:	003ea106 	br	4c830 <__udivdi3+0xf0>

0004cdac <__umoddi3>:
   4cdac:	defff004 	addi	sp,sp,-64
   4cdb0:	3011883a 	mov	r8,r6
   4cdb4:	000d883a 	mov	r6,zero
   4cdb8:	dd400b15 	stw	r21,44(sp)
   4cdbc:	dcc00915 	stw	r19,36(sp)
   4cdc0:	dc000615 	stw	r16,24(sp)
   4cdc4:	dfc00f15 	stw	ra,60(sp)
   4cdc8:	df000e15 	stw	fp,56(sp)
   4cdcc:	ddc00d15 	stw	r23,52(sp)
   4cdd0:	dd800c15 	stw	r22,48(sp)
   4cdd4:	dd000a15 	stw	r20,40(sp)
   4cdd8:	dc800815 	stw	r18,32(sp)
   4cddc:	dc400715 	stw	r17,28(sp)
   4cde0:	2817883a 	mov	r11,r5
   4cde4:	d9800415 	stw	r6,16(sp)
   4cde8:	4027883a 	mov	r19,r8
   4cdec:	d9800515 	stw	r6,20(sp)
   4cdf0:	2021883a 	mov	r16,r4
   4cdf4:	282b883a 	mov	r21,r5
   4cdf8:	38002c1e 	bne	r7,zero,4ceac <__umoddi3+0x100>
   4cdfc:	2a005636 	bltu	r5,r8,4cf58 <__umoddi3+0x1ac>
   4ce00:	40009a26 	beq	r8,zero,4d06c <__umoddi3+0x2c0>
   4ce04:	00bfffd4 	movui	r2,65535
   4ce08:	14c09236 	bltu	r2,r19,4d054 <__umoddi3+0x2a8>
   4ce0c:	00803fc4 	movi	r2,255
   4ce10:	14c15c36 	bltu	r2,r19,4d384 <__umoddi3+0x5d8>
   4ce14:	000b883a 	mov	r5,zero
   4ce18:	0005883a 	mov	r2,zero
   4ce1c:	9884d83a 	srl	r2,r19,r2
   4ce20:	01000174 	movhi	r4,5
   4ce24:	2108d304 	addi	r4,r4,9036
   4ce28:	01800804 	movi	r6,32
   4ce2c:	1105883a 	add	r2,r2,r4
   4ce30:	10c00003 	ldbu	r3,0(r2)
   4ce34:	28c7883a 	add	r3,r5,r3
   4ce38:	30e5c83a 	sub	r18,r6,r3
   4ce3c:	9000a41e 	bne	r18,zero,4d0d0 <__umoddi3+0x324>
   4ce40:	982ed43a 	srli	r23,r19,16
   4ce44:	acebc83a 	sub	r21,r21,r19
   4ce48:	9d3fffcc 	andi	r20,r19,65535
   4ce4c:	002d883a 	mov	r22,zero
   4ce50:	a809883a 	mov	r4,r21
   4ce54:	b80b883a 	mov	r5,r23
   4ce58:	004e8d80 	call	4e8d8 <__udivsi3>
   4ce5c:	100b883a 	mov	r5,r2
   4ce60:	a009883a 	mov	r4,r20
   4ce64:	004e8e80 	call	4e8e8 <__mulsi3>
   4ce68:	a809883a 	mov	r4,r21
   4ce6c:	b80b883a 	mov	r5,r23
   4ce70:	1023883a 	mov	r17,r2
   4ce74:	004e8e00 	call	4e8e0 <__umodsi3>
   4ce78:	1004943a 	slli	r2,r2,16
   4ce7c:	8006d43a 	srli	r3,r16,16
   4ce80:	10c4b03a 	or	r2,r2,r3
   4ce84:	1440032e 	bgeu	r2,r17,4ce94 <__umoddi3+0xe8>
   4ce88:	14c5883a 	add	r2,r2,r19
   4ce8c:	14c00136 	bltu	r2,r19,4ce94 <__umoddi3+0xe8>
   4ce90:	14415836 	bltu	r2,r17,4d3f4 <__umoddi3+0x648>
   4ce94:	1463c83a 	sub	r17,r2,r17
   4ce98:	8809883a 	mov	r4,r17
   4ce9c:	b80b883a 	mov	r5,r23
   4cea0:	004e8d80 	call	4e8d8 <__udivsi3>
   4cea4:	a009883a 	mov	r4,r20
   4cea8:	00005306 	br	4cff8 <__umoddi3+0x24c>
   4ceac:	380d883a 	mov	r6,r7
   4ceb0:	29c0132e 	bgeu	r5,r7,4cf00 <__umoddi3+0x154>
   4ceb4:	d9000415 	stw	r4,16(sp)
   4ceb8:	d9400515 	stw	r5,20(sp)
   4cebc:	d9400417 	ldw	r5,16(sp)
   4cec0:	5813883a 	mov	r9,r11
   4cec4:	2811883a 	mov	r8,r5
   4cec8:	4005883a 	mov	r2,r8
   4cecc:	4807883a 	mov	r3,r9
   4ced0:	dfc00f17 	ldw	ra,60(sp)
   4ced4:	df000e17 	ldw	fp,56(sp)
   4ced8:	ddc00d17 	ldw	r23,52(sp)
   4cedc:	dd800c17 	ldw	r22,48(sp)
   4cee0:	dd400b17 	ldw	r21,44(sp)
   4cee4:	dd000a17 	ldw	r20,40(sp)
   4cee8:	dcc00917 	ldw	r19,36(sp)
   4ceec:	dc800817 	ldw	r18,32(sp)
   4cef0:	dc400717 	ldw	r17,28(sp)
   4cef4:	dc000617 	ldw	r16,24(sp)
   4cef8:	dec01004 	addi	sp,sp,64
   4cefc:	f800283a 	ret
   4cf00:	00bfffd4 	movui	r2,65535
   4cf04:	11c06636 	bltu	r2,r7,4d0a0 <__umoddi3+0x2f4>
   4cf08:	00803fc4 	movi	r2,255
   4cf0c:	11c12036 	bltu	r2,r7,4d390 <__umoddi3+0x5e4>
   4cf10:	000b883a 	mov	r5,zero
   4cf14:	0005883a 	mov	r2,zero
   4cf18:	3084d83a 	srl	r2,r6,r2
   4cf1c:	01000174 	movhi	r4,5
   4cf20:	2108d304 	addi	r4,r4,9036
   4cf24:	01c00804 	movi	r7,32
   4cf28:	1105883a 	add	r2,r2,r4
   4cf2c:	10c00003 	ldbu	r3,0(r2)
   4cf30:	28c7883a 	add	r3,r5,r3
   4cf34:	38e5c83a 	sub	r18,r7,r3
   4cf38:	9000941e 	bne	r18,zero,4d18c <__umoddi3+0x3e0>
   4cf3c:	35405e36 	bltu	r6,r21,4d0b8 <__umoddi3+0x30c>
   4cf40:	84c05d2e 	bgeu	r16,r19,4d0b8 <__umoddi3+0x30c>
   4cf44:	8011883a 	mov	r8,r16
   4cf48:	a813883a 	mov	r9,r21
   4cf4c:	dc000415 	stw	r16,16(sp)
   4cf50:	dd400515 	stw	r21,20(sp)
   4cf54:	003fdc06 	br	4cec8 <__umoddi3+0x11c>
   4cf58:	00bfffd4 	movui	r2,65535
   4cf5c:	12004a36 	bltu	r2,r8,4d088 <__umoddi3+0x2dc>
   4cf60:	00803fc4 	movi	r2,255
   4cf64:	12010d36 	bltu	r2,r8,4d39c <__umoddi3+0x5f0>
   4cf68:	000b883a 	mov	r5,zero
   4cf6c:	0005883a 	mov	r2,zero
   4cf70:	9884d83a 	srl	r2,r19,r2
   4cf74:	01000174 	movhi	r4,5
   4cf78:	2108d304 	addi	r4,r4,9036
   4cf7c:	01800804 	movi	r6,32
   4cf80:	1105883a 	add	r2,r2,r4
   4cf84:	10c00003 	ldbu	r3,0(r2)
   4cf88:	28c7883a 	add	r3,r5,r3
   4cf8c:	30c7c83a 	sub	r3,r6,r3
   4cf90:	1800dc1e 	bne	r3,zero,4d304 <__umoddi3+0x558>
   4cf94:	002d883a 	mov	r22,zero
   4cf98:	982ed43a 	srli	r23,r19,16
   4cf9c:	a809883a 	mov	r4,r21
   4cfa0:	9cbfffcc 	andi	r18,r19,65535
   4cfa4:	b80b883a 	mov	r5,r23
   4cfa8:	004e8d80 	call	4e8d8 <__udivsi3>
   4cfac:	100b883a 	mov	r5,r2
   4cfb0:	9009883a 	mov	r4,r18
   4cfb4:	004e8e80 	call	4e8e8 <__mulsi3>
   4cfb8:	a809883a 	mov	r4,r21
   4cfbc:	b80b883a 	mov	r5,r23
   4cfc0:	1023883a 	mov	r17,r2
   4cfc4:	004e8e00 	call	4e8e0 <__umodsi3>
   4cfc8:	1004943a 	slli	r2,r2,16
   4cfcc:	8006d43a 	srli	r3,r16,16
   4cfd0:	10c4b03a 	or	r2,r2,r3
   4cfd4:	1440032e 	bgeu	r2,r17,4cfe4 <__umoddi3+0x238>
   4cfd8:	14c5883a 	add	r2,r2,r19
   4cfdc:	14c00136 	bltu	r2,r19,4cfe4 <__umoddi3+0x238>
   4cfe0:	14410236 	bltu	r2,r17,4d3ec <__umoddi3+0x640>
   4cfe4:	1463c83a 	sub	r17,r2,r17
   4cfe8:	8809883a 	mov	r4,r17
   4cfec:	b80b883a 	mov	r5,r23
   4cff0:	004e8d80 	call	4e8d8 <__udivsi3>
   4cff4:	9009883a 	mov	r4,r18
   4cff8:	100b883a 	mov	r5,r2
   4cffc:	004e8e80 	call	4e8e8 <__mulsi3>
   4d000:	8809883a 	mov	r4,r17
   4d004:	b80b883a 	mov	r5,r23
   4d008:	102b883a 	mov	r21,r2
   4d00c:	004e8e00 	call	4e8e0 <__umodsi3>
   4d010:	1004943a 	slli	r2,r2,16
   4d014:	80ffffcc 	andi	r3,r16,65535
   4d018:	10c4b03a 	or	r2,r2,r3
   4d01c:	1540042e 	bgeu	r2,r21,4d030 <__umoddi3+0x284>
   4d020:	14c5883a 	add	r2,r2,r19
   4d024:	14c00236 	bltu	r2,r19,4d030 <__umoddi3+0x284>
   4d028:	1540012e 	bgeu	r2,r21,4d030 <__umoddi3+0x284>
   4d02c:	14c5883a 	add	r2,r2,r19
   4d030:	1545c83a 	sub	r2,r2,r21
   4d034:	1584d83a 	srl	r2,r2,r22
   4d038:	0013883a 	mov	r9,zero
   4d03c:	d8800415 	stw	r2,16(sp)
   4d040:	d8c00417 	ldw	r3,16(sp)
   4d044:	0005883a 	mov	r2,zero
   4d048:	d8800515 	stw	r2,20(sp)
   4d04c:	1811883a 	mov	r8,r3
   4d050:	003f9d06 	br	4cec8 <__umoddi3+0x11c>
   4d054:	00804034 	movhi	r2,256
   4d058:	10bfffc4 	addi	r2,r2,-1
   4d05c:	14c0c636 	bltu	r2,r19,4d378 <__umoddi3+0x5cc>
   4d060:	01400404 	movi	r5,16
   4d064:	2805883a 	mov	r2,r5
   4d068:	003f6c06 	br	4ce1c <__umoddi3+0x70>
   4d06c:	01000044 	movi	r4,1
   4d070:	000b883a 	mov	r5,zero
   4d074:	004e8d80 	call	4e8d8 <__udivsi3>
   4d078:	1027883a 	mov	r19,r2
   4d07c:	00bfffd4 	movui	r2,65535
   4d080:	14fff436 	bltu	r2,r19,4d054 <__umoddi3+0x2a8>
   4d084:	003f6106 	br	4ce0c <__umoddi3+0x60>
   4d088:	00804034 	movhi	r2,256
   4d08c:	10bfffc4 	addi	r2,r2,-1
   4d090:	1200c536 	bltu	r2,r8,4d3a8 <__umoddi3+0x5fc>
   4d094:	01400404 	movi	r5,16
   4d098:	2805883a 	mov	r2,r5
   4d09c:	003fb406 	br	4cf70 <__umoddi3+0x1c4>
   4d0a0:	00804034 	movhi	r2,256
   4d0a4:	10bfffc4 	addi	r2,r2,-1
   4d0a8:	11c0c236 	bltu	r2,r7,4d3b4 <__umoddi3+0x608>
   4d0ac:	01400404 	movi	r5,16
   4d0b0:	2805883a 	mov	r2,r5
   4d0b4:	003f9806 	br	4cf18 <__umoddi3+0x16c>
   4d0b8:	84c9c83a 	sub	r4,r16,r19
   4d0bc:	8105803a 	cmpltu	r2,r16,r4
   4d0c0:	a987c83a 	sub	r3,r21,r6
   4d0c4:	18abc83a 	sub	r21,r3,r2
   4d0c8:	2021883a 	mov	r16,r4
   4d0cc:	003f9d06 	br	4cf44 <__umoddi3+0x198>
   4d0d0:	9ca6983a 	sll	r19,r19,r18
   4d0d4:	3485c83a 	sub	r2,r6,r18
   4d0d8:	a8a2d83a 	srl	r17,r21,r2
   4d0dc:	982ed43a 	srli	r23,r19,16
   4d0e0:	ac86983a 	sll	r3,r21,r18
   4d0e4:	8084d83a 	srl	r2,r16,r2
   4d0e8:	8809883a 	mov	r4,r17
   4d0ec:	b80b883a 	mov	r5,r23
   4d0f0:	18b8b03a 	or	fp,r3,r2
   4d0f4:	9d3fffcc 	andi	r20,r19,65535
   4d0f8:	004e8d80 	call	4e8d8 <__udivsi3>
   4d0fc:	100b883a 	mov	r5,r2
   4d100:	a009883a 	mov	r4,r20
   4d104:	004e8e80 	call	4e8e8 <__mulsi3>
   4d108:	8809883a 	mov	r4,r17
   4d10c:	b80b883a 	mov	r5,r23
   4d110:	102b883a 	mov	r21,r2
   4d114:	004e8e00 	call	4e8e0 <__umodsi3>
   4d118:	1004943a 	slli	r2,r2,16
   4d11c:	e006d43a 	srli	r3,fp,16
   4d120:	902d883a 	mov	r22,r18
   4d124:	10c4b03a 	or	r2,r2,r3
   4d128:	1540022e 	bgeu	r2,r21,4d134 <__umoddi3+0x388>
   4d12c:	14c5883a 	add	r2,r2,r19
   4d130:	14c0ab2e 	bgeu	r2,r19,4d3e0 <__umoddi3+0x634>
   4d134:	1563c83a 	sub	r17,r2,r21
   4d138:	8809883a 	mov	r4,r17
   4d13c:	b80b883a 	mov	r5,r23
   4d140:	004e8d80 	call	4e8d8 <__udivsi3>
   4d144:	100b883a 	mov	r5,r2
   4d148:	a009883a 	mov	r4,r20
   4d14c:	004e8e80 	call	4e8e8 <__mulsi3>
   4d150:	8809883a 	mov	r4,r17
   4d154:	b80b883a 	mov	r5,r23
   4d158:	102b883a 	mov	r21,r2
   4d15c:	004e8e00 	call	4e8e0 <__umodsi3>
   4d160:	1004943a 	slli	r2,r2,16
   4d164:	e0ffffcc 	andi	r3,fp,65535
   4d168:	10c4b03a 	or	r2,r2,r3
   4d16c:	1540042e 	bgeu	r2,r21,4d180 <__umoddi3+0x3d4>
   4d170:	14c5883a 	add	r2,r2,r19
   4d174:	14c00236 	bltu	r2,r19,4d180 <__umoddi3+0x3d4>
   4d178:	1540012e 	bgeu	r2,r21,4d180 <__umoddi3+0x3d4>
   4d17c:	14c5883a 	add	r2,r2,r19
   4d180:	84a0983a 	sll	r16,r16,r18
   4d184:	156bc83a 	sub	r21,r2,r21
   4d188:	003f3106 	br	4ce50 <__umoddi3+0xa4>
   4d18c:	3c8fc83a 	sub	r7,r7,r18
   4d190:	3486983a 	sll	r3,r6,r18
   4d194:	99c4d83a 	srl	r2,r19,r7
   4d198:	a9e2d83a 	srl	r17,r21,r7
   4d19c:	ac8c983a 	sll	r6,r21,r18
   4d1a0:	18acb03a 	or	r22,r3,r2
   4d1a4:	b02ed43a 	srli	r23,r22,16
   4d1a8:	81c4d83a 	srl	r2,r16,r7
   4d1ac:	8809883a 	mov	r4,r17
   4d1b0:	b80b883a 	mov	r5,r23
   4d1b4:	308cb03a 	or	r6,r6,r2
   4d1b8:	d9c00315 	stw	r7,12(sp)
   4d1bc:	d9800215 	stw	r6,8(sp)
   4d1c0:	b53fffcc 	andi	r20,r22,65535
   4d1c4:	004e8d80 	call	4e8d8 <__udivsi3>
   4d1c8:	100b883a 	mov	r5,r2
   4d1cc:	a009883a 	mov	r4,r20
   4d1d0:	1039883a 	mov	fp,r2
   4d1d4:	004e8e80 	call	4e8e8 <__mulsi3>
   4d1d8:	8809883a 	mov	r4,r17
   4d1dc:	b80b883a 	mov	r5,r23
   4d1e0:	102b883a 	mov	r21,r2
   4d1e4:	004e8e00 	call	4e8e0 <__umodsi3>
   4d1e8:	d9000217 	ldw	r4,8(sp)
   4d1ec:	1004943a 	slli	r2,r2,16
   4d1f0:	9ca6983a 	sll	r19,r19,r18
   4d1f4:	2006d43a 	srli	r3,r4,16
   4d1f8:	84a0983a 	sll	r16,r16,r18
   4d1fc:	dcc00015 	stw	r19,0(sp)
   4d200:	10c4b03a 	or	r2,r2,r3
   4d204:	dc000115 	stw	r16,4(sp)
   4d208:	1540032e 	bgeu	r2,r21,4d218 <__umoddi3+0x46c>
   4d20c:	1585883a 	add	r2,r2,r22
   4d210:	e73fffc4 	addi	fp,fp,-1
   4d214:	15806e2e 	bgeu	r2,r22,4d3d0 <__umoddi3+0x624>
   4d218:	1563c83a 	sub	r17,r2,r21
   4d21c:	8809883a 	mov	r4,r17
   4d220:	b80b883a 	mov	r5,r23
   4d224:	004e8d80 	call	4e8d8 <__udivsi3>
   4d228:	100b883a 	mov	r5,r2
   4d22c:	a009883a 	mov	r4,r20
   4d230:	1021883a 	mov	r16,r2
   4d234:	004e8e80 	call	4e8e8 <__mulsi3>
   4d238:	b80b883a 	mov	r5,r23
   4d23c:	8809883a 	mov	r4,r17
   4d240:	1029883a 	mov	r20,r2
   4d244:	004e8e00 	call	4e8e0 <__umodsi3>
   4d248:	d9400217 	ldw	r5,8(sp)
   4d24c:	1004943a 	slli	r2,r2,16
   4d250:	28ffffcc 	andi	r3,r5,65535
   4d254:	10c4b03a 	or	r2,r2,r3
   4d258:	1500032e 	bgeu	r2,r20,4d268 <__umoddi3+0x4bc>
   4d25c:	1585883a 	add	r2,r2,r22
   4d260:	843fffc4 	addi	r16,r16,-1
   4d264:	1580562e 	bgeu	r2,r22,4d3c0 <__umoddi3+0x614>
   4d268:	d9800017 	ldw	r6,0(sp)
   4d26c:	e022943a 	slli	r17,fp,16
   4d270:	302ed43a 	srli	r23,r6,16
   4d274:	8462b03a 	or	r17,r16,r17
   4d278:	34ffffcc 	andi	r19,r6,65535
   4d27c:	882ad43a 	srli	r21,r17,16
   4d280:	8c7fffcc 	andi	r17,r17,65535
   4d284:	8809883a 	mov	r4,r17
   4d288:	980b883a 	mov	r5,r19
   4d28c:	1521c83a 	sub	r16,r2,r20
   4d290:	004e8e80 	call	4e8e8 <__mulsi3>
   4d294:	8809883a 	mov	r4,r17
   4d298:	b80b883a 	mov	r5,r23
   4d29c:	1029883a 	mov	r20,r2
   4d2a0:	004e8e80 	call	4e8e8 <__mulsi3>
   4d2a4:	980b883a 	mov	r5,r19
   4d2a8:	a809883a 	mov	r4,r21
   4d2ac:	1023883a 	mov	r17,r2
   4d2b0:	004e8e80 	call	4e8e8 <__mulsi3>
   4d2b4:	a809883a 	mov	r4,r21
   4d2b8:	b80b883a 	mov	r5,r23
   4d2bc:	1027883a 	mov	r19,r2
   4d2c0:	004e8e80 	call	4e8e8 <__mulsi3>
   4d2c4:	100b883a 	mov	r5,r2
   4d2c8:	a004d43a 	srli	r2,r20,16
   4d2cc:	8ce3883a 	add	r17,r17,r19
   4d2d0:	1449883a 	add	r4,r2,r17
   4d2d4:	24c0022e 	bgeu	r4,r19,4d2e0 <__umoddi3+0x534>
   4d2d8:	00800074 	movhi	r2,1
   4d2dc:	288b883a 	add	r5,r5,r2
   4d2e0:	2004d43a 	srli	r2,r4,16
   4d2e4:	2008943a 	slli	r4,r4,16
   4d2e8:	a0ffffcc 	andi	r3,r20,65535
   4d2ec:	288d883a 	add	r6,r5,r2
   4d2f0:	20c9883a 	add	r4,r4,r3
   4d2f4:	81800b36 	bltu	r16,r6,4d324 <__umoddi3+0x578>
   4d2f8:	81804026 	beq	r16,r6,4d3fc <__umoddi3+0x650>
   4d2fc:	818dc83a 	sub	r6,r16,r6
   4d300:	00000f06 	br	4d340 <__umoddi3+0x594>
   4d304:	30c5c83a 	sub	r2,r6,r3
   4d308:	182d883a 	mov	r22,r3
   4d30c:	8084d83a 	srl	r2,r16,r2
   4d310:	a8c6983a 	sll	r3,r21,r3
   4d314:	9da6983a 	sll	r19,r19,r22
   4d318:	85a0983a 	sll	r16,r16,r22
   4d31c:	18aab03a 	or	r21,r3,r2
   4d320:	003f1d06 	br	4cf98 <__umoddi3+0x1ec>
   4d324:	d8c00017 	ldw	r3,0(sp)
   4d328:	20c5c83a 	sub	r2,r4,r3
   4d32c:	2089803a 	cmpltu	r4,r4,r2
   4d330:	3587c83a 	sub	r3,r6,r22
   4d334:	1907c83a 	sub	r3,r3,r4
   4d338:	80cdc83a 	sub	r6,r16,r3
   4d33c:	1009883a 	mov	r4,r2
   4d340:	d9400117 	ldw	r5,4(sp)
   4d344:	2905c83a 	sub	r2,r5,r4
   4d348:	2887803a 	cmpltu	r3,r5,r2
   4d34c:	30c7c83a 	sub	r3,r6,r3
   4d350:	d9800317 	ldw	r6,12(sp)
   4d354:	1484d83a 	srl	r2,r2,r18
   4d358:	1988983a 	sll	r4,r3,r6
   4d35c:	1c86d83a 	srl	r3,r3,r18
   4d360:	2088b03a 	or	r4,r4,r2
   4d364:	2011883a 	mov	r8,r4
   4d368:	1813883a 	mov	r9,r3
   4d36c:	d9000415 	stw	r4,16(sp)
   4d370:	d8c00515 	stw	r3,20(sp)
   4d374:	003ed406 	br	4cec8 <__umoddi3+0x11c>
   4d378:	01400604 	movi	r5,24
   4d37c:	2805883a 	mov	r2,r5
   4d380:	003ea606 	br	4ce1c <__umoddi3+0x70>
   4d384:	01400204 	movi	r5,8
   4d388:	2805883a 	mov	r2,r5
   4d38c:	003ea306 	br	4ce1c <__umoddi3+0x70>
   4d390:	01400204 	movi	r5,8
   4d394:	2805883a 	mov	r2,r5
   4d398:	003edf06 	br	4cf18 <__umoddi3+0x16c>
   4d39c:	01400204 	movi	r5,8
   4d3a0:	2805883a 	mov	r2,r5
   4d3a4:	003ef206 	br	4cf70 <__umoddi3+0x1c4>
   4d3a8:	01400604 	movi	r5,24
   4d3ac:	2805883a 	mov	r2,r5
   4d3b0:	003eef06 	br	4cf70 <__umoddi3+0x1c4>
   4d3b4:	01400604 	movi	r5,24
   4d3b8:	2805883a 	mov	r2,r5
   4d3bc:	003ed606 	br	4cf18 <__umoddi3+0x16c>
   4d3c0:	153fa92e 	bgeu	r2,r20,4d268 <__umoddi3+0x4bc>
   4d3c4:	843fffc4 	addi	r16,r16,-1
   4d3c8:	1585883a 	add	r2,r2,r22
   4d3cc:	003fa606 	br	4d268 <__umoddi3+0x4bc>
   4d3d0:	157f912e 	bgeu	r2,r21,4d218 <__umoddi3+0x46c>
   4d3d4:	e73fffc4 	addi	fp,fp,-1
   4d3d8:	1585883a 	add	r2,r2,r22
   4d3dc:	003f8e06 	br	4d218 <__umoddi3+0x46c>
   4d3e0:	157f542e 	bgeu	r2,r21,4d134 <__umoddi3+0x388>
   4d3e4:	14c5883a 	add	r2,r2,r19
   4d3e8:	003f5206 	br	4d134 <__umoddi3+0x388>
   4d3ec:	14c5883a 	add	r2,r2,r19
   4d3f0:	003efc06 	br	4cfe4 <__umoddi3+0x238>
   4d3f4:	14c5883a 	add	r2,r2,r19
   4d3f8:	003ea606 	br	4ce94 <__umoddi3+0xe8>
   4d3fc:	d8800117 	ldw	r2,4(sp)
   4d400:	113fc836 	bltu	r2,r4,4d324 <__umoddi3+0x578>
   4d404:	000d883a 	mov	r6,zero
   4d408:	003fcd06 	br	4d340 <__umoddi3+0x594>

0004d40c <__nesf2>:
   4d40c:	defff304 	addi	sp,sp,-52
   4d410:	dc400b15 	stw	r17,44(sp)
   4d414:	dc400204 	addi	r17,sp,8
   4d418:	dc000a15 	stw	r16,40(sp)
   4d41c:	d9000015 	stw	r4,0(sp)
   4d420:	d9400115 	stw	r5,4(sp)
   4d424:	d809883a 	mov	r4,sp
   4d428:	880b883a 	mov	r5,r17
   4d42c:	dc000604 	addi	r16,sp,24
   4d430:	dfc00c15 	stw	ra,48(sp)
   4d434:	004e9a00 	call	4e9a0 <__unpack_f>
   4d438:	d9000104 	addi	r4,sp,4
   4d43c:	800b883a 	mov	r5,r16
   4d440:	004e9a00 	call	4e9a0 <__unpack_f>
   4d444:	d8800217 	ldw	r2,8(sp)
   4d448:	00c00044 	movi	r3,1
   4d44c:	180d883a 	mov	r6,r3
   4d450:	1880062e 	bgeu	r3,r2,4d46c <__nesf2+0x60>
   4d454:	d8800617 	ldw	r2,24(sp)
   4d458:	8809883a 	mov	r4,r17
   4d45c:	800b883a 	mov	r5,r16
   4d460:	1880022e 	bgeu	r3,r2,4d46c <__nesf2+0x60>
   4d464:	004ea680 	call	4ea68 <__fpcmp_parts_f>
   4d468:	100d883a 	mov	r6,r2
   4d46c:	3005883a 	mov	r2,r6
   4d470:	dfc00c17 	ldw	ra,48(sp)
   4d474:	dc400b17 	ldw	r17,44(sp)
   4d478:	dc000a17 	ldw	r16,40(sp)
   4d47c:	dec00d04 	addi	sp,sp,52
   4d480:	f800283a 	ret

0004d484 <__gtsf2>:
   4d484:	defff304 	addi	sp,sp,-52
   4d488:	dc400b15 	stw	r17,44(sp)
   4d48c:	dc400204 	addi	r17,sp,8
   4d490:	dc000a15 	stw	r16,40(sp)
   4d494:	d9000015 	stw	r4,0(sp)
   4d498:	d9400115 	stw	r5,4(sp)
   4d49c:	d809883a 	mov	r4,sp
   4d4a0:	880b883a 	mov	r5,r17
   4d4a4:	dc000604 	addi	r16,sp,24
   4d4a8:	dfc00c15 	stw	ra,48(sp)
   4d4ac:	004e9a00 	call	4e9a0 <__unpack_f>
   4d4b0:	d9000104 	addi	r4,sp,4
   4d4b4:	800b883a 	mov	r5,r16
   4d4b8:	004e9a00 	call	4e9a0 <__unpack_f>
   4d4bc:	d8800217 	ldw	r2,8(sp)
   4d4c0:	00c00044 	movi	r3,1
   4d4c4:	01bfffc4 	movi	r6,-1
   4d4c8:	1880062e 	bgeu	r3,r2,4d4e4 <__gtsf2+0x60>
   4d4cc:	d8800617 	ldw	r2,24(sp)
   4d4d0:	8809883a 	mov	r4,r17
   4d4d4:	800b883a 	mov	r5,r16
   4d4d8:	1880022e 	bgeu	r3,r2,4d4e4 <__gtsf2+0x60>
   4d4dc:	004ea680 	call	4ea68 <__fpcmp_parts_f>
   4d4e0:	100d883a 	mov	r6,r2
   4d4e4:	3005883a 	mov	r2,r6
   4d4e8:	dfc00c17 	ldw	ra,48(sp)
   4d4ec:	dc400b17 	ldw	r17,44(sp)
   4d4f0:	dc000a17 	ldw	r16,40(sp)
   4d4f4:	dec00d04 	addi	sp,sp,52
   4d4f8:	f800283a 	ret

0004d4fc <__ltsf2>:
   4d4fc:	defff304 	addi	sp,sp,-52
   4d500:	dc400b15 	stw	r17,44(sp)
   4d504:	dc400204 	addi	r17,sp,8
   4d508:	dc000a15 	stw	r16,40(sp)
   4d50c:	d9000015 	stw	r4,0(sp)
   4d510:	d9400115 	stw	r5,4(sp)
   4d514:	d809883a 	mov	r4,sp
   4d518:	880b883a 	mov	r5,r17
   4d51c:	dc000604 	addi	r16,sp,24
   4d520:	dfc00c15 	stw	ra,48(sp)
   4d524:	004e9a00 	call	4e9a0 <__unpack_f>
   4d528:	d9000104 	addi	r4,sp,4
   4d52c:	800b883a 	mov	r5,r16
   4d530:	004e9a00 	call	4e9a0 <__unpack_f>
   4d534:	d8800217 	ldw	r2,8(sp)
   4d538:	00c00044 	movi	r3,1
   4d53c:	180d883a 	mov	r6,r3
   4d540:	1880062e 	bgeu	r3,r2,4d55c <__ltsf2+0x60>
   4d544:	d8800617 	ldw	r2,24(sp)
   4d548:	8809883a 	mov	r4,r17
   4d54c:	800b883a 	mov	r5,r16
   4d550:	1880022e 	bgeu	r3,r2,4d55c <__ltsf2+0x60>
   4d554:	004ea680 	call	4ea68 <__fpcmp_parts_f>
   4d558:	100d883a 	mov	r6,r2
   4d55c:	3005883a 	mov	r2,r6
   4d560:	dfc00c17 	ldw	ra,48(sp)
   4d564:	dc400b17 	ldw	r17,44(sp)
   4d568:	dc000a17 	ldw	r16,40(sp)
   4d56c:	dec00d04 	addi	sp,sp,52
   4d570:	f800283a 	ret

0004d574 <_fpadd_parts>:
   4d574:	defff804 	addi	sp,sp,-32
   4d578:	dcc00315 	stw	r19,12(sp)
   4d57c:	2027883a 	mov	r19,r4
   4d580:	21000017 	ldw	r4,0(r4)
   4d584:	00c00044 	movi	r3,1
   4d588:	dd400515 	stw	r21,20(sp)
   4d58c:	dd000415 	stw	r20,16(sp)
   4d590:	ddc00715 	stw	r23,28(sp)
   4d594:	dd800615 	stw	r22,24(sp)
   4d598:	dc800215 	stw	r18,8(sp)
   4d59c:	dc400115 	stw	r17,4(sp)
   4d5a0:	dc000015 	stw	r16,0(sp)
   4d5a4:	282b883a 	mov	r21,r5
   4d5a8:	3029883a 	mov	r20,r6
   4d5ac:	1900632e 	bgeu	r3,r4,4d73c <_fpadd_parts+0x1c8>
   4d5b0:	28800017 	ldw	r2,0(r5)
   4d5b4:	1880812e 	bgeu	r3,r2,4d7bc <_fpadd_parts+0x248>
   4d5b8:	00c00104 	movi	r3,4
   4d5bc:	20c0dc26 	beq	r4,r3,4d930 <_fpadd_parts+0x3bc>
   4d5c0:	10c07e26 	beq	r2,r3,4d7bc <_fpadd_parts+0x248>
   4d5c4:	00c00084 	movi	r3,2
   4d5c8:	10c06726 	beq	r2,r3,4d768 <_fpadd_parts+0x1f4>
   4d5cc:	20c07b26 	beq	r4,r3,4d7bc <_fpadd_parts+0x248>
   4d5d0:	9dc00217 	ldw	r23,8(r19)
   4d5d4:	28c00217 	ldw	r3,8(r5)
   4d5d8:	9c400317 	ldw	r17,12(r19)
   4d5dc:	2bc00317 	ldw	r15,12(r5)
   4d5e0:	b8cdc83a 	sub	r6,r23,r3
   4d5e4:	9c800417 	ldw	r18,16(r19)
   4d5e8:	2c000417 	ldw	r16,16(r5)
   4d5ec:	3009883a 	mov	r4,r6
   4d5f0:	30009716 	blt	r6,zero,4d850 <_fpadd_parts+0x2dc>
   4d5f4:	00800fc4 	movi	r2,63
   4d5f8:	11806b16 	blt	r2,r6,4d7a8 <_fpadd_parts+0x234>
   4d5fc:	0100a40e 	bge	zero,r4,4d890 <_fpadd_parts+0x31c>
   4d600:	35bff804 	addi	r22,r6,-32
   4d604:	b000bc16 	blt	r22,zero,4d8f8 <_fpadd_parts+0x384>
   4d608:	8596d83a 	srl	r11,r16,r22
   4d60c:	0019883a 	mov	r12,zero
   4d610:	0013883a 	mov	r9,zero
   4d614:	01000044 	movi	r4,1
   4d618:	0015883a 	mov	r10,zero
   4d61c:	b000be16 	blt	r22,zero,4d918 <_fpadd_parts+0x3a4>
   4d620:	2590983a 	sll	r8,r4,r22
   4d624:	000f883a 	mov	r7,zero
   4d628:	00bfffc4 	movi	r2,-1
   4d62c:	3889883a 	add	r4,r7,r2
   4d630:	408b883a 	add	r5,r8,r2
   4d634:	21cd803a 	cmpltu	r6,r4,r7
   4d638:	314b883a 	add	r5,r6,r5
   4d63c:	7904703a 	and	r2,r15,r4
   4d640:	8146703a 	and	r3,r16,r5
   4d644:	10c4b03a 	or	r2,r2,r3
   4d648:	10000226 	beq	r2,zero,4d654 <_fpadd_parts+0xe0>
   4d64c:	02400044 	movi	r9,1
   4d650:	0015883a 	mov	r10,zero
   4d654:	5a5eb03a 	or	r15,r11,r9
   4d658:	62a0b03a 	or	r16,r12,r10
   4d65c:	99400117 	ldw	r5,4(r19)
   4d660:	a8800117 	ldw	r2,4(r21)
   4d664:	28806e26 	beq	r5,r2,4d820 <_fpadd_parts+0x2ac>
   4d668:	28006626 	beq	r5,zero,4d804 <_fpadd_parts+0x290>
   4d66c:	7c45c83a 	sub	r2,r15,r17
   4d670:	7889803a 	cmpltu	r4,r15,r2
   4d674:	8487c83a 	sub	r3,r16,r18
   4d678:	1909c83a 	sub	r4,r3,r4
   4d67c:	100d883a 	mov	r6,r2
   4d680:	200f883a 	mov	r7,r4
   4d684:	38007716 	blt	r7,zero,4d864 <_fpadd_parts+0x2f0>
   4d688:	a5c00215 	stw	r23,8(r20)
   4d68c:	a1c00415 	stw	r7,16(r20)
   4d690:	a0000115 	stw	zero,4(r20)
   4d694:	a1800315 	stw	r6,12(r20)
   4d698:	a2000317 	ldw	r8,12(r20)
   4d69c:	a2400417 	ldw	r9,16(r20)
   4d6a0:	00bfffc4 	movi	r2,-1
   4d6a4:	408b883a 	add	r5,r8,r2
   4d6a8:	2a09803a 	cmpltu	r4,r5,r8
   4d6ac:	488d883a 	add	r6,r9,r2
   4d6b0:	01c40034 	movhi	r7,4096
   4d6b4:	39ffffc4 	addi	r7,r7,-1
   4d6b8:	218d883a 	add	r6,r4,r6
   4d6bc:	39801736 	bltu	r7,r6,4d71c <_fpadd_parts+0x1a8>
   4d6c0:	31c06526 	beq	r6,r7,4d858 <_fpadd_parts+0x2e4>
   4d6c4:	a3000217 	ldw	r12,8(r20)
   4d6c8:	4209883a 	add	r4,r8,r8
   4d6cc:	00bfffc4 	movi	r2,-1
   4d6d0:	220f803a 	cmpltu	r7,r4,r8
   4d6d4:	4a4b883a 	add	r5,r9,r9
   4d6d8:	394f883a 	add	r7,r7,r5
   4d6dc:	2095883a 	add	r10,r4,r2
   4d6e0:	3897883a 	add	r11,r7,r2
   4d6e4:	510d803a 	cmpltu	r6,r10,r4
   4d6e8:	6099883a 	add	r12,r12,r2
   4d6ec:	32d7883a 	add	r11,r6,r11
   4d6f0:	00840034 	movhi	r2,4096
   4d6f4:	10bfffc4 	addi	r2,r2,-1
   4d6f8:	2011883a 	mov	r8,r4
   4d6fc:	3813883a 	mov	r9,r7
   4d700:	a1000315 	stw	r4,12(r20)
   4d704:	a1c00415 	stw	r7,16(r20)
   4d708:	a3000215 	stw	r12,8(r20)
   4d70c:	12c00336 	bltu	r2,r11,4d71c <_fpadd_parts+0x1a8>
   4d710:	58bfed1e 	bne	r11,r2,4d6c8 <_fpadd_parts+0x154>
   4d714:	00bfff84 	movi	r2,-2
   4d718:	12bfeb2e 	bgeu	r2,r10,4d6c8 <_fpadd_parts+0x154>
   4d71c:	a2800417 	ldw	r10,16(r20)
   4d720:	008000c4 	movi	r2,3
   4d724:	00c80034 	movhi	r3,8192
   4d728:	18ffffc4 	addi	r3,r3,-1
   4d72c:	a2400317 	ldw	r9,12(r20)
   4d730:	a0800015 	stw	r2,0(r20)
   4d734:	1a802336 	bltu	r3,r10,4d7c4 <_fpadd_parts+0x250>
   4d738:	a027883a 	mov	r19,r20
   4d73c:	9805883a 	mov	r2,r19
   4d740:	ddc00717 	ldw	r23,28(sp)
   4d744:	dd800617 	ldw	r22,24(sp)
   4d748:	dd400517 	ldw	r21,20(sp)
   4d74c:	dd000417 	ldw	r20,16(sp)
   4d750:	dcc00317 	ldw	r19,12(sp)
   4d754:	dc800217 	ldw	r18,8(sp)
   4d758:	dc400117 	ldw	r17,4(sp)
   4d75c:	dc000017 	ldw	r16,0(sp)
   4d760:	dec00804 	addi	sp,sp,32
   4d764:	f800283a 	ret
   4d768:	20fff41e 	bne	r4,r3,4d73c <_fpadd_parts+0x1c8>
   4d76c:	31000015 	stw	r4,0(r6)
   4d770:	98800117 	ldw	r2,4(r19)
   4d774:	30800115 	stw	r2,4(r6)
   4d778:	98c00217 	ldw	r3,8(r19)
   4d77c:	30c00215 	stw	r3,8(r6)
   4d780:	98800317 	ldw	r2,12(r19)
   4d784:	30800315 	stw	r2,12(r6)
   4d788:	98c00417 	ldw	r3,16(r19)
   4d78c:	30c00415 	stw	r3,16(r6)
   4d790:	98800117 	ldw	r2,4(r19)
   4d794:	28c00117 	ldw	r3,4(r5)
   4d798:	3027883a 	mov	r19,r6
   4d79c:	10c4703a 	and	r2,r2,r3
   4d7a0:	30800115 	stw	r2,4(r6)
   4d7a4:	003fe506 	br	4d73c <_fpadd_parts+0x1c8>
   4d7a8:	1dc02616 	blt	r3,r23,4d844 <_fpadd_parts+0x2d0>
   4d7ac:	0023883a 	mov	r17,zero
   4d7b0:	182f883a 	mov	r23,r3
   4d7b4:	0025883a 	mov	r18,zero
   4d7b8:	003fa806 	br	4d65c <_fpadd_parts+0xe8>
   4d7bc:	a827883a 	mov	r19,r21
   4d7c0:	003fde06 	br	4d73c <_fpadd_parts+0x1c8>
   4d7c4:	01800044 	movi	r6,1
   4d7c8:	500497fa 	slli	r2,r10,31
   4d7cc:	4808d07a 	srli	r4,r9,1
   4d7d0:	518ad83a 	srl	r5,r10,r6
   4d7d4:	a2000217 	ldw	r8,8(r20)
   4d7d8:	1108b03a 	or	r4,r2,r4
   4d7dc:	0007883a 	mov	r3,zero
   4d7e0:	4984703a 	and	r2,r9,r6
   4d7e4:	208cb03a 	or	r6,r4,r2
   4d7e8:	28ceb03a 	or	r7,r5,r3
   4d7ec:	42000044 	addi	r8,r8,1
   4d7f0:	a027883a 	mov	r19,r20
   4d7f4:	a1c00415 	stw	r7,16(r20)
   4d7f8:	a2000215 	stw	r8,8(r20)
   4d7fc:	a1800315 	stw	r6,12(r20)
   4d800:	003fce06 	br	4d73c <_fpadd_parts+0x1c8>
   4d804:	8bc5c83a 	sub	r2,r17,r15
   4d808:	8889803a 	cmpltu	r4,r17,r2
   4d80c:	9407c83a 	sub	r3,r18,r16
   4d810:	1909c83a 	sub	r4,r3,r4
   4d814:	100d883a 	mov	r6,r2
   4d818:	200f883a 	mov	r7,r4
   4d81c:	003f9906 	br	4d684 <_fpadd_parts+0x110>
   4d820:	7c45883a 	add	r2,r15,r17
   4d824:	13c9803a 	cmpltu	r4,r2,r15
   4d828:	8487883a 	add	r3,r16,r18
   4d82c:	20c9883a 	add	r4,r4,r3
   4d830:	a1400115 	stw	r5,4(r20)
   4d834:	a5c00215 	stw	r23,8(r20)
   4d838:	a0800315 	stw	r2,12(r20)
   4d83c:	a1000415 	stw	r4,16(r20)
   4d840:	003fb606 	br	4d71c <_fpadd_parts+0x1a8>
   4d844:	001f883a 	mov	r15,zero
   4d848:	0021883a 	mov	r16,zero
   4d84c:	003f8306 	br	4d65c <_fpadd_parts+0xe8>
   4d850:	018dc83a 	sub	r6,zero,r6
   4d854:	003f6706 	br	4d5f4 <_fpadd_parts+0x80>
   4d858:	00bfff84 	movi	r2,-2
   4d85c:	117faf36 	bltu	r2,r5,4d71c <_fpadd_parts+0x1a8>
   4d860:	003f9806 	br	4d6c4 <_fpadd_parts+0x150>
   4d864:	0005883a 	mov	r2,zero
   4d868:	1189c83a 	sub	r4,r2,r6
   4d86c:	1105803a 	cmpltu	r2,r2,r4
   4d870:	01cbc83a 	sub	r5,zero,r7
   4d874:	2885c83a 	sub	r2,r5,r2
   4d878:	01800044 	movi	r6,1
   4d87c:	a1800115 	stw	r6,4(r20)
   4d880:	a5c00215 	stw	r23,8(r20)
   4d884:	a1000315 	stw	r4,12(r20)
   4d888:	a0800415 	stw	r2,16(r20)
   4d88c:	003f8206 	br	4d698 <_fpadd_parts+0x124>
   4d890:	203f7226 	beq	r4,zero,4d65c <_fpadd_parts+0xe8>
   4d894:	35bff804 	addi	r22,r6,-32
   4d898:	b9af883a 	add	r23,r23,r6
   4d89c:	b0003116 	blt	r22,zero,4d964 <_fpadd_parts+0x3f0>
   4d8a0:	959ad83a 	srl	r13,r18,r22
   4d8a4:	001d883a 	mov	r14,zero
   4d8a8:	000f883a 	mov	r7,zero
   4d8ac:	01000044 	movi	r4,1
   4d8b0:	0011883a 	mov	r8,zero
   4d8b4:	b0002516 	blt	r22,zero,4d94c <_fpadd_parts+0x3d8>
   4d8b8:	2594983a 	sll	r10,r4,r22
   4d8bc:	0013883a 	mov	r9,zero
   4d8c0:	00bfffc4 	movi	r2,-1
   4d8c4:	4889883a 	add	r4,r9,r2
   4d8c8:	508b883a 	add	r5,r10,r2
   4d8cc:	224d803a 	cmpltu	r6,r4,r9
   4d8d0:	314b883a 	add	r5,r6,r5
   4d8d4:	8904703a 	and	r2,r17,r4
   4d8d8:	9146703a 	and	r3,r18,r5
   4d8dc:	10c4b03a 	or	r2,r2,r3
   4d8e0:	10000226 	beq	r2,zero,4d8ec <_fpadd_parts+0x378>
   4d8e4:	01c00044 	movi	r7,1
   4d8e8:	0011883a 	mov	r8,zero
   4d8ec:	69e2b03a 	or	r17,r13,r7
   4d8f0:	7224b03a 	or	r18,r14,r8
   4d8f4:	003f5906 	br	4d65c <_fpadd_parts+0xe8>
   4d8f8:	8407883a 	add	r3,r16,r16
   4d8fc:	008007c4 	movi	r2,31
   4d900:	1185c83a 	sub	r2,r2,r6
   4d904:	1886983a 	sll	r3,r3,r2
   4d908:	7996d83a 	srl	r11,r15,r6
   4d90c:	8198d83a 	srl	r12,r16,r6
   4d910:	1ad6b03a 	or	r11,r3,r11
   4d914:	003f3e06 	br	4d610 <_fpadd_parts+0x9c>
   4d918:	2006d07a 	srli	r3,r4,1
   4d91c:	008007c4 	movi	r2,31
   4d920:	1185c83a 	sub	r2,r2,r6
   4d924:	1890d83a 	srl	r8,r3,r2
   4d928:	218e983a 	sll	r7,r4,r6
   4d92c:	003f3e06 	br	4d628 <_fpadd_parts+0xb4>
   4d930:	113f821e 	bne	r2,r4,4d73c <_fpadd_parts+0x1c8>
   4d934:	28c00117 	ldw	r3,4(r5)
   4d938:	98800117 	ldw	r2,4(r19)
   4d93c:	10ff7f26 	beq	r2,r3,4d73c <_fpadd_parts+0x1c8>
   4d940:	04c00174 	movhi	r19,5
   4d944:	9cc8ce04 	addi	r19,r19,9016
   4d948:	003f7c06 	br	4d73c <_fpadd_parts+0x1c8>
   4d94c:	2006d07a 	srli	r3,r4,1
   4d950:	008007c4 	movi	r2,31
   4d954:	1185c83a 	sub	r2,r2,r6
   4d958:	1894d83a 	srl	r10,r3,r2
   4d95c:	2192983a 	sll	r9,r4,r6
   4d960:	003fd706 	br	4d8c0 <_fpadd_parts+0x34c>
   4d964:	9487883a 	add	r3,r18,r18
   4d968:	008007c4 	movi	r2,31
   4d96c:	1185c83a 	sub	r2,r2,r6
   4d970:	1886983a 	sll	r3,r3,r2
   4d974:	899ad83a 	srl	r13,r17,r6
   4d978:	919cd83a 	srl	r14,r18,r6
   4d97c:	1b5ab03a 	or	r13,r3,r13
   4d980:	003fc906 	br	4d8a8 <_fpadd_parts+0x334>

0004d984 <__subdf3>:
   4d984:	deffea04 	addi	sp,sp,-88
   4d988:	dcc01415 	stw	r19,80(sp)
   4d98c:	dcc00404 	addi	r19,sp,16
   4d990:	2011883a 	mov	r8,r4
   4d994:	2813883a 	mov	r9,r5
   4d998:	dc401315 	stw	r17,76(sp)
   4d99c:	d809883a 	mov	r4,sp
   4d9a0:	980b883a 	mov	r5,r19
   4d9a4:	dc400904 	addi	r17,sp,36
   4d9a8:	dfc01515 	stw	ra,84(sp)
   4d9ac:	da400115 	stw	r9,4(sp)
   4d9b0:	d9c00315 	stw	r7,12(sp)
   4d9b4:	da000015 	stw	r8,0(sp)
   4d9b8:	d9800215 	stw	r6,8(sp)
   4d9bc:	004ee500 	call	4ee50 <__unpack_d>
   4d9c0:	d9000204 	addi	r4,sp,8
   4d9c4:	880b883a 	mov	r5,r17
   4d9c8:	004ee500 	call	4ee50 <__unpack_d>
   4d9cc:	d8800a17 	ldw	r2,40(sp)
   4d9d0:	880b883a 	mov	r5,r17
   4d9d4:	9809883a 	mov	r4,r19
   4d9d8:	d9800e04 	addi	r6,sp,56
   4d9dc:	1080005c 	xori	r2,r2,1
   4d9e0:	d8800a15 	stw	r2,40(sp)
   4d9e4:	004d5740 	call	4d574 <_fpadd_parts>
   4d9e8:	1009883a 	mov	r4,r2
   4d9ec:	004eb3c0 	call	4eb3c <__pack_d>
   4d9f0:	dfc01517 	ldw	ra,84(sp)
   4d9f4:	dcc01417 	ldw	r19,80(sp)
   4d9f8:	dc401317 	ldw	r17,76(sp)
   4d9fc:	dec01604 	addi	sp,sp,88
   4da00:	f800283a 	ret

0004da04 <__adddf3>:
   4da04:	deffea04 	addi	sp,sp,-88
   4da08:	dcc01415 	stw	r19,80(sp)
   4da0c:	dcc00404 	addi	r19,sp,16
   4da10:	2011883a 	mov	r8,r4
   4da14:	2813883a 	mov	r9,r5
   4da18:	dc401315 	stw	r17,76(sp)
   4da1c:	d809883a 	mov	r4,sp
   4da20:	980b883a 	mov	r5,r19
   4da24:	dc400904 	addi	r17,sp,36
   4da28:	dfc01515 	stw	ra,84(sp)
   4da2c:	da400115 	stw	r9,4(sp)
   4da30:	d9c00315 	stw	r7,12(sp)
   4da34:	da000015 	stw	r8,0(sp)
   4da38:	d9800215 	stw	r6,8(sp)
   4da3c:	004ee500 	call	4ee50 <__unpack_d>
   4da40:	d9000204 	addi	r4,sp,8
   4da44:	880b883a 	mov	r5,r17
   4da48:	004ee500 	call	4ee50 <__unpack_d>
   4da4c:	d9800e04 	addi	r6,sp,56
   4da50:	9809883a 	mov	r4,r19
   4da54:	880b883a 	mov	r5,r17
   4da58:	004d5740 	call	4d574 <_fpadd_parts>
   4da5c:	1009883a 	mov	r4,r2
   4da60:	004eb3c0 	call	4eb3c <__pack_d>
   4da64:	dfc01517 	ldw	ra,84(sp)
   4da68:	dcc01417 	ldw	r19,80(sp)
   4da6c:	dc401317 	ldw	r17,76(sp)
   4da70:	dec01604 	addi	sp,sp,88
   4da74:	f800283a 	ret

0004da78 <__muldf3>:
   4da78:	deffe004 	addi	sp,sp,-128
   4da7c:	dc401815 	stw	r17,96(sp)
   4da80:	dc400404 	addi	r17,sp,16
   4da84:	2011883a 	mov	r8,r4
   4da88:	2813883a 	mov	r9,r5
   4da8c:	dc001715 	stw	r16,92(sp)
   4da90:	d809883a 	mov	r4,sp
   4da94:	880b883a 	mov	r5,r17
   4da98:	dc000904 	addi	r16,sp,36
   4da9c:	dfc01f15 	stw	ra,124(sp)
   4daa0:	da400115 	stw	r9,4(sp)
   4daa4:	d9c00315 	stw	r7,12(sp)
   4daa8:	da000015 	stw	r8,0(sp)
   4daac:	d9800215 	stw	r6,8(sp)
   4dab0:	ddc01e15 	stw	r23,120(sp)
   4dab4:	dd801d15 	stw	r22,116(sp)
   4dab8:	dd401c15 	stw	r21,112(sp)
   4dabc:	dd001b15 	stw	r20,108(sp)
   4dac0:	dcc01a15 	stw	r19,104(sp)
   4dac4:	dc801915 	stw	r18,100(sp)
   4dac8:	004ee500 	call	4ee50 <__unpack_d>
   4dacc:	d9000204 	addi	r4,sp,8
   4dad0:	800b883a 	mov	r5,r16
   4dad4:	004ee500 	call	4ee50 <__unpack_d>
   4dad8:	d9000417 	ldw	r4,16(sp)
   4dadc:	00800044 	movi	r2,1
   4dae0:	1100102e 	bgeu	r2,r4,4db24 <__muldf3+0xac>
   4dae4:	d8c00917 	ldw	r3,36(sp)
   4dae8:	10c0062e 	bgeu	r2,r3,4db04 <__muldf3+0x8c>
   4daec:	00800104 	movi	r2,4
   4daf0:	20800a26 	beq	r4,r2,4db1c <__muldf3+0xa4>
   4daf4:	1880cc26 	beq	r3,r2,4de28 <__muldf3+0x3b0>
   4daf8:	00800084 	movi	r2,2
   4dafc:	20800926 	beq	r4,r2,4db24 <__muldf3+0xac>
   4db00:	1880191e 	bne	r3,r2,4db68 <__muldf3+0xf0>
   4db04:	d8c00a17 	ldw	r3,40(sp)
   4db08:	d8800517 	ldw	r2,20(sp)
   4db0c:	8009883a 	mov	r4,r16
   4db10:	10c4c03a 	cmpne	r2,r2,r3
   4db14:	d8800a15 	stw	r2,40(sp)
   4db18:	00000706 	br	4db38 <__muldf3+0xc0>
   4db1c:	00800084 	movi	r2,2
   4db20:	1880c326 	beq	r3,r2,4de30 <__muldf3+0x3b8>
   4db24:	d8800517 	ldw	r2,20(sp)
   4db28:	d8c00a17 	ldw	r3,40(sp)
   4db2c:	8809883a 	mov	r4,r17
   4db30:	10c4c03a 	cmpne	r2,r2,r3
   4db34:	d8800515 	stw	r2,20(sp)
   4db38:	004eb3c0 	call	4eb3c <__pack_d>
   4db3c:	dfc01f17 	ldw	ra,124(sp)
   4db40:	ddc01e17 	ldw	r23,120(sp)
   4db44:	dd801d17 	ldw	r22,116(sp)
   4db48:	dd401c17 	ldw	r21,112(sp)
   4db4c:	dd001b17 	ldw	r20,108(sp)
   4db50:	dcc01a17 	ldw	r19,104(sp)
   4db54:	dc801917 	ldw	r18,100(sp)
   4db58:	dc401817 	ldw	r17,96(sp)
   4db5c:	dc001717 	ldw	r16,92(sp)
   4db60:	dec02004 	addi	sp,sp,128
   4db64:	f800283a 	ret
   4db68:	dd800717 	ldw	r22,28(sp)
   4db6c:	dc800c17 	ldw	r18,48(sp)
   4db70:	002b883a 	mov	r21,zero
   4db74:	0023883a 	mov	r17,zero
   4db78:	a80b883a 	mov	r5,r21
   4db7c:	b00d883a 	mov	r6,r22
   4db80:	880f883a 	mov	r7,r17
   4db84:	ddc00817 	ldw	r23,32(sp)
   4db88:	dcc00d17 	ldw	r19,52(sp)
   4db8c:	9009883a 	mov	r4,r18
   4db90:	004c5780 	call	4c578 <__muldi3>
   4db94:	001b883a 	mov	r13,zero
   4db98:	680f883a 	mov	r7,r13
   4db9c:	b009883a 	mov	r4,r22
   4dba0:	000b883a 	mov	r5,zero
   4dba4:	980d883a 	mov	r6,r19
   4dba8:	b82d883a 	mov	r22,r23
   4dbac:	002f883a 	mov	r23,zero
   4dbb0:	db401615 	stw	r13,88(sp)
   4dbb4:	d8801315 	stw	r2,76(sp)
   4dbb8:	d8c01415 	stw	r3,80(sp)
   4dbbc:	dcc01515 	stw	r19,84(sp)
   4dbc0:	004c5780 	call	4c578 <__muldi3>
   4dbc4:	b00d883a 	mov	r6,r22
   4dbc8:	000b883a 	mov	r5,zero
   4dbcc:	9009883a 	mov	r4,r18
   4dbd0:	b80f883a 	mov	r7,r23
   4dbd4:	1021883a 	mov	r16,r2
   4dbd8:	1823883a 	mov	r17,r3
   4dbdc:	004c5780 	call	4c578 <__muldi3>
   4dbe0:	8085883a 	add	r2,r16,r2
   4dbe4:	140d803a 	cmpltu	r6,r2,r16
   4dbe8:	88c7883a 	add	r3,r17,r3
   4dbec:	30cd883a 	add	r6,r6,r3
   4dbf0:	1029883a 	mov	r20,r2
   4dbf4:	302b883a 	mov	r21,r6
   4dbf8:	da801317 	ldw	r10,76(sp)
   4dbfc:	dac01417 	ldw	r11,80(sp)
   4dc00:	db001517 	ldw	r12,84(sp)
   4dc04:	db401617 	ldw	r13,88(sp)
   4dc08:	3440612e 	bgeu	r6,r17,4dd90 <__muldf3+0x318>
   4dc0c:	0009883a 	mov	r4,zero
   4dc10:	5105883a 	add	r2,r10,r4
   4dc14:	128d803a 	cmpltu	r6,r2,r10
   4dc18:	5d07883a 	add	r3,r11,r20
   4dc1c:	30cd883a 	add	r6,r6,r3
   4dc20:	0021883a 	mov	r16,zero
   4dc24:	04400044 	movi	r17,1
   4dc28:	1025883a 	mov	r18,r2
   4dc2c:	3027883a 	mov	r19,r6
   4dc30:	32c06236 	bltu	r6,r11,4ddbc <__muldf3+0x344>
   4dc34:	59807a26 	beq	r11,r6,4de20 <__muldf3+0x3a8>
   4dc38:	680b883a 	mov	r5,r13
   4dc3c:	b80f883a 	mov	r7,r23
   4dc40:	6009883a 	mov	r4,r12
   4dc44:	b00d883a 	mov	r6,r22
   4dc48:	004c5780 	call	4c578 <__muldi3>
   4dc4c:	1009883a 	mov	r4,r2
   4dc50:	000f883a 	mov	r7,zero
   4dc54:	1545883a 	add	r2,r2,r21
   4dc58:	1111803a 	cmpltu	r8,r2,r4
   4dc5c:	19c7883a 	add	r3,r3,r7
   4dc60:	40c7883a 	add	r3,r8,r3
   4dc64:	88cb883a 	add	r5,r17,r3
   4dc68:	d8c00617 	ldw	r3,24(sp)
   4dc6c:	8089883a 	add	r4,r16,r2
   4dc70:	d8800b17 	ldw	r2,44(sp)
   4dc74:	18c00104 	addi	r3,r3,4
   4dc78:	240d803a 	cmpltu	r6,r4,r16
   4dc7c:	10c7883a 	add	r3,r2,r3
   4dc80:	2013883a 	mov	r9,r4
   4dc84:	d8800a17 	ldw	r2,40(sp)
   4dc88:	d9000517 	ldw	r4,20(sp)
   4dc8c:	314d883a 	add	r6,r6,r5
   4dc90:	3015883a 	mov	r10,r6
   4dc94:	2088c03a 	cmpne	r4,r4,r2
   4dc98:	00880034 	movhi	r2,8192
   4dc9c:	10bfffc4 	addi	r2,r2,-1
   4dca0:	d9000f15 	stw	r4,60(sp)
   4dca4:	d8c01015 	stw	r3,64(sp)
   4dca8:	1180162e 	bgeu	r2,r6,4dd04 <__muldf3+0x28c>
   4dcac:	1811883a 	mov	r8,r3
   4dcb0:	101f883a 	mov	r15,r2
   4dcb4:	980497fa 	slli	r2,r19,31
   4dcb8:	9016d07a 	srli	r11,r18,1
   4dcbc:	500697fa 	slli	r3,r10,31
   4dcc0:	480cd07a 	srli	r6,r9,1
   4dcc4:	500ed07a 	srli	r7,r10,1
   4dcc8:	12d6b03a 	or	r11,r2,r11
   4dccc:	00800044 	movi	r2,1
   4dcd0:	198cb03a 	or	r6,r3,r6
   4dcd4:	4888703a 	and	r4,r9,r2
   4dcd8:	9818d07a 	srli	r12,r19,1
   4dcdc:	001b883a 	mov	r13,zero
   4dce0:	03a00034 	movhi	r14,32768
   4dce4:	3013883a 	mov	r9,r6
   4dce8:	3815883a 	mov	r10,r7
   4dcec:	4091883a 	add	r8,r8,r2
   4dcf0:	20000226 	beq	r4,zero,4dcfc <__muldf3+0x284>
   4dcf4:	5b64b03a 	or	r18,r11,r13
   4dcf8:	63a6b03a 	or	r19,r12,r14
   4dcfc:	7abfed36 	bltu	r15,r10,4dcb4 <__muldf3+0x23c>
   4dd00:	da001015 	stw	r8,64(sp)
   4dd04:	00840034 	movhi	r2,4096
   4dd08:	10bfffc4 	addi	r2,r2,-1
   4dd0c:	12801436 	bltu	r2,r10,4dd60 <__muldf3+0x2e8>
   4dd10:	da001017 	ldw	r8,64(sp)
   4dd14:	101f883a 	mov	r15,r2
   4dd18:	4a45883a 	add	r2,r9,r9
   4dd1c:	124d803a 	cmpltu	r6,r2,r9
   4dd20:	5287883a 	add	r3,r10,r10
   4dd24:	9497883a 	add	r11,r18,r18
   4dd28:	5c8f803a 	cmpltu	r7,r11,r18
   4dd2c:	9cd9883a 	add	r12,r19,r19
   4dd30:	01000044 	movi	r4,1
   4dd34:	30cd883a 	add	r6,r6,r3
   4dd38:	3b0f883a 	add	r7,r7,r12
   4dd3c:	423fffc4 	addi	r8,r8,-1
   4dd40:	1013883a 	mov	r9,r2
   4dd44:	3015883a 	mov	r10,r6
   4dd48:	111ab03a 	or	r13,r2,r4
   4dd4c:	98003016 	blt	r19,zero,4de10 <__muldf3+0x398>
   4dd50:	5825883a 	mov	r18,r11
   4dd54:	3827883a 	mov	r19,r7
   4dd58:	7abfef2e 	bgeu	r15,r10,4dd18 <__muldf3+0x2a0>
   4dd5c:	da001015 	stw	r8,64(sp)
   4dd60:	00803fc4 	movi	r2,255
   4dd64:	488e703a 	and	r7,r9,r2
   4dd68:	00802004 	movi	r2,128
   4dd6c:	0007883a 	mov	r3,zero
   4dd70:	0011883a 	mov	r8,zero
   4dd74:	38801826 	beq	r7,r2,4ddd8 <__muldf3+0x360>
   4dd78:	008000c4 	movi	r2,3
   4dd7c:	d9000e04 	addi	r4,sp,56
   4dd80:	da801215 	stw	r10,72(sp)
   4dd84:	d8800e15 	stw	r2,56(sp)
   4dd88:	da401115 	stw	r9,68(sp)
   4dd8c:	003f6a06 	br	4db38 <__muldf3+0xc0>
   4dd90:	89802126 	beq	r17,r6,4de18 <__muldf3+0x3a0>
   4dd94:	0009883a 	mov	r4,zero
   4dd98:	5105883a 	add	r2,r10,r4
   4dd9c:	128d803a 	cmpltu	r6,r2,r10
   4dda0:	5d07883a 	add	r3,r11,r20
   4dda4:	30cd883a 	add	r6,r6,r3
   4dda8:	0021883a 	mov	r16,zero
   4ddac:	0023883a 	mov	r17,zero
   4ddb0:	1025883a 	mov	r18,r2
   4ddb4:	3027883a 	mov	r19,r6
   4ddb8:	32ff9e2e 	bgeu	r6,r11,4dc34 <__muldf3+0x1bc>
   4ddbc:	00800044 	movi	r2,1
   4ddc0:	8089883a 	add	r4,r16,r2
   4ddc4:	240d803a 	cmpltu	r6,r4,r16
   4ddc8:	344d883a 	add	r6,r6,r17
   4ddcc:	2021883a 	mov	r16,r4
   4ddd0:	3023883a 	mov	r17,r6
   4ddd4:	003f9806 	br	4dc38 <__muldf3+0x1c0>
   4ddd8:	403fe71e 	bne	r8,zero,4dd78 <__muldf3+0x300>
   4dddc:	01004004 	movi	r4,256
   4dde0:	4904703a 	and	r2,r9,r4
   4dde4:	10c4b03a 	or	r2,r2,r3
   4dde8:	103fe31e 	bne	r2,zero,4dd78 <__muldf3+0x300>
   4ddec:	94c4b03a 	or	r2,r18,r19
   4ddf0:	103fe126 	beq	r2,zero,4dd78 <__muldf3+0x300>
   4ddf4:	49c5883a 	add	r2,r9,r7
   4ddf8:	1251803a 	cmpltu	r8,r2,r9
   4ddfc:	4291883a 	add	r8,r8,r10
   4de00:	013fc004 	movi	r4,-256
   4de04:	1112703a 	and	r9,r2,r4
   4de08:	4015883a 	mov	r10,r8
   4de0c:	003fda06 	br	4dd78 <__muldf3+0x300>
   4de10:	6813883a 	mov	r9,r13
   4de14:	003fce06 	br	4dd50 <__muldf3+0x2d8>
   4de18:	143f7c36 	bltu	r2,r16,4dc0c <__muldf3+0x194>
   4de1c:	003fdd06 	br	4dd94 <__muldf3+0x31c>
   4de20:	12bf852e 	bgeu	r2,r10,4dc38 <__muldf3+0x1c0>
   4de24:	003fe506 	br	4ddbc <__muldf3+0x344>
   4de28:	00800084 	movi	r2,2
   4de2c:	20bf351e 	bne	r4,r2,4db04 <__muldf3+0x8c>
   4de30:	01000174 	movhi	r4,5
   4de34:	2108ce04 	addi	r4,r4,9016
   4de38:	003f3f06 	br	4db38 <__muldf3+0xc0>

0004de3c <__divdf3>:
   4de3c:	deffed04 	addi	sp,sp,-76
   4de40:	dcc01115 	stw	r19,68(sp)
   4de44:	dcc00404 	addi	r19,sp,16
   4de48:	2011883a 	mov	r8,r4
   4de4c:	2813883a 	mov	r9,r5
   4de50:	dc000e15 	stw	r16,56(sp)
   4de54:	d809883a 	mov	r4,sp
   4de58:	980b883a 	mov	r5,r19
   4de5c:	dc000904 	addi	r16,sp,36
   4de60:	dfc01215 	stw	ra,72(sp)
   4de64:	da400115 	stw	r9,4(sp)
   4de68:	d9c00315 	stw	r7,12(sp)
   4de6c:	da000015 	stw	r8,0(sp)
   4de70:	d9800215 	stw	r6,8(sp)
   4de74:	dc801015 	stw	r18,64(sp)
   4de78:	dc400f15 	stw	r17,60(sp)
   4de7c:	004ee500 	call	4ee50 <__unpack_d>
   4de80:	d9000204 	addi	r4,sp,8
   4de84:	800b883a 	mov	r5,r16
   4de88:	004ee500 	call	4ee50 <__unpack_d>
   4de8c:	d9000417 	ldw	r4,16(sp)
   4de90:	00800044 	movi	r2,1
   4de94:	11000b2e 	bgeu	r2,r4,4dec4 <__divdf3+0x88>
   4de98:	d9400917 	ldw	r5,36(sp)
   4de9c:	1140762e 	bgeu	r2,r5,4e078 <__divdf3+0x23c>
   4dea0:	d8800517 	ldw	r2,20(sp)
   4dea4:	d8c00a17 	ldw	r3,40(sp)
   4dea8:	01800104 	movi	r6,4
   4deac:	10c4f03a 	xor	r2,r2,r3
   4deb0:	d8800515 	stw	r2,20(sp)
   4deb4:	21800226 	beq	r4,r6,4dec0 <__divdf3+0x84>
   4deb8:	00800084 	movi	r2,2
   4debc:	2080141e 	bne	r4,r2,4df10 <__divdf3+0xd4>
   4dec0:	29000926 	beq	r5,r4,4dee8 <__divdf3+0xac>
   4dec4:	9809883a 	mov	r4,r19
   4dec8:	004eb3c0 	call	4eb3c <__pack_d>
   4decc:	dfc01217 	ldw	ra,72(sp)
   4ded0:	dcc01117 	ldw	r19,68(sp)
   4ded4:	dc801017 	ldw	r18,64(sp)
   4ded8:	dc400f17 	ldw	r17,60(sp)
   4dedc:	dc000e17 	ldw	r16,56(sp)
   4dee0:	dec01304 	addi	sp,sp,76
   4dee4:	f800283a 	ret
   4dee8:	01000174 	movhi	r4,5
   4deec:	2108ce04 	addi	r4,r4,9016
   4def0:	004eb3c0 	call	4eb3c <__pack_d>
   4def4:	dfc01217 	ldw	ra,72(sp)
   4def8:	dcc01117 	ldw	r19,68(sp)
   4defc:	dc801017 	ldw	r18,64(sp)
   4df00:	dc400f17 	ldw	r17,60(sp)
   4df04:	dc000e17 	ldw	r16,56(sp)
   4df08:	dec01304 	addi	sp,sp,76
   4df0c:	f800283a 	ret
   4df10:	29805b26 	beq	r5,r6,4e080 <__divdf3+0x244>
   4df14:	28802d26 	beq	r5,r2,4dfcc <__divdf3+0x190>
   4df18:	d8c00617 	ldw	r3,24(sp)
   4df1c:	d8800b17 	ldw	r2,44(sp)
   4df20:	d9c00817 	ldw	r7,32(sp)
   4df24:	dc400d17 	ldw	r17,52(sp)
   4df28:	188bc83a 	sub	r5,r3,r2
   4df2c:	d9800717 	ldw	r6,28(sp)
   4df30:	dc000c17 	ldw	r16,48(sp)
   4df34:	d9400615 	stw	r5,24(sp)
   4df38:	3c403836 	bltu	r7,r17,4e01c <__divdf3+0x1e0>
   4df3c:	89c03626 	beq	r17,r7,4e018 <__divdf3+0x1dc>
   4df40:	0015883a 	mov	r10,zero
   4df44:	001d883a 	mov	r14,zero
   4df48:	02c40034 	movhi	r11,4096
   4df4c:	001f883a 	mov	r15,zero
   4df50:	003f883a 	mov	ra,zero
   4df54:	04800f44 	movi	r18,61
   4df58:	00000f06 	br	4df98 <__divdf3+0x15c>
   4df5c:	601d883a 	mov	r14,r12
   4df60:	681f883a 	mov	r15,r13
   4df64:	400d883a 	mov	r6,r8
   4df68:	100f883a 	mov	r7,r2
   4df6c:	3191883a 	add	r8,r6,r6
   4df70:	5808d07a 	srli	r4,r11,1
   4df74:	4185803a 	cmpltu	r2,r8,r6
   4df78:	39d3883a 	add	r9,r7,r7
   4df7c:	28c6b03a 	or	r3,r5,r3
   4df80:	1245883a 	add	r2,r2,r9
   4df84:	1815883a 	mov	r10,r3
   4df88:	2017883a 	mov	r11,r4
   4df8c:	400d883a 	mov	r6,r8
   4df90:	100f883a 	mov	r7,r2
   4df94:	fc801726 	beq	ra,r18,4dff4 <__divdf3+0x1b8>
   4df98:	580a97fa 	slli	r5,r11,31
   4df9c:	5006d07a 	srli	r3,r10,1
   4dfa0:	ffc00044 	addi	ra,ra,1
   4dfa4:	3c7ff136 	bltu	r7,r17,4df6c <__divdf3+0x130>
   4dfa8:	3411c83a 	sub	r8,r6,r16
   4dfac:	3205803a 	cmpltu	r2,r6,r8
   4dfb0:	3c53c83a 	sub	r9,r7,r17
   4dfb4:	7298b03a 	or	r12,r14,r10
   4dfb8:	7adab03a 	or	r13,r15,r11
   4dfbc:	4885c83a 	sub	r2,r9,r2
   4dfc0:	89ffe61e 	bne	r17,r7,4df5c <__divdf3+0x120>
   4dfc4:	343fe936 	bltu	r6,r16,4df6c <__divdf3+0x130>
   4dfc8:	003fe406 	br	4df5c <__divdf3+0x120>
   4dfcc:	9809883a 	mov	r4,r19
   4dfd0:	d9800415 	stw	r6,16(sp)
   4dfd4:	004eb3c0 	call	4eb3c <__pack_d>
   4dfd8:	dfc01217 	ldw	ra,72(sp)
   4dfdc:	dcc01117 	ldw	r19,68(sp)
   4dfe0:	dc801017 	ldw	r18,64(sp)
   4dfe4:	dc400f17 	ldw	r17,60(sp)
   4dfe8:	dc000e17 	ldw	r16,56(sp)
   4dfec:	dec01304 	addi	sp,sp,76
   4dff0:	f800283a 	ret
   4dff4:	00803fc4 	movi	r2,255
   4dff8:	7090703a 	and	r8,r14,r2
   4dffc:	00802004 	movi	r2,128
   4e000:	0007883a 	mov	r3,zero
   4e004:	0013883a 	mov	r9,zero
   4e008:	40800d26 	beq	r8,r2,4e040 <__divdf3+0x204>
   4e00c:	dbc00815 	stw	r15,32(sp)
   4e010:	db800715 	stw	r14,28(sp)
   4e014:	003fab06 	br	4dec4 <__divdf3+0x88>
   4e018:	343fc92e 	bgeu	r6,r16,4df40 <__divdf3+0x104>
   4e01c:	3185883a 	add	r2,r6,r6
   4e020:	1189803a 	cmpltu	r4,r2,r6
   4e024:	39c7883a 	add	r3,r7,r7
   4e028:	20c9883a 	add	r4,r4,r3
   4e02c:	297fffc4 	addi	r5,r5,-1
   4e030:	100d883a 	mov	r6,r2
   4e034:	200f883a 	mov	r7,r4
   4e038:	d9400615 	stw	r5,24(sp)
   4e03c:	003fc006 	br	4df40 <__divdf3+0x104>
   4e040:	483ff21e 	bne	r9,zero,4e00c <__divdf3+0x1d0>
   4e044:	01004004 	movi	r4,256
   4e048:	7104703a 	and	r2,r14,r4
   4e04c:	10c4b03a 	or	r2,r2,r3
   4e050:	103fee1e 	bne	r2,zero,4e00c <__divdf3+0x1d0>
   4e054:	31c4b03a 	or	r2,r6,r7
   4e058:	103fec26 	beq	r2,zero,4e00c <__divdf3+0x1d0>
   4e05c:	7205883a 	add	r2,r14,r8
   4e060:	1391803a 	cmpltu	r8,r2,r14
   4e064:	43d1883a 	add	r8,r8,r15
   4e068:	013fc004 	movi	r4,-256
   4e06c:	111c703a 	and	r14,r2,r4
   4e070:	401f883a 	mov	r15,r8
   4e074:	003fe506 	br	4e00c <__divdf3+0x1d0>
   4e078:	8009883a 	mov	r4,r16
   4e07c:	003f9206 	br	4dec8 <__divdf3+0x8c>
   4e080:	9809883a 	mov	r4,r19
   4e084:	d8000715 	stw	zero,28(sp)
   4e088:	d8000815 	stw	zero,32(sp)
   4e08c:	d8000615 	stw	zero,24(sp)
   4e090:	003f8d06 	br	4dec8 <__divdf3+0x8c>

0004e094 <__eqdf2>:
   4e094:	deffef04 	addi	sp,sp,-68
   4e098:	dc400f15 	stw	r17,60(sp)
   4e09c:	dc400404 	addi	r17,sp,16
   4e0a0:	2005883a 	mov	r2,r4
   4e0a4:	2807883a 	mov	r3,r5
   4e0a8:	dc000e15 	stw	r16,56(sp)
   4e0ac:	d809883a 	mov	r4,sp
   4e0b0:	880b883a 	mov	r5,r17
   4e0b4:	dc000904 	addi	r16,sp,36
   4e0b8:	d8c00115 	stw	r3,4(sp)
   4e0bc:	d8800015 	stw	r2,0(sp)
   4e0c0:	d9800215 	stw	r6,8(sp)
   4e0c4:	dfc01015 	stw	ra,64(sp)
   4e0c8:	d9c00315 	stw	r7,12(sp)
   4e0cc:	004ee500 	call	4ee50 <__unpack_d>
   4e0d0:	d9000204 	addi	r4,sp,8
   4e0d4:	800b883a 	mov	r5,r16
   4e0d8:	004ee500 	call	4ee50 <__unpack_d>
   4e0dc:	d8800417 	ldw	r2,16(sp)
   4e0e0:	00c00044 	movi	r3,1
   4e0e4:	180d883a 	mov	r6,r3
   4e0e8:	1880062e 	bgeu	r3,r2,4e104 <__eqdf2+0x70>
   4e0ec:	d8800917 	ldw	r2,36(sp)
   4e0f0:	8809883a 	mov	r4,r17
   4e0f4:	800b883a 	mov	r5,r16
   4e0f8:	1880022e 	bgeu	r3,r2,4e104 <__eqdf2+0x70>
   4e0fc:	004ef880 	call	4ef88 <__fpcmp_parts_d>
   4e100:	100d883a 	mov	r6,r2
   4e104:	3005883a 	mov	r2,r6
   4e108:	dfc01017 	ldw	ra,64(sp)
   4e10c:	dc400f17 	ldw	r17,60(sp)
   4e110:	dc000e17 	ldw	r16,56(sp)
   4e114:	dec01104 	addi	sp,sp,68
   4e118:	f800283a 	ret

0004e11c <__nedf2>:
   4e11c:	deffef04 	addi	sp,sp,-68
   4e120:	dc400f15 	stw	r17,60(sp)
   4e124:	dc400404 	addi	r17,sp,16
   4e128:	2005883a 	mov	r2,r4
   4e12c:	2807883a 	mov	r3,r5
   4e130:	dc000e15 	stw	r16,56(sp)
   4e134:	d809883a 	mov	r4,sp
   4e138:	880b883a 	mov	r5,r17
   4e13c:	dc000904 	addi	r16,sp,36
   4e140:	d8c00115 	stw	r3,4(sp)
   4e144:	d8800015 	stw	r2,0(sp)
   4e148:	d9800215 	stw	r6,8(sp)
   4e14c:	dfc01015 	stw	ra,64(sp)
   4e150:	d9c00315 	stw	r7,12(sp)
   4e154:	004ee500 	call	4ee50 <__unpack_d>
   4e158:	d9000204 	addi	r4,sp,8
   4e15c:	800b883a 	mov	r5,r16
   4e160:	004ee500 	call	4ee50 <__unpack_d>
   4e164:	d8800417 	ldw	r2,16(sp)
   4e168:	00c00044 	movi	r3,1
   4e16c:	180d883a 	mov	r6,r3
   4e170:	1880062e 	bgeu	r3,r2,4e18c <__nedf2+0x70>
   4e174:	d8800917 	ldw	r2,36(sp)
   4e178:	8809883a 	mov	r4,r17
   4e17c:	800b883a 	mov	r5,r16
   4e180:	1880022e 	bgeu	r3,r2,4e18c <__nedf2+0x70>
   4e184:	004ef880 	call	4ef88 <__fpcmp_parts_d>
   4e188:	100d883a 	mov	r6,r2
   4e18c:	3005883a 	mov	r2,r6
   4e190:	dfc01017 	ldw	ra,64(sp)
   4e194:	dc400f17 	ldw	r17,60(sp)
   4e198:	dc000e17 	ldw	r16,56(sp)
   4e19c:	dec01104 	addi	sp,sp,68
   4e1a0:	f800283a 	ret

0004e1a4 <__gtdf2>:
   4e1a4:	deffef04 	addi	sp,sp,-68
   4e1a8:	dc400f15 	stw	r17,60(sp)
   4e1ac:	dc400404 	addi	r17,sp,16
   4e1b0:	2005883a 	mov	r2,r4
   4e1b4:	2807883a 	mov	r3,r5
   4e1b8:	dc000e15 	stw	r16,56(sp)
   4e1bc:	d809883a 	mov	r4,sp
   4e1c0:	880b883a 	mov	r5,r17
   4e1c4:	dc000904 	addi	r16,sp,36
   4e1c8:	d8c00115 	stw	r3,4(sp)
   4e1cc:	d8800015 	stw	r2,0(sp)
   4e1d0:	d9800215 	stw	r6,8(sp)
   4e1d4:	dfc01015 	stw	ra,64(sp)
   4e1d8:	d9c00315 	stw	r7,12(sp)
   4e1dc:	004ee500 	call	4ee50 <__unpack_d>
   4e1e0:	d9000204 	addi	r4,sp,8
   4e1e4:	800b883a 	mov	r5,r16
   4e1e8:	004ee500 	call	4ee50 <__unpack_d>
   4e1ec:	d8800417 	ldw	r2,16(sp)
   4e1f0:	00c00044 	movi	r3,1
   4e1f4:	01bfffc4 	movi	r6,-1
   4e1f8:	1880062e 	bgeu	r3,r2,4e214 <__gtdf2+0x70>
   4e1fc:	d8800917 	ldw	r2,36(sp)
   4e200:	8809883a 	mov	r4,r17
   4e204:	800b883a 	mov	r5,r16
   4e208:	1880022e 	bgeu	r3,r2,4e214 <__gtdf2+0x70>
   4e20c:	004ef880 	call	4ef88 <__fpcmp_parts_d>
   4e210:	100d883a 	mov	r6,r2
   4e214:	3005883a 	mov	r2,r6
   4e218:	dfc01017 	ldw	ra,64(sp)
   4e21c:	dc400f17 	ldw	r17,60(sp)
   4e220:	dc000e17 	ldw	r16,56(sp)
   4e224:	dec01104 	addi	sp,sp,68
   4e228:	f800283a 	ret

0004e22c <__gedf2>:
   4e22c:	deffef04 	addi	sp,sp,-68
   4e230:	dc400f15 	stw	r17,60(sp)
   4e234:	dc400404 	addi	r17,sp,16
   4e238:	2005883a 	mov	r2,r4
   4e23c:	2807883a 	mov	r3,r5
   4e240:	dc000e15 	stw	r16,56(sp)
   4e244:	d809883a 	mov	r4,sp
   4e248:	880b883a 	mov	r5,r17
   4e24c:	dc000904 	addi	r16,sp,36
   4e250:	d8c00115 	stw	r3,4(sp)
   4e254:	d8800015 	stw	r2,0(sp)
   4e258:	d9800215 	stw	r6,8(sp)
   4e25c:	dfc01015 	stw	ra,64(sp)
   4e260:	d9c00315 	stw	r7,12(sp)
   4e264:	004ee500 	call	4ee50 <__unpack_d>
   4e268:	d9000204 	addi	r4,sp,8
   4e26c:	800b883a 	mov	r5,r16
   4e270:	004ee500 	call	4ee50 <__unpack_d>
   4e274:	d8800417 	ldw	r2,16(sp)
   4e278:	00c00044 	movi	r3,1
   4e27c:	01bfffc4 	movi	r6,-1
   4e280:	1880062e 	bgeu	r3,r2,4e29c <__gedf2+0x70>
   4e284:	d8800917 	ldw	r2,36(sp)
   4e288:	8809883a 	mov	r4,r17
   4e28c:	800b883a 	mov	r5,r16
   4e290:	1880022e 	bgeu	r3,r2,4e29c <__gedf2+0x70>
   4e294:	004ef880 	call	4ef88 <__fpcmp_parts_d>
   4e298:	100d883a 	mov	r6,r2
   4e29c:	3005883a 	mov	r2,r6
   4e2a0:	dfc01017 	ldw	ra,64(sp)
   4e2a4:	dc400f17 	ldw	r17,60(sp)
   4e2a8:	dc000e17 	ldw	r16,56(sp)
   4e2ac:	dec01104 	addi	sp,sp,68
   4e2b0:	f800283a 	ret

0004e2b4 <__ltdf2>:
   4e2b4:	deffef04 	addi	sp,sp,-68
   4e2b8:	dc400f15 	stw	r17,60(sp)
   4e2bc:	dc400404 	addi	r17,sp,16
   4e2c0:	2005883a 	mov	r2,r4
   4e2c4:	2807883a 	mov	r3,r5
   4e2c8:	dc000e15 	stw	r16,56(sp)
   4e2cc:	d809883a 	mov	r4,sp
   4e2d0:	880b883a 	mov	r5,r17
   4e2d4:	dc000904 	addi	r16,sp,36
   4e2d8:	d8c00115 	stw	r3,4(sp)
   4e2dc:	d8800015 	stw	r2,0(sp)
   4e2e0:	d9800215 	stw	r6,8(sp)
   4e2e4:	dfc01015 	stw	ra,64(sp)
   4e2e8:	d9c00315 	stw	r7,12(sp)
   4e2ec:	004ee500 	call	4ee50 <__unpack_d>
   4e2f0:	d9000204 	addi	r4,sp,8
   4e2f4:	800b883a 	mov	r5,r16
   4e2f8:	004ee500 	call	4ee50 <__unpack_d>
   4e2fc:	d8800417 	ldw	r2,16(sp)
   4e300:	00c00044 	movi	r3,1
   4e304:	180d883a 	mov	r6,r3
   4e308:	1880062e 	bgeu	r3,r2,4e324 <__ltdf2+0x70>
   4e30c:	d8800917 	ldw	r2,36(sp)
   4e310:	8809883a 	mov	r4,r17
   4e314:	800b883a 	mov	r5,r16
   4e318:	1880022e 	bgeu	r3,r2,4e324 <__ltdf2+0x70>
   4e31c:	004ef880 	call	4ef88 <__fpcmp_parts_d>
   4e320:	100d883a 	mov	r6,r2
   4e324:	3005883a 	mov	r2,r6
   4e328:	dfc01017 	ldw	ra,64(sp)
   4e32c:	dc400f17 	ldw	r17,60(sp)
   4e330:	dc000e17 	ldw	r16,56(sp)
   4e334:	dec01104 	addi	sp,sp,68
   4e338:	f800283a 	ret

0004e33c <__ledf2>:
   4e33c:	deffef04 	addi	sp,sp,-68
   4e340:	dc400f15 	stw	r17,60(sp)
   4e344:	dc400404 	addi	r17,sp,16
   4e348:	2005883a 	mov	r2,r4
   4e34c:	2807883a 	mov	r3,r5
   4e350:	dc000e15 	stw	r16,56(sp)
   4e354:	d809883a 	mov	r4,sp
   4e358:	880b883a 	mov	r5,r17
   4e35c:	dc000904 	addi	r16,sp,36
   4e360:	d8c00115 	stw	r3,4(sp)
   4e364:	d8800015 	stw	r2,0(sp)
   4e368:	d9800215 	stw	r6,8(sp)
   4e36c:	dfc01015 	stw	ra,64(sp)
   4e370:	d9c00315 	stw	r7,12(sp)
   4e374:	004ee500 	call	4ee50 <__unpack_d>
   4e378:	d9000204 	addi	r4,sp,8
   4e37c:	800b883a 	mov	r5,r16
   4e380:	004ee500 	call	4ee50 <__unpack_d>
   4e384:	d8800417 	ldw	r2,16(sp)
   4e388:	00c00044 	movi	r3,1
   4e38c:	180d883a 	mov	r6,r3
   4e390:	1880062e 	bgeu	r3,r2,4e3ac <__ledf2+0x70>
   4e394:	d8800917 	ldw	r2,36(sp)
   4e398:	8809883a 	mov	r4,r17
   4e39c:	800b883a 	mov	r5,r16
   4e3a0:	1880022e 	bgeu	r3,r2,4e3ac <__ledf2+0x70>
   4e3a4:	004ef880 	call	4ef88 <__fpcmp_parts_d>
   4e3a8:	100d883a 	mov	r6,r2
   4e3ac:	3005883a 	mov	r2,r6
   4e3b0:	dfc01017 	ldw	ra,64(sp)
   4e3b4:	dc400f17 	ldw	r17,60(sp)
   4e3b8:	dc000e17 	ldw	r16,56(sp)
   4e3bc:	dec01104 	addi	sp,sp,68
   4e3c0:	f800283a 	ret

0004e3c4 <__floatsidf>:
   4e3c4:	2006d7fa 	srli	r3,r4,31
   4e3c8:	defff604 	addi	sp,sp,-40
   4e3cc:	008000c4 	movi	r2,3
   4e3d0:	dfc00915 	stw	ra,36(sp)
   4e3d4:	dcc00815 	stw	r19,32(sp)
   4e3d8:	dc800715 	stw	r18,28(sp)
   4e3dc:	dc400615 	stw	r17,24(sp)
   4e3e0:	dc000515 	stw	r16,20(sp)
   4e3e4:	d8800015 	stw	r2,0(sp)
   4e3e8:	d8c00115 	stw	r3,4(sp)
   4e3ec:	20000f1e 	bne	r4,zero,4e42c <__floatsidf+0x68>
   4e3f0:	00800084 	movi	r2,2
   4e3f4:	d8800015 	stw	r2,0(sp)
   4e3f8:	d809883a 	mov	r4,sp
   4e3fc:	004eb3c0 	call	4eb3c <__pack_d>
   4e400:	1009883a 	mov	r4,r2
   4e404:	180b883a 	mov	r5,r3
   4e408:	2005883a 	mov	r2,r4
   4e40c:	2807883a 	mov	r3,r5
   4e410:	dfc00917 	ldw	ra,36(sp)
   4e414:	dcc00817 	ldw	r19,32(sp)
   4e418:	dc800717 	ldw	r18,28(sp)
   4e41c:	dc400617 	ldw	r17,24(sp)
   4e420:	dc000517 	ldw	r16,20(sp)
   4e424:	dec00a04 	addi	sp,sp,40
   4e428:	f800283a 	ret
   4e42c:	00800f04 	movi	r2,60
   4e430:	1807003a 	cmpeq	r3,r3,zero
   4e434:	d8800215 	stw	r2,8(sp)
   4e438:	18001126 	beq	r3,zero,4e480 <__floatsidf+0xbc>
   4e43c:	0027883a 	mov	r19,zero
   4e440:	2025883a 	mov	r18,r4
   4e444:	d9000315 	stw	r4,12(sp)
   4e448:	dcc00415 	stw	r19,16(sp)
   4e44c:	004e9200 	call	4e920 <__clzsi2>
   4e450:	11000744 	addi	r4,r2,29
   4e454:	013fe80e 	bge	zero,r4,4e3f8 <__floatsidf+0x34>
   4e458:	10bfff44 	addi	r2,r2,-3
   4e45c:	10000c16 	blt	r2,zero,4e490 <__floatsidf+0xcc>
   4e460:	90a2983a 	sll	r17,r18,r2
   4e464:	0021883a 	mov	r16,zero
   4e468:	d8800217 	ldw	r2,8(sp)
   4e46c:	dc400415 	stw	r17,16(sp)
   4e470:	dc000315 	stw	r16,12(sp)
   4e474:	1105c83a 	sub	r2,r2,r4
   4e478:	d8800215 	stw	r2,8(sp)
   4e47c:	003fde06 	br	4e3f8 <__floatsidf+0x34>
   4e480:	00a00034 	movhi	r2,32768
   4e484:	20800a26 	beq	r4,r2,4e4b0 <__floatsidf+0xec>
   4e488:	0109c83a 	sub	r4,zero,r4
   4e48c:	003feb06 	br	4e43c <__floatsidf+0x78>
   4e490:	9006d07a 	srli	r3,r18,1
   4e494:	008007c4 	movi	r2,31
   4e498:	1105c83a 	sub	r2,r2,r4
   4e49c:	1886d83a 	srl	r3,r3,r2
   4e4a0:	9922983a 	sll	r17,r19,r4
   4e4a4:	9120983a 	sll	r16,r18,r4
   4e4a8:	1c62b03a 	or	r17,r3,r17
   4e4ac:	003fee06 	br	4e468 <__floatsidf+0xa4>
   4e4b0:	0009883a 	mov	r4,zero
   4e4b4:	01707834 	movhi	r5,49632
   4e4b8:	003fd306 	br	4e408 <__floatsidf+0x44>

0004e4bc <__fixdfsi>:
   4e4bc:	defff804 	addi	sp,sp,-32
   4e4c0:	2005883a 	mov	r2,r4
   4e4c4:	2807883a 	mov	r3,r5
   4e4c8:	d809883a 	mov	r4,sp
   4e4cc:	d9400204 	addi	r5,sp,8
   4e4d0:	d8c00115 	stw	r3,4(sp)
   4e4d4:	d8800015 	stw	r2,0(sp)
   4e4d8:	dfc00715 	stw	ra,28(sp)
   4e4dc:	004ee500 	call	4ee50 <__unpack_d>
   4e4e0:	d8c00217 	ldw	r3,8(sp)
   4e4e4:	00800084 	movi	r2,2
   4e4e8:	1880051e 	bne	r3,r2,4e500 <__fixdfsi+0x44>
   4e4ec:	0007883a 	mov	r3,zero
   4e4f0:	1805883a 	mov	r2,r3
   4e4f4:	dfc00717 	ldw	ra,28(sp)
   4e4f8:	dec00804 	addi	sp,sp,32
   4e4fc:	f800283a 	ret
   4e500:	00800044 	movi	r2,1
   4e504:	10fff92e 	bgeu	r2,r3,4e4ec <__fixdfsi+0x30>
   4e508:	00800104 	movi	r2,4
   4e50c:	18800426 	beq	r3,r2,4e520 <__fixdfsi+0x64>
   4e510:	d8c00417 	ldw	r3,16(sp)
   4e514:	183ff516 	blt	r3,zero,4e4ec <__fixdfsi+0x30>
   4e518:	00800784 	movi	r2,30
   4e51c:	10c0080e 	bge	r2,r3,4e540 <__fixdfsi+0x84>
   4e520:	d8800317 	ldw	r2,12(sp)
   4e524:	1000121e 	bne	r2,zero,4e570 <__fixdfsi+0xb4>
   4e528:	00e00034 	movhi	r3,32768
   4e52c:	18ffffc4 	addi	r3,r3,-1
   4e530:	1805883a 	mov	r2,r3
   4e534:	dfc00717 	ldw	ra,28(sp)
   4e538:	dec00804 	addi	sp,sp,32
   4e53c:	f800283a 	ret
   4e540:	00800f04 	movi	r2,60
   4e544:	10d1c83a 	sub	r8,r2,r3
   4e548:	40bff804 	addi	r2,r8,-32
   4e54c:	d9800517 	ldw	r6,20(sp)
   4e550:	d9c00617 	ldw	r7,24(sp)
   4e554:	10000816 	blt	r2,zero,4e578 <__fixdfsi+0xbc>
   4e558:	3888d83a 	srl	r4,r7,r2
   4e55c:	d8800317 	ldw	r2,12(sp)
   4e560:	2007883a 	mov	r3,r4
   4e564:	103fe226 	beq	r2,zero,4e4f0 <__fixdfsi+0x34>
   4e568:	0107c83a 	sub	r3,zero,r4
   4e56c:	003fe006 	br	4e4f0 <__fixdfsi+0x34>
   4e570:	00e00034 	movhi	r3,32768
   4e574:	003fde06 	br	4e4f0 <__fixdfsi+0x34>
   4e578:	39c7883a 	add	r3,r7,r7
   4e57c:	008007c4 	movi	r2,31
   4e580:	1205c83a 	sub	r2,r2,r8
   4e584:	1886983a 	sll	r3,r3,r2
   4e588:	3208d83a 	srl	r4,r6,r8
   4e58c:	1908b03a 	or	r4,r3,r4
   4e590:	003ff206 	br	4e55c <__fixdfsi+0xa0>

0004e594 <__truncdfsf2>:
   4e594:	defff804 	addi	sp,sp,-32
   4e598:	2005883a 	mov	r2,r4
   4e59c:	2807883a 	mov	r3,r5
   4e5a0:	d809883a 	mov	r4,sp
   4e5a4:	d9400204 	addi	r5,sp,8
   4e5a8:	d8c00115 	stw	r3,4(sp)
   4e5ac:	d8800015 	stw	r2,0(sp)
   4e5b0:	dfc00715 	stw	ra,28(sp)
   4e5b4:	004ee500 	call	4ee50 <__unpack_d>
   4e5b8:	d9c00517 	ldw	r7,20(sp)
   4e5bc:	da000617 	ldw	r8,24(sp)
   4e5c0:	02d00034 	movhi	r11,16384
   4e5c4:	5affffc4 	addi	r11,r11,-1
   4e5c8:	3812d7ba 	srli	r9,r7,30
   4e5cc:	401a90ba 	slli	r13,r8,2
   4e5d0:	3ac4703a 	and	r2,r7,r11
   4e5d4:	0007883a 	mov	r3,zero
   4e5d8:	6a52b03a 	or	r9,r13,r9
   4e5dc:	10c4b03a 	or	r2,r2,r3
   4e5e0:	d9000217 	ldw	r4,8(sp)
   4e5e4:	d9400317 	ldw	r5,12(sp)
   4e5e8:	d9800417 	ldw	r6,16(sp)
   4e5ec:	480f883a 	mov	r7,r9
   4e5f0:	10000126 	beq	r2,zero,4e5f8 <__truncdfsf2+0x64>
   4e5f4:	49c00054 	ori	r7,r9,1
   4e5f8:	004eb100 	call	4eb10 <__make_fp>
   4e5fc:	dfc00717 	ldw	ra,28(sp)
   4e600:	dec00804 	addi	sp,sp,32
   4e604:	f800283a 	ret

0004e608 <__floatunsidf>:
   4e608:	defff204 	addi	sp,sp,-56
   4e60c:	dfc00d15 	stw	ra,52(sp)
   4e610:	ddc00c15 	stw	r23,48(sp)
   4e614:	dd800b15 	stw	r22,44(sp)
   4e618:	dd400a15 	stw	r21,40(sp)
   4e61c:	dd000915 	stw	r20,36(sp)
   4e620:	dcc00815 	stw	r19,32(sp)
   4e624:	dc800715 	stw	r18,28(sp)
   4e628:	dc400615 	stw	r17,24(sp)
   4e62c:	dc000515 	stw	r16,20(sp)
   4e630:	d8000115 	stw	zero,4(sp)
   4e634:	20000f1e 	bne	r4,zero,4e674 <__floatunsidf+0x6c>
   4e638:	00800084 	movi	r2,2
   4e63c:	d8800015 	stw	r2,0(sp)
   4e640:	d809883a 	mov	r4,sp
   4e644:	004eb3c0 	call	4eb3c <__pack_d>
   4e648:	dfc00d17 	ldw	ra,52(sp)
   4e64c:	ddc00c17 	ldw	r23,48(sp)
   4e650:	dd800b17 	ldw	r22,44(sp)
   4e654:	dd400a17 	ldw	r21,40(sp)
   4e658:	dd000917 	ldw	r20,36(sp)
   4e65c:	dcc00817 	ldw	r19,32(sp)
   4e660:	dc800717 	ldw	r18,28(sp)
   4e664:	dc400617 	ldw	r17,24(sp)
   4e668:	dc000517 	ldw	r16,20(sp)
   4e66c:	dec00e04 	addi	sp,sp,56
   4e670:	f800283a 	ret
   4e674:	008000c4 	movi	r2,3
   4e678:	00c00f04 	movi	r3,60
   4e67c:	002f883a 	mov	r23,zero
   4e680:	202d883a 	mov	r22,r4
   4e684:	d8800015 	stw	r2,0(sp)
   4e688:	d8c00215 	stw	r3,8(sp)
   4e68c:	d9000315 	stw	r4,12(sp)
   4e690:	ddc00415 	stw	r23,16(sp)
   4e694:	004e9200 	call	4e920 <__clzsi2>
   4e698:	12400744 	addi	r9,r2,29
   4e69c:	48000b16 	blt	r9,zero,4e6cc <__floatunsidf+0xc4>
   4e6a0:	483fe726 	beq	r9,zero,4e640 <__floatunsidf+0x38>
   4e6a4:	10bfff44 	addi	r2,r2,-3
   4e6a8:	10002e16 	blt	r2,zero,4e764 <__floatunsidf+0x15c>
   4e6ac:	b0a2983a 	sll	r17,r22,r2
   4e6b0:	0021883a 	mov	r16,zero
   4e6b4:	d8800217 	ldw	r2,8(sp)
   4e6b8:	dc400415 	stw	r17,16(sp)
   4e6bc:	dc000315 	stw	r16,12(sp)
   4e6c0:	1245c83a 	sub	r2,r2,r9
   4e6c4:	d8800215 	stw	r2,8(sp)
   4e6c8:	003fdd06 	br	4e640 <__floatunsidf+0x38>
   4e6cc:	0255c83a 	sub	r10,zero,r9
   4e6d0:	51bff804 	addi	r6,r10,-32
   4e6d4:	30001b16 	blt	r6,zero,4e744 <__floatunsidf+0x13c>
   4e6d8:	b9a8d83a 	srl	r20,r23,r6
   4e6dc:	002b883a 	mov	r21,zero
   4e6e0:	000f883a 	mov	r7,zero
   4e6e4:	01000044 	movi	r4,1
   4e6e8:	0011883a 	mov	r8,zero
   4e6ec:	30002516 	blt	r6,zero,4e784 <__floatunsidf+0x17c>
   4e6f0:	21a6983a 	sll	r19,r4,r6
   4e6f4:	0025883a 	mov	r18,zero
   4e6f8:	00bfffc4 	movi	r2,-1
   4e6fc:	9089883a 	add	r4,r18,r2
   4e700:	988b883a 	add	r5,r19,r2
   4e704:	248d803a 	cmpltu	r6,r4,r18
   4e708:	314b883a 	add	r5,r6,r5
   4e70c:	b104703a 	and	r2,r22,r4
   4e710:	b946703a 	and	r3,r23,r5
   4e714:	10c4b03a 	or	r2,r2,r3
   4e718:	10000226 	beq	r2,zero,4e724 <__floatunsidf+0x11c>
   4e71c:	01c00044 	movi	r7,1
   4e720:	0011883a 	mov	r8,zero
   4e724:	d9000217 	ldw	r4,8(sp)
   4e728:	a1c4b03a 	or	r2,r20,r7
   4e72c:	aa06b03a 	or	r3,r21,r8
   4e730:	2249c83a 	sub	r4,r4,r9
   4e734:	d8c00415 	stw	r3,16(sp)
   4e738:	d9000215 	stw	r4,8(sp)
   4e73c:	d8800315 	stw	r2,12(sp)
   4e740:	003fbf06 	br	4e640 <__floatunsidf+0x38>
   4e744:	bdc7883a 	add	r3,r23,r23
   4e748:	008007c4 	movi	r2,31
   4e74c:	1285c83a 	sub	r2,r2,r10
   4e750:	1886983a 	sll	r3,r3,r2
   4e754:	b2a8d83a 	srl	r20,r22,r10
   4e758:	baaad83a 	srl	r21,r23,r10
   4e75c:	1d28b03a 	or	r20,r3,r20
   4e760:	003fdf06 	br	4e6e0 <__floatunsidf+0xd8>
   4e764:	b006d07a 	srli	r3,r22,1
   4e768:	008007c4 	movi	r2,31
   4e76c:	1245c83a 	sub	r2,r2,r9
   4e770:	1886d83a 	srl	r3,r3,r2
   4e774:	ba62983a 	sll	r17,r23,r9
   4e778:	b260983a 	sll	r16,r22,r9
   4e77c:	1c62b03a 	or	r17,r3,r17
   4e780:	003fcc06 	br	4e6b4 <__floatunsidf+0xac>
   4e784:	2006d07a 	srli	r3,r4,1
   4e788:	008007c4 	movi	r2,31
   4e78c:	1285c83a 	sub	r2,r2,r10
   4e790:	18a6d83a 	srl	r19,r3,r2
   4e794:	22a4983a 	sll	r18,r4,r10
   4e798:	003fd706 	br	4e6f8 <__floatunsidf+0xf0>

0004e79c <udivmodsi4>:
   4e79c:	29001b2e 	bgeu	r5,r4,4e80c <udivmodsi4+0x70>
   4e7a0:	28001a16 	blt	r5,zero,4e80c <udivmodsi4+0x70>
   4e7a4:	00800044 	movi	r2,1
   4e7a8:	0007883a 	mov	r3,zero
   4e7ac:	01c007c4 	movi	r7,31
   4e7b0:	00000306 	br	4e7c0 <udivmodsi4+0x24>
   4e7b4:	19c01326 	beq	r3,r7,4e804 <udivmodsi4+0x68>
   4e7b8:	18c00044 	addi	r3,r3,1
   4e7bc:	28000416 	blt	r5,zero,4e7d0 <udivmodsi4+0x34>
   4e7c0:	294b883a 	add	r5,r5,r5
   4e7c4:	1085883a 	add	r2,r2,r2
   4e7c8:	293ffa36 	bltu	r5,r4,4e7b4 <udivmodsi4+0x18>
   4e7cc:	10000d26 	beq	r2,zero,4e804 <udivmodsi4+0x68>
   4e7d0:	0007883a 	mov	r3,zero
   4e7d4:	21400236 	bltu	r4,r5,4e7e0 <udivmodsi4+0x44>
   4e7d8:	2149c83a 	sub	r4,r4,r5
   4e7dc:	1886b03a 	or	r3,r3,r2
   4e7e0:	1004d07a 	srli	r2,r2,1
   4e7e4:	280ad07a 	srli	r5,r5,1
   4e7e8:	103ffa1e 	bne	r2,zero,4e7d4 <udivmodsi4+0x38>
   4e7ec:	30000226 	beq	r6,zero,4e7f8 <udivmodsi4+0x5c>
   4e7f0:	2005883a 	mov	r2,r4
   4e7f4:	f800283a 	ret
   4e7f8:	1809883a 	mov	r4,r3
   4e7fc:	2005883a 	mov	r2,r4
   4e800:	f800283a 	ret
   4e804:	0007883a 	mov	r3,zero
   4e808:	003ff806 	br	4e7ec <udivmodsi4+0x50>
   4e80c:	00800044 	movi	r2,1
   4e810:	0007883a 	mov	r3,zero
   4e814:	003fef06 	br	4e7d4 <udivmodsi4+0x38>

0004e818 <__divsi3>:
   4e818:	defffe04 	addi	sp,sp,-8
   4e81c:	dc000015 	stw	r16,0(sp)
   4e820:	dfc00115 	stw	ra,4(sp)
   4e824:	0021883a 	mov	r16,zero
   4e828:	20000c16 	blt	r4,zero,4e85c <__divsi3+0x44>
   4e82c:	000d883a 	mov	r6,zero
   4e830:	28000e16 	blt	r5,zero,4e86c <__divsi3+0x54>
   4e834:	004e79c0 	call	4e79c <udivmodsi4>
   4e838:	1007883a 	mov	r3,r2
   4e83c:	8005003a 	cmpeq	r2,r16,zero
   4e840:	1000011e 	bne	r2,zero,4e848 <__divsi3+0x30>
   4e844:	00c7c83a 	sub	r3,zero,r3
   4e848:	1805883a 	mov	r2,r3
   4e84c:	dfc00117 	ldw	ra,4(sp)
   4e850:	dc000017 	ldw	r16,0(sp)
   4e854:	dec00204 	addi	sp,sp,8
   4e858:	f800283a 	ret
   4e85c:	0109c83a 	sub	r4,zero,r4
   4e860:	04000044 	movi	r16,1
   4e864:	000d883a 	mov	r6,zero
   4e868:	283ff20e 	bge	r5,zero,4e834 <__divsi3+0x1c>
   4e86c:	014bc83a 	sub	r5,zero,r5
   4e870:	8021003a 	cmpeq	r16,r16,zero
   4e874:	003fef06 	br	4e834 <__divsi3+0x1c>

0004e878 <__modsi3>:
   4e878:	deffff04 	addi	sp,sp,-4
   4e87c:	dfc00015 	stw	ra,0(sp)
   4e880:	01800044 	movi	r6,1
   4e884:	2807883a 	mov	r3,r5
   4e888:	20000416 	blt	r4,zero,4e89c <__modsi3+0x24>
   4e88c:	28000c16 	blt	r5,zero,4e8c0 <__modsi3+0x48>
   4e890:	dfc00017 	ldw	ra,0(sp)
   4e894:	dec00104 	addi	sp,sp,4
   4e898:	004e79c1 	jmpi	4e79c <udivmodsi4>
   4e89c:	0109c83a 	sub	r4,zero,r4
   4e8a0:	28000b16 	blt	r5,zero,4e8d0 <__modsi3+0x58>
   4e8a4:	180b883a 	mov	r5,r3
   4e8a8:	01800044 	movi	r6,1
   4e8ac:	004e79c0 	call	4e79c <udivmodsi4>
   4e8b0:	0085c83a 	sub	r2,zero,r2
   4e8b4:	dfc00017 	ldw	ra,0(sp)
   4e8b8:	dec00104 	addi	sp,sp,4
   4e8bc:	f800283a 	ret
   4e8c0:	014bc83a 	sub	r5,zero,r5
   4e8c4:	dfc00017 	ldw	ra,0(sp)
   4e8c8:	dec00104 	addi	sp,sp,4
   4e8cc:	004e79c1 	jmpi	4e79c <udivmodsi4>
   4e8d0:	0147c83a 	sub	r3,zero,r5
   4e8d4:	003ff306 	br	4e8a4 <__modsi3+0x2c>

0004e8d8 <__udivsi3>:
   4e8d8:	000d883a 	mov	r6,zero
   4e8dc:	004e79c1 	jmpi	4e79c <udivmodsi4>

0004e8e0 <__umodsi3>:
   4e8e0:	01800044 	movi	r6,1
   4e8e4:	004e79c1 	jmpi	4e79c <udivmodsi4>

0004e8e8 <__mulsi3>:
   4e8e8:	20000a26 	beq	r4,zero,4e914 <__mulsi3+0x2c>
   4e8ec:	0007883a 	mov	r3,zero
   4e8f0:	2080004c 	andi	r2,r4,1
   4e8f4:	1005003a 	cmpeq	r2,r2,zero
   4e8f8:	2008d07a 	srli	r4,r4,1
   4e8fc:	1000011e 	bne	r2,zero,4e904 <__mulsi3+0x1c>
   4e900:	1947883a 	add	r3,r3,r5
   4e904:	294b883a 	add	r5,r5,r5
   4e908:	203ff91e 	bne	r4,zero,4e8f0 <__mulsi3+0x8>
   4e90c:	1805883a 	mov	r2,r3
   4e910:	f800283a 	ret
   4e914:	0007883a 	mov	r3,zero
   4e918:	1805883a 	mov	r2,r3
   4e91c:	f800283a 	ret

0004e920 <__clzsi2>:
   4e920:	00bfffd4 	movui	r2,65535
   4e924:	11000e36 	bltu	r2,r4,4e960 <__clzsi2+0x40>
   4e928:	00803fc4 	movi	r2,255
   4e92c:	01400204 	movi	r5,8
   4e930:	0007883a 	mov	r3,zero
   4e934:	11001036 	bltu	r2,r4,4e978 <__clzsi2+0x58>
   4e938:	000b883a 	mov	r5,zero
   4e93c:	20c6d83a 	srl	r3,r4,r3
   4e940:	00800174 	movhi	r2,5
   4e944:	1088d304 	addi	r2,r2,9036
   4e948:	1887883a 	add	r3,r3,r2
   4e94c:	18800003 	ldbu	r2,0(r3)
   4e950:	00c00804 	movi	r3,32
   4e954:	2885883a 	add	r2,r5,r2
   4e958:	1885c83a 	sub	r2,r3,r2
   4e95c:	f800283a 	ret
   4e960:	01400404 	movi	r5,16
   4e964:	00804034 	movhi	r2,256
   4e968:	10bfffc4 	addi	r2,r2,-1
   4e96c:	2807883a 	mov	r3,r5
   4e970:	113ff22e 	bgeu	r2,r4,4e93c <__clzsi2+0x1c>
   4e974:	01400604 	movi	r5,24
   4e978:	2807883a 	mov	r3,r5
   4e97c:	20c6d83a 	srl	r3,r4,r3
   4e980:	00800174 	movhi	r2,5
   4e984:	1088d304 	addi	r2,r2,9036
   4e988:	1887883a 	add	r3,r3,r2
   4e98c:	18800003 	ldbu	r2,0(r3)
   4e990:	00c00804 	movi	r3,32
   4e994:	2885883a 	add	r2,r5,r2
   4e998:	1885c83a 	sub	r2,r3,r2
   4e99c:	f800283a 	ret

0004e9a0 <__unpack_f>:
   4e9a0:	21800017 	ldw	r6,0(r4)
   4e9a4:	00c02034 	movhi	r3,128
   4e9a8:	18ffffc4 	addi	r3,r3,-1
   4e9ac:	3004d5fa 	srli	r2,r6,23
   4e9b0:	3008d7fa 	srli	r4,r6,31
   4e9b4:	30ce703a 	and	r7,r6,r3
   4e9b8:	10c03fcc 	andi	r3,r2,255
   4e9bc:	29000115 	stw	r4,4(r5)
   4e9c0:	1800131e 	bne	r3,zero,4ea10 <__unpack_f+0x70>
   4e9c4:	38000f26 	beq	r7,zero,4ea04 <__unpack_f+0x64>
   4e9c8:	380691fa 	slli	r3,r7,7
   4e9cc:	01bfe084 	movi	r6,-126
   4e9d0:	008000c4 	movi	r2,3
   4e9d4:	01100034 	movhi	r4,16384
   4e9d8:	213fffc4 	addi	r4,r4,-1
   4e9dc:	28800015 	stw	r2,0(r5)
   4e9e0:	29800215 	stw	r6,8(r5)
   4e9e4:	20c00536 	bltu	r4,r3,4e9fc <__unpack_f+0x5c>
   4e9e8:	3005883a 	mov	r2,r6
   4e9ec:	18c7883a 	add	r3,r3,r3
   4e9f0:	10bfffc4 	addi	r2,r2,-1
   4e9f4:	20fffd2e 	bgeu	r4,r3,4e9ec <__unpack_f+0x4c>
   4e9f8:	28800215 	stw	r2,8(r5)
   4e9fc:	28c00315 	stw	r3,12(r5)
   4ea00:	f800283a 	ret
   4ea04:	00800084 	movi	r2,2
   4ea08:	28800015 	stw	r2,0(r5)
   4ea0c:	f800283a 	ret
   4ea10:	00803fc4 	movi	r2,255
   4ea14:	18800826 	beq	r3,r2,4ea38 <__unpack_f+0x98>
   4ea18:	380491fa 	slli	r2,r7,7
   4ea1c:	18ffe044 	addi	r3,r3,-127
   4ea20:	28c00215 	stw	r3,8(r5)
   4ea24:	10900034 	orhi	r2,r2,16384
   4ea28:	28800315 	stw	r2,12(r5)
   4ea2c:	008000c4 	movi	r2,3
   4ea30:	28800015 	stw	r2,0(r5)
   4ea34:	f800283a 	ret
   4ea38:	3800031e 	bne	r7,zero,4ea48 <__unpack_f+0xa8>
   4ea3c:	00800104 	movi	r2,4
   4ea40:	28800015 	stw	r2,0(r5)
   4ea44:	f800283a 	ret
   4ea48:	3080042c 	andhi	r2,r6,16
   4ea4c:	10000426 	beq	r2,zero,4ea60 <__unpack_f+0xc0>
   4ea50:	00800044 	movi	r2,1
   4ea54:	28800015 	stw	r2,0(r5)
   4ea58:	29c00315 	stw	r7,12(r5)
   4ea5c:	f800283a 	ret
   4ea60:	28000015 	stw	zero,0(r5)
   4ea64:	003ffc06 	br	4ea58 <__unpack_f+0xb8>

0004ea68 <__fpcmp_parts_f>:
   4ea68:	21800017 	ldw	r6,0(r4)
   4ea6c:	00c00044 	movi	r3,1
   4ea70:	19800a2e 	bgeu	r3,r6,4ea9c <__fpcmp_parts_f+0x34>
   4ea74:	28800017 	ldw	r2,0(r5)
   4ea78:	1880082e 	bgeu	r3,r2,4ea9c <__fpcmp_parts_f+0x34>
   4ea7c:	00c00104 	movi	r3,4
   4ea80:	30c01e26 	beq	r6,r3,4eafc <__fpcmp_parts_f+0x94>
   4ea84:	10c01a26 	beq	r2,r3,4eaf0 <__fpcmp_parts_f+0x88>
   4ea88:	00c00084 	movi	r3,2
   4ea8c:	30c00526 	beq	r6,r3,4eaa4 <__fpcmp_parts_f+0x3c>
   4ea90:	10c0071e 	bne	r2,r3,4eab0 <__fpcmp_parts_f+0x48>
   4ea94:	20800117 	ldw	r2,4(r4)
   4ea98:	1000091e 	bne	r2,zero,4eac0 <__fpcmp_parts_f+0x58>
   4ea9c:	00800044 	movi	r2,1
   4eaa0:	f800283a 	ret
   4eaa4:	10c0121e 	bne	r2,r3,4eaf0 <__fpcmp_parts_f+0x88>
   4eaa8:	0005883a 	mov	r2,zero
   4eaac:	f800283a 	ret
   4eab0:	20c00117 	ldw	r3,4(r4)
   4eab4:	28800117 	ldw	r2,4(r5)
   4eab8:	18800326 	beq	r3,r2,4eac8 <__fpcmp_parts_f+0x60>
   4eabc:	183ff726 	beq	r3,zero,4ea9c <__fpcmp_parts_f+0x34>
   4eac0:	00bfffc4 	movi	r2,-1
   4eac4:	f800283a 	ret
   4eac8:	21800217 	ldw	r6,8(r4)
   4eacc:	28800217 	ldw	r2,8(r5)
   4ead0:	11bffa16 	blt	r2,r6,4eabc <__fpcmp_parts_f+0x54>
   4ead4:	30800416 	blt	r6,r2,4eae8 <__fpcmp_parts_f+0x80>
   4ead8:	21000317 	ldw	r4,12(r4)
   4eadc:	29400317 	ldw	r5,12(r5)
   4eae0:	293ff636 	bltu	r5,r4,4eabc <__fpcmp_parts_f+0x54>
   4eae4:	217ff02e 	bgeu	r4,r5,4eaa8 <__fpcmp_parts_f+0x40>
   4eae8:	183fec1e 	bne	r3,zero,4ea9c <__fpcmp_parts_f+0x34>
   4eaec:	003ff406 	br	4eac0 <__fpcmp_parts_f+0x58>
   4eaf0:	28800117 	ldw	r2,4(r5)
   4eaf4:	103fe91e 	bne	r2,zero,4ea9c <__fpcmp_parts_f+0x34>
   4eaf8:	003ff106 	br	4eac0 <__fpcmp_parts_f+0x58>
   4eafc:	11bfe51e 	bne	r2,r6,4ea94 <__fpcmp_parts_f+0x2c>
   4eb00:	28c00117 	ldw	r3,4(r5)
   4eb04:	20800117 	ldw	r2,4(r4)
   4eb08:	1885c83a 	sub	r2,r3,r2
   4eb0c:	f800283a 	ret

0004eb10 <__make_fp>:
   4eb10:	defffb04 	addi	sp,sp,-20
   4eb14:	d9000015 	stw	r4,0(sp)
   4eb18:	d809883a 	mov	r4,sp
   4eb1c:	dfc00415 	stw	ra,16(sp)
   4eb20:	d9400115 	stw	r5,4(sp)
   4eb24:	d9800215 	stw	r6,8(sp)
   4eb28:	d9c00315 	stw	r7,12(sp)
   4eb2c:	004f0500 	call	4f050 <__pack_f>
   4eb30:	dfc00417 	ldw	ra,16(sp)
   4eb34:	dec00504 	addi	sp,sp,20
   4eb38:	f800283a 	ret

0004eb3c <__pack_d>:
   4eb3c:	20c00017 	ldw	r3,0(r4)
   4eb40:	defffd04 	addi	sp,sp,-12
   4eb44:	dc000015 	stw	r16,0(sp)
   4eb48:	dc800215 	stw	r18,8(sp)
   4eb4c:	dc400115 	stw	r17,4(sp)
   4eb50:	00800044 	movi	r2,1
   4eb54:	22000317 	ldw	r8,12(r4)
   4eb58:	001f883a 	mov	r15,zero
   4eb5c:	22400417 	ldw	r9,16(r4)
   4eb60:	24000117 	ldw	r16,4(r4)
   4eb64:	10c0552e 	bgeu	r2,r3,4ecbc <__pack_d+0x180>
   4eb68:	00800104 	movi	r2,4
   4eb6c:	18804f26 	beq	r3,r2,4ecac <__pack_d+0x170>
   4eb70:	00800084 	movi	r2,2
   4eb74:	18800226 	beq	r3,r2,4eb80 <__pack_d+0x44>
   4eb78:	4244b03a 	or	r2,r8,r9
   4eb7c:	10001a1e 	bne	r2,zero,4ebe8 <__pack_d+0xac>
   4eb80:	000d883a 	mov	r6,zero
   4eb84:	000f883a 	mov	r7,zero
   4eb88:	0011883a 	mov	r8,zero
   4eb8c:	00800434 	movhi	r2,16
   4eb90:	10bfffc4 	addi	r2,r2,-1
   4eb94:	301d883a 	mov	r14,r6
   4eb98:	3884703a 	and	r2,r7,r2
   4eb9c:	400a953a 	slli	r5,r8,20
   4eba0:	79bffc2c 	andhi	r6,r15,65520
   4eba4:	308cb03a 	or	r6,r6,r2
   4eba8:	00e00434 	movhi	r3,32784
   4ebac:	18ffffc4 	addi	r3,r3,-1
   4ebb0:	800497fa 	slli	r2,r16,31
   4ebb4:	30c6703a 	and	r3,r6,r3
   4ebb8:	1946b03a 	or	r3,r3,r5
   4ebbc:	01600034 	movhi	r5,32768
   4ebc0:	297fffc4 	addi	r5,r5,-1
   4ebc4:	194a703a 	and	r5,r3,r5
   4ebc8:	288ab03a 	or	r5,r5,r2
   4ebcc:	2807883a 	mov	r3,r5
   4ebd0:	7005883a 	mov	r2,r14
   4ebd4:	dc800217 	ldw	r18,8(sp)
   4ebd8:	dc400117 	ldw	r17,4(sp)
   4ebdc:	dc000017 	ldw	r16,0(sp)
   4ebe0:	dec00304 	addi	sp,sp,12
   4ebe4:	f800283a 	ret
   4ebe8:	21000217 	ldw	r4,8(r4)
   4ebec:	00bf0084 	movi	r2,-1022
   4ebf0:	20803f16 	blt	r4,r2,4ecf0 <__pack_d+0x1b4>
   4ebf4:	0080ffc4 	movi	r2,1023
   4ebf8:	11002c16 	blt	r2,r4,4ecac <__pack_d+0x170>
   4ebfc:	00803fc4 	movi	r2,255
   4ec00:	408c703a 	and	r6,r8,r2
   4ec04:	00802004 	movi	r2,128
   4ec08:	0007883a 	mov	r3,zero
   4ec0c:	000f883a 	mov	r7,zero
   4ec10:	2280ffc4 	addi	r10,r4,1023
   4ec14:	30801e26 	beq	r6,r2,4ec90 <__pack_d+0x154>
   4ec18:	00801fc4 	movi	r2,127
   4ec1c:	4089883a 	add	r4,r8,r2
   4ec20:	220d803a 	cmpltu	r6,r4,r8
   4ec24:	324d883a 	add	r6,r6,r9
   4ec28:	2011883a 	mov	r8,r4
   4ec2c:	3013883a 	mov	r9,r6
   4ec30:	00880034 	movhi	r2,8192
   4ec34:	10bfffc4 	addi	r2,r2,-1
   4ec38:	12400d36 	bltu	r2,r9,4ec70 <__pack_d+0x134>
   4ec3c:	4804963a 	slli	r2,r9,24
   4ec40:	400cd23a 	srli	r6,r8,8
   4ec44:	480ed23a 	srli	r7,r9,8
   4ec48:	013fffc4 	movi	r4,-1
   4ec4c:	118cb03a 	or	r6,r2,r6
   4ec50:	01400434 	movhi	r5,16
   4ec54:	297fffc4 	addi	r5,r5,-1
   4ec58:	3104703a 	and	r2,r6,r4
   4ec5c:	3946703a 	and	r3,r7,r5
   4ec60:	5201ffcc 	andi	r8,r10,2047
   4ec64:	100d883a 	mov	r6,r2
   4ec68:	180f883a 	mov	r7,r3
   4ec6c:	003fc706 	br	4eb8c <__pack_d+0x50>
   4ec70:	480897fa 	slli	r4,r9,31
   4ec74:	4004d07a 	srli	r2,r8,1
   4ec78:	4806d07a 	srli	r3,r9,1
   4ec7c:	52800044 	addi	r10,r10,1
   4ec80:	2084b03a 	or	r2,r4,r2
   4ec84:	1011883a 	mov	r8,r2
   4ec88:	1813883a 	mov	r9,r3
   4ec8c:	003feb06 	br	4ec3c <__pack_d+0x100>
   4ec90:	383fe11e 	bne	r7,zero,4ec18 <__pack_d+0xdc>
   4ec94:	01004004 	movi	r4,256
   4ec98:	4104703a 	and	r2,r8,r4
   4ec9c:	10c4b03a 	or	r2,r2,r3
   4eca0:	103fe326 	beq	r2,zero,4ec30 <__pack_d+0xf4>
   4eca4:	3005883a 	mov	r2,r6
   4eca8:	003fdc06 	br	4ec1c <__pack_d+0xe0>
   4ecac:	000d883a 	mov	r6,zero
   4ecb0:	000f883a 	mov	r7,zero
   4ecb4:	0201ffc4 	movi	r8,2047
   4ecb8:	003fb406 	br	4eb8c <__pack_d+0x50>
   4ecbc:	0005883a 	mov	r2,zero
   4ecc0:	00c00234 	movhi	r3,8
   4ecc4:	408cb03a 	or	r6,r8,r2
   4ecc8:	48ceb03a 	or	r7,r9,r3
   4eccc:	013fffc4 	movi	r4,-1
   4ecd0:	01400434 	movhi	r5,16
   4ecd4:	297fffc4 	addi	r5,r5,-1
   4ecd8:	3104703a 	and	r2,r6,r4
   4ecdc:	3946703a 	and	r3,r7,r5
   4ece0:	100d883a 	mov	r6,r2
   4ece4:	180f883a 	mov	r7,r3
   4ece8:	0201ffc4 	movi	r8,2047
   4ecec:	003fa706 	br	4eb8c <__pack_d+0x50>
   4ecf0:	1109c83a 	sub	r4,r2,r4
   4ecf4:	00800e04 	movi	r2,56
   4ecf8:	11004316 	blt	r2,r4,4ee08 <__pack_d+0x2cc>
   4ecfc:	21fff804 	addi	r7,r4,-32
   4ed00:	38004516 	blt	r7,zero,4ee18 <__pack_d+0x2dc>
   4ed04:	49d8d83a 	srl	r12,r9,r7
   4ed08:	001b883a 	mov	r13,zero
   4ed0c:	0023883a 	mov	r17,zero
   4ed10:	01400044 	movi	r5,1
   4ed14:	0025883a 	mov	r18,zero
   4ed18:	38004716 	blt	r7,zero,4ee38 <__pack_d+0x2fc>
   4ed1c:	29d6983a 	sll	r11,r5,r7
   4ed20:	0015883a 	mov	r10,zero
   4ed24:	00bfffc4 	movi	r2,-1
   4ed28:	5089883a 	add	r4,r10,r2
   4ed2c:	588b883a 	add	r5,r11,r2
   4ed30:	228d803a 	cmpltu	r6,r4,r10
   4ed34:	314b883a 	add	r5,r6,r5
   4ed38:	4104703a 	and	r2,r8,r4
   4ed3c:	4946703a 	and	r3,r9,r5
   4ed40:	10c4b03a 	or	r2,r2,r3
   4ed44:	10000226 	beq	r2,zero,4ed50 <__pack_d+0x214>
   4ed48:	04400044 	movi	r17,1
   4ed4c:	0025883a 	mov	r18,zero
   4ed50:	00803fc4 	movi	r2,255
   4ed54:	644eb03a 	or	r7,r12,r17
   4ed58:	3892703a 	and	r9,r7,r2
   4ed5c:	00802004 	movi	r2,128
   4ed60:	6c90b03a 	or	r8,r13,r18
   4ed64:	0015883a 	mov	r10,zero
   4ed68:	48801626 	beq	r9,r2,4edc4 <__pack_d+0x288>
   4ed6c:	01001fc4 	movi	r4,127
   4ed70:	3905883a 	add	r2,r7,r4
   4ed74:	11cd803a 	cmpltu	r6,r2,r7
   4ed78:	320d883a 	add	r6,r6,r8
   4ed7c:	100f883a 	mov	r7,r2
   4ed80:	00840034 	movhi	r2,4096
   4ed84:	10bfffc4 	addi	r2,r2,-1
   4ed88:	3011883a 	mov	r8,r6
   4ed8c:	0007883a 	mov	r3,zero
   4ed90:	11801b36 	bltu	r2,r6,4ee00 <__pack_d+0x2c4>
   4ed94:	4004963a 	slli	r2,r8,24
   4ed98:	3808d23a 	srli	r4,r7,8
   4ed9c:	400ad23a 	srli	r5,r8,8
   4eda0:	1813883a 	mov	r9,r3
   4eda4:	1108b03a 	or	r4,r2,r4
   4eda8:	00bfffc4 	movi	r2,-1
   4edac:	00c00434 	movhi	r3,16
   4edb0:	18ffffc4 	addi	r3,r3,-1
   4edb4:	208c703a 	and	r6,r4,r2
   4edb8:	28ce703a 	and	r7,r5,r3
   4edbc:	4a01ffcc 	andi	r8,r9,2047
   4edc0:	003f7206 	br	4eb8c <__pack_d+0x50>
   4edc4:	503fe91e 	bne	r10,zero,4ed6c <__pack_d+0x230>
   4edc8:	01004004 	movi	r4,256
   4edcc:	3904703a 	and	r2,r7,r4
   4edd0:	0007883a 	mov	r3,zero
   4edd4:	10c4b03a 	or	r2,r2,r3
   4edd8:	10000626 	beq	r2,zero,4edf4 <__pack_d+0x2b8>
   4eddc:	3a45883a 	add	r2,r7,r9
   4ede0:	11cd803a 	cmpltu	r6,r2,r7
   4ede4:	320d883a 	add	r6,r6,r8
   4ede8:	100f883a 	mov	r7,r2
   4edec:	3011883a 	mov	r8,r6
   4edf0:	0007883a 	mov	r3,zero
   4edf4:	00840034 	movhi	r2,4096
   4edf8:	10bfffc4 	addi	r2,r2,-1
   4edfc:	123fe52e 	bgeu	r2,r8,4ed94 <__pack_d+0x258>
   4ee00:	00c00044 	movi	r3,1
   4ee04:	003fe306 	br	4ed94 <__pack_d+0x258>
   4ee08:	0009883a 	mov	r4,zero
   4ee0c:	0013883a 	mov	r9,zero
   4ee10:	000b883a 	mov	r5,zero
   4ee14:	003fe406 	br	4eda8 <__pack_d+0x26c>
   4ee18:	4a47883a 	add	r3,r9,r9
   4ee1c:	008007c4 	movi	r2,31
   4ee20:	1105c83a 	sub	r2,r2,r4
   4ee24:	1886983a 	sll	r3,r3,r2
   4ee28:	4118d83a 	srl	r12,r8,r4
   4ee2c:	491ad83a 	srl	r13,r9,r4
   4ee30:	1b18b03a 	or	r12,r3,r12
   4ee34:	003fb506 	br	4ed0c <__pack_d+0x1d0>
   4ee38:	2806d07a 	srli	r3,r5,1
   4ee3c:	008007c4 	movi	r2,31
   4ee40:	1105c83a 	sub	r2,r2,r4
   4ee44:	1896d83a 	srl	r11,r3,r2
   4ee48:	2914983a 	sll	r10,r5,r4
   4ee4c:	003fb506 	br	4ed24 <__pack_d+0x1e8>

0004ee50 <__unpack_d>:
   4ee50:	20c00117 	ldw	r3,4(r4)
   4ee54:	22400017 	ldw	r9,0(r4)
   4ee58:	00800434 	movhi	r2,16
   4ee5c:	10bfffc4 	addi	r2,r2,-1
   4ee60:	1808d53a 	srli	r4,r3,20
   4ee64:	180cd7fa 	srli	r6,r3,31
   4ee68:	1894703a 	and	r10,r3,r2
   4ee6c:	2201ffcc 	andi	r8,r4,2047
   4ee70:	281b883a 	mov	r13,r5
   4ee74:	4817883a 	mov	r11,r9
   4ee78:	29800115 	stw	r6,4(r5)
   4ee7c:	5019883a 	mov	r12,r10
   4ee80:	40001e1e 	bne	r8,zero,4eefc <__unpack_d+0xac>
   4ee84:	4a84b03a 	or	r2,r9,r10
   4ee88:	10001926 	beq	r2,zero,4eef0 <__unpack_d+0xa0>
   4ee8c:	4804d63a 	srli	r2,r9,24
   4ee90:	500c923a 	slli	r6,r10,8
   4ee94:	013f0084 	movi	r4,-1022
   4ee98:	00c40034 	movhi	r3,4096
   4ee9c:	18ffffc4 	addi	r3,r3,-1
   4eea0:	118cb03a 	or	r6,r2,r6
   4eea4:	008000c4 	movi	r2,3
   4eea8:	480a923a 	slli	r5,r9,8
   4eeac:	68800015 	stw	r2,0(r13)
   4eeb0:	69000215 	stw	r4,8(r13)
   4eeb4:	19800b36 	bltu	r3,r6,4eee4 <__unpack_d+0x94>
   4eeb8:	200f883a 	mov	r7,r4
   4eebc:	1811883a 	mov	r8,r3
   4eec0:	2945883a 	add	r2,r5,r5
   4eec4:	1149803a 	cmpltu	r4,r2,r5
   4eec8:	3187883a 	add	r3,r6,r6
   4eecc:	20c9883a 	add	r4,r4,r3
   4eed0:	100b883a 	mov	r5,r2
   4eed4:	200d883a 	mov	r6,r4
   4eed8:	39ffffc4 	addi	r7,r7,-1
   4eedc:	413ff82e 	bgeu	r8,r4,4eec0 <__unpack_d+0x70>
   4eee0:	69c00215 	stw	r7,8(r13)
   4eee4:	69800415 	stw	r6,16(r13)
   4eee8:	69400315 	stw	r5,12(r13)
   4eeec:	f800283a 	ret
   4eef0:	00800084 	movi	r2,2
   4eef4:	28800015 	stw	r2,0(r5)
   4eef8:	f800283a 	ret
   4eefc:	0081ffc4 	movi	r2,2047
   4ef00:	40800f26 	beq	r8,r2,4ef40 <__unpack_d+0xf0>
   4ef04:	480cd63a 	srli	r6,r9,24
   4ef08:	5006923a 	slli	r3,r10,8
   4ef0c:	4804923a 	slli	r2,r9,8
   4ef10:	0009883a 	mov	r4,zero
   4ef14:	30c6b03a 	or	r3,r6,r3
   4ef18:	01440034 	movhi	r5,4096
   4ef1c:	110cb03a 	or	r6,r2,r4
   4ef20:	423f0044 	addi	r8,r8,-1023
   4ef24:	194eb03a 	or	r7,r3,r5
   4ef28:	008000c4 	movi	r2,3
   4ef2c:	69c00415 	stw	r7,16(r13)
   4ef30:	6a000215 	stw	r8,8(r13)
   4ef34:	68800015 	stw	r2,0(r13)
   4ef38:	69800315 	stw	r6,12(r13)
   4ef3c:	f800283a 	ret
   4ef40:	4a84b03a 	or	r2,r9,r10
   4ef44:	1000031e 	bne	r2,zero,4ef54 <__unpack_d+0x104>
   4ef48:	00800104 	movi	r2,4
   4ef4c:	28800015 	stw	r2,0(r5)
   4ef50:	f800283a 	ret
   4ef54:	0009883a 	mov	r4,zero
   4ef58:	01400234 	movhi	r5,8
   4ef5c:	4904703a 	and	r2,r9,r4
   4ef60:	5146703a 	and	r3,r10,r5
   4ef64:	10c4b03a 	or	r2,r2,r3
   4ef68:	10000526 	beq	r2,zero,4ef80 <__unpack_d+0x130>
   4ef6c:	00800044 	movi	r2,1
   4ef70:	68800015 	stw	r2,0(r13)
   4ef74:	6b000415 	stw	r12,16(r13)
   4ef78:	6ac00315 	stw	r11,12(r13)
   4ef7c:	f800283a 	ret
   4ef80:	68000015 	stw	zero,0(r13)
   4ef84:	003ffb06 	br	4ef74 <__unpack_d+0x124>

0004ef88 <__fpcmp_parts_d>:
   4ef88:	21800017 	ldw	r6,0(r4)
   4ef8c:	00c00044 	movi	r3,1
   4ef90:	19800a2e 	bgeu	r3,r6,4efbc <__fpcmp_parts_d+0x34>
   4ef94:	28800017 	ldw	r2,0(r5)
   4ef98:	1880082e 	bgeu	r3,r2,4efbc <__fpcmp_parts_d+0x34>
   4ef9c:	00c00104 	movi	r3,4
   4efa0:	30c02626 	beq	r6,r3,4f03c <__fpcmp_parts_d+0xb4>
   4efa4:	10c02226 	beq	r2,r3,4f030 <__fpcmp_parts_d+0xa8>
   4efa8:	00c00084 	movi	r3,2
   4efac:	30c00526 	beq	r6,r3,4efc4 <__fpcmp_parts_d+0x3c>
   4efb0:	10c0071e 	bne	r2,r3,4efd0 <__fpcmp_parts_d+0x48>
   4efb4:	20800117 	ldw	r2,4(r4)
   4efb8:	1000091e 	bne	r2,zero,4efe0 <__fpcmp_parts_d+0x58>
   4efbc:	00800044 	movi	r2,1
   4efc0:	f800283a 	ret
   4efc4:	10c01a1e 	bne	r2,r3,4f030 <__fpcmp_parts_d+0xa8>
   4efc8:	0005883a 	mov	r2,zero
   4efcc:	f800283a 	ret
   4efd0:	22000117 	ldw	r8,4(r4)
   4efd4:	28800117 	ldw	r2,4(r5)
   4efd8:	40800326 	beq	r8,r2,4efe8 <__fpcmp_parts_d+0x60>
   4efdc:	403ff726 	beq	r8,zero,4efbc <__fpcmp_parts_d+0x34>
   4efe0:	00bfffc4 	movi	r2,-1
   4efe4:	f800283a 	ret
   4efe8:	20c00217 	ldw	r3,8(r4)
   4efec:	28800217 	ldw	r2,8(r5)
   4eff0:	10fffa16 	blt	r2,r3,4efdc <__fpcmp_parts_d+0x54>
   4eff4:	18800916 	blt	r3,r2,4f01c <__fpcmp_parts_d+0x94>
   4eff8:	21c00417 	ldw	r7,16(r4)
   4effc:	28c00417 	ldw	r3,16(r5)
   4f000:	21800317 	ldw	r6,12(r4)
   4f004:	28800317 	ldw	r2,12(r5)
   4f008:	19fff436 	bltu	r3,r7,4efdc <__fpcmp_parts_d+0x54>
   4f00c:	38c00526 	beq	r7,r3,4f024 <__fpcmp_parts_d+0x9c>
   4f010:	38c00236 	bltu	r7,r3,4f01c <__fpcmp_parts_d+0x94>
   4f014:	19ffec1e 	bne	r3,r7,4efc8 <__fpcmp_parts_d+0x40>
   4f018:	30bfeb2e 	bgeu	r6,r2,4efc8 <__fpcmp_parts_d+0x40>
   4f01c:	403fe71e 	bne	r8,zero,4efbc <__fpcmp_parts_d+0x34>
   4f020:	003fef06 	br	4efe0 <__fpcmp_parts_d+0x58>
   4f024:	11bffa2e 	bgeu	r2,r6,4f010 <__fpcmp_parts_d+0x88>
   4f028:	403fe426 	beq	r8,zero,4efbc <__fpcmp_parts_d+0x34>
   4f02c:	003fec06 	br	4efe0 <__fpcmp_parts_d+0x58>
   4f030:	28800117 	ldw	r2,4(r5)
   4f034:	103fe11e 	bne	r2,zero,4efbc <__fpcmp_parts_d+0x34>
   4f038:	003fe906 	br	4efe0 <__fpcmp_parts_d+0x58>
   4f03c:	11bfdd1e 	bne	r2,r6,4efb4 <__fpcmp_parts_d+0x2c>
   4f040:	28c00117 	ldw	r3,4(r5)
   4f044:	20800117 	ldw	r2,4(r4)
   4f048:	1885c83a 	sub	r2,r3,r2
   4f04c:	f800283a 	ret

0004f050 <__pack_f>:
   4f050:	20c00017 	ldw	r3,0(r4)
   4f054:	01c00044 	movi	r7,1
   4f058:	21800317 	ldw	r6,12(r4)
   4f05c:	21400117 	ldw	r5,4(r4)
   4f060:	38c02d2e 	bgeu	r7,r3,4f118 <__pack_f+0xc8>
   4f064:	00800104 	movi	r2,4
   4f068:	18802826 	beq	r3,r2,4f10c <__pack_f+0xbc>
   4f06c:	00800084 	movi	r2,2
   4f070:	18800126 	beq	r3,r2,4f078 <__pack_f+0x28>
   4f074:	3000101e 	bne	r6,zero,4f0b8 <__pack_f+0x68>
   4f078:	000d883a 	mov	r6,zero
   4f07c:	0007883a 	mov	r3,zero
   4f080:	19003fcc 	andi	r4,r3,255
   4f084:	200895fa 	slli	r4,r4,23
   4f088:	00c02034 	movhi	r3,128
   4f08c:	18ffffc4 	addi	r3,r3,-1
   4f090:	30c6703a 	and	r3,r6,r3
   4f094:	10a0002c 	andhi	r2,r2,32768
   4f098:	10c4b03a 	or	r2,r2,r3
   4f09c:	280a97fa 	slli	r5,r5,31
   4f0a0:	1104b03a 	or	r2,r2,r4
   4f0a4:	00e00034 	movhi	r3,32768
   4f0a8:	18ffffc4 	addi	r3,r3,-1
   4f0ac:	10c4703a 	and	r2,r2,r3
   4f0b0:	1144b03a 	or	r2,r2,r5
   4f0b4:	f800283a 	ret
   4f0b8:	21000217 	ldw	r4,8(r4)
   4f0bc:	00bfe084 	movi	r2,-126
   4f0c0:	20801b16 	blt	r4,r2,4f130 <__pack_f+0xe0>
   4f0c4:	00801fc4 	movi	r2,127
   4f0c8:	11001016 	blt	r2,r4,4f10c <__pack_f+0xbc>
   4f0cc:	308e703a 	and	r7,r6,r2
   4f0d0:	2087883a 	add	r3,r4,r2
   4f0d4:	00801004 	movi	r2,64
   4f0d8:	38800526 	beq	r7,r2,4f0f0 <__pack_f+0xa0>
   4f0dc:	31800fc4 	addi	r6,r6,63
   4f0e0:	30000716 	blt	r6,zero,4f100 <__pack_f+0xb0>
   4f0e4:	300490ba 	slli	r2,r6,2
   4f0e8:	100cd27a 	srli	r6,r2,9
   4f0ec:	003fe406 	br	4f080 <__pack_f+0x30>
   4f0f0:	3080200c 	andi	r2,r6,128
   4f0f4:	103ffa26 	beq	r2,zero,4f0e0 <__pack_f+0x90>
   4f0f8:	31cd883a 	add	r6,r6,r7
   4f0fc:	003ff806 	br	4f0e0 <__pack_f+0x90>
   4f100:	300cd07a 	srli	r6,r6,1
   4f104:	18c00044 	addi	r3,r3,1
   4f108:	003ff606 	br	4f0e4 <__pack_f+0x94>
   4f10c:	000d883a 	mov	r6,zero
   4f110:	00ffffc4 	movi	r3,-1
   4f114:	003fda06 	br	4f080 <__pack_f+0x30>
   4f118:	31800434 	orhi	r6,r6,16
   4f11c:	00802034 	movhi	r2,128
   4f120:	10bfffc4 	addi	r2,r2,-1
   4f124:	308c703a 	and	r6,r6,r2
   4f128:	00ffffc4 	movi	r3,-1
   4f12c:	003fd406 	br	4f080 <__pack_f+0x30>
   4f130:	1109c83a 	sub	r4,r2,r4
   4f134:	00800644 	movi	r2,25
   4f138:	11001216 	blt	r2,r4,4f184 <__pack_f+0x134>
   4f13c:	3904983a 	sll	r2,r7,r4
   4f140:	3106d83a 	srl	r3,r6,r4
   4f144:	10bfffc4 	addi	r2,r2,-1
   4f148:	3084703a 	and	r2,r6,r2
   4f14c:	1004c03a 	cmpne	r2,r2,zero
   4f150:	1886b03a 	or	r3,r3,r2
   4f154:	19001fcc 	andi	r4,r3,127
   4f158:	00801004 	movi	r2,64
   4f15c:	20800c26 	beq	r4,r2,4f190 <__pack_f+0x140>
   4f160:	18c00fc4 	addi	r3,r3,63
   4f164:	00900034 	movhi	r2,16384
   4f168:	10bfffc4 	addi	r2,r2,-1
   4f16c:	180cd1fa 	srli	r6,r3,7
   4f170:	10c7803a 	cmpltu	r3,r2,r3
   4f174:	00802034 	movhi	r2,128
   4f178:	10bfffc4 	addi	r2,r2,-1
   4f17c:	308c703a 	and	r6,r6,r2
   4f180:	003fbf06 	br	4f080 <__pack_f+0x30>
   4f184:	0007883a 	mov	r3,zero
   4f188:	000d883a 	mov	r6,zero
   4f18c:	003ff906 	br	4f174 <__pack_f+0x124>
   4f190:	1880200c 	andi	r2,r3,128
   4f194:	10000126 	beq	r2,zero,4f19c <__pack_f+0x14c>
   4f198:	1907883a 	add	r3,r3,r4
   4f19c:	180cd1fa 	srli	r6,r3,7
   4f1a0:	00900034 	movhi	r2,16384
   4f1a4:	10bfffc4 	addi	r2,r2,-1
   4f1a8:	10c7803a 	cmpltu	r3,r2,r3
   4f1ac:	003ff106 	br	4f174 <__pack_f+0x124>

0004f1b0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4f1b0:	defff804 	addi	sp,sp,-32
   4f1b4:	dfc00715 	stw	ra,28(sp)
   4f1b8:	df000615 	stw	fp,24(sp)
   4f1bc:	df000604 	addi	fp,sp,24
   4f1c0:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4f1c4:	e0bffc17 	ldw	r2,-16(fp)
   4f1c8:	1004803a 	cmplt	r2,r2,zero
   4f1cc:	1000091e 	bne	r2,zero,4f1f4 <close+0x44>
   4f1d0:	e13ffc17 	ldw	r4,-16(fp)
   4f1d4:	01400304 	movi	r5,12
   4f1d8:	004e8e80 	call	4e8e8 <__mulsi3>
   4f1dc:	1007883a 	mov	r3,r2
   4f1e0:	00800174 	movhi	r2,5
   4f1e4:	108b3904 	addi	r2,r2,11492
   4f1e8:	1887883a 	add	r3,r3,r2
   4f1ec:	e0ffff15 	stw	r3,-4(fp)
   4f1f0:	00000106 	br	4f1f8 <close+0x48>
   4f1f4:	e03fff15 	stw	zero,-4(fp)
   4f1f8:	e0bfff17 	ldw	r2,-4(fp)
   4f1fc:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   4f200:	e0bffb17 	ldw	r2,-20(fp)
   4f204:	1005003a 	cmpeq	r2,r2,zero
   4f208:	10001d1e 	bne	r2,zero,4f280 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4f20c:	e0bffb17 	ldw	r2,-20(fp)
   4f210:	10800017 	ldw	r2,0(r2)
   4f214:	10800417 	ldw	r2,16(r2)
   4f218:	1005003a 	cmpeq	r2,r2,zero
   4f21c:	1000071e 	bne	r2,zero,4f23c <close+0x8c>
   4f220:	e0bffb17 	ldw	r2,-20(fp)
   4f224:	10800017 	ldw	r2,0(r2)
   4f228:	10800417 	ldw	r2,16(r2)
   4f22c:	e13ffb17 	ldw	r4,-20(fp)
   4f230:	103ee83a 	callr	r2
   4f234:	e0bffe15 	stw	r2,-8(fp)
   4f238:	00000106 	br	4f240 <close+0x90>
   4f23c:	e03ffe15 	stw	zero,-8(fp)
   4f240:	e0bffe17 	ldw	r2,-8(fp)
   4f244:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4f248:	e13ffc17 	ldw	r4,-16(fp)
   4f24c:	004fa080 	call	4fa08 <alt_release_fd>
    if (rval < 0)
   4f250:	e0bffa17 	ldw	r2,-24(fp)
   4f254:	1004403a 	cmpge	r2,r2,zero
   4f258:	1000071e 	bne	r2,zero,4f278 <close+0xc8>
    {
      ALT_ERRNO = -rval;
   4f25c:	004f2b00 	call	4f2b0 <alt_get_errno>
   4f260:	e0fffa17 	ldw	r3,-24(fp)
   4f264:	00c7c83a 	sub	r3,zero,r3
   4f268:	10c00015 	stw	r3,0(r2)
      return -1;
   4f26c:	00bfffc4 	movi	r2,-1
   4f270:	e0bffd15 	stw	r2,-12(fp)
   4f274:	00000806 	br	4f298 <close+0xe8>
    }
    return 0;
   4f278:	e03ffd15 	stw	zero,-12(fp)
   4f27c:	00000606 	br	4f298 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4f280:	004f2b00 	call	4f2b0 <alt_get_errno>
   4f284:	1007883a 	mov	r3,r2
   4f288:	00801444 	movi	r2,81
   4f28c:	18800015 	stw	r2,0(r3)
    return -1;
   4f290:	00bfffc4 	movi	r2,-1
   4f294:	e0bffd15 	stw	r2,-12(fp)
   4f298:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   4f29c:	e037883a 	mov	sp,fp
   4f2a0:	dfc00117 	ldw	ra,4(sp)
   4f2a4:	df000017 	ldw	fp,0(sp)
   4f2a8:	dec00204 	addi	sp,sp,8
   4f2ac:	f800283a 	ret

0004f2b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4f2b0:	defffd04 	addi	sp,sp,-12
   4f2b4:	dfc00215 	stw	ra,8(sp)
   4f2b8:	df000115 	stw	fp,4(sp)
   4f2bc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4f2c0:	00800174 	movhi	r2,5
   4f2c4:	108fbd04 	addi	r2,r2,16116
   4f2c8:	10800017 	ldw	r2,0(r2)
   4f2cc:	1005003a 	cmpeq	r2,r2,zero
   4f2d0:	1000061e 	bne	r2,zero,4f2ec <alt_get_errno+0x3c>
   4f2d4:	00800174 	movhi	r2,5
   4f2d8:	108fbd04 	addi	r2,r2,16116
   4f2dc:	10800017 	ldw	r2,0(r2)
   4f2e0:	103ee83a 	callr	r2
   4f2e4:	e0bfff15 	stw	r2,-4(fp)
   4f2e8:	00000306 	br	4f2f8 <alt_get_errno+0x48>
   4f2ec:	00800174 	movhi	r2,5
   4f2f0:	10966b04 	addi	r2,r2,22956
   4f2f4:	e0bfff15 	stw	r2,-4(fp)
   4f2f8:	e0bfff17 	ldw	r2,-4(fp)
}
   4f2fc:	e037883a 	mov	sp,fp
   4f300:	dfc00117 	ldw	ra,4(sp)
   4f304:	df000017 	ldw	fp,0(sp)
   4f308:	dec00204 	addi	sp,sp,8
   4f30c:	f800283a 	ret

0004f310 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4f310:	defffc04 	addi	sp,sp,-16
   4f314:	df000315 	stw	fp,12(sp)
   4f318:	df000304 	addi	fp,sp,12
   4f31c:	e13ffd15 	stw	r4,-12(fp)
   4f320:	e17ffe15 	stw	r5,-8(fp)
   4f324:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4f328:	e0bfff17 	ldw	r2,-4(fp)
}
   4f32c:	e037883a 	mov	sp,fp
   4f330:	df000017 	ldw	fp,0(sp)
   4f334:	dec00104 	addi	sp,sp,4
   4f338:	f800283a 	ret

0004f33c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4f33c:	defff904 	addi	sp,sp,-28
   4f340:	dfc00615 	stw	ra,24(sp)
   4f344:	df000515 	stw	fp,20(sp)
   4f348:	df000504 	addi	fp,sp,20
   4f34c:	e13ffc15 	stw	r4,-16(fp)
   4f350:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f354:	e0bffc17 	ldw	r2,-16(fp)
   4f358:	1004803a 	cmplt	r2,r2,zero
   4f35c:	1000091e 	bne	r2,zero,4f384 <fstat+0x48>
   4f360:	e13ffc17 	ldw	r4,-16(fp)
   4f364:	01400304 	movi	r5,12
   4f368:	004e8e80 	call	4e8e8 <__mulsi3>
   4f36c:	1007883a 	mov	r3,r2
   4f370:	00800174 	movhi	r2,5
   4f374:	108b3904 	addi	r2,r2,11492
   4f378:	1887883a 	add	r3,r3,r2
   4f37c:	e0ffff15 	stw	r3,-4(fp)
   4f380:	00000106 	br	4f388 <fstat+0x4c>
   4f384:	e03fff15 	stw	zero,-4(fp)
   4f388:	e0bfff17 	ldw	r2,-4(fp)
   4f38c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4f390:	e0bffb17 	ldw	r2,-20(fp)
   4f394:	1005003a 	cmpeq	r2,r2,zero
   4f398:	1000121e 	bne	r2,zero,4f3e4 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4f39c:	e0bffb17 	ldw	r2,-20(fp)
   4f3a0:	10800017 	ldw	r2,0(r2)
   4f3a4:	10800817 	ldw	r2,32(r2)
   4f3a8:	1005003a 	cmpeq	r2,r2,zero
   4f3ac:	1000081e 	bne	r2,zero,4f3d0 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
   4f3b0:	e0bffb17 	ldw	r2,-20(fp)
   4f3b4:	10800017 	ldw	r2,0(r2)
   4f3b8:	10800817 	ldw	r2,32(r2)
   4f3bc:	e13ffb17 	ldw	r4,-20(fp)
   4f3c0:	e17ffd17 	ldw	r5,-12(fp)
   4f3c4:	103ee83a 	callr	r2
   4f3c8:	e0bffe15 	stw	r2,-8(fp)
   4f3cc:	00000b06 	br	4f3fc <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4f3d0:	e0fffd17 	ldw	r3,-12(fp)
   4f3d4:	00880004 	movi	r2,8192
   4f3d8:	18800115 	stw	r2,4(r3)
      return 0;
   4f3dc:	e03ffe15 	stw	zero,-8(fp)
   4f3e0:	00000606 	br	4f3fc <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4f3e4:	004f4140 	call	4f414 <alt_get_errno>
   4f3e8:	1007883a 	mov	r3,r2
   4f3ec:	00801444 	movi	r2,81
   4f3f0:	18800015 	stw	r2,0(r3)
    return -1;
   4f3f4:	00bfffc4 	movi	r2,-1
   4f3f8:	e0bffe15 	stw	r2,-8(fp)
   4f3fc:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   4f400:	e037883a 	mov	sp,fp
   4f404:	dfc00117 	ldw	ra,4(sp)
   4f408:	df000017 	ldw	fp,0(sp)
   4f40c:	dec00204 	addi	sp,sp,8
   4f410:	f800283a 	ret

0004f414 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4f414:	defffd04 	addi	sp,sp,-12
   4f418:	dfc00215 	stw	ra,8(sp)
   4f41c:	df000115 	stw	fp,4(sp)
   4f420:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4f424:	00800174 	movhi	r2,5
   4f428:	108fbd04 	addi	r2,r2,16116
   4f42c:	10800017 	ldw	r2,0(r2)
   4f430:	1005003a 	cmpeq	r2,r2,zero
   4f434:	1000061e 	bne	r2,zero,4f450 <alt_get_errno+0x3c>
   4f438:	00800174 	movhi	r2,5
   4f43c:	108fbd04 	addi	r2,r2,16116
   4f440:	10800017 	ldw	r2,0(r2)
   4f444:	103ee83a 	callr	r2
   4f448:	e0bfff15 	stw	r2,-4(fp)
   4f44c:	00000306 	br	4f45c <alt_get_errno+0x48>
   4f450:	00800174 	movhi	r2,5
   4f454:	10966b04 	addi	r2,r2,22956
   4f458:	e0bfff15 	stw	r2,-4(fp)
   4f45c:	e0bfff17 	ldw	r2,-4(fp)
}
   4f460:	e037883a 	mov	sp,fp
   4f464:	dfc00117 	ldw	ra,4(sp)
   4f468:	df000017 	ldw	fp,0(sp)
   4f46c:	dec00204 	addi	sp,sp,8
   4f470:	f800283a 	ret

0004f474 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4f474:	deffeb04 	addi	sp,sp,-84
   4f478:	dfc01415 	stw	ra,80(sp)
   4f47c:	df001315 	stw	fp,76(sp)
   4f480:	df001304 	addi	fp,sp,76
   4f484:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f488:	e0bffd17 	ldw	r2,-12(fp)
   4f48c:	1004803a 	cmplt	r2,r2,zero
   4f490:	1000091e 	bne	r2,zero,4f4b8 <isatty+0x44>
   4f494:	e13ffd17 	ldw	r4,-12(fp)
   4f498:	01400304 	movi	r5,12
   4f49c:	004e8e80 	call	4e8e8 <__mulsi3>
   4f4a0:	1007883a 	mov	r3,r2
   4f4a4:	00800174 	movhi	r2,5
   4f4a8:	108b3904 	addi	r2,r2,11492
   4f4ac:	1887883a 	add	r3,r3,r2
   4f4b0:	e0ffff15 	stw	r3,-4(fp)
   4f4b4:	00000106 	br	4f4bc <isatty+0x48>
   4f4b8:	e03fff15 	stw	zero,-4(fp)
   4f4bc:	e0bfff17 	ldw	r2,-4(fp)
   4f4c0:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   4f4c4:	e0bfed17 	ldw	r2,-76(fp)
   4f4c8:	1005003a 	cmpeq	r2,r2,zero
   4f4cc:	10000f1e 	bne	r2,zero,4f50c <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4f4d0:	e0bfed17 	ldw	r2,-76(fp)
   4f4d4:	10800017 	ldw	r2,0(r2)
   4f4d8:	10800817 	ldw	r2,32(r2)
   4f4dc:	1004c03a 	cmpne	r2,r2,zero
   4f4e0:	1000031e 	bne	r2,zero,4f4f0 <isatty+0x7c>
    {
      return 1;
   4f4e4:	00800044 	movi	r2,1
   4f4e8:	e0bffe15 	stw	r2,-8(fp)
   4f4ec:	00000c06 	br	4f520 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4f4f0:	e17fee04 	addi	r5,fp,-72
   4f4f4:	e13ffd17 	ldw	r4,-12(fp)
   4f4f8:	004f33c0 	call	4f33c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4f4fc:	e0bfef17 	ldw	r2,-68(fp)
   4f500:	10880020 	cmpeqi	r2,r2,8192
   4f504:	e0bffe15 	stw	r2,-8(fp)
   4f508:	00000506 	br	4f520 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4f50c:	004f5380 	call	4f538 <alt_get_errno>
   4f510:	1007883a 	mov	r3,r2
   4f514:	00801444 	movi	r2,81
   4f518:	18800015 	stw	r2,0(r3)
    return 0;
   4f51c:	e03ffe15 	stw	zero,-8(fp)
   4f520:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   4f524:	e037883a 	mov	sp,fp
   4f528:	dfc00117 	ldw	ra,4(sp)
   4f52c:	df000017 	ldw	fp,0(sp)
   4f530:	dec00204 	addi	sp,sp,8
   4f534:	f800283a 	ret

0004f538 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4f538:	defffd04 	addi	sp,sp,-12
   4f53c:	dfc00215 	stw	ra,8(sp)
   4f540:	df000115 	stw	fp,4(sp)
   4f544:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4f548:	00800174 	movhi	r2,5
   4f54c:	108fbd04 	addi	r2,r2,16116
   4f550:	10800017 	ldw	r2,0(r2)
   4f554:	1005003a 	cmpeq	r2,r2,zero
   4f558:	1000061e 	bne	r2,zero,4f574 <alt_get_errno+0x3c>
   4f55c:	00800174 	movhi	r2,5
   4f560:	108fbd04 	addi	r2,r2,16116
   4f564:	10800017 	ldw	r2,0(r2)
   4f568:	103ee83a 	callr	r2
   4f56c:	e0bfff15 	stw	r2,-4(fp)
   4f570:	00000306 	br	4f580 <alt_get_errno+0x48>
   4f574:	00800174 	movhi	r2,5
   4f578:	10966b04 	addi	r2,r2,22956
   4f57c:	e0bfff15 	stw	r2,-4(fp)
   4f580:	e0bfff17 	ldw	r2,-4(fp)
}
   4f584:	e037883a 	mov	sp,fp
   4f588:	dfc00117 	ldw	ra,4(sp)
   4f58c:	df000017 	ldw	fp,0(sp)
   4f590:	dec00204 	addi	sp,sp,8
   4f594:	f800283a 	ret

0004f598 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4f598:	defffe04 	addi	sp,sp,-8
   4f59c:	dfc00115 	stw	ra,4(sp)
   4f5a0:	df000015 	stw	fp,0(sp)
   4f5a4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4f5a8:	01000174 	movhi	r4,5
   4f5ac:	210fc204 	addi	r4,r4,16136
   4f5b0:	01400174 	movhi	r5,5
   4f5b4:	29492004 	addi	r5,r5,9344
   4f5b8:	01800174 	movhi	r6,5
   4f5bc:	318fc204 	addi	r6,r6,16136
   4f5c0:	004f6180 	call	4f618 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4f5c4:	01000134 	movhi	r4,4
   4f5c8:	21000804 	addi	r4,r4,32
   4f5cc:	01400134 	movhi	r5,4
   4f5d0:	29400804 	addi	r5,r5,32
   4f5d4:	01800134 	movhi	r6,4
   4f5d8:	31806d04 	addi	r6,r6,436
   4f5dc:	004f6180 	call	4f618 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4f5e0:	01000174 	movhi	r4,5
   4f5e4:	21078804 	addi	r4,r4,7712
   4f5e8:	01400174 	movhi	r5,5
   4f5ec:	29478804 	addi	r5,r5,7712
   4f5f0:	01800174 	movhi	r6,5
   4f5f4:	31892004 	addi	r6,r6,9344
   4f5f8:	004f6180 	call	4f618 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4f5fc:	0050c140 	call	50c14 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4f600:	0050e0c0 	call	50e0c <alt_icache_flush_all>
}
   4f604:	e037883a 	mov	sp,fp
   4f608:	dfc00117 	ldw	ra,4(sp)
   4f60c:	df000017 	ldw	fp,0(sp)
   4f610:	dec00204 	addi	sp,sp,8
   4f614:	f800283a 	ret

0004f618 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4f618:	defffc04 	addi	sp,sp,-16
   4f61c:	df000315 	stw	fp,12(sp)
   4f620:	df000304 	addi	fp,sp,12
   4f624:	e13ffd15 	stw	r4,-12(fp)
   4f628:	e17ffe15 	stw	r5,-8(fp)
   4f62c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4f630:	e0fffe17 	ldw	r3,-8(fp)
   4f634:	e0bffd17 	ldw	r2,-12(fp)
   4f638:	18800e26 	beq	r3,r2,4f674 <alt_load_section+0x5c>
  {
    while( to != end )
   4f63c:	00000a06 	br	4f668 <alt_load_section+0x50>
    {
      *to++ = *from++;
   4f640:	e0bffd17 	ldw	r2,-12(fp)
   4f644:	10c00017 	ldw	r3,0(r2)
   4f648:	e0bffe17 	ldw	r2,-8(fp)
   4f64c:	10c00015 	stw	r3,0(r2)
   4f650:	e0bffe17 	ldw	r2,-8(fp)
   4f654:	10800104 	addi	r2,r2,4
   4f658:	e0bffe15 	stw	r2,-8(fp)
   4f65c:	e0bffd17 	ldw	r2,-12(fp)
   4f660:	10800104 	addi	r2,r2,4
   4f664:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4f668:	e0fffe17 	ldw	r3,-8(fp)
   4f66c:	e0bfff17 	ldw	r2,-4(fp)
   4f670:	18bff31e 	bne	r3,r2,4f640 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   4f674:	e037883a 	mov	sp,fp
   4f678:	df000017 	ldw	fp,0(sp)
   4f67c:	dec00104 	addi	sp,sp,4
   4f680:	f800283a 	ret

0004f684 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4f684:	defff804 	addi	sp,sp,-32
   4f688:	dfc00715 	stw	ra,28(sp)
   4f68c:	df000615 	stw	fp,24(sp)
   4f690:	df000604 	addi	fp,sp,24
   4f694:	e13ffc15 	stw	r4,-16(fp)
   4f698:	e17ffd15 	stw	r5,-12(fp)
   4f69c:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4f6a0:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f6a4:	e0bffc17 	ldw	r2,-16(fp)
   4f6a8:	1004803a 	cmplt	r2,r2,zero
   4f6ac:	1000091e 	bne	r2,zero,4f6d4 <lseek+0x50>
   4f6b0:	e13ffc17 	ldw	r4,-16(fp)
   4f6b4:	01400304 	movi	r5,12
   4f6b8:	004e8e80 	call	4e8e8 <__mulsi3>
   4f6bc:	1007883a 	mov	r3,r2
   4f6c0:	00800174 	movhi	r2,5
   4f6c4:	108b3904 	addi	r2,r2,11492
   4f6c8:	1887883a 	add	r3,r3,r2
   4f6cc:	e0ffff15 	stw	r3,-4(fp)
   4f6d0:	00000106 	br	4f6d8 <lseek+0x54>
   4f6d4:	e03fff15 	stw	zero,-4(fp)
   4f6d8:	e0bfff17 	ldw	r2,-4(fp)
   4f6dc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   4f6e0:	e0bffb17 	ldw	r2,-20(fp)
   4f6e4:	1005003a 	cmpeq	r2,r2,zero
   4f6e8:	1000111e 	bne	r2,zero,4f730 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4f6ec:	e0bffb17 	ldw	r2,-20(fp)
   4f6f0:	10800017 	ldw	r2,0(r2)
   4f6f4:	10800717 	ldw	r2,28(r2)
   4f6f8:	1005003a 	cmpeq	r2,r2,zero
   4f6fc:	1000091e 	bne	r2,zero,4f724 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4f700:	e0bffb17 	ldw	r2,-20(fp)
   4f704:	10800017 	ldw	r2,0(r2)
   4f708:	10800717 	ldw	r2,28(r2)
   4f70c:	e13ffb17 	ldw	r4,-20(fp)
   4f710:	e17ffd17 	ldw	r5,-12(fp)
   4f714:	e1bffe17 	ldw	r6,-8(fp)
   4f718:	103ee83a 	callr	r2
   4f71c:	e0bffa15 	stw	r2,-24(fp)
   4f720:	00000506 	br	4f738 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4f724:	00bfde84 	movi	r2,-134
   4f728:	e0bffa15 	stw	r2,-24(fp)
   4f72c:	00000206 	br	4f738 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
   4f730:	00bfebc4 	movi	r2,-81
   4f734:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   4f738:	e0bffa17 	ldw	r2,-24(fp)
   4f73c:	1004403a 	cmpge	r2,r2,zero
   4f740:	1000071e 	bne	r2,zero,4f760 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
   4f744:	004f7780 	call	4f778 <alt_get_errno>
   4f748:	1007883a 	mov	r3,r2
   4f74c:	e0bffa17 	ldw	r2,-24(fp)
   4f750:	0085c83a 	sub	r2,zero,r2
   4f754:	18800015 	stw	r2,0(r3)
    rc = -1;
   4f758:	00bfffc4 	movi	r2,-1
   4f75c:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   4f760:	e0bffa17 	ldw	r2,-24(fp)
}
   4f764:	e037883a 	mov	sp,fp
   4f768:	dfc00117 	ldw	ra,4(sp)
   4f76c:	df000017 	ldw	fp,0(sp)
   4f770:	dec00204 	addi	sp,sp,8
   4f774:	f800283a 	ret

0004f778 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4f778:	defffd04 	addi	sp,sp,-12
   4f77c:	dfc00215 	stw	ra,8(sp)
   4f780:	df000115 	stw	fp,4(sp)
   4f784:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4f788:	00800174 	movhi	r2,5
   4f78c:	108fbd04 	addi	r2,r2,16116
   4f790:	10800017 	ldw	r2,0(r2)
   4f794:	1005003a 	cmpeq	r2,r2,zero
   4f798:	1000061e 	bne	r2,zero,4f7b4 <alt_get_errno+0x3c>
   4f79c:	00800174 	movhi	r2,5
   4f7a0:	108fbd04 	addi	r2,r2,16116
   4f7a4:	10800017 	ldw	r2,0(r2)
   4f7a8:	103ee83a 	callr	r2
   4f7ac:	e0bfff15 	stw	r2,-4(fp)
   4f7b0:	00000306 	br	4f7c0 <alt_get_errno+0x48>
   4f7b4:	00800174 	movhi	r2,5
   4f7b8:	10966b04 	addi	r2,r2,22956
   4f7bc:	e0bfff15 	stw	r2,-4(fp)
   4f7c0:	e0bfff17 	ldw	r2,-4(fp)
}
   4f7c4:	e037883a 	mov	sp,fp
   4f7c8:	dfc00117 	ldw	ra,4(sp)
   4f7cc:	df000017 	ldw	fp,0(sp)
   4f7d0:	dec00204 	addi	sp,sp,8
   4f7d4:	f800283a 	ret

0004f7d8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4f7d8:	defffd04 	addi	sp,sp,-12
   4f7dc:	dfc00215 	stw	ra,8(sp)
   4f7e0:	df000115 	stw	fp,4(sp)
   4f7e4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4f7e8:	0009883a 	mov	r4,zero
   4f7ec:	004fcf00 	call	4fcf0 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4f7f0:	004fd240 	call	4fd24 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4f7f4:	01000174 	movhi	r4,5
   4f7f8:	21091604 	addi	r4,r4,9304
   4f7fc:	01400174 	movhi	r5,5
   4f800:	29491604 	addi	r5,r5,9304
   4f804:	01800174 	movhi	r6,5
   4f808:	31891604 	addi	r6,r6,9304
   4f80c:	00511e00 	call	511e0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4f810:	0050d440 	call	50d44 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4f814:	01000174 	movhi	r4,5
   4f818:	21036a04 	addi	r4,r4,3496
   4f81c:	0051a140 	call	51a14 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4f820:	d126bb17 	ldw	r4,-25876(gp)
   4f824:	d166bc17 	ldw	r5,-25872(gp)
   4f828:	d1a6bd17 	ldw	r6,-25868(gp)
   4f82c:	00401f00 	call	401f0 <main>
   4f830:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4f834:	01000044 	movi	r4,1
   4f838:	004f1b00 	call	4f1b0 <close>
  exit (result);
   4f83c:	e13fff17 	ldw	r4,-4(fp)
   4f840:	0051a280 	call	51a28 <exit>

0004f844 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4f844:	defffe04 	addi	sp,sp,-8
   4f848:	df000115 	stw	fp,4(sp)
   4f84c:	df000104 	addi	fp,sp,4
   4f850:	e13fff15 	stw	r4,-4(fp)
}
   4f854:	e037883a 	mov	sp,fp
   4f858:	df000017 	ldw	fp,0(sp)
   4f85c:	dec00104 	addi	sp,sp,4
   4f860:	f800283a 	ret

0004f864 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4f864:	defffe04 	addi	sp,sp,-8
   4f868:	df000115 	stw	fp,4(sp)
   4f86c:	df000104 	addi	fp,sp,4
   4f870:	e13fff15 	stw	r4,-4(fp)
}
   4f874:	e037883a 	mov	sp,fp
   4f878:	df000017 	ldw	fp,0(sp)
   4f87c:	dec00104 	addi	sp,sp,4
   4f880:	f800283a 	ret

0004f884 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4f884:	defff704 	addi	sp,sp,-36
   4f888:	dfc00815 	stw	ra,32(sp)
   4f88c:	df000715 	stw	fp,28(sp)
   4f890:	df000704 	addi	fp,sp,28
   4f894:	e13ffb15 	stw	r4,-20(fp)
   4f898:	e17ffc15 	stw	r5,-16(fp)
   4f89c:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4f8a0:	e0bffb17 	ldw	r2,-20(fp)
   4f8a4:	1004803a 	cmplt	r2,r2,zero
   4f8a8:	1000091e 	bne	r2,zero,4f8d0 <read+0x4c>
   4f8ac:	e13ffb17 	ldw	r4,-20(fp)
   4f8b0:	01400304 	movi	r5,12
   4f8b4:	004e8e80 	call	4e8e8 <__mulsi3>
   4f8b8:	1007883a 	mov	r3,r2
   4f8bc:	00800174 	movhi	r2,5
   4f8c0:	108b3904 	addi	r2,r2,11492
   4f8c4:	1887883a 	add	r3,r3,r2
   4f8c8:	e0ffff15 	stw	r3,-4(fp)
   4f8cc:	00000106 	br	4f8d4 <read+0x50>
   4f8d0:	e03fff15 	stw	zero,-4(fp)
   4f8d4:	e0bfff17 	ldw	r2,-4(fp)
   4f8d8:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   4f8dc:	e0bffa17 	ldw	r2,-24(fp)
   4f8e0:	1005003a 	cmpeq	r2,r2,zero
   4f8e4:	1000241e 	bne	r2,zero,4f978 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4f8e8:	e0bffa17 	ldw	r2,-24(fp)
   4f8ec:	10800217 	ldw	r2,8(r2)
   4f8f0:	108000cc 	andi	r2,r2,3
   4f8f4:	10800060 	cmpeqi	r2,r2,1
   4f8f8:	10001a1e 	bne	r2,zero,4f964 <read+0xe0>
   4f8fc:	e0bffa17 	ldw	r2,-24(fp)
   4f900:	10800017 	ldw	r2,0(r2)
   4f904:	10800517 	ldw	r2,20(r2)
   4f908:	1005003a 	cmpeq	r2,r2,zero
   4f90c:	1000151e 	bne	r2,zero,4f964 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4f910:	e0bffa17 	ldw	r2,-24(fp)
   4f914:	10800017 	ldw	r2,0(r2)
   4f918:	10800517 	ldw	r2,20(r2)
   4f91c:	e17ffc17 	ldw	r5,-16(fp)
   4f920:	e1bffd17 	ldw	r6,-12(fp)
   4f924:	e13ffa17 	ldw	r4,-24(fp)
   4f928:	103ee83a 	callr	r2
   4f92c:	e0bff915 	stw	r2,-28(fp)
   4f930:	e0bff917 	ldw	r2,-28(fp)
   4f934:	1004403a 	cmpge	r2,r2,zero
   4f938:	1000071e 	bne	r2,zero,4f958 <read+0xd4>
        {
          ALT_ERRNO = -rval;
   4f93c:	004f9a80 	call	4f9a8 <alt_get_errno>
   4f940:	e0fff917 	ldw	r3,-28(fp)
   4f944:	00c7c83a 	sub	r3,zero,r3
   4f948:	10c00015 	stw	r3,0(r2)
          return -1;
   4f94c:	00bfffc4 	movi	r2,-1
   4f950:	e0bffe15 	stw	r2,-8(fp)
   4f954:	00000e06 	br	4f990 <read+0x10c>
        }
        return rval;
   4f958:	e0bff917 	ldw	r2,-28(fp)
   4f95c:	e0bffe15 	stw	r2,-8(fp)
   4f960:	00000b06 	br	4f990 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4f964:	004f9a80 	call	4f9a8 <alt_get_errno>
   4f968:	1007883a 	mov	r3,r2
   4f96c:	00800344 	movi	r2,13
   4f970:	18800015 	stw	r2,0(r3)
   4f974:	00000406 	br	4f988 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4f978:	004f9a80 	call	4f9a8 <alt_get_errno>
   4f97c:	1007883a 	mov	r3,r2
   4f980:	00801444 	movi	r2,81
   4f984:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4f988:	00bfffc4 	movi	r2,-1
   4f98c:	e0bffe15 	stw	r2,-8(fp)
   4f990:	e0bffe17 	ldw	r2,-8(fp)
}
   4f994:	e037883a 	mov	sp,fp
   4f998:	dfc00117 	ldw	ra,4(sp)
   4f99c:	df000017 	ldw	fp,0(sp)
   4f9a0:	dec00204 	addi	sp,sp,8
   4f9a4:	f800283a 	ret

0004f9a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4f9a8:	defffd04 	addi	sp,sp,-12
   4f9ac:	dfc00215 	stw	ra,8(sp)
   4f9b0:	df000115 	stw	fp,4(sp)
   4f9b4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4f9b8:	00800174 	movhi	r2,5
   4f9bc:	108fbd04 	addi	r2,r2,16116
   4f9c0:	10800017 	ldw	r2,0(r2)
   4f9c4:	1005003a 	cmpeq	r2,r2,zero
   4f9c8:	1000061e 	bne	r2,zero,4f9e4 <alt_get_errno+0x3c>
   4f9cc:	00800174 	movhi	r2,5
   4f9d0:	108fbd04 	addi	r2,r2,16116
   4f9d4:	10800017 	ldw	r2,0(r2)
   4f9d8:	103ee83a 	callr	r2
   4f9dc:	e0bfff15 	stw	r2,-4(fp)
   4f9e0:	00000306 	br	4f9f0 <alt_get_errno+0x48>
   4f9e4:	00800174 	movhi	r2,5
   4f9e8:	10966b04 	addi	r2,r2,22956
   4f9ec:	e0bfff15 	stw	r2,-4(fp)
   4f9f0:	e0bfff17 	ldw	r2,-4(fp)
}
   4f9f4:	e037883a 	mov	sp,fp
   4f9f8:	dfc00117 	ldw	ra,4(sp)
   4f9fc:	df000017 	ldw	fp,0(sp)
   4fa00:	dec00204 	addi	sp,sp,8
   4fa04:	f800283a 	ret

0004fa08 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4fa08:	defffc04 	addi	sp,sp,-16
   4fa0c:	dfc00315 	stw	ra,12(sp)
   4fa10:	df000215 	stw	fp,8(sp)
   4fa14:	dc000115 	stw	r16,4(sp)
   4fa18:	df000104 	addi	fp,sp,4
   4fa1c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4fa20:	e0bfff17 	ldw	r2,-4(fp)
   4fa24:	108000d0 	cmplti	r2,r2,3
   4fa28:	10000f1e 	bne	r2,zero,4fa68 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
   4fa2c:	e13fff17 	ldw	r4,-4(fp)
   4fa30:	04000174 	movhi	r16,5
   4fa34:	840b3904 	addi	r16,r16,11492
   4fa38:	01400304 	movi	r5,12
   4fa3c:	004e8e80 	call	4e8e8 <__mulsi3>
   4fa40:	1405883a 	add	r2,r2,r16
   4fa44:	10800204 	addi	r2,r2,8
   4fa48:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4fa4c:	e13fff17 	ldw	r4,-4(fp)
   4fa50:	04000174 	movhi	r16,5
   4fa54:	840b3904 	addi	r16,r16,11492
   4fa58:	01400304 	movi	r5,12
   4fa5c:	004e8e80 	call	4e8e8 <__mulsi3>
   4fa60:	1405883a 	add	r2,r2,r16
   4fa64:	10000015 	stw	zero,0(r2)
  }
}
   4fa68:	e037883a 	mov	sp,fp
   4fa6c:	dfc00217 	ldw	ra,8(sp)
   4fa70:	df000117 	ldw	fp,4(sp)
   4fa74:	dc000017 	ldw	r16,0(sp)
   4fa78:	dec00304 	addi	sp,sp,12
   4fa7c:	f800283a 	ret

0004fa80 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4fa80:	defff804 	addi	sp,sp,-32
   4fa84:	df000715 	stw	fp,28(sp)
   4fa88:	df000704 	addi	fp,sp,28
   4fa8c:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4fa90:	0005303a 	rdctl	r2,status
   4fa94:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4fa98:	e0fffb17 	ldw	r3,-20(fp)
   4fa9c:	00bfff84 	movi	r2,-2
   4faa0:	1884703a 	and	r2,r3,r2
   4faa4:	1001703a 	wrctl	status,r2
  
  return context;
   4faa8:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4faac:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4fab0:	d0a00d17 	ldw	r2,-32716(gp)
   4fab4:	10c000c4 	addi	r3,r2,3
   4fab8:	00bfff04 	movi	r2,-4
   4fabc:	1884703a 	and	r2,r3,r2
   4fac0:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4fac4:	d0e00d17 	ldw	r3,-32716(gp)
   4fac8:	e0bffe17 	ldw	r2,-8(fp)
   4facc:	1887883a 	add	r3,r3,r2
   4fad0:	00800234 	movhi	r2,8
   4fad4:	10800004 	addi	r2,r2,0
   4fad8:	10c0072e 	bgeu	r2,r3,4faf8 <sbrk+0x78>
   4fadc:	e0bffd17 	ldw	r2,-12(fp)
   4fae0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4fae4:	e0bffa17 	ldw	r2,-24(fp)
   4fae8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4faec:	00bfffc4 	movi	r2,-1
   4faf0:	e0bfff15 	stw	r2,-4(fp)
   4faf4:	00000c06 	br	4fb28 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   4faf8:	d0a00d17 	ldw	r2,-32716(gp)
   4fafc:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   4fb00:	d0e00d17 	ldw	r3,-32716(gp)
   4fb04:	e0bffe17 	ldw	r2,-8(fp)
   4fb08:	1885883a 	add	r2,r3,r2
   4fb0c:	d0a00d15 	stw	r2,-32716(gp)
   4fb10:	e0bffd17 	ldw	r2,-12(fp)
   4fb14:	e0bff915 	stw	r2,-28(fp)
   4fb18:	e0bff917 	ldw	r2,-28(fp)
   4fb1c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4fb20:	e0bffc17 	ldw	r2,-16(fp)
   4fb24:	e0bfff15 	stw	r2,-4(fp)
   4fb28:	e0bfff17 	ldw	r2,-4(fp)
} 
   4fb2c:	e037883a 	mov	sp,fp
   4fb30:	df000017 	ldw	fp,0(sp)
   4fb34:	dec00104 	addi	sp,sp,4
   4fb38:	f800283a 	ret

0004fb3c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4fb3c:	defffd04 	addi	sp,sp,-12
   4fb40:	dfc00215 	stw	ra,8(sp)
   4fb44:	df000115 	stw	fp,4(sp)
   4fb48:	df000104 	addi	fp,sp,4
   4fb4c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4fb50:	e13fff17 	ldw	r4,-4(fp)
   4fb54:	0050ab80 	call	50ab8 <alt_busy_sleep>
}
   4fb58:	e037883a 	mov	sp,fp
   4fb5c:	dfc00117 	ldw	ra,4(sp)
   4fb60:	df000017 	ldw	fp,0(sp)
   4fb64:	dec00204 	addi	sp,sp,8
   4fb68:	f800283a 	ret

0004fb6c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4fb6c:	defff704 	addi	sp,sp,-36
   4fb70:	dfc00815 	stw	ra,32(sp)
   4fb74:	df000715 	stw	fp,28(sp)
   4fb78:	df000704 	addi	fp,sp,28
   4fb7c:	e13ffb15 	stw	r4,-20(fp)
   4fb80:	e17ffc15 	stw	r5,-16(fp)
   4fb84:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4fb88:	e0bffb17 	ldw	r2,-20(fp)
   4fb8c:	1004803a 	cmplt	r2,r2,zero
   4fb90:	1000091e 	bne	r2,zero,4fbb8 <write+0x4c>
   4fb94:	e13ffb17 	ldw	r4,-20(fp)
   4fb98:	01400304 	movi	r5,12
   4fb9c:	004e8e80 	call	4e8e8 <__mulsi3>
   4fba0:	1007883a 	mov	r3,r2
   4fba4:	00800174 	movhi	r2,5
   4fba8:	108b3904 	addi	r2,r2,11492
   4fbac:	1887883a 	add	r3,r3,r2
   4fbb0:	e0ffff15 	stw	r3,-4(fp)
   4fbb4:	00000106 	br	4fbbc <write+0x50>
   4fbb8:	e03fff15 	stw	zero,-4(fp)
   4fbbc:	e0bfff17 	ldw	r2,-4(fp)
   4fbc0:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   4fbc4:	e0bffa17 	ldw	r2,-24(fp)
   4fbc8:	1005003a 	cmpeq	r2,r2,zero
   4fbcc:	1000241e 	bne	r2,zero,4fc60 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4fbd0:	e0bffa17 	ldw	r2,-24(fp)
   4fbd4:	10800217 	ldw	r2,8(r2)
   4fbd8:	108000cc 	andi	r2,r2,3
   4fbdc:	1005003a 	cmpeq	r2,r2,zero
   4fbe0:	10001a1e 	bne	r2,zero,4fc4c <write+0xe0>
   4fbe4:	e0bffa17 	ldw	r2,-24(fp)
   4fbe8:	10800017 	ldw	r2,0(r2)
   4fbec:	10800617 	ldw	r2,24(r2)
   4fbf0:	1005003a 	cmpeq	r2,r2,zero
   4fbf4:	1000151e 	bne	r2,zero,4fc4c <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4fbf8:	e0bffa17 	ldw	r2,-24(fp)
   4fbfc:	10800017 	ldw	r2,0(r2)
   4fc00:	10800617 	ldw	r2,24(r2)
   4fc04:	e17ffc17 	ldw	r5,-16(fp)
   4fc08:	e1bffd17 	ldw	r6,-12(fp)
   4fc0c:	e13ffa17 	ldw	r4,-24(fp)
   4fc10:	103ee83a 	callr	r2
   4fc14:	e0bff915 	stw	r2,-28(fp)
   4fc18:	e0bff917 	ldw	r2,-28(fp)
   4fc1c:	1004403a 	cmpge	r2,r2,zero
   4fc20:	1000071e 	bne	r2,zero,4fc40 <write+0xd4>
      {
        ALT_ERRNO = -rval;
   4fc24:	004fc900 	call	4fc90 <alt_get_errno>
   4fc28:	e0fff917 	ldw	r3,-28(fp)
   4fc2c:	00c7c83a 	sub	r3,zero,r3
   4fc30:	10c00015 	stw	r3,0(r2)
        return -1;
   4fc34:	00bfffc4 	movi	r2,-1
   4fc38:	e0bffe15 	stw	r2,-8(fp)
   4fc3c:	00000e06 	br	4fc78 <write+0x10c>
      }
      return rval;
   4fc40:	e0bff917 	ldw	r2,-28(fp)
   4fc44:	e0bffe15 	stw	r2,-8(fp)
   4fc48:	00000b06 	br	4fc78 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4fc4c:	004fc900 	call	4fc90 <alt_get_errno>
   4fc50:	1007883a 	mov	r3,r2
   4fc54:	00800344 	movi	r2,13
   4fc58:	18800015 	stw	r2,0(r3)
   4fc5c:	00000406 	br	4fc70 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4fc60:	004fc900 	call	4fc90 <alt_get_errno>
   4fc64:	1007883a 	mov	r3,r2
   4fc68:	00801444 	movi	r2,81
   4fc6c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4fc70:	00bfffc4 	movi	r2,-1
   4fc74:	e0bffe15 	stw	r2,-8(fp)
   4fc78:	e0bffe17 	ldw	r2,-8(fp)
}
   4fc7c:	e037883a 	mov	sp,fp
   4fc80:	dfc00117 	ldw	ra,4(sp)
   4fc84:	df000017 	ldw	fp,0(sp)
   4fc88:	dec00204 	addi	sp,sp,8
   4fc8c:	f800283a 	ret

0004fc90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fc90:	defffd04 	addi	sp,sp,-12
   4fc94:	dfc00215 	stw	ra,8(sp)
   4fc98:	df000115 	stw	fp,4(sp)
   4fc9c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   4fca0:	00800174 	movhi	r2,5
   4fca4:	108fbd04 	addi	r2,r2,16116
   4fca8:	10800017 	ldw	r2,0(r2)
   4fcac:	1005003a 	cmpeq	r2,r2,zero
   4fcb0:	1000061e 	bne	r2,zero,4fccc <alt_get_errno+0x3c>
   4fcb4:	00800174 	movhi	r2,5
   4fcb8:	108fbd04 	addi	r2,r2,16116
   4fcbc:	10800017 	ldw	r2,0(r2)
   4fcc0:	103ee83a 	callr	r2
   4fcc4:	e0bfff15 	stw	r2,-4(fp)
   4fcc8:	00000306 	br	4fcd8 <alt_get_errno+0x48>
   4fccc:	00800174 	movhi	r2,5
   4fcd0:	10966b04 	addi	r2,r2,22956
   4fcd4:	e0bfff15 	stw	r2,-4(fp)
   4fcd8:	e0bfff17 	ldw	r2,-4(fp)
}
   4fcdc:	e037883a 	mov	sp,fp
   4fce0:	dfc00117 	ldw	ra,4(sp)
   4fce4:	df000017 	ldw	fp,0(sp)
   4fce8:	dec00204 	addi	sp,sp,8
   4fcec:	f800283a 	ret

0004fcf0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4fcf0:	defffd04 	addi	sp,sp,-12
   4fcf4:	dfc00215 	stw	ra,8(sp)
   4fcf8:	df000115 	stw	fp,4(sp)
   4fcfc:	df000104 	addi	fp,sp,4
   4fd00:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
   4fd04:	00516e00 	call	516e0 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4fd08:	00800044 	movi	r2,1
   4fd0c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4fd10:	e037883a 	mov	sp,fp
   4fd14:	dfc00117 	ldw	ra,4(sp)
   4fd18:	df000017 	ldw	fp,0(sp)
   4fd1c:	dec00204 	addi	sp,sp,8
   4fd20:	f800283a 	ret

0004fd24 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4fd24:	defffe04 	addi	sp,sp,-8
   4fd28:	dfc00115 	stw	ra,4(sp)
   4fd2c:	df000015 	stw	fp,0(sp)
   4fd30:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   4fd34:	01000234 	movhi	r4,8
   4fd38:	21040004 	addi	r4,r4,4096
   4fd3c:	000b883a 	mov	r5,zero
   4fd40:	01800044 	movi	r6,1
   4fd44:	01c0fa04 	movi	r7,1000
   4fd48:	00508d40 	call	508d4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   4fd4c:	01000174 	movhi	r4,5
   4fd50:	210ba304 	addi	r4,r4,11916
   4fd54:	000b883a 	mov	r5,zero
   4fd58:	01800404 	movi	r6,16
   4fd5c:	004ff000 	call	4ff00 <altera_avalon_jtag_uart_init>
   4fd60:	01000174 	movhi	r4,5
   4fd64:	210b9904 	addi	r4,r4,11876
   4fd68:	004fd800 	call	4fd80 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
}
   4fd6c:	e037883a 	mov	sp,fp
   4fd70:	dfc00117 	ldw	ra,4(sp)
   4fd74:	df000017 	ldw	fp,0(sp)
   4fd78:	dec00204 	addi	sp,sp,8
   4fd7c:	f800283a 	ret

0004fd80 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4fd80:	defffd04 	addi	sp,sp,-12
   4fd84:	dfc00215 	stw	ra,8(sp)
   4fd88:	df000115 	stw	fp,4(sp)
   4fd8c:	df000104 	addi	fp,sp,4
   4fd90:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4fd94:	e13fff17 	ldw	r4,-4(fp)
   4fd98:	01400174 	movhi	r5,5
   4fd9c:	294fba04 	addi	r5,r5,16104
   4fda0:	0050c300 	call	50c30 <alt_dev_llist_insert>
}
   4fda4:	e037883a 	mov	sp,fp
   4fda8:	dfc00117 	ldw	ra,4(sp)
   4fdac:	df000017 	ldw	fp,0(sp)
   4fdb0:	dec00204 	addi	sp,sp,8
   4fdb4:	f800283a 	ret

0004fdb8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4fdb8:	defffa04 	addi	sp,sp,-24
   4fdbc:	dfc00515 	stw	ra,20(sp)
   4fdc0:	df000415 	stw	fp,16(sp)
   4fdc4:	df000404 	addi	fp,sp,16
   4fdc8:	e13ffd15 	stw	r4,-12(fp)
   4fdcc:	e17ffe15 	stw	r5,-8(fp)
   4fdd0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4fdd4:	e0bffd17 	ldw	r2,-12(fp)
   4fdd8:	10800017 	ldw	r2,0(r2)
   4fddc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4fde0:	e0bffc17 	ldw	r2,-16(fp)
   4fde4:	11000a04 	addi	r4,r2,40
   4fde8:	e0bffd17 	ldw	r2,-12(fp)
   4fdec:	11c00217 	ldw	r7,8(r2)
   4fdf0:	e17ffe17 	ldw	r5,-8(fp)
   4fdf4:	e1bfff17 	ldw	r6,-4(fp)
   4fdf8:	00504000 	call	50400 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4fdfc:	e037883a 	mov	sp,fp
   4fe00:	dfc00117 	ldw	ra,4(sp)
   4fe04:	df000017 	ldw	fp,0(sp)
   4fe08:	dec00204 	addi	sp,sp,8
   4fe0c:	f800283a 	ret

0004fe10 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4fe10:	defffa04 	addi	sp,sp,-24
   4fe14:	dfc00515 	stw	ra,20(sp)
   4fe18:	df000415 	stw	fp,16(sp)
   4fe1c:	df000404 	addi	fp,sp,16
   4fe20:	e13ffd15 	stw	r4,-12(fp)
   4fe24:	e17ffe15 	stw	r5,-8(fp)
   4fe28:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4fe2c:	e0bffd17 	ldw	r2,-12(fp)
   4fe30:	10800017 	ldw	r2,0(r2)
   4fe34:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4fe38:	e0bffc17 	ldw	r2,-16(fp)
   4fe3c:	11000a04 	addi	r4,r2,40
   4fe40:	e0bffd17 	ldw	r2,-12(fp)
   4fe44:	11c00217 	ldw	r7,8(r2)
   4fe48:	e17ffe17 	ldw	r5,-8(fp)
   4fe4c:	e1bfff17 	ldw	r6,-4(fp)
   4fe50:	00506240 	call	50624 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4fe54:	e037883a 	mov	sp,fp
   4fe58:	dfc00117 	ldw	ra,4(sp)
   4fe5c:	df000017 	ldw	fp,0(sp)
   4fe60:	dec00204 	addi	sp,sp,8
   4fe64:	f800283a 	ret

0004fe68 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4fe68:	defffc04 	addi	sp,sp,-16
   4fe6c:	dfc00315 	stw	ra,12(sp)
   4fe70:	df000215 	stw	fp,8(sp)
   4fe74:	df000204 	addi	fp,sp,8
   4fe78:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4fe7c:	e0bfff17 	ldw	r2,-4(fp)
   4fe80:	10800017 	ldw	r2,0(r2)
   4fe84:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4fe88:	e0bffe17 	ldw	r2,-8(fp)
   4fe8c:	11000a04 	addi	r4,r2,40
   4fe90:	e0bfff17 	ldw	r2,-4(fp)
   4fe94:	11400217 	ldw	r5,8(r2)
   4fe98:	00502980 	call	50298 <altera_avalon_jtag_uart_close>
}
   4fe9c:	e037883a 	mov	sp,fp
   4fea0:	dfc00117 	ldw	ra,4(sp)
   4fea4:	df000017 	ldw	fp,0(sp)
   4fea8:	dec00204 	addi	sp,sp,8
   4feac:	f800283a 	ret

0004feb0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4feb0:	defffa04 	addi	sp,sp,-24
   4feb4:	dfc00515 	stw	ra,20(sp)
   4feb8:	df000415 	stw	fp,16(sp)
   4febc:	df000404 	addi	fp,sp,16
   4fec0:	e13ffd15 	stw	r4,-12(fp)
   4fec4:	e17ffe15 	stw	r5,-8(fp)
   4fec8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4fecc:	e0bffd17 	ldw	r2,-12(fp)
   4fed0:	10800017 	ldw	r2,0(r2)
   4fed4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4fed8:	e0bffc17 	ldw	r2,-16(fp)
   4fedc:	11000a04 	addi	r4,r2,40
   4fee0:	e17ffe17 	ldw	r5,-8(fp)
   4fee4:	e1bfff17 	ldw	r6,-4(fp)
   4fee8:	005030c0 	call	5030c <altera_avalon_jtag_uart_ioctl>
}
   4feec:	e037883a 	mov	sp,fp
   4fef0:	dfc00117 	ldw	ra,4(sp)
   4fef4:	df000017 	ldw	fp,0(sp)
   4fef8:	dec00204 	addi	sp,sp,8
   4fefc:	f800283a 	ret

0004ff00 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4ff00:	defffa04 	addi	sp,sp,-24
   4ff04:	dfc00515 	stw	ra,20(sp)
   4ff08:	df000415 	stw	fp,16(sp)
   4ff0c:	df000404 	addi	fp,sp,16
   4ff10:	e13ffd15 	stw	r4,-12(fp)
   4ff14:	e17ffe15 	stw	r5,-8(fp)
   4ff18:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4ff1c:	e0fffd17 	ldw	r3,-12(fp)
   4ff20:	00800044 	movi	r2,1
   4ff24:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4ff28:	e0bffd17 	ldw	r2,-12(fp)
   4ff2c:	10800017 	ldw	r2,0(r2)
   4ff30:	11000104 	addi	r4,r2,4
   4ff34:	e0bffd17 	ldw	r2,-12(fp)
   4ff38:	10800817 	ldw	r2,32(r2)
   4ff3c:	1007883a 	mov	r3,r2
   4ff40:	2005883a 	mov	r2,r4
   4ff44:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4ff48:	e13ffe17 	ldw	r4,-8(fp)
   4ff4c:	e17fff17 	ldw	r5,-4(fp)
   4ff50:	d8000015 	stw	zero,0(sp)
   4ff54:	01800174 	movhi	r6,5
   4ff58:	31bff004 	addi	r6,r6,-64
   4ff5c:	e1fffd17 	ldw	r7,-12(fp)
   4ff60:	0050e3c0 	call	50e3c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4ff64:	e0bffd17 	ldw	r2,-12(fp)
   4ff68:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4ff6c:	e0bffd17 	ldw	r2,-12(fp)
   4ff70:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4ff74:	00800174 	movhi	r2,5
   4ff78:	10967004 	addi	r2,r2,22976
   4ff7c:	10800017 	ldw	r2,0(r2)
   4ff80:	100b883a 	mov	r5,r2
   4ff84:	01800174 	movhi	r6,5
   4ff88:	31807a04 	addi	r6,r6,488
   4ff8c:	e1fffd17 	ldw	r7,-12(fp)
   4ff90:	00509640 	call	50964 <alt_alarm_start>
   4ff94:	1004403a 	cmpge	r2,r2,zero
   4ff98:	1000041e 	bne	r2,zero,4ffac <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4ff9c:	e0fffd17 	ldw	r3,-12(fp)
   4ffa0:	00a00034 	movhi	r2,32768
   4ffa4:	10bfffc4 	addi	r2,r2,-1
   4ffa8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4ffac:	e037883a 	mov	sp,fp
   4ffb0:	dfc00117 	ldw	ra,4(sp)
   4ffb4:	df000017 	ldw	fp,0(sp)
   4ffb8:	dec00204 	addi	sp,sp,8
   4ffbc:	f800283a 	ret

0004ffc0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4ffc0:	defff804 	addi	sp,sp,-32
   4ffc4:	df000715 	stw	fp,28(sp)
   4ffc8:	df000704 	addi	fp,sp,28
   4ffcc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4ffd0:	e0bfff17 	ldw	r2,-4(fp)
   4ffd4:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   4ffd8:	e0bffe17 	ldw	r2,-8(fp)
   4ffdc:	10800017 	ldw	r2,0(r2)
   4ffe0:	e0bffd15 	stw	r2,-12(fp)
   4ffe4:	00000006 	br	4ffe8 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4ffe8:	e0bffd17 	ldw	r2,-12(fp)
   4ffec:	10800104 	addi	r2,r2,4
   4fff0:	10800037 	ldwio	r2,0(r2)
   4fff4:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4fff8:	e0bffc17 	ldw	r2,-16(fp)
   4fffc:	1080c00c 	andi	r2,r2,768
   50000:	1005003a 	cmpeq	r2,r2,zero
   50004:	1000741e 	bne	r2,zero,501d8 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   50008:	e0bffc17 	ldw	r2,-16(fp)
   5000c:	1080400c 	andi	r2,r2,256
   50010:	1005003a 	cmpeq	r2,r2,zero
   50014:	1000351e 	bne	r2,zero,500ec <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   50018:	00800074 	movhi	r2,1
   5001c:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50020:	e0bffe17 	ldw	r2,-8(fp)
   50024:	10800a17 	ldw	r2,40(r2)
   50028:	10800044 	addi	r2,r2,1
   5002c:	1081ffcc 	andi	r2,r2,2047
   50030:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   50034:	e0bffe17 	ldw	r2,-8(fp)
   50038:	10c00b17 	ldw	r3,44(r2)
   5003c:	e0bffa17 	ldw	r2,-24(fp)
   50040:	18801626 	beq	r3,r2,5009c <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   50044:	e0bffd17 	ldw	r2,-12(fp)
   50048:	10800037 	ldwio	r2,0(r2)
   5004c:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   50050:	e0bffb17 	ldw	r2,-20(fp)
   50054:	10a0000c 	andi	r2,r2,32768
   50058:	1005003a 	cmpeq	r2,r2,zero
   5005c:	10000f1e 	bne	r2,zero,5009c <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   50060:	e0bffe17 	ldw	r2,-8(fp)
   50064:	10c00a17 	ldw	r3,40(r2)
   50068:	e0bffb17 	ldw	r2,-20(fp)
   5006c:	1009883a 	mov	r4,r2
   50070:	e0bffe17 	ldw	r2,-8(fp)
   50074:	1885883a 	add	r2,r3,r2
   50078:	10800e04 	addi	r2,r2,56
   5007c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50080:	e0bffe17 	ldw	r2,-8(fp)
   50084:	10800a17 	ldw	r2,40(r2)
   50088:	10800044 	addi	r2,r2,1
   5008c:	10c1ffcc 	andi	r3,r2,2047
   50090:	e0bffe17 	ldw	r2,-8(fp)
   50094:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   50098:	003fe106 	br	50020 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   5009c:	e0bffb17 	ldw	r2,-20(fp)
   500a0:	10bfffec 	andhi	r2,r2,65535
   500a4:	1005003a 	cmpeq	r2,r2,zero
   500a8:	1000101e 	bne	r2,zero,500ec <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   500ac:	e0bffe17 	ldw	r2,-8(fp)
   500b0:	10c00817 	ldw	r3,32(r2)
   500b4:	00bfff84 	movi	r2,-2
   500b8:	1886703a 	and	r3,r3,r2
   500bc:	e0bffe17 	ldw	r2,-8(fp)
   500c0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   500c4:	e0bffd17 	ldw	r2,-12(fp)
   500c8:	11000104 	addi	r4,r2,4
   500cc:	e0bffe17 	ldw	r2,-8(fp)
   500d0:	10800817 	ldw	r2,32(r2)
   500d4:	1007883a 	mov	r3,r2
   500d8:	2005883a 	mov	r2,r4
   500dc:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   500e0:	e0bffd17 	ldw	r2,-12(fp)
   500e4:	10800104 	addi	r2,r2,4
   500e8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   500ec:	e0bffc17 	ldw	r2,-16(fp)
   500f0:	1080800c 	andi	r2,r2,512
   500f4:	1005003a 	cmpeq	r2,r2,zero
   500f8:	103fbb1e 	bne	r2,zero,4ffe8 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   500fc:	e0bffc17 	ldw	r2,-16(fp)
   50100:	10bfffec 	andhi	r2,r2,65535
   50104:	1004d43a 	srli	r2,r2,16
   50108:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   5010c:	00001506 	br	50164 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   50110:	e13ffd17 	ldw	r4,-12(fp)
   50114:	e0bffe17 	ldw	r2,-8(fp)
   50118:	10c00d17 	ldw	r3,52(r2)
   5011c:	e0bffe17 	ldw	r2,-8(fp)
   50120:	1885883a 	add	r2,r3,r2
   50124:	10820e04 	addi	r2,r2,2104
   50128:	10800003 	ldbu	r2,0(r2)
   5012c:	10c03fcc 	andi	r3,r2,255
   50130:	18c0201c 	xori	r3,r3,128
   50134:	18ffe004 	addi	r3,r3,-128
   50138:	2005883a 	mov	r2,r4
   5013c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50140:	e0bffe17 	ldw	r2,-8(fp)
   50144:	10800d17 	ldw	r2,52(r2)
   50148:	10800044 	addi	r2,r2,1
   5014c:	10c1ffcc 	andi	r3,r2,2047
   50150:	e0bffe17 	ldw	r2,-8(fp)
   50154:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   50158:	e0bff917 	ldw	r2,-28(fp)
   5015c:	10bfffc4 	addi	r2,r2,-1
   50160:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   50164:	e0bff917 	ldw	r2,-28(fp)
   50168:	1005003a 	cmpeq	r2,r2,zero
   5016c:	1000051e 	bne	r2,zero,50184 <altera_avalon_jtag_uart_irq+0x1c4>
   50170:	e0bffe17 	ldw	r2,-8(fp)
   50174:	10c00d17 	ldw	r3,52(r2)
   50178:	e0bffe17 	ldw	r2,-8(fp)
   5017c:	10800c17 	ldw	r2,48(r2)
   50180:	18bfe31e 	bne	r3,r2,50110 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   50184:	e0bff917 	ldw	r2,-28(fp)
   50188:	1005003a 	cmpeq	r2,r2,zero
   5018c:	103f961e 	bne	r2,zero,4ffe8 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   50190:	e0bffe17 	ldw	r2,-8(fp)
   50194:	10c00817 	ldw	r3,32(r2)
   50198:	00bfff44 	movi	r2,-3
   5019c:	1886703a 	and	r3,r3,r2
   501a0:	e0bffe17 	ldw	r2,-8(fp)
   501a4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   501a8:	e0bffe17 	ldw	r2,-8(fp)
   501ac:	10800017 	ldw	r2,0(r2)
   501b0:	11000104 	addi	r4,r2,4
   501b4:	e0bffe17 	ldw	r2,-8(fp)
   501b8:	10800817 	ldw	r2,32(r2)
   501bc:	1007883a 	mov	r3,r2
   501c0:	2005883a 	mov	r2,r4
   501c4:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   501c8:	e0bffd17 	ldw	r2,-12(fp)
   501cc:	10800104 	addi	r2,r2,4
   501d0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   501d4:	003f8406 	br	4ffe8 <altera_avalon_jtag_uart_irq+0x28>
}
   501d8:	e037883a 	mov	sp,fp
   501dc:	df000017 	ldw	fp,0(sp)
   501e0:	dec00104 	addi	sp,sp,4
   501e4:	f800283a 	ret

000501e8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   501e8:	defffc04 	addi	sp,sp,-16
   501ec:	df000315 	stw	fp,12(sp)
   501f0:	df000304 	addi	fp,sp,12
   501f4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   501f8:	e0bfff17 	ldw	r2,-4(fp)
   501fc:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   50200:	e0bffe17 	ldw	r2,-8(fp)
   50204:	10800017 	ldw	r2,0(r2)
   50208:	10800104 	addi	r2,r2,4
   5020c:	10800037 	ldwio	r2,0(r2)
   50210:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   50214:	e0bffd17 	ldw	r2,-12(fp)
   50218:	1081000c 	andi	r2,r2,1024
   5021c:	1005003a 	cmpeq	r2,r2,zero
   50220:	10000c1e 	bne	r2,zero,50254 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   50224:	e0bffe17 	ldw	r2,-8(fp)
   50228:	10800017 	ldw	r2,0(r2)
   5022c:	11000104 	addi	r4,r2,4
   50230:	e0bffe17 	ldw	r2,-8(fp)
   50234:	10800817 	ldw	r2,32(r2)
   50238:	10810014 	ori	r2,r2,1024
   5023c:	1007883a 	mov	r3,r2
   50240:	2005883a 	mov	r2,r4
   50244:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   50248:	e0bffe17 	ldw	r2,-8(fp)
   5024c:	10000915 	stw	zero,36(r2)
   50250:	00000a06 	br	5027c <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   50254:	e0bffe17 	ldw	r2,-8(fp)
   50258:	10c00917 	ldw	r3,36(r2)
   5025c:	00a00034 	movhi	r2,32768
   50260:	10bfff04 	addi	r2,r2,-4
   50264:	10c00536 	bltu	r2,r3,5027c <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   50268:	e0bffe17 	ldw	r2,-8(fp)
   5026c:	10800917 	ldw	r2,36(r2)
   50270:	10c00044 	addi	r3,r2,1
   50274:	e0bffe17 	ldw	r2,-8(fp)
   50278:	10c00915 	stw	r3,36(r2)
   5027c:	00800174 	movhi	r2,5
   50280:	10967004 	addi	r2,r2,22976
   50284:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   50288:	e037883a 	mov	sp,fp
   5028c:	df000017 	ldw	fp,0(sp)
   50290:	dec00104 	addi	sp,sp,4
   50294:	f800283a 	ret

00050298 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   50298:	defffc04 	addi	sp,sp,-16
   5029c:	df000315 	stw	fp,12(sp)
   502a0:	df000304 	addi	fp,sp,12
   502a4:	e13ffd15 	stw	r4,-12(fp)
   502a8:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   502ac:	00000706 	br	502cc <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   502b0:	e0bffe17 	ldw	r2,-8(fp)
   502b4:	1090000c 	andi	r2,r2,16384
   502b8:	1005003a 	cmpeq	r2,r2,zero
   502bc:	1000031e 	bne	r2,zero,502cc <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   502c0:	00bffd44 	movi	r2,-11
   502c4:	e0bfff15 	stw	r2,-4(fp)
   502c8:	00000b06 	br	502f8 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   502cc:	e0bffd17 	ldw	r2,-12(fp)
   502d0:	10c00d17 	ldw	r3,52(r2)
   502d4:	e0bffd17 	ldw	r2,-12(fp)
   502d8:	10800c17 	ldw	r2,48(r2)
   502dc:	18800526 	beq	r3,r2,502f4 <altera_avalon_jtag_uart_close+0x5c>
   502e0:	e0bffd17 	ldw	r2,-12(fp)
   502e4:	10c00917 	ldw	r3,36(r2)
   502e8:	e0bffd17 	ldw	r2,-12(fp)
   502ec:	10800117 	ldw	r2,4(r2)
   502f0:	18bfef36 	bltu	r3,r2,502b0 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   502f4:	e03fff15 	stw	zero,-4(fp)
   502f8:	e0bfff17 	ldw	r2,-4(fp)
}
   502fc:	e037883a 	mov	sp,fp
   50300:	df000017 	ldw	fp,0(sp)
   50304:	dec00104 	addi	sp,sp,4
   50308:	f800283a 	ret

0005030c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   5030c:	defff804 	addi	sp,sp,-32
   50310:	df000715 	stw	fp,28(sp)
   50314:	df000704 	addi	fp,sp,28
   50318:	e13ffb15 	stw	r4,-20(fp)
   5031c:	e17ffc15 	stw	r5,-16(fp)
   50320:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   50324:	00bff9c4 	movi	r2,-25
   50328:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   5032c:	e0bffc17 	ldw	r2,-16(fp)
   50330:	e0bfff15 	stw	r2,-4(fp)
   50334:	e0ffff17 	ldw	r3,-4(fp)
   50338:	189a8060 	cmpeqi	r2,r3,27137
   5033c:	1000041e 	bne	r2,zero,50350 <altera_avalon_jtag_uart_ioctl+0x44>
   50340:	e0ffff17 	ldw	r3,-4(fp)
   50344:	189a80a0 	cmpeqi	r2,r3,27138
   50348:	10001b1e 	bne	r2,zero,503b8 <altera_avalon_jtag_uart_ioctl+0xac>
   5034c:	00002706 	br	503ec <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   50350:	e0bffb17 	ldw	r2,-20(fp)
   50354:	10c00117 	ldw	r3,4(r2)
   50358:	00a00034 	movhi	r2,32768
   5035c:	10bfffc4 	addi	r2,r2,-1
   50360:	18802226 	beq	r3,r2,503ec <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   50364:	e0bffd17 	ldw	r2,-12(fp)
   50368:	10800017 	ldw	r2,0(r2)
   5036c:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   50370:	e0bff917 	ldw	r2,-28(fp)
   50374:	10800090 	cmplti	r2,r2,2
   50378:	1000071e 	bne	r2,zero,50398 <altera_avalon_jtag_uart_ioctl+0x8c>
   5037c:	e0fff917 	ldw	r3,-28(fp)
   50380:	00a00034 	movhi	r2,32768
   50384:	10bfffc4 	addi	r2,r2,-1
   50388:	18800326 	beq	r3,r2,50398 <altera_avalon_jtag_uart_ioctl+0x8c>
   5038c:	e0bff917 	ldw	r2,-28(fp)
   50390:	e0bffe15 	stw	r2,-8(fp)
   50394:	00000306 	br	503a4 <altera_avalon_jtag_uart_ioctl+0x98>
   50398:	00e00034 	movhi	r3,32768
   5039c:	18ffff84 	addi	r3,r3,-2
   503a0:	e0fffe15 	stw	r3,-8(fp)
   503a4:	e0bffb17 	ldw	r2,-20(fp)
   503a8:	e0fffe17 	ldw	r3,-8(fp)
   503ac:	10c00115 	stw	r3,4(r2)
      rc = 0;
   503b0:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   503b4:	00000d06 	br	503ec <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   503b8:	e0bffb17 	ldw	r2,-20(fp)
   503bc:	10c00117 	ldw	r3,4(r2)
   503c0:	00a00034 	movhi	r2,32768
   503c4:	10bfffc4 	addi	r2,r2,-1
   503c8:	18800826 	beq	r3,r2,503ec <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   503cc:	e13ffd17 	ldw	r4,-12(fp)
   503d0:	e0bffb17 	ldw	r2,-20(fp)
   503d4:	10c00917 	ldw	r3,36(r2)
   503d8:	e0bffb17 	ldw	r2,-20(fp)
   503dc:	10800117 	ldw	r2,4(r2)
   503e0:	1885803a 	cmpltu	r2,r3,r2
   503e4:	20800015 	stw	r2,0(r4)
      rc = 0;
   503e8:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   503ec:	e0bffa17 	ldw	r2,-24(fp)
}
   503f0:	e037883a 	mov	sp,fp
   503f4:	df000017 	ldw	fp,0(sp)
   503f8:	dec00104 	addi	sp,sp,4
   503fc:	f800283a 	ret

00050400 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   50400:	defff204 	addi	sp,sp,-56
   50404:	dfc00d15 	stw	ra,52(sp)
   50408:	df000c15 	stw	fp,48(sp)
   5040c:	df000c04 	addi	fp,sp,48
   50410:	e13ffb15 	stw	r4,-20(fp)
   50414:	e17ffc15 	stw	r5,-16(fp)
   50418:	e1bffd15 	stw	r6,-12(fp)
   5041c:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   50420:	e0bffc17 	ldw	r2,-16(fp)
   50424:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   50428:	00004806 	br	5054c <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   5042c:	e0bffb17 	ldw	r2,-20(fp)
   50430:	10800a17 	ldw	r2,40(r2)
   50434:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   50438:	e0bffb17 	ldw	r2,-20(fp)
   5043c:	10800b17 	ldw	r2,44(r2)
   50440:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   50444:	e0fff717 	ldw	r3,-36(fp)
   50448:	e0bff617 	ldw	r2,-40(fp)
   5044c:	18800536 	bltu	r3,r2,50464 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   50450:	e0bff717 	ldw	r2,-36(fp)
   50454:	e0fff617 	ldw	r3,-40(fp)
   50458:	10c5c83a 	sub	r2,r2,r3
   5045c:	e0bff815 	stw	r2,-32(fp)
   50460:	00000406 	br	50474 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   50464:	00820004 	movi	r2,2048
   50468:	e0fff617 	ldw	r3,-40(fp)
   5046c:	10c5c83a 	sub	r2,r2,r3
   50470:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   50474:	e0bff817 	ldw	r2,-32(fp)
   50478:	1005003a 	cmpeq	r2,r2,zero
   5047c:	10001f1e 	bne	r2,zero,504fc <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   50480:	e0fffd17 	ldw	r3,-12(fp)
   50484:	e0bff817 	ldw	r2,-32(fp)
   50488:	1880022e 	bgeu	r3,r2,50494 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   5048c:	e0bffd17 	ldw	r2,-12(fp)
   50490:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   50494:	e0bffb17 	ldw	r2,-20(fp)
   50498:	10c00e04 	addi	r3,r2,56
   5049c:	e0bff617 	ldw	r2,-40(fp)
   504a0:	1887883a 	add	r3,r3,r2
   504a4:	e0bffa17 	ldw	r2,-24(fp)
   504a8:	1009883a 	mov	r4,r2
   504ac:	180b883a 	mov	r5,r3
   504b0:	e1bff817 	ldw	r6,-32(fp)
   504b4:	00470cc0 	call	470cc <memcpy>
      ptr   += n;
   504b8:	e0fff817 	ldw	r3,-32(fp)
   504bc:	e0bffa17 	ldw	r2,-24(fp)
   504c0:	10c5883a 	add	r2,r2,r3
   504c4:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   504c8:	e0fffd17 	ldw	r3,-12(fp)
   504cc:	e0bff817 	ldw	r2,-32(fp)
   504d0:	1885c83a 	sub	r2,r3,r2
   504d4:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   504d8:	e0fff617 	ldw	r3,-40(fp)
   504dc:	e0bff817 	ldw	r2,-32(fp)
   504e0:	1885883a 	add	r2,r3,r2
   504e4:	10c1ffcc 	andi	r3,r2,2047
   504e8:	e0bffb17 	ldw	r2,-20(fp)
   504ec:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   504f0:	e0bffd17 	ldw	r2,-12(fp)
   504f4:	10800048 	cmpgei	r2,r2,1
   504f8:	103fcc1e 	bne	r2,zero,5042c <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   504fc:	e0fffa17 	ldw	r3,-24(fp)
   50500:	e0bffc17 	ldw	r2,-16(fp)
   50504:	1880141e 	bne	r3,r2,50558 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   50508:	e0bffe17 	ldw	r2,-8(fp)
   5050c:	1090000c 	andi	r2,r2,16384
   50510:	1004c03a 	cmpne	r2,r2,zero
   50514:	1000101e 	bne	r2,zero,50558 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   50518:	e0bffb17 	ldw	r2,-20(fp)
   5051c:	10c00a17 	ldw	r3,40(r2)
   50520:	e0bff717 	ldw	r2,-36(fp)
   50524:	1880051e 	bne	r3,r2,5053c <altera_avalon_jtag_uart_read+0x13c>
   50528:	e0bffb17 	ldw	r2,-20(fp)
   5052c:	10c00917 	ldw	r3,36(r2)
   50530:	e0bffb17 	ldw	r2,-20(fp)
   50534:	10800117 	ldw	r2,4(r2)
   50538:	18bff736 	bltu	r3,r2,50518 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   5053c:	e0bffb17 	ldw	r2,-20(fp)
   50540:	10c00a17 	ldw	r3,40(r2)
   50544:	e0bff717 	ldw	r2,-36(fp)
   50548:	18800326 	beq	r3,r2,50558 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   5054c:	e0bffd17 	ldw	r2,-12(fp)
   50550:	10800048 	cmpgei	r2,r2,1
   50554:	103fb51e 	bne	r2,zero,5042c <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   50558:	e0fffa17 	ldw	r3,-24(fp)
   5055c:	e0bffc17 	ldw	r2,-16(fp)
   50560:	18801926 	beq	r3,r2,505c8 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50564:	0005303a 	rdctl	r2,status
   50568:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5056c:	e0fff517 	ldw	r3,-44(fp)
   50570:	00bfff84 	movi	r2,-2
   50574:	1884703a 	and	r2,r3,r2
   50578:	1001703a 	wrctl	status,r2
  
  return context;
   5057c:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   50580:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   50584:	e0bffb17 	ldw	r2,-20(fp)
   50588:	10800817 	ldw	r2,32(r2)
   5058c:	10c00054 	ori	r3,r2,1
   50590:	e0bffb17 	ldw	r2,-20(fp)
   50594:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   50598:	e0bffb17 	ldw	r2,-20(fp)
   5059c:	10800017 	ldw	r2,0(r2)
   505a0:	11000104 	addi	r4,r2,4
   505a4:	e0bffb17 	ldw	r2,-20(fp)
   505a8:	10800817 	ldw	r2,32(r2)
   505ac:	1007883a 	mov	r3,r2
   505b0:	2005883a 	mov	r2,r4
   505b4:	10c00035 	stwio	r3,0(r2)
   505b8:	e0bff917 	ldw	r2,-28(fp)
   505bc:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   505c0:	e0bff417 	ldw	r2,-48(fp)
   505c4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   505c8:	e0fffa17 	ldw	r3,-24(fp)
   505cc:	e0bffc17 	ldw	r2,-16(fp)
   505d0:	18800526 	beq	r3,r2,505e8 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   505d4:	e0fffa17 	ldw	r3,-24(fp)
   505d8:	e0bffc17 	ldw	r2,-16(fp)
   505dc:	1887c83a 	sub	r3,r3,r2
   505e0:	e0ffff15 	stw	r3,-4(fp)
   505e4:	00000906 	br	5060c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   505e8:	e0bffe17 	ldw	r2,-8(fp)
   505ec:	1090000c 	andi	r2,r2,16384
   505f0:	1005003a 	cmpeq	r2,r2,zero
   505f4:	1000031e 	bne	r2,zero,50604 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   505f8:	00bffd44 	movi	r2,-11
   505fc:	e0bfff15 	stw	r2,-4(fp)
   50600:	00000206 	br	5060c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   50604:	00bffec4 	movi	r2,-5
   50608:	e0bfff15 	stw	r2,-4(fp)
   5060c:	e0bfff17 	ldw	r2,-4(fp)
}
   50610:	e037883a 	mov	sp,fp
   50614:	dfc00117 	ldw	ra,4(sp)
   50618:	df000017 	ldw	fp,0(sp)
   5061c:	dec00204 	addi	sp,sp,8
   50620:	f800283a 	ret

00050624 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   50624:	defff204 	addi	sp,sp,-56
   50628:	dfc00d15 	stw	ra,52(sp)
   5062c:	df000c15 	stw	fp,48(sp)
   50630:	df000c04 	addi	fp,sp,48
   50634:	e13ffb15 	stw	r4,-20(fp)
   50638:	e17ffc15 	stw	r5,-16(fp)
   5063c:	e1bffd15 	stw	r6,-12(fp)
   50640:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   50644:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   50648:	e0bffc17 	ldw	r2,-16(fp)
   5064c:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   50650:	00003a06 	br	5073c <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   50654:	e0bffb17 	ldw	r2,-20(fp)
   50658:	10800c17 	ldw	r2,48(r2)
   5065c:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   50660:	e0bffb17 	ldw	r2,-20(fp)
   50664:	10800d17 	ldw	r2,52(r2)
   50668:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   5066c:	e0fffa17 	ldw	r3,-24(fp)
   50670:	e0bff917 	ldw	r2,-28(fp)
   50674:	1880062e 	bgeu	r3,r2,50690 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   50678:	e0fff917 	ldw	r3,-28(fp)
   5067c:	e0bffa17 	ldw	r2,-24(fp)
   50680:	1885c83a 	sub	r2,r3,r2
   50684:	10bfffc4 	addi	r2,r2,-1
   50688:	e0bff815 	stw	r2,-32(fp)
   5068c:	00000c06 	br	506c0 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   50690:	e0bff917 	ldw	r2,-28(fp)
   50694:	1005003a 	cmpeq	r2,r2,zero
   50698:	1000051e 	bne	r2,zero,506b0 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   5069c:	00820004 	movi	r2,2048
   506a0:	e0fffa17 	ldw	r3,-24(fp)
   506a4:	10c5c83a 	sub	r2,r2,r3
   506a8:	e0bff815 	stw	r2,-32(fp)
   506ac:	00000406 	br	506c0 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   506b0:	0081ffc4 	movi	r2,2047
   506b4:	e0fffa17 	ldw	r3,-24(fp)
   506b8:	10c5c83a 	sub	r2,r2,r3
   506bc:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   506c0:	e0bff817 	ldw	r2,-32(fp)
   506c4:	1005003a 	cmpeq	r2,r2,zero
   506c8:	10001f1e 	bne	r2,zero,50748 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   506cc:	e0fffd17 	ldw	r3,-12(fp)
   506d0:	e0bff817 	ldw	r2,-32(fp)
   506d4:	1880022e 	bgeu	r3,r2,506e0 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   506d8:	e0bffd17 	ldw	r2,-12(fp)
   506dc:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   506e0:	e0bffb17 	ldw	r2,-20(fp)
   506e4:	10c20e04 	addi	r3,r2,2104
   506e8:	e0bffa17 	ldw	r2,-24(fp)
   506ec:	1885883a 	add	r2,r3,r2
   506f0:	e0fffc17 	ldw	r3,-16(fp)
   506f4:	1009883a 	mov	r4,r2
   506f8:	180b883a 	mov	r5,r3
   506fc:	e1bff817 	ldw	r6,-32(fp)
   50700:	00470cc0 	call	470cc <memcpy>
      ptr   += n;
   50704:	e0fff817 	ldw	r3,-32(fp)
   50708:	e0bffc17 	ldw	r2,-16(fp)
   5070c:	10c5883a 	add	r2,r2,r3
   50710:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   50714:	e0fffd17 	ldw	r3,-12(fp)
   50718:	e0bff817 	ldw	r2,-32(fp)
   5071c:	1885c83a 	sub	r2,r3,r2
   50720:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50724:	e0fffa17 	ldw	r3,-24(fp)
   50728:	e0bff817 	ldw	r2,-32(fp)
   5072c:	1885883a 	add	r2,r3,r2
   50730:	10c1ffcc 	andi	r3,r2,2047
   50734:	e0bffb17 	ldw	r2,-20(fp)
   50738:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   5073c:	e0bffd17 	ldw	r2,-12(fp)
   50740:	10800048 	cmpgei	r2,r2,1
   50744:	103fc31e 	bne	r2,zero,50654 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50748:	0005303a 	rdctl	r2,status
   5074c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50750:	e0fff517 	ldw	r3,-44(fp)
   50754:	00bfff84 	movi	r2,-2
   50758:	1884703a 	and	r2,r3,r2
   5075c:	1001703a 	wrctl	status,r2
  
  return context;
   50760:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   50764:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   50768:	e0bffb17 	ldw	r2,-20(fp)
   5076c:	10800817 	ldw	r2,32(r2)
   50770:	10c00094 	ori	r3,r2,2
   50774:	e0bffb17 	ldw	r2,-20(fp)
   50778:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   5077c:	e0bffb17 	ldw	r2,-20(fp)
   50780:	10800017 	ldw	r2,0(r2)
   50784:	11000104 	addi	r4,r2,4
   50788:	e0bffb17 	ldw	r2,-20(fp)
   5078c:	10800817 	ldw	r2,32(r2)
   50790:	1007883a 	mov	r3,r2
   50794:	2005883a 	mov	r2,r4
   50798:	10c00035 	stwio	r3,0(r2)
   5079c:	e0bff717 	ldw	r2,-36(fp)
   507a0:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   507a4:	e0bff417 	ldw	r2,-48(fp)
   507a8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   507ac:	e0bffd17 	ldw	r2,-12(fp)
   507b0:	10800050 	cmplti	r2,r2,1
   507b4:	1000111e 	bne	r2,zero,507fc <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   507b8:	e0bffe17 	ldw	r2,-8(fp)
   507bc:	1090000c 	andi	r2,r2,16384
   507c0:	1004c03a 	cmpne	r2,r2,zero
   507c4:	1000101e 	bne	r2,zero,50808 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   507c8:	e0bffb17 	ldw	r2,-20(fp)
   507cc:	10c00d17 	ldw	r3,52(r2)
   507d0:	e0bff917 	ldw	r2,-28(fp)
   507d4:	1880051e 	bne	r3,r2,507ec <altera_avalon_jtag_uart_write+0x1c8>
   507d8:	e0bffb17 	ldw	r2,-20(fp)
   507dc:	10c00917 	ldw	r3,36(r2)
   507e0:	e0bffb17 	ldw	r2,-20(fp)
   507e4:	10800117 	ldw	r2,4(r2)
   507e8:	18bff736 	bltu	r3,r2,507c8 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   507ec:	e0bffb17 	ldw	r2,-20(fp)
   507f0:	10c00d17 	ldw	r3,52(r2)
   507f4:	e0bff917 	ldw	r2,-28(fp)
   507f8:	18800326 	beq	r3,r2,50808 <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
   507fc:	e0bffd17 	ldw	r2,-12(fp)
   50800:	10800048 	cmpgei	r2,r2,1
   50804:	103fcd1e 	bne	r2,zero,5073c <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   50808:	e0fffc17 	ldw	r3,-16(fp)
   5080c:	e0bff617 	ldw	r2,-40(fp)
   50810:	18800526 	beq	r3,r2,50828 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   50814:	e0fffc17 	ldw	r3,-16(fp)
   50818:	e0bff617 	ldw	r2,-40(fp)
   5081c:	1887c83a 	sub	r3,r3,r2
   50820:	e0ffff15 	stw	r3,-4(fp)
   50824:	00000906 	br	5084c <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   50828:	e0bffe17 	ldw	r2,-8(fp)
   5082c:	1090000c 	andi	r2,r2,16384
   50830:	1005003a 	cmpeq	r2,r2,zero
   50834:	1000031e 	bne	r2,zero,50844 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   50838:	00bffd44 	movi	r2,-11
   5083c:	e0bfff15 	stw	r2,-4(fp)
   50840:	00000206 	br	5084c <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
   50844:	00bffec4 	movi	r2,-5
   50848:	e0bfff15 	stw	r2,-4(fp)
   5084c:	e0bfff17 	ldw	r2,-4(fp)
}
   50850:	e037883a 	mov	sp,fp
   50854:	dfc00117 	ldw	ra,4(sp)
   50858:	df000017 	ldw	fp,0(sp)
   5085c:	dec00204 	addi	sp,sp,8
   50860:	f800283a 	ret

00050864 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   50864:	defffa04 	addi	sp,sp,-24
   50868:	dfc00515 	stw	ra,20(sp)
   5086c:	df000415 	stw	fp,16(sp)
   50870:	df000404 	addi	fp,sp,16
   50874:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   50878:	e0bfff17 	ldw	r2,-4(fp)
   5087c:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   50880:	e0bfff17 	ldw	r2,-4(fp)
   50884:	10800104 	addi	r2,r2,4
   50888:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5088c:	0005303a 	rdctl	r2,status
   50890:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50894:	e0fffd17 	ldw	r3,-12(fp)
   50898:	00bfff84 	movi	r2,-2
   5089c:	1884703a 	and	r2,r3,r2
   508a0:	1001703a 	wrctl	status,r2
  
  return context;
   508a4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   508a8:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
   508ac:	00515d40 	call	515d4 <alt_tick>
   508b0:	e0bffe17 	ldw	r2,-8(fp)
   508b4:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   508b8:	e0bffc17 	ldw	r2,-16(fp)
   508bc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   508c0:	e037883a 	mov	sp,fp
   508c4:	dfc00117 	ldw	ra,4(sp)
   508c8:	df000017 	ldw	fp,0(sp)
   508cc:	dec00204 	addi	sp,sp,8
   508d0:	f800283a 	ret

000508d4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   508d4:	defff804 	addi	sp,sp,-32
   508d8:	dfc00715 	stw	ra,28(sp)
   508dc:	df000615 	stw	fp,24(sp)
   508e0:	df000604 	addi	fp,sp,24
   508e4:	e13ffc15 	stw	r4,-16(fp)
   508e8:	e17ffd15 	stw	r5,-12(fp)
   508ec:	e1bffe15 	stw	r6,-8(fp)
   508f0:	e1ffff15 	stw	r7,-4(fp)
   508f4:	e0bfff17 	ldw	r2,-4(fp)
   508f8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   508fc:	00800174 	movhi	r2,5
   50900:	10967004 	addi	r2,r2,22976
   50904:	10800017 	ldw	r2,0(r2)
   50908:	1004c03a 	cmpne	r2,r2,zero
   5090c:	1000041e 	bne	r2,zero,50920 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
   50910:	00c00174 	movhi	r3,5
   50914:	18d67004 	addi	r3,r3,22976
   50918:	e0bffb17 	ldw	r2,-20(fp)
   5091c:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   50920:	e0bffc17 	ldw	r2,-16(fp)
   50924:	10800104 	addi	r2,r2,4
   50928:	1007883a 	mov	r3,r2
   5092c:	008001c4 	movi	r2,7
   50930:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   50934:	d8000015 	stw	zero,0(sp)
   50938:	e13ffd17 	ldw	r4,-12(fp)
   5093c:	e17ffe17 	ldw	r5,-8(fp)
   50940:	01800174 	movhi	r6,5
   50944:	31821904 	addi	r6,r6,2148
   50948:	e1fffc17 	ldw	r7,-16(fp)
   5094c:	0050e3c0 	call	50e3c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   50950:	e037883a 	mov	sp,fp
   50954:	dfc00117 	ldw	ra,4(sp)
   50958:	df000017 	ldw	fp,0(sp)
   5095c:	dec00204 	addi	sp,sp,8
   50960:	f800283a 	ret

00050964 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   50964:	defff404 	addi	sp,sp,-48
   50968:	df000b15 	stw	fp,44(sp)
   5096c:	df000b04 	addi	fp,sp,44
   50970:	e13ffb15 	stw	r4,-20(fp)
   50974:	e17ffc15 	stw	r5,-16(fp)
   50978:	e1bffd15 	stw	r6,-12(fp)
   5097c:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   50980:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   50984:	00800174 	movhi	r2,5
   50988:	10967004 	addi	r2,r2,22976
   5098c:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   50990:	1005003a 	cmpeq	r2,r2,zero
   50994:	1000411e 	bne	r2,zero,50a9c <alt_alarm_start+0x138>
  {
    if (alarm)
   50998:	e0bffb17 	ldw	r2,-20(fp)
   5099c:	1005003a 	cmpeq	r2,r2,zero
   509a0:	10003b1e 	bne	r2,zero,50a90 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   509a4:	e0fffb17 	ldw	r3,-20(fp)
   509a8:	e0bffd17 	ldw	r2,-12(fp)
   509ac:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   509b0:	e0fffb17 	ldw	r3,-20(fp)
   509b4:	e0bffe17 	ldw	r2,-8(fp)
   509b8:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   509bc:	0005303a 	rdctl	r2,status
   509c0:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   509c4:	e0fff817 	ldw	r3,-32(fp)
   509c8:	00bfff84 	movi	r2,-2
   509cc:	1884703a 	and	r2,r3,r2
   509d0:	1001703a 	wrctl	status,r2
  
  return context;
   509d4:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   509d8:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   509dc:	00800174 	movhi	r2,5
   509e0:	10967104 	addi	r2,r2,22980
   509e4:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   509e8:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   509ec:	e0fffc17 	ldw	r3,-16(fp)
   509f0:	e0bff917 	ldw	r2,-28(fp)
   509f4:	1885883a 	add	r2,r3,r2
   509f8:	10c00044 	addi	r3,r2,1
   509fc:	e0bffb17 	ldw	r2,-20(fp)
   50a00:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   50a04:	e0bffb17 	ldw	r2,-20(fp)
   50a08:	10c00217 	ldw	r3,8(r2)
   50a0c:	e0bff917 	ldw	r2,-28(fp)
   50a10:	1880042e 	bgeu	r3,r2,50a24 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   50a14:	e0fffb17 	ldw	r3,-20(fp)
   50a18:	00800044 	movi	r2,1
   50a1c:	18800405 	stb	r2,16(r3)
   50a20:	00000206 	br	50a2c <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   50a24:	e0bffb17 	ldw	r2,-20(fp)
   50a28:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   50a2c:	e0fffb17 	ldw	r3,-20(fp)
   50a30:	00800174 	movhi	r2,5
   50a34:	108fc004 	addi	r2,r2,16128
   50a38:	e0bff615 	stw	r2,-40(fp)
   50a3c:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   50a40:	e0fff717 	ldw	r3,-36(fp)
   50a44:	e0bff617 	ldw	r2,-40(fp)
   50a48:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   50a4c:	e0bff617 	ldw	r2,-40(fp)
   50a50:	10c00017 	ldw	r3,0(r2)
   50a54:	e0bff717 	ldw	r2,-36(fp)
   50a58:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   50a5c:	e0bff617 	ldw	r2,-40(fp)
   50a60:	10c00017 	ldw	r3,0(r2)
   50a64:	e0bff717 	ldw	r2,-36(fp)
   50a68:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   50a6c:	e0fff617 	ldw	r3,-40(fp)
   50a70:	e0bff717 	ldw	r2,-36(fp)
   50a74:	18800015 	stw	r2,0(r3)
   50a78:	e0bffa17 	ldw	r2,-24(fp)
   50a7c:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50a80:	e0bff517 	ldw	r2,-44(fp)
   50a84:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   50a88:	e03fff15 	stw	zero,-4(fp)
   50a8c:	00000506 	br	50aa4 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   50a90:	00bffa84 	movi	r2,-22
   50a94:	e0bfff15 	stw	r2,-4(fp)
   50a98:	00000206 	br	50aa4 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   50a9c:	00bfde84 	movi	r2,-134
   50aa0:	e0bfff15 	stw	r2,-4(fp)
   50aa4:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   50aa8:	e037883a 	mov	sp,fp
   50aac:	df000017 	ldw	fp,0(sp)
   50ab0:	dec00104 	addi	sp,sp,4
   50ab4:	f800283a 	ret

00050ab8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   50ab8:	defffa04 	addi	sp,sp,-24
   50abc:	dfc00515 	stw	ra,20(sp)
   50ac0:	df000415 	stw	fp,16(sp)
   50ac4:	df000404 	addi	fp,sp,16
   50ac8:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   50acc:	008000c4 	movi	r2,3
   50ad0:	e0bffc15 	stw	r2,-16(fp)
  }
  

  big_loops = us / (INT_MAX/
   50ad4:	e13ffc17 	ldw	r4,-16(fp)
   50ad8:	014003f4 	movhi	r5,15
   50adc:	29509004 	addi	r5,r5,16960
   50ae0:	004e8e80 	call	4e8e8 <__mulsi3>
   50ae4:	100b883a 	mov	r5,r2
   50ae8:	0100bef4 	movhi	r4,763
   50aec:	213c2004 	addi	r4,r4,-3968
   50af0:	004e8d80 	call	4e8d8 <__udivsi3>
   50af4:	100b883a 	mov	r5,r2
   50af8:	01200034 	movhi	r4,32768
   50afc:	213fffc4 	addi	r4,r4,-1
   50b00:	004e8d80 	call	4e8d8 <__udivsi3>
   50b04:	100b883a 	mov	r5,r2
   50b08:	e13fff17 	ldw	r4,-4(fp)
   50b0c:	004e8d80 	call	4e8d8 <__udivsi3>
   50b10:	e0bffd15 	stw	r2,-12(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   50b14:	e0bffd17 	ldw	r2,-12(fp)
   50b18:	1005003a 	cmpeq	r2,r2,zero
   50b1c:	10002a1e 	bne	r2,zero,50bc8 <alt_busy_sleep+0x110>
  {
    for(i=0;i<big_loops;i++)
   50b20:	e03ffe15 	stw	zero,-8(fp)
   50b24:	00001706 	br	50b84 <alt_busy_sleep+0xcc>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   50b28:	00a00034 	movhi	r2,32768
   50b2c:	10bfffc4 	addi	r2,r2,-1
   50b30:	10bfffc4 	addi	r2,r2,-1
   50b34:	103ffe1e 	bne	r2,zero,50b30 <alt_busy_sleep+0x78>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   50b38:	e13ffc17 	ldw	r4,-16(fp)
   50b3c:	014003f4 	movhi	r5,15
   50b40:	29509004 	addi	r5,r5,16960
   50b44:	004e8e80 	call	4e8e8 <__mulsi3>
   50b48:	100b883a 	mov	r5,r2
   50b4c:	0100bef4 	movhi	r4,763
   50b50:	213c2004 	addi	r4,r4,-3968
   50b54:	004e8d80 	call	4e8d8 <__udivsi3>
   50b58:	100b883a 	mov	r5,r2
   50b5c:	01200034 	movhi	r4,32768
   50b60:	213fffc4 	addi	r4,r4,-1
   50b64:	004e8d80 	call	4e8d8 <__udivsi3>
   50b68:	1007883a 	mov	r3,r2
   50b6c:	e0bfff17 	ldw	r2,-4(fp)
   50b70:	10c5c83a 	sub	r2,r2,r3
   50b74:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   50b78:	e0bffe17 	ldw	r2,-8(fp)
   50b7c:	10800044 	addi	r2,r2,1
   50b80:	e0bffe15 	stw	r2,-8(fp)
   50b84:	e0fffe17 	ldw	r3,-8(fp)
   50b88:	e0bffd17 	ldw	r2,-12(fp)
   50b8c:	18bfe616 	blt	r3,r2,50b28 <alt_busy_sleep+0x70>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   50b90:	e13ffc17 	ldw	r4,-16(fp)
   50b94:	014003f4 	movhi	r5,15
   50b98:	29509004 	addi	r5,r5,16960
   50b9c:	004e8e80 	call	4e8e8 <__mulsi3>
   50ba0:	100b883a 	mov	r5,r2
   50ba4:	0100bef4 	movhi	r4,763
   50ba8:	213c2004 	addi	r4,r4,-3968
   50bac:	004e8d80 	call	4e8d8 <__udivsi3>
   50bb0:	1009883a 	mov	r4,r2
   50bb4:	e17fff17 	ldw	r5,-4(fp)
   50bb8:	004e8e80 	call	4e8e8 <__mulsi3>
   50bbc:	10bfffc4 	addi	r2,r2,-1
   50bc0:	103ffe1e 	bne	r2,zero,50bbc <alt_busy_sleep+0x104>
   50bc4:	00000d06 	br	50bfc <alt_busy_sleep+0x144>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   50bc8:	e13ffc17 	ldw	r4,-16(fp)
   50bcc:	014003f4 	movhi	r5,15
   50bd0:	29509004 	addi	r5,r5,16960
   50bd4:	004e8e80 	call	4e8e8 <__mulsi3>
   50bd8:	100b883a 	mov	r5,r2
   50bdc:	0100bef4 	movhi	r4,763
   50be0:	213c2004 	addi	r4,r4,-3968
   50be4:	004e8d80 	call	4e8d8 <__udivsi3>
   50be8:	1009883a 	mov	r4,r2
   50bec:	e17fff17 	ldw	r5,-4(fp)
   50bf0:	004e8e80 	call	4e8e8 <__mulsi3>
   50bf4:	10bfffc4 	addi	r2,r2,-1
   50bf8:	00bffe16 	blt	zero,r2,50bf4 <alt_busy_sleep+0x13c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   50bfc:	0005883a 	mov	r2,zero
}
   50c00:	e037883a 	mov	sp,fp
   50c04:	dfc00117 	ldw	ra,4(sp)
   50c08:	df000017 	ldw	fp,0(sp)
   50c0c:	dec00204 	addi	sp,sp,8
   50c10:	f800283a 	ret

00050c14 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   50c14:	deffff04 	addi	sp,sp,-4
   50c18:	df000015 	stw	fp,0(sp)
   50c1c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   50c20:	e037883a 	mov	sp,fp
   50c24:	df000017 	ldw	fp,0(sp)
   50c28:	dec00104 	addi	sp,sp,4
   50c2c:	f800283a 	ret

00050c30 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   50c30:	defff904 	addi	sp,sp,-28
   50c34:	dfc00615 	stw	ra,24(sp)
   50c38:	df000515 	stw	fp,20(sp)
   50c3c:	df000504 	addi	fp,sp,20
   50c40:	e13ffd15 	stw	r4,-12(fp)
   50c44:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   50c48:	e0bffd17 	ldw	r2,-12(fp)
   50c4c:	1005003a 	cmpeq	r2,r2,zero
   50c50:	1000041e 	bne	r2,zero,50c64 <alt_dev_llist_insert+0x34>
   50c54:	e0bffd17 	ldw	r2,-12(fp)
   50c58:	10800217 	ldw	r2,8(r2)
   50c5c:	1004c03a 	cmpne	r2,r2,zero
   50c60:	1000071e 	bne	r2,zero,50c80 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   50c64:	0050ce40 	call	50ce4 <alt_get_errno>
   50c68:	1007883a 	mov	r3,r2
   50c6c:	00800584 	movi	r2,22
   50c70:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   50c74:	00bffa84 	movi	r2,-22
   50c78:	e0bfff15 	stw	r2,-4(fp)
   50c7c:	00001306 	br	50ccc <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   50c80:	e0fffd17 	ldw	r3,-12(fp)
   50c84:	e0bffe17 	ldw	r2,-8(fp)
   50c88:	e0bffb15 	stw	r2,-20(fp)
   50c8c:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   50c90:	e0fffc17 	ldw	r3,-16(fp)
   50c94:	e0bffb17 	ldw	r2,-20(fp)
   50c98:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   50c9c:	e0bffb17 	ldw	r2,-20(fp)
   50ca0:	10c00017 	ldw	r3,0(r2)
   50ca4:	e0bffc17 	ldw	r2,-16(fp)
   50ca8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   50cac:	e0bffb17 	ldw	r2,-20(fp)
   50cb0:	10c00017 	ldw	r3,0(r2)
   50cb4:	e0bffc17 	ldw	r2,-16(fp)
   50cb8:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   50cbc:	e0fffb17 	ldw	r3,-20(fp)
   50cc0:	e0bffc17 	ldw	r2,-16(fp)
   50cc4:	18800015 	stw	r2,0(r3)

  return 0;  
   50cc8:	e03fff15 	stw	zero,-4(fp)
   50ccc:	e0bfff17 	ldw	r2,-4(fp)
}
   50cd0:	e037883a 	mov	sp,fp
   50cd4:	dfc00117 	ldw	ra,4(sp)
   50cd8:	df000017 	ldw	fp,0(sp)
   50cdc:	dec00204 	addi	sp,sp,8
   50ce0:	f800283a 	ret

00050ce4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50ce4:	defffd04 	addi	sp,sp,-12
   50ce8:	dfc00215 	stw	ra,8(sp)
   50cec:	df000115 	stw	fp,4(sp)
   50cf0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   50cf4:	00800174 	movhi	r2,5
   50cf8:	108fbd04 	addi	r2,r2,16116
   50cfc:	10800017 	ldw	r2,0(r2)
   50d00:	1005003a 	cmpeq	r2,r2,zero
   50d04:	1000061e 	bne	r2,zero,50d20 <alt_get_errno+0x3c>
   50d08:	00800174 	movhi	r2,5
   50d0c:	108fbd04 	addi	r2,r2,16116
   50d10:	10800017 	ldw	r2,0(r2)
   50d14:	103ee83a 	callr	r2
   50d18:	e0bfff15 	stw	r2,-4(fp)
   50d1c:	00000306 	br	50d2c <alt_get_errno+0x48>
   50d20:	00800174 	movhi	r2,5
   50d24:	10966b04 	addi	r2,r2,22956
   50d28:	e0bfff15 	stw	r2,-4(fp)
   50d2c:	e0bfff17 	ldw	r2,-4(fp)
}
   50d30:	e037883a 	mov	sp,fp
   50d34:	dfc00117 	ldw	ra,4(sp)
   50d38:	df000017 	ldw	fp,0(sp)
   50d3c:	dec00204 	addi	sp,sp,8
   50d40:	f800283a 	ret

00050d44 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   50d44:	defffd04 	addi	sp,sp,-12
   50d48:	dfc00215 	stw	ra,8(sp)
   50d4c:	df000115 	stw	fp,4(sp)
   50d50:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   50d54:	00bfff04 	movi	r2,-4
   50d58:	00c00174 	movhi	r3,5
   50d5c:	18c78804 	addi	r3,r3,7712
   50d60:	1885883a 	add	r2,r3,r2
   50d64:	e0bfff15 	stw	r2,-4(fp)
   50d68:	00000606 	br	50d84 <_do_ctors+0x40>
        (*ctor) (); 
   50d6c:	e0bfff17 	ldw	r2,-4(fp)
   50d70:	10800017 	ldw	r2,0(r2)
   50d74:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   50d78:	e0bfff17 	ldw	r2,-4(fp)
   50d7c:	10bfff04 	addi	r2,r2,-4
   50d80:	e0bfff15 	stw	r2,-4(fp)
   50d84:	e0ffff17 	ldw	r3,-4(fp)
   50d88:	00800174 	movhi	r2,5
   50d8c:	10878704 	addi	r2,r2,7708
   50d90:	18bff62e 	bgeu	r3,r2,50d6c <_do_ctors+0x28>
        (*ctor) (); 
}
   50d94:	e037883a 	mov	sp,fp
   50d98:	dfc00117 	ldw	ra,4(sp)
   50d9c:	df000017 	ldw	fp,0(sp)
   50da0:	dec00204 	addi	sp,sp,8
   50da4:	f800283a 	ret

00050da8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   50da8:	defffd04 	addi	sp,sp,-12
   50dac:	dfc00215 	stw	ra,8(sp)
   50db0:	df000115 	stw	fp,4(sp)
   50db4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   50db8:	00bfff04 	movi	r2,-4
   50dbc:	00c00174 	movhi	r3,5
   50dc0:	18c78804 	addi	r3,r3,7712
   50dc4:	1885883a 	add	r2,r3,r2
   50dc8:	e0bfff15 	stw	r2,-4(fp)
   50dcc:	00000606 	br	50de8 <_do_dtors+0x40>
        (*dtor) (); 
   50dd0:	e0bfff17 	ldw	r2,-4(fp)
   50dd4:	10800017 	ldw	r2,0(r2)
   50dd8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   50ddc:	e0bfff17 	ldw	r2,-4(fp)
   50de0:	10bfff04 	addi	r2,r2,-4
   50de4:	e0bfff15 	stw	r2,-4(fp)
   50de8:	e0ffff17 	ldw	r3,-4(fp)
   50dec:	00800174 	movhi	r2,5
   50df0:	10878804 	addi	r2,r2,7712
   50df4:	18bff62e 	bgeu	r3,r2,50dd0 <_do_dtors+0x28>
        (*dtor) (); 
}
   50df8:	e037883a 	mov	sp,fp
   50dfc:	dfc00117 	ldw	ra,4(sp)
   50e00:	df000017 	ldw	fp,0(sp)
   50e04:	dec00204 	addi	sp,sp,8
   50e08:	f800283a 	ret

00050e0c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   50e0c:	defffe04 	addi	sp,sp,-8
   50e10:	dfc00115 	stw	ra,4(sp)
   50e14:	df000015 	stw	fp,0(sp)
   50e18:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   50e1c:	0009883a 	mov	r4,zero
   50e20:	01440004 	movi	r5,4096
   50e24:	00519840 	call	51984 <alt_icache_flush>
#endif
}
   50e28:	e037883a 	mov	sp,fp
   50e2c:	dfc00117 	ldw	ra,4(sp)
   50e30:	df000017 	ldw	fp,0(sp)
   50e34:	dec00204 	addi	sp,sp,8
   50e38:	f800283a 	ret

00050e3c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   50e3c:	defff904 	addi	sp,sp,-28
   50e40:	dfc00615 	stw	ra,24(sp)
   50e44:	df000515 	stw	fp,20(sp)
   50e48:	df000504 	addi	fp,sp,20
   50e4c:	e13ffc15 	stw	r4,-16(fp)
   50e50:	e17ffd15 	stw	r5,-12(fp)
   50e54:	e1bffe15 	stw	r6,-8(fp)
   50e58:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   50e5c:	e0800217 	ldw	r2,8(fp)
   50e60:	d8800015 	stw	r2,0(sp)
   50e64:	e13ffc17 	ldw	r4,-16(fp)
   50e68:	e17ffd17 	ldw	r5,-12(fp)
   50e6c:	e1bffe17 	ldw	r6,-8(fp)
   50e70:	e1ffff17 	ldw	r7,-4(fp)
   50e74:	00510100 	call	51010 <alt_iic_isr_register>
}  
   50e78:	e037883a 	mov	sp,fp
   50e7c:	dfc00117 	ldw	ra,4(sp)
   50e80:	df000017 	ldw	fp,0(sp)
   50e84:	dec00204 	addi	sp,sp,8
   50e88:	f800283a 	ret

00050e8c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   50e8c:	defff904 	addi	sp,sp,-28
   50e90:	df000615 	stw	fp,24(sp)
   50e94:	df000604 	addi	fp,sp,24
   50e98:	e13ffe15 	stw	r4,-8(fp)
   50e9c:	e17fff15 	stw	r5,-4(fp)
   50ea0:	e0bfff17 	ldw	r2,-4(fp)
   50ea4:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50ea8:	0005303a 	rdctl	r2,status
   50eac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50eb0:	e0fffb17 	ldw	r3,-20(fp)
   50eb4:	00bfff84 	movi	r2,-2
   50eb8:	1884703a 	and	r2,r3,r2
   50ebc:	1001703a 	wrctl	status,r2
  
  return context;
   50ec0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   50ec4:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   50ec8:	e0fffc17 	ldw	r3,-16(fp)
   50ecc:	00800044 	movi	r2,1
   50ed0:	10c4983a 	sll	r2,r2,r3
   50ed4:	1007883a 	mov	r3,r2
   50ed8:	00800174 	movhi	r2,5
   50edc:	10966f04 	addi	r2,r2,22972
   50ee0:	10800017 	ldw	r2,0(r2)
   50ee4:	1886b03a 	or	r3,r3,r2
   50ee8:	00800174 	movhi	r2,5
   50eec:	10966f04 	addi	r2,r2,22972
   50ef0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   50ef4:	00800174 	movhi	r2,5
   50ef8:	10966f04 	addi	r2,r2,22972
   50efc:	10800017 	ldw	r2,0(r2)
   50f00:	100170fa 	wrctl	ienable,r2
   50f04:	e0bffd17 	ldw	r2,-12(fp)
   50f08:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50f0c:	e0bffa17 	ldw	r2,-24(fp)
   50f10:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   50f14:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   50f18:	e037883a 	mov	sp,fp
   50f1c:	df000017 	ldw	fp,0(sp)
   50f20:	dec00104 	addi	sp,sp,4
   50f24:	f800283a 	ret

00050f28 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   50f28:	defff904 	addi	sp,sp,-28
   50f2c:	df000615 	stw	fp,24(sp)
   50f30:	df000604 	addi	fp,sp,24
   50f34:	e13ffe15 	stw	r4,-8(fp)
   50f38:	e17fff15 	stw	r5,-4(fp)
   50f3c:	e0bfff17 	ldw	r2,-4(fp)
   50f40:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50f44:	0005303a 	rdctl	r2,status
   50f48:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50f4c:	e0fffb17 	ldw	r3,-20(fp)
   50f50:	00bfff84 	movi	r2,-2
   50f54:	1884703a 	and	r2,r3,r2
   50f58:	1001703a 	wrctl	status,r2
  
  return context;
   50f5c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   50f60:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   50f64:	e0fffc17 	ldw	r3,-16(fp)
   50f68:	00800044 	movi	r2,1
   50f6c:	10c4983a 	sll	r2,r2,r3
   50f70:	0084303a 	nor	r2,zero,r2
   50f74:	1007883a 	mov	r3,r2
   50f78:	00800174 	movhi	r2,5
   50f7c:	10966f04 	addi	r2,r2,22972
   50f80:	10800017 	ldw	r2,0(r2)
   50f84:	1886703a 	and	r3,r3,r2
   50f88:	00800174 	movhi	r2,5
   50f8c:	10966f04 	addi	r2,r2,22972
   50f90:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   50f94:	00800174 	movhi	r2,5
   50f98:	10966f04 	addi	r2,r2,22972
   50f9c:	10800017 	ldw	r2,0(r2)
   50fa0:	100170fa 	wrctl	ienable,r2
   50fa4:	e0bffd17 	ldw	r2,-12(fp)
   50fa8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50fac:	e0bffa17 	ldw	r2,-24(fp)
   50fb0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   50fb4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   50fb8:	e037883a 	mov	sp,fp
   50fbc:	df000017 	ldw	fp,0(sp)
   50fc0:	dec00104 	addi	sp,sp,4
   50fc4:	f800283a 	ret

00050fc8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   50fc8:	defffc04 	addi	sp,sp,-16
   50fcc:	df000315 	stw	fp,12(sp)
   50fd0:	df000304 	addi	fp,sp,12
   50fd4:	e13ffe15 	stw	r4,-8(fp)
   50fd8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   50fdc:	000530fa 	rdctl	r2,ienable
   50fe0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   50fe4:	e0ffff17 	ldw	r3,-4(fp)
   50fe8:	00800044 	movi	r2,1
   50fec:	10c4983a 	sll	r2,r2,r3
   50ff0:	1007883a 	mov	r3,r2
   50ff4:	e0bffd17 	ldw	r2,-12(fp)
   50ff8:	1884703a 	and	r2,r3,r2
   50ffc:	1004c03a 	cmpne	r2,r2,zero
}
   51000:	e037883a 	mov	sp,fp
   51004:	df000017 	ldw	fp,0(sp)
   51008:	dec00104 	addi	sp,sp,4
   5100c:	f800283a 	ret

00051010 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   51010:	defff404 	addi	sp,sp,-48
   51014:	dfc00b15 	stw	ra,44(sp)
   51018:	df000a15 	stw	fp,40(sp)
   5101c:	df000a04 	addi	fp,sp,40
   51020:	e13ffb15 	stw	r4,-20(fp)
   51024:	e17ffc15 	stw	r5,-16(fp)
   51028:	e1bffd15 	stw	r6,-12(fp)
   5102c:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   51030:	00bffa84 	movi	r2,-22
   51034:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   51038:	e0bffc17 	ldw	r2,-16(fp)
   5103c:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   51040:	e0bff917 	ldw	r2,-28(fp)
   51044:	10800808 	cmpgei	r2,r2,32
   51048:	1000291e 	bne	r2,zero,510f0 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5104c:	0005303a 	rdctl	r2,status
   51050:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51054:	e0fff717 	ldw	r3,-36(fp)
   51058:	00bfff84 	movi	r2,-2
   5105c:	1884703a 	and	r2,r3,r2
   51060:	1001703a 	wrctl	status,r2
  
  return context;
   51064:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   51068:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   5106c:	e0bff917 	ldw	r2,-28(fp)
   51070:	00c00174 	movhi	r3,5
   51074:	18d6bc04 	addi	r3,r3,23280
   51078:	100490fa 	slli	r2,r2,3
   5107c:	10c7883a 	add	r3,r2,r3
   51080:	e0bffd17 	ldw	r2,-12(fp)
   51084:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   51088:	e0bff917 	ldw	r2,-28(fp)
   5108c:	00c00174 	movhi	r3,5
   51090:	18d6bc04 	addi	r3,r3,23280
   51094:	100490fa 	slli	r2,r2,3
   51098:	10c5883a 	add	r2,r2,r3
   5109c:	10c00104 	addi	r3,r2,4
   510a0:	e0bffe17 	ldw	r2,-8(fp)
   510a4:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   510a8:	e0bffd17 	ldw	r2,-12(fp)
   510ac:	1005003a 	cmpeq	r2,r2,zero
   510b0:	1000051e 	bne	r2,zero,510c8 <alt_iic_isr_register+0xb8>
   510b4:	e17ff917 	ldw	r5,-28(fp)
   510b8:	e13ffb17 	ldw	r4,-20(fp)
   510bc:	0050e8c0 	call	50e8c <alt_ic_irq_enable>
   510c0:	e0bfff15 	stw	r2,-4(fp)
   510c4:	00000406 	br	510d8 <alt_iic_isr_register+0xc8>
   510c8:	e17ff917 	ldw	r5,-28(fp)
   510cc:	e13ffb17 	ldw	r4,-20(fp)
   510d0:	0050f280 	call	50f28 <alt_ic_irq_disable>
   510d4:	e0bfff15 	stw	r2,-4(fp)
   510d8:	e0bfff17 	ldw	r2,-4(fp)
   510dc:	e0bffa15 	stw	r2,-24(fp)
   510e0:	e0bff817 	ldw	r2,-32(fp)
   510e4:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   510e8:	e0bff617 	ldw	r2,-40(fp)
   510ec:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   510f0:	e0bffa17 	ldw	r2,-24(fp)
}
   510f4:	e037883a 	mov	sp,fp
   510f8:	dfc00117 	ldw	ra,4(sp)
   510fc:	df000017 	ldw	fp,0(sp)
   51100:	dec00204 	addi	sp,sp,8
   51104:	f800283a 	ret

00051108 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   51108:	defff804 	addi	sp,sp,-32
   5110c:	dfc00715 	stw	ra,28(sp)
   51110:	df000615 	stw	fp,24(sp)
   51114:	dc000515 	stw	r16,20(sp)
   51118:	df000504 	addi	fp,sp,20
   5111c:	e13ffc15 	stw	r4,-16(fp)
   51120:	e17ffd15 	stw	r5,-12(fp)
   51124:	e1bffe15 	stw	r6,-8(fp)
   51128:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   5112c:	e13ffd17 	ldw	r4,-12(fp)
   51130:	e17ffe17 	ldw	r5,-8(fp)
   51134:	e1bfff17 	ldw	r6,-4(fp)
   51138:	00513500 	call	51350 <open>
   5113c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   51140:	e0bffb17 	ldw	r2,-20(fp)
   51144:	1004803a 	cmplt	r2,r2,zero
   51148:	10001f1e 	bne	r2,zero,511c8 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
   5114c:	e13ffb17 	ldw	r4,-20(fp)
   51150:	04000174 	movhi	r16,5
   51154:	840b3904 	addi	r16,r16,11492
   51158:	01400304 	movi	r5,12
   5115c:	004e8e80 	call	4e8e8 <__mulsi3>
   51160:	1405883a 	add	r2,r2,r16
   51164:	10c00017 	ldw	r3,0(r2)
   51168:	e0bffc17 	ldw	r2,-16(fp)
   5116c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   51170:	e13ffb17 	ldw	r4,-20(fp)
   51174:	04000174 	movhi	r16,5
   51178:	840b3904 	addi	r16,r16,11492
   5117c:	01400304 	movi	r5,12
   51180:	004e8e80 	call	4e8e8 <__mulsi3>
   51184:	1405883a 	add	r2,r2,r16
   51188:	10800104 	addi	r2,r2,4
   5118c:	10c00017 	ldw	r3,0(r2)
   51190:	e0bffc17 	ldw	r2,-16(fp)
   51194:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   51198:	e13ffb17 	ldw	r4,-20(fp)
   5119c:	04000174 	movhi	r16,5
   511a0:	840b3904 	addi	r16,r16,11492
   511a4:	01400304 	movi	r5,12
   511a8:	004e8e80 	call	4e8e8 <__mulsi3>
   511ac:	1405883a 	add	r2,r2,r16
   511b0:	10800204 	addi	r2,r2,8
   511b4:	10c00017 	ldw	r3,0(r2)
   511b8:	e0bffc17 	ldw	r2,-16(fp)
   511bc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   511c0:	e13ffb17 	ldw	r4,-20(fp)
   511c4:	004fa080 	call	4fa08 <alt_release_fd>
  }
} 
   511c8:	e037883a 	mov	sp,fp
   511cc:	dfc00217 	ldw	ra,8(sp)
   511d0:	df000117 	ldw	fp,4(sp)
   511d4:	dc000017 	ldw	r16,0(sp)
   511d8:	dec00304 	addi	sp,sp,12
   511dc:	f800283a 	ret

000511e0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   511e0:	defffb04 	addi	sp,sp,-20
   511e4:	dfc00415 	stw	ra,16(sp)
   511e8:	df000315 	stw	fp,12(sp)
   511ec:	df000304 	addi	fp,sp,12
   511f0:	e13ffd15 	stw	r4,-12(fp)
   511f4:	e17ffe15 	stw	r5,-8(fp)
   511f8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   511fc:	01000174 	movhi	r4,5
   51200:	210b3c04 	addi	r4,r4,11504
   51204:	e17ffd17 	ldw	r5,-12(fp)
   51208:	01800044 	movi	r6,1
   5120c:	01c07fc4 	movi	r7,511
   51210:	00511080 	call	51108 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   51214:	01000174 	movhi	r4,5
   51218:	210b3904 	addi	r4,r4,11492
   5121c:	e17ffe17 	ldw	r5,-8(fp)
   51220:	000d883a 	mov	r6,zero
   51224:	01c07fc4 	movi	r7,511
   51228:	00511080 	call	51108 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   5122c:	01000174 	movhi	r4,5
   51230:	210b3f04 	addi	r4,r4,11516
   51234:	e17fff17 	ldw	r5,-4(fp)
   51238:	01800044 	movi	r6,1
   5123c:	01c07fc4 	movi	r7,511
   51240:	00511080 	call	51108 <alt_open_fd>
}  
   51244:	e037883a 	mov	sp,fp
   51248:	dfc00117 	ldw	ra,4(sp)
   5124c:	df000017 	ldw	fp,0(sp)
   51250:	dec00204 	addi	sp,sp,8
   51254:	f800283a 	ret

00051258 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   51258:	defffa04 	addi	sp,sp,-24
   5125c:	dfc00515 	stw	ra,20(sp)
   51260:	df000415 	stw	fp,16(sp)
   51264:	dc000315 	stw	r16,12(sp)
   51268:	df000304 	addi	fp,sp,12
   5126c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   51270:	e0bffe17 	ldw	r2,-8(fp)
   51274:	10800217 	ldw	r2,8(r2)
   51278:	10d00034 	orhi	r3,r2,16384
   5127c:	e0bffe17 	ldw	r2,-8(fp)
   51280:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   51284:	e03ffd15 	stw	zero,-12(fp)
   51288:	00002306 	br	51318 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   5128c:	e13ffd17 	ldw	r4,-12(fp)
   51290:	04000174 	movhi	r16,5
   51294:	840b3904 	addi	r16,r16,11492
   51298:	01400304 	movi	r5,12
   5129c:	004e8e80 	call	4e8e8 <__mulsi3>
   512a0:	1405883a 	add	r2,r2,r16
   512a4:	10c00017 	ldw	r3,0(r2)
   512a8:	e0bffe17 	ldw	r2,-8(fp)
   512ac:	10800017 	ldw	r2,0(r2)
   512b0:	1880161e 	bne	r3,r2,5130c <alt_file_locked+0xb4>
   512b4:	e13ffd17 	ldw	r4,-12(fp)
   512b8:	04000174 	movhi	r16,5
   512bc:	840b3904 	addi	r16,r16,11492
   512c0:	01400304 	movi	r5,12
   512c4:	004e8e80 	call	4e8e8 <__mulsi3>
   512c8:	1405883a 	add	r2,r2,r16
   512cc:	10800204 	addi	r2,r2,8
   512d0:	10800017 	ldw	r2,0(r2)
   512d4:	1004403a 	cmpge	r2,r2,zero
   512d8:	10000c1e 	bne	r2,zero,5130c <alt_file_locked+0xb4>
   512dc:	e13ffd17 	ldw	r4,-12(fp)
   512e0:	01400304 	movi	r5,12
   512e4:	004e8e80 	call	4e8e8 <__mulsi3>
   512e8:	1007883a 	mov	r3,r2
   512ec:	00800174 	movhi	r2,5
   512f0:	108b3904 	addi	r2,r2,11492
   512f4:	1887883a 	add	r3,r3,r2
   512f8:	e0bffe17 	ldw	r2,-8(fp)
   512fc:	18800326 	beq	r3,r2,5130c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   51300:	00bffcc4 	movi	r2,-13
   51304:	e0bfff15 	stw	r2,-4(fp)
   51308:	00000a06 	br	51334 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   5130c:	e0bffd17 	ldw	r2,-12(fp)
   51310:	10800044 	addi	r2,r2,1
   51314:	e0bffd15 	stw	r2,-12(fp)
   51318:	00800174 	movhi	r2,5
   5131c:	108fbc04 	addi	r2,r2,16112
   51320:	10800017 	ldw	r2,0(r2)
   51324:	1007883a 	mov	r3,r2
   51328:	e0bffd17 	ldw	r2,-12(fp)
   5132c:	18bfd72e 	bgeu	r3,r2,5128c <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   51330:	e03fff15 	stw	zero,-4(fp)
   51334:	e0bfff17 	ldw	r2,-4(fp)
}
   51338:	e037883a 	mov	sp,fp
   5133c:	dfc00217 	ldw	ra,8(sp)
   51340:	df000117 	ldw	fp,4(sp)
   51344:	dc000017 	ldw	r16,0(sp)
   51348:	dec00304 	addi	sp,sp,12
   5134c:	f800283a 	ret

00051350 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   51350:	defff404 	addi	sp,sp,-48
   51354:	dfc00b15 	stw	ra,44(sp)
   51358:	df000a15 	stw	fp,40(sp)
   5135c:	df000a04 	addi	fp,sp,40
   51360:	e13ffb15 	stw	r4,-20(fp)
   51364:	e17ffc15 	stw	r5,-16(fp)
   51368:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   5136c:	00bfffc4 	movi	r2,-1
   51370:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   51374:	00bffb44 	movi	r2,-19
   51378:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   5137c:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   51380:	e13ffb17 	ldw	r4,-20(fp)
   51384:	01400174 	movhi	r5,5
   51388:	294fba04 	addi	r5,r5,16104
   5138c:	00517000 	call	51700 <alt_find_dev>
   51390:	e0bffa15 	stw	r2,-24(fp)
   51394:	e0bffa17 	ldw	r2,-24(fp)
   51398:	1004c03a 	cmpne	r2,r2,zero
   5139c:	1000051e 	bne	r2,zero,513b4 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   513a0:	e13ffb17 	ldw	r4,-20(fp)
   513a4:	00517940 	call	51794 <alt_find_file>
   513a8:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   513ac:	00800044 	movi	r2,1
   513b0:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   513b4:	e0bffa17 	ldw	r2,-24(fp)
   513b8:	1005003a 	cmpeq	r2,r2,zero
   513bc:	1000311e 	bne	r2,zero,51484 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
   513c0:	e13ffa17 	ldw	r4,-24(fp)
   513c4:	00518b40 	call	518b4 <alt_get_fd>
   513c8:	e0bff815 	stw	r2,-32(fp)
   513cc:	e0bff817 	ldw	r2,-32(fp)
   513d0:	1004403a 	cmpge	r2,r2,zero
   513d4:	1000031e 	bne	r2,zero,513e4 <open+0x94>
    {
      status = index;
   513d8:	e0bff817 	ldw	r2,-32(fp)
   513dc:	e0bff715 	stw	r2,-36(fp)
   513e0:	00002a06 	br	5148c <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
   513e4:	e13ff817 	ldw	r4,-32(fp)
   513e8:	01400304 	movi	r5,12
   513ec:	004e8e80 	call	4e8e8 <__mulsi3>
   513f0:	1007883a 	mov	r3,r2
   513f4:	00800174 	movhi	r2,5
   513f8:	108b3904 	addi	r2,r2,11492
   513fc:	1885883a 	add	r2,r3,r2
   51400:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   51404:	e0fffc17 	ldw	r3,-16(fp)
   51408:	00900034 	movhi	r2,16384
   5140c:	10bfffc4 	addi	r2,r2,-1
   51410:	1886703a 	and	r3,r3,r2
   51414:	e0bff917 	ldw	r2,-28(fp)
   51418:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   5141c:	e0bff617 	ldw	r2,-40(fp)
   51420:	1004c03a 	cmpne	r2,r2,zero
   51424:	1000061e 	bne	r2,zero,51440 <open+0xf0>
   51428:	e13ff917 	ldw	r4,-28(fp)
   5142c:	00512580 	call	51258 <alt_file_locked>
   51430:	e0bff715 	stw	r2,-36(fp)
   51434:	e0bff717 	ldw	r2,-36(fp)
   51438:	1004803a 	cmplt	r2,r2,zero
   5143c:	1000131e 	bne	r2,zero,5148c <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   51440:	e0bffa17 	ldw	r2,-24(fp)
   51444:	10800317 	ldw	r2,12(r2)
   51448:	1005003a 	cmpeq	r2,r2,zero
   5144c:	1000091e 	bne	r2,zero,51474 <open+0x124>
   51450:	e0bffa17 	ldw	r2,-24(fp)
   51454:	10800317 	ldw	r2,12(r2)
   51458:	e13ff917 	ldw	r4,-28(fp)
   5145c:	e17ffb17 	ldw	r5,-20(fp)
   51460:	e1bffc17 	ldw	r6,-16(fp)
   51464:	e1fffd17 	ldw	r7,-12(fp)
   51468:	103ee83a 	callr	r2
   5146c:	e0bfff15 	stw	r2,-4(fp)
   51470:	00000106 	br	51478 <open+0x128>
   51474:	e03fff15 	stw	zero,-4(fp)
   51478:	e0bfff17 	ldw	r2,-4(fp)
   5147c:	e0bff715 	stw	r2,-36(fp)
   51480:	00000206 	br	5148c <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   51484:	00bffb44 	movi	r2,-19
   51488:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   5148c:	e0bff717 	ldw	r2,-36(fp)
   51490:	1004403a 	cmpge	r2,r2,zero
   51494:	1000091e 	bne	r2,zero,514bc <open+0x16c>
  {
    alt_release_fd (index);  
   51498:	e13ff817 	ldw	r4,-32(fp)
   5149c:	004fa080 	call	4fa08 <alt_release_fd>
    ALT_ERRNO = -status;
   514a0:	00514dc0 	call	514dc <alt_get_errno>
   514a4:	e0fff717 	ldw	r3,-36(fp)
   514a8:	00c7c83a 	sub	r3,zero,r3
   514ac:	10c00015 	stw	r3,0(r2)
    return -1;
   514b0:	00bfffc4 	movi	r2,-1
   514b4:	e0bffe15 	stw	r2,-8(fp)
   514b8:	00000206 	br	514c4 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
   514bc:	e0bff817 	ldw	r2,-32(fp)
   514c0:	e0bffe15 	stw	r2,-8(fp)
   514c4:	e0bffe17 	ldw	r2,-8(fp)
}
   514c8:	e037883a 	mov	sp,fp
   514cc:	dfc00117 	ldw	ra,4(sp)
   514d0:	df000017 	ldw	fp,0(sp)
   514d4:	dec00204 	addi	sp,sp,8
   514d8:	f800283a 	ret

000514dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   514dc:	defffd04 	addi	sp,sp,-12
   514e0:	dfc00215 	stw	ra,8(sp)
   514e4:	df000115 	stw	fp,4(sp)
   514e8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   514ec:	00800174 	movhi	r2,5
   514f0:	108fbd04 	addi	r2,r2,16116
   514f4:	10800017 	ldw	r2,0(r2)
   514f8:	1005003a 	cmpeq	r2,r2,zero
   514fc:	1000061e 	bne	r2,zero,51518 <alt_get_errno+0x3c>
   51500:	00800174 	movhi	r2,5
   51504:	108fbd04 	addi	r2,r2,16116
   51508:	10800017 	ldw	r2,0(r2)
   5150c:	103ee83a 	callr	r2
   51510:	e0bfff15 	stw	r2,-4(fp)
   51514:	00000306 	br	51524 <alt_get_errno+0x48>
   51518:	00800174 	movhi	r2,5
   5151c:	10966b04 	addi	r2,r2,22956
   51520:	e0bfff15 	stw	r2,-4(fp)
   51524:	e0bfff17 	ldw	r2,-4(fp)
}
   51528:	e037883a 	mov	sp,fp
   5152c:	dfc00117 	ldw	ra,4(sp)
   51530:	df000017 	ldw	fp,0(sp)
   51534:	dec00204 	addi	sp,sp,8
   51538:	f800283a 	ret

0005153c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   5153c:	defffa04 	addi	sp,sp,-24
   51540:	df000515 	stw	fp,20(sp)
   51544:	df000504 	addi	fp,sp,20
   51548:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5154c:	0005303a 	rdctl	r2,status
   51550:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51554:	e0fffd17 	ldw	r3,-12(fp)
   51558:	00bfff84 	movi	r2,-2
   5155c:	1884703a 	and	r2,r3,r2
   51560:	1001703a 	wrctl	status,r2
  
  return context;
   51564:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   51568:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   5156c:	e0bfff17 	ldw	r2,-4(fp)
   51570:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   51574:	e0bffc17 	ldw	r2,-16(fp)
   51578:	10c00017 	ldw	r3,0(r2)
   5157c:	e0bffc17 	ldw	r2,-16(fp)
   51580:	10800117 	ldw	r2,4(r2)
   51584:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   51588:	e0bffc17 	ldw	r2,-16(fp)
   5158c:	10c00117 	ldw	r3,4(r2)
   51590:	e0bffc17 	ldw	r2,-16(fp)
   51594:	10800017 	ldw	r2,0(r2)
   51598:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   5159c:	e0fffc17 	ldw	r3,-16(fp)
   515a0:	e0bffc17 	ldw	r2,-16(fp)
   515a4:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   515a8:	e0fffc17 	ldw	r3,-16(fp)
   515ac:	e0bffc17 	ldw	r2,-16(fp)
   515b0:	18800015 	stw	r2,0(r3)
   515b4:	e0bffe17 	ldw	r2,-8(fp)
   515b8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   515bc:	e0bffb17 	ldw	r2,-20(fp)
   515c0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   515c4:	e037883a 	mov	sp,fp
   515c8:	df000017 	ldw	fp,0(sp)
   515cc:	dec00104 	addi	sp,sp,4
   515d0:	f800283a 	ret

000515d4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   515d4:	defffb04 	addi	sp,sp,-20
   515d8:	dfc00415 	stw	ra,16(sp)
   515dc:	df000315 	stw	fp,12(sp)
   515e0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   515e4:	d0a00f17 	ldw	r2,-32708(gp)
   515e8:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   515ec:	d0a6c017 	ldw	r2,-25856(gp)
   515f0:	10800044 	addi	r2,r2,1
   515f4:	d0a6c015 	stw	r2,-25856(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   515f8:	00003106 	br	516c0 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   515fc:	e0bffe17 	ldw	r2,-8(fp)
   51600:	10800017 	ldw	r2,0(r2)
   51604:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   51608:	e0bffe17 	ldw	r2,-8(fp)
   5160c:	10800403 	ldbu	r2,16(r2)
   51610:	10803fcc 	andi	r2,r2,255
   51614:	1005003a 	cmpeq	r2,r2,zero
   51618:	1000051e 	bne	r2,zero,51630 <alt_tick+0x5c>
   5161c:	d0a6c017 	ldw	r2,-25856(gp)
   51620:	1004c03a 	cmpne	r2,r2,zero
   51624:	1000021e 	bne	r2,zero,51630 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   51628:	e0bffe17 	ldw	r2,-8(fp)
   5162c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   51630:	e0bffe17 	ldw	r2,-8(fp)
   51634:	10c00217 	ldw	r3,8(r2)
   51638:	d0a6c017 	ldw	r2,-25856(gp)
   5163c:	10c01e36 	bltu	r2,r3,516b8 <alt_tick+0xe4>
   51640:	e0bffe17 	ldw	r2,-8(fp)
   51644:	10800403 	ldbu	r2,16(r2)
   51648:	10803fcc 	andi	r2,r2,255
   5164c:	1004c03a 	cmpne	r2,r2,zero
   51650:	1000191e 	bne	r2,zero,516b8 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   51654:	e0bffe17 	ldw	r2,-8(fp)
   51658:	10c00317 	ldw	r3,12(r2)
   5165c:	e0bffe17 	ldw	r2,-8(fp)
   51660:	11000517 	ldw	r4,20(r2)
   51664:	183ee83a 	callr	r3
   51668:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   5166c:	e0bffd17 	ldw	r2,-12(fp)
   51670:	1004c03a 	cmpne	r2,r2,zero
   51674:	1000031e 	bne	r2,zero,51684 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   51678:	e13ffe17 	ldw	r4,-8(fp)
   5167c:	005153c0 	call	5153c <alt_alarm_stop>
   51680:	00000d06 	br	516b8 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   51684:	e0bffe17 	ldw	r2,-8(fp)
   51688:	10c00217 	ldw	r3,8(r2)
   5168c:	e0bffd17 	ldw	r2,-12(fp)
   51690:	1887883a 	add	r3,r3,r2
   51694:	e0bffe17 	ldw	r2,-8(fp)
   51698:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   5169c:	e0bffe17 	ldw	r2,-8(fp)
   516a0:	10c00217 	ldw	r3,8(r2)
   516a4:	d0a6c017 	ldw	r2,-25856(gp)
   516a8:	1880032e 	bgeu	r3,r2,516b8 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   516ac:	e0fffe17 	ldw	r3,-8(fp)
   516b0:	00800044 	movi	r2,1
   516b4:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   516b8:	e0bfff17 	ldw	r2,-4(fp)
   516bc:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   516c0:	d0e00f04 	addi	r3,gp,-32708
   516c4:	e0bffe17 	ldw	r2,-8(fp)
   516c8:	10ffcc1e 	bne	r2,r3,515fc <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   516cc:	e037883a 	mov	sp,fp
   516d0:	dfc00117 	ldw	ra,4(sp)
   516d4:	df000017 	ldw	fp,0(sp)
   516d8:	dec00204 	addi	sp,sp,8
   516dc:	f800283a 	ret

000516e0 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   516e0:	deffff04 	addi	sp,sp,-4
   516e4:	df000015 	stw	fp,0(sp)
   516e8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   516ec:	000170fa 	wrctl	ienable,zero
}
   516f0:	e037883a 	mov	sp,fp
   516f4:	df000017 	ldw	fp,0(sp)
   516f8:	dec00104 	addi	sp,sp,4
   516fc:	f800283a 	ret

00051700 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   51700:	defff904 	addi	sp,sp,-28
   51704:	dfc00615 	stw	ra,24(sp)
   51708:	df000515 	stw	fp,20(sp)
   5170c:	df000504 	addi	fp,sp,20
   51710:	e13ffd15 	stw	r4,-12(fp)
   51714:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   51718:	e0bffe17 	ldw	r2,-8(fp)
   5171c:	10800017 	ldw	r2,0(r2)
   51720:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   51724:	e13ffd17 	ldw	r4,-12(fp)
   51728:	0048fc80 	call	48fc8 <strlen>
   5172c:	10800044 	addi	r2,r2,1
   51730:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   51734:	00000d06 	br	5176c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   51738:	e0bffc17 	ldw	r2,-16(fp)
   5173c:	11000217 	ldw	r4,8(r2)
   51740:	e1bffb17 	ldw	r6,-20(fp)
   51744:	e17ffd17 	ldw	r5,-12(fp)
   51748:	0051a600 	call	51a60 <memcmp>
   5174c:	1004c03a 	cmpne	r2,r2,zero
   51750:	1000031e 	bne	r2,zero,51760 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   51754:	e0bffc17 	ldw	r2,-16(fp)
   51758:	e0bfff15 	stw	r2,-4(fp)
   5175c:	00000706 	br	5177c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   51760:	e0bffc17 	ldw	r2,-16(fp)
   51764:	10800017 	ldw	r2,0(r2)
   51768:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   5176c:	e0fffe17 	ldw	r3,-8(fp)
   51770:	e0bffc17 	ldw	r2,-16(fp)
   51774:	10fff01e 	bne	r2,r3,51738 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   51778:	e03fff15 	stw	zero,-4(fp)
   5177c:	e0bfff17 	ldw	r2,-4(fp)
}
   51780:	e037883a 	mov	sp,fp
   51784:	dfc00117 	ldw	ra,4(sp)
   51788:	df000017 	ldw	fp,0(sp)
   5178c:	dec00204 	addi	sp,sp,8
   51790:	f800283a 	ret

00051794 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   51794:	defffa04 	addi	sp,sp,-24
   51798:	dfc00515 	stw	ra,20(sp)
   5179c:	df000415 	stw	fp,16(sp)
   517a0:	df000404 	addi	fp,sp,16
   517a4:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   517a8:	00800174 	movhi	r2,5
   517ac:	108fb804 	addi	r2,r2,16096
   517b0:	10800017 	ldw	r2,0(r2)
   517b4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   517b8:	00003306 	br	51888 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   517bc:	e0bffd17 	ldw	r2,-12(fp)
   517c0:	11000217 	ldw	r4,8(r2)
   517c4:	0048fc80 	call	48fc8 <strlen>
   517c8:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   517cc:	e0bffd17 	ldw	r2,-12(fp)
   517d0:	10c00217 	ldw	r3,8(r2)
   517d4:	e0bffc17 	ldw	r2,-16(fp)
   517d8:	1885883a 	add	r2,r3,r2
   517dc:	10bfffc4 	addi	r2,r2,-1
   517e0:	10800003 	ldbu	r2,0(r2)
   517e4:	10803fcc 	andi	r2,r2,255
   517e8:	1080201c 	xori	r2,r2,128
   517ec:	10bfe004 	addi	r2,r2,-128
   517f0:	10800bd8 	cmpnei	r2,r2,47
   517f4:	1000031e 	bne	r2,zero,51804 <alt_find_file+0x70>
    {
      len -= 1;
   517f8:	e0bffc17 	ldw	r2,-16(fp)
   517fc:	10bfffc4 	addi	r2,r2,-1
   51800:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   51804:	e0bffc17 	ldw	r2,-16(fp)
   51808:	1007883a 	mov	r3,r2
   5180c:	e0bffe17 	ldw	r2,-8(fp)
   51810:	1885883a 	add	r2,r3,r2
   51814:	10800003 	ldbu	r2,0(r2)
   51818:	10803fcc 	andi	r2,r2,255
   5181c:	1080201c 	xori	r2,r2,128
   51820:	10bfe004 	addi	r2,r2,-128
   51824:	10800be0 	cmpeqi	r2,r2,47
   51828:	10000a1e 	bne	r2,zero,51854 <alt_find_file+0xc0>
   5182c:	e0bffc17 	ldw	r2,-16(fp)
   51830:	1007883a 	mov	r3,r2
   51834:	e0bffe17 	ldw	r2,-8(fp)
   51838:	1885883a 	add	r2,r3,r2
   5183c:	10800003 	ldbu	r2,0(r2)
   51840:	10803fcc 	andi	r2,r2,255
   51844:	1080201c 	xori	r2,r2,128
   51848:	10bfe004 	addi	r2,r2,-128
   5184c:	1004c03a 	cmpne	r2,r2,zero
   51850:	10000a1e 	bne	r2,zero,5187c <alt_find_file+0xe8>
   51854:	e0bffd17 	ldw	r2,-12(fp)
   51858:	11000217 	ldw	r4,8(r2)
   5185c:	e1bffc17 	ldw	r6,-16(fp)
   51860:	e17ffe17 	ldw	r5,-8(fp)
   51864:	0051a600 	call	51a60 <memcmp>
   51868:	1004c03a 	cmpne	r2,r2,zero
   5186c:	1000031e 	bne	r2,zero,5187c <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   51870:	e0bffd17 	ldw	r2,-12(fp)
   51874:	e0bfff15 	stw	r2,-4(fp)
   51878:	00000806 	br	5189c <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   5187c:	e0bffd17 	ldw	r2,-12(fp)
   51880:	10800017 	ldw	r2,0(r2)
   51884:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   51888:	00c00174 	movhi	r3,5
   5188c:	18cfb804 	addi	r3,r3,16096
   51890:	e0bffd17 	ldw	r2,-12(fp)
   51894:	10ffc91e 	bne	r2,r3,517bc <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   51898:	e03fff15 	stw	zero,-4(fp)
   5189c:	e0bfff17 	ldw	r2,-4(fp)
}
   518a0:	e037883a 	mov	sp,fp
   518a4:	dfc00117 	ldw	ra,4(sp)
   518a8:	df000017 	ldw	fp,0(sp)
   518ac:	dec00204 	addi	sp,sp,8
   518b0:	f800283a 	ret

000518b4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   518b4:	defffa04 	addi	sp,sp,-24
   518b8:	dfc00515 	stw	ra,20(sp)
   518bc:	df000415 	stw	fp,16(sp)
   518c0:	dc000315 	stw	r16,12(sp)
   518c4:	df000304 	addi	fp,sp,12
   518c8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   518cc:	00bffa04 	movi	r2,-24
   518d0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   518d4:	e03ffe15 	stw	zero,-8(fp)
   518d8:	00002006 	br	5195c <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
   518dc:	e13ffe17 	ldw	r4,-8(fp)
   518e0:	04000174 	movhi	r16,5
   518e4:	840b3904 	addi	r16,r16,11492
   518e8:	01400304 	movi	r5,12
   518ec:	004e8e80 	call	4e8e8 <__mulsi3>
   518f0:	1405883a 	add	r2,r2,r16
   518f4:	10800017 	ldw	r2,0(r2)
   518f8:	1004c03a 	cmpne	r2,r2,zero
   518fc:	1000141e 	bne	r2,zero,51950 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
   51900:	e13ffe17 	ldw	r4,-8(fp)
   51904:	04000174 	movhi	r16,5
   51908:	840b3904 	addi	r16,r16,11492
   5190c:	01400304 	movi	r5,12
   51910:	004e8e80 	call	4e8e8 <__mulsi3>
   51914:	1407883a 	add	r3,r2,r16
   51918:	e0bfff17 	ldw	r2,-4(fp)
   5191c:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   51920:	00800174 	movhi	r2,5
   51924:	108fbc04 	addi	r2,r2,16112
   51928:	10c00017 	ldw	r3,0(r2)
   5192c:	e0bffe17 	ldw	r2,-8(fp)
   51930:	1880040e 	bge	r3,r2,51944 <alt_get_fd+0x90>
      {
        alt_max_fd = i;
   51934:	00c00174 	movhi	r3,5
   51938:	18cfbc04 	addi	r3,r3,16112
   5193c:	e0bffe17 	ldw	r2,-8(fp)
   51940:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   51944:	e0bffe17 	ldw	r2,-8(fp)
   51948:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   5194c:	00000606 	br	51968 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   51950:	e0bffe17 	ldw	r2,-8(fp)
   51954:	10800044 	addi	r2,r2,1
   51958:	e0bffe15 	stw	r2,-8(fp)
   5195c:	e0bffe17 	ldw	r2,-8(fp)
   51960:	10800810 	cmplti	r2,r2,32
   51964:	103fdd1e 	bne	r2,zero,518dc <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   51968:	e0bffd17 	ldw	r2,-12(fp)
}
   5196c:	e037883a 	mov	sp,fp
   51970:	dfc00217 	ldw	ra,8(sp)
   51974:	df000117 	ldw	fp,4(sp)
   51978:	dc000017 	ldw	r16,0(sp)
   5197c:	dec00304 	addi	sp,sp,12
   51980:	f800283a 	ret

00051984 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   51984:	defffb04 	addi	sp,sp,-20
   51988:	df000415 	stw	fp,16(sp)
   5198c:	df000404 	addi	fp,sp,16
   51990:	e13ffe15 	stw	r4,-8(fp)
   51994:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   51998:	e0bfff17 	ldw	r2,-4(fp)
   5199c:	10840070 	cmpltui	r2,r2,4097
   519a0:	1000021e 	bne	r2,zero,519ac <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   519a4:	00840004 	movi	r2,4096
   519a8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   519ac:	e0fffe17 	ldw	r3,-8(fp)
   519b0:	e0bfff17 	ldw	r2,-4(fp)
   519b4:	1885883a 	add	r2,r3,r2
   519b8:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   519bc:	e0bffe17 	ldw	r2,-8(fp)
   519c0:	e0bffd15 	stw	r2,-12(fp)
   519c4:	00000506 	br	519dc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   519c8:	e0bffd17 	ldw	r2,-12(fp)
   519cc:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   519d0:	e0bffd17 	ldw	r2,-12(fp)
   519d4:	10800804 	addi	r2,r2,32
   519d8:	e0bffd15 	stw	r2,-12(fp)
   519dc:	e0fffd17 	ldw	r3,-12(fp)
   519e0:	e0bffc17 	ldw	r2,-16(fp)
   519e4:	18bff836 	bltu	r3,r2,519c8 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   519e8:	e0bffe17 	ldw	r2,-8(fp)
   519ec:	108007cc 	andi	r2,r2,31
   519f0:	1005003a 	cmpeq	r2,r2,zero
   519f4:	1000021e 	bne	r2,zero,51a00 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   519f8:	e0bffd17 	ldw	r2,-12(fp)
   519fc:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   51a00:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   51a04:	e037883a 	mov	sp,fp
   51a08:	df000017 	ldw	fp,0(sp)
   51a0c:	dec00104 	addi	sp,sp,4
   51a10:	f800283a 	ret

00051a14 <atexit>:
   51a14:	200b883a 	mov	r5,r4
   51a18:	000d883a 	mov	r6,zero
   51a1c:	0009883a 	mov	r4,zero
   51a20:	000f883a 	mov	r7,zero
   51a24:	0051ad41 	jmpi	51ad4 <__register_exitproc>

00051a28 <exit>:
   51a28:	defffe04 	addi	sp,sp,-8
   51a2c:	000b883a 	mov	r5,zero
   51a30:	dc000015 	stw	r16,0(sp)
   51a34:	dfc00115 	stw	ra,4(sp)
   51a38:	2021883a 	mov	r16,r4
   51a3c:	0051c0c0 	call	51c0c <__call_exitprocs>
   51a40:	00800174 	movhi	r2,5
   51a44:	108fb304 	addi	r2,r2,16076
   51a48:	11000017 	ldw	r4,0(r2)
   51a4c:	20800f17 	ldw	r2,60(r4)
   51a50:	10000126 	beq	r2,zero,51a58 <exit+0x30>
   51a54:	103ee83a 	callr	r2
   51a58:	8009883a 	mov	r4,r16
   51a5c:	0051dfc0 	call	51dfc <_exit>

00051a60 <memcmp>:
   51a60:	00c000c4 	movi	r3,3
   51a64:	1980032e 	bgeu	r3,r6,51a74 <memcmp+0x14>
   51a68:	2144b03a 	or	r2,r4,r5
   51a6c:	10c4703a 	and	r2,r2,r3
   51a70:	10000f26 	beq	r2,zero,51ab0 <memcmp+0x50>
   51a74:	31ffffc4 	addi	r7,r6,-1
   51a78:	3000061e 	bne	r6,zero,51a94 <memcmp+0x34>
   51a7c:	00000a06 	br	51aa8 <memcmp+0x48>
   51a80:	39ffffc4 	addi	r7,r7,-1
   51a84:	00bfffc4 	movi	r2,-1
   51a88:	21000044 	addi	r4,r4,1
   51a8c:	29400044 	addi	r5,r5,1
   51a90:	38800526 	beq	r7,r2,51aa8 <memcmp+0x48>
   51a94:	20c00003 	ldbu	r3,0(r4)
   51a98:	28800003 	ldbu	r2,0(r5)
   51a9c:	18bff826 	beq	r3,r2,51a80 <memcmp+0x20>
   51aa0:	1885c83a 	sub	r2,r3,r2
   51aa4:	f800283a 	ret
   51aa8:	0005883a 	mov	r2,zero
   51aac:	f800283a 	ret
   51ab0:	180f883a 	mov	r7,r3
   51ab4:	20c00017 	ldw	r3,0(r4)
   51ab8:	28800017 	ldw	r2,0(r5)
   51abc:	18bfed1e 	bne	r3,r2,51a74 <memcmp+0x14>
   51ac0:	31bfff04 	addi	r6,r6,-4
   51ac4:	21000104 	addi	r4,r4,4
   51ac8:	29400104 	addi	r5,r5,4
   51acc:	39bff936 	bltu	r7,r6,51ab4 <memcmp+0x54>
   51ad0:	003fe806 	br	51a74 <memcmp+0x14>

00051ad4 <__register_exitproc>:
   51ad4:	defffa04 	addi	sp,sp,-24
   51ad8:	00800174 	movhi	r2,5
   51adc:	108fb304 	addi	r2,r2,16076
   51ae0:	dc000015 	stw	r16,0(sp)
   51ae4:	14000017 	ldw	r16,0(r2)
   51ae8:	dd000415 	stw	r20,16(sp)
   51aec:	2829883a 	mov	r20,r5
   51af0:	81405217 	ldw	r5,328(r16)
   51af4:	dcc00315 	stw	r19,12(sp)
   51af8:	dc800215 	stw	r18,8(sp)
   51afc:	dc400115 	stw	r17,4(sp)
   51b00:	dfc00515 	stw	ra,20(sp)
   51b04:	2023883a 	mov	r17,r4
   51b08:	3027883a 	mov	r19,r6
   51b0c:	3825883a 	mov	r18,r7
   51b10:	28002526 	beq	r5,zero,51ba8 <__register_exitproc+0xd4>
   51b14:	29000117 	ldw	r4,4(r5)
   51b18:	008007c4 	movi	r2,31
   51b1c:	11002716 	blt	r2,r4,51bbc <__register_exitproc+0xe8>
   51b20:	8800101e 	bne	r17,zero,51b64 <__register_exitproc+0x90>
   51b24:	2105883a 	add	r2,r4,r4
   51b28:	1085883a 	add	r2,r2,r2
   51b2c:	20c00044 	addi	r3,r4,1
   51b30:	1145883a 	add	r2,r2,r5
   51b34:	0009883a 	mov	r4,zero
   51b38:	15000215 	stw	r20,8(r2)
   51b3c:	28c00115 	stw	r3,4(r5)
   51b40:	2005883a 	mov	r2,r4
   51b44:	dfc00517 	ldw	ra,20(sp)
   51b48:	dd000417 	ldw	r20,16(sp)
   51b4c:	dcc00317 	ldw	r19,12(sp)
   51b50:	dc800217 	ldw	r18,8(sp)
   51b54:	dc400117 	ldw	r17,4(sp)
   51b58:	dc000017 	ldw	r16,0(sp)
   51b5c:	dec00604 	addi	sp,sp,24
   51b60:	f800283a 	ret
   51b64:	29802204 	addi	r6,r5,136
   51b68:	00800044 	movi	r2,1
   51b6c:	110e983a 	sll	r7,r2,r4
   51b70:	30c04017 	ldw	r3,256(r6)
   51b74:	2105883a 	add	r2,r4,r4
   51b78:	1085883a 	add	r2,r2,r2
   51b7c:	1185883a 	add	r2,r2,r6
   51b80:	19c6b03a 	or	r3,r3,r7
   51b84:	14802015 	stw	r18,128(r2)
   51b88:	14c00015 	stw	r19,0(r2)
   51b8c:	00800084 	movi	r2,2
   51b90:	30c04015 	stw	r3,256(r6)
   51b94:	88bfe31e 	bne	r17,r2,51b24 <__register_exitproc+0x50>
   51b98:	30804117 	ldw	r2,260(r6)
   51b9c:	11c4b03a 	or	r2,r2,r7
   51ba0:	30804115 	stw	r2,260(r6)
   51ba4:	003fdf06 	br	51b24 <__register_exitproc+0x50>
   51ba8:	00800174 	movhi	r2,5
   51bac:	1096fc04 	addi	r2,r2,23536
   51bb0:	100b883a 	mov	r5,r2
   51bb4:	80805215 	stw	r2,328(r16)
   51bb8:	003fd606 	br	51b14 <__register_exitproc+0x40>
   51bbc:	00800034 	movhi	r2,0
   51bc0:	10800004 	addi	r2,r2,0
   51bc4:	1000021e 	bne	r2,zero,51bd0 <__register_exitproc+0xfc>
   51bc8:	013fffc4 	movi	r4,-1
   51bcc:	003fdc06 	br	51b40 <__register_exitproc+0x6c>
   51bd0:	01006404 	movi	r4,400
   51bd4:	103ee83a 	callr	r2
   51bd8:	1007883a 	mov	r3,r2
   51bdc:	103ffa26 	beq	r2,zero,51bc8 <__register_exitproc+0xf4>
   51be0:	80805217 	ldw	r2,328(r16)
   51be4:	180b883a 	mov	r5,r3
   51be8:	18000115 	stw	zero,4(r3)
   51bec:	18800015 	stw	r2,0(r3)
   51bf0:	80c05215 	stw	r3,328(r16)
   51bf4:	18006215 	stw	zero,392(r3)
   51bf8:	18006315 	stw	zero,396(r3)
   51bfc:	0009883a 	mov	r4,zero
   51c00:	883fc826 	beq	r17,zero,51b24 <__register_exitproc+0x50>
   51c04:	003fd706 	br	51b64 <__register_exitproc+0x90>

00051c08 <register_fini>:
   51c08:	f800283a 	ret

00051c0c <__call_exitprocs>:
   51c0c:	00800174 	movhi	r2,5
   51c10:	108fb304 	addi	r2,r2,16076
   51c14:	10800017 	ldw	r2,0(r2)
   51c18:	defff304 	addi	sp,sp,-52
   51c1c:	df000b15 	stw	fp,44(sp)
   51c20:	d8800115 	stw	r2,4(sp)
   51c24:	00800034 	movhi	r2,0
   51c28:	10800004 	addi	r2,r2,0
   51c2c:	1005003a 	cmpeq	r2,r2,zero
   51c30:	d8800215 	stw	r2,8(sp)
   51c34:	d8800117 	ldw	r2,4(sp)
   51c38:	dd400815 	stw	r21,32(sp)
   51c3c:	dd000715 	stw	r20,28(sp)
   51c40:	10805204 	addi	r2,r2,328
   51c44:	dfc00c15 	stw	ra,48(sp)
   51c48:	ddc00a15 	stw	r23,40(sp)
   51c4c:	dd800915 	stw	r22,36(sp)
   51c50:	dcc00615 	stw	r19,24(sp)
   51c54:	dc800515 	stw	r18,20(sp)
   51c58:	dc400415 	stw	r17,16(sp)
   51c5c:	dc000315 	stw	r16,12(sp)
   51c60:	282b883a 	mov	r21,r5
   51c64:	2039883a 	mov	fp,r4
   51c68:	d8800015 	stw	r2,0(sp)
   51c6c:	2829003a 	cmpeq	r20,r5,zero
   51c70:	d8800117 	ldw	r2,4(sp)
   51c74:	14405217 	ldw	r17,328(r2)
   51c78:	88001026 	beq	r17,zero,51cbc <__call_exitprocs+0xb0>
   51c7c:	ddc00017 	ldw	r23,0(sp)
   51c80:	88800117 	ldw	r2,4(r17)
   51c84:	8c802204 	addi	r18,r17,136
   51c88:	143fffc4 	addi	r16,r2,-1
   51c8c:	80000916 	blt	r16,zero,51cb4 <__call_exitprocs+0xa8>
   51c90:	05bfffc4 	movi	r22,-1
   51c94:	a000151e 	bne	r20,zero,51cec <__call_exitprocs+0xe0>
   51c98:	8409883a 	add	r4,r16,r16
   51c9c:	2105883a 	add	r2,r4,r4
   51ca0:	1485883a 	add	r2,r2,r18
   51ca4:	10c02017 	ldw	r3,128(r2)
   51ca8:	a8c01126 	beq	r21,r3,51cf0 <__call_exitprocs+0xe4>
   51cac:	843fffc4 	addi	r16,r16,-1
   51cb0:	85bff81e 	bne	r16,r22,51c94 <__call_exitprocs+0x88>
   51cb4:	d8800217 	ldw	r2,8(sp)
   51cb8:	10003126 	beq	r2,zero,51d80 <__call_exitprocs+0x174>
   51cbc:	dfc00c17 	ldw	ra,48(sp)
   51cc0:	df000b17 	ldw	fp,44(sp)
   51cc4:	ddc00a17 	ldw	r23,40(sp)
   51cc8:	dd800917 	ldw	r22,36(sp)
   51ccc:	dd400817 	ldw	r21,32(sp)
   51cd0:	dd000717 	ldw	r20,28(sp)
   51cd4:	dcc00617 	ldw	r19,24(sp)
   51cd8:	dc800517 	ldw	r18,20(sp)
   51cdc:	dc400417 	ldw	r17,16(sp)
   51ce0:	dc000317 	ldw	r16,12(sp)
   51ce4:	dec00d04 	addi	sp,sp,52
   51ce8:	f800283a 	ret
   51cec:	8409883a 	add	r4,r16,r16
   51cf0:	88c00117 	ldw	r3,4(r17)
   51cf4:	2105883a 	add	r2,r4,r4
   51cf8:	1445883a 	add	r2,r2,r17
   51cfc:	18ffffc4 	addi	r3,r3,-1
   51d00:	11800217 	ldw	r6,8(r2)
   51d04:	1c001526 	beq	r3,r16,51d5c <__call_exitprocs+0x150>
   51d08:	10000215 	stw	zero,8(r2)
   51d0c:	303fe726 	beq	r6,zero,51cac <__call_exitprocs+0xa0>
   51d10:	00c00044 	movi	r3,1
   51d14:	1c06983a 	sll	r3,r3,r16
   51d18:	90804017 	ldw	r2,256(r18)
   51d1c:	8cc00117 	ldw	r19,4(r17)
   51d20:	1884703a 	and	r2,r3,r2
   51d24:	10001426 	beq	r2,zero,51d78 <__call_exitprocs+0x16c>
   51d28:	90804117 	ldw	r2,260(r18)
   51d2c:	1884703a 	and	r2,r3,r2
   51d30:	10000c1e 	bne	r2,zero,51d64 <__call_exitprocs+0x158>
   51d34:	2105883a 	add	r2,r4,r4
   51d38:	1485883a 	add	r2,r2,r18
   51d3c:	11400017 	ldw	r5,0(r2)
   51d40:	e009883a 	mov	r4,fp
   51d44:	303ee83a 	callr	r6
   51d48:	88800117 	ldw	r2,4(r17)
   51d4c:	98bfc81e 	bne	r19,r2,51c70 <__call_exitprocs+0x64>
   51d50:	b8800017 	ldw	r2,0(r23)
   51d54:	147fd526 	beq	r2,r17,51cac <__call_exitprocs+0xa0>
   51d58:	003fc506 	br	51c70 <__call_exitprocs+0x64>
   51d5c:	8c000115 	stw	r16,4(r17)
   51d60:	003fea06 	br	51d0c <__call_exitprocs+0x100>
   51d64:	2105883a 	add	r2,r4,r4
   51d68:	1485883a 	add	r2,r2,r18
   51d6c:	11000017 	ldw	r4,0(r2)
   51d70:	303ee83a 	callr	r6
   51d74:	003ff406 	br	51d48 <__call_exitprocs+0x13c>
   51d78:	303ee83a 	callr	r6
   51d7c:	003ff206 	br	51d48 <__call_exitprocs+0x13c>
   51d80:	88800117 	ldw	r2,4(r17)
   51d84:	1000081e 	bne	r2,zero,51da8 <__call_exitprocs+0x19c>
   51d88:	89000017 	ldw	r4,0(r17)
   51d8c:	20000726 	beq	r4,zero,51dac <__call_exitprocs+0x1a0>
   51d90:	b9000015 	stw	r4,0(r23)
   51d94:	8809883a 	mov	r4,r17
   51d98:	00000000 	call	0 <__alt_mem_onchip_mem-0x40000>
   51d9c:	bc400017 	ldw	r17,0(r23)
   51da0:	883fb71e 	bne	r17,zero,51c80 <__call_exitprocs+0x74>
   51da4:	003fc506 	br	51cbc <__call_exitprocs+0xb0>
   51da8:	89000017 	ldw	r4,0(r17)
   51dac:	882f883a 	mov	r23,r17
   51db0:	2023883a 	mov	r17,r4
   51db4:	883fb21e 	bne	r17,zero,51c80 <__call_exitprocs+0x74>
   51db8:	003fc006 	br	51cbc <__call_exitprocs+0xb0>

00051dbc <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   51dbc:	defffd04 	addi	sp,sp,-12
   51dc0:	df000215 	stw	fp,8(sp)
   51dc4:	df000204 	addi	fp,sp,8
   51dc8:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   51dcc:	e0bfff17 	ldw	r2,-4(fp)
   51dd0:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   51dd4:	e0bffe17 	ldw	r2,-8(fp)
   51dd8:	1005003a 	cmpeq	r2,r2,zero
   51ddc:	1000021e 	bne	r2,zero,51de8 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   51de0:	002af070 	cmpltui	zero,zero,43969
   51de4:	00000106 	br	51dec <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   51de8:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   51dec:	e037883a 	mov	sp,fp
   51df0:	df000017 	ldw	fp,0(sp)
   51df4:	dec00104 	addi	sp,sp,4
   51df8:	f800283a 	ret

00051dfc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   51dfc:	defffd04 	addi	sp,sp,-12
   51e00:	dfc00215 	stw	ra,8(sp)
   51e04:	df000115 	stw	fp,4(sp)
   51e08:	df000104 	addi	fp,sp,4
   51e0c:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   51e10:	e13fff17 	ldw	r4,-4(fp)
   51e14:	0051dbc0 	call	51dbc <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   51e18:	003fff06 	br	51e18 <_exit+0x1c>
   51e1c:	00051c08 	cmpgei	zero,zero,5232
